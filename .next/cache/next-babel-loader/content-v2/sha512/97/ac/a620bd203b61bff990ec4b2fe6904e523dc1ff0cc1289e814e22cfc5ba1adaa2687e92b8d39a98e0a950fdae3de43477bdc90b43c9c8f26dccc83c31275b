{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\RoomsEditor\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Button from '../Button';\nimport Tooltip from '../Tooltip';\nimport Divider from '../Divider';\nimport Input from '../Input';\nimport Alert from '../Alert';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Title from '../Title';\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n`;\nexport const Container = styled(Column)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 100%;\n  flex-grow: 1;\n  grid-gap: 5px;\n  margin-bottom: var(--default-gap);\n`;\nexport const List = styled(Column)`\n  grid-gap: 5px 0;\n\n  ${({\n  readOnly\n}) => readOnly && css`\n      flex-direction: row;\n      flex-wrap: wrap;\n      padding: 2px;\n      grid-gap: 15px;\n    `}\n`;\nexport const InputLabel = styled(Text)`\n  font-size: var(--font-size-s);\n`;\nexport const Item = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n  grid-gap: 5px;\n`;\nexport const Header = styled(Row)`\n  flex-grow: 1;\n  grid-gap: 10px;\n\n  input:first-child {\n    max-width: 96px;\n    text-align: right;\n  }\n\n  ${({\n  readOnly\n}) => readOnly && css`\n      flex-direction: column;\n    `}\n`;\nexport const Actions = styled(Row)`\n  align-items: center;\n  grid-gap: 5px;\n\n  button {\n    width: 100%;\n    flex-grow: 1;\n\n    & > i {\n      height: 100%;\n      width: 100%;\n\n      & > svg {\n        transform: scale(0.35);\n      }\n    }\n  }\n`;\nexport const AddButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 10px;\n\n  span {\n    white-space: nowrap;\n  }\n\n  @media only screen and (max-width: 996px) {\n    width: 100%;\n  }\n`;\nexport const Trunks = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  grid-gap: 5px;\n\n  span {\n    background: var(--default-color-accent);\n    border-radius: var(--surface-border-radius);\n    width: 4px;\n    min-height: 16px;\n\n    ${({\n  value\n}) => value < 9 && css`\n        width: 12px;\n        border-radius: 4px;\n      `}\n  }\n`;\nexport const Value = styled(Title)`\n  font-weight: var(--font-weight-bold);\n  line-height: 1;\n\n  @media only screen and (max-width: 480px) {\n    font-size: var(--font-size-l);\n  }\n`;\nexport const ListItem = ({\n  item,\n  readOnly,\n  divided,\n  onEdit,\n  onDelete\n}) => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 3\n  }\n}, __jsx(Item, {\n  readOnly: readOnly,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }\n}, __jsx(Header, {\n  readOnly: readOnly,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 7\n  }\n}, readOnly && item.value ? __jsx(Trunks, {\n  value: item.value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 11\n  }\n}, new Array(Number(item.value)).fill(null).map((_, i) => __jsx(\"span\", {\n  key: i,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 69\n  }\n}))) : null, readOnly ? __jsx(Value, {\n  tag: 'h4',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 11\n  }\n}, item.value ? `${item.value} ` : null, item.name) : null, !readOnly && __jsx(Input, {\n  type: 'text',\n  defaultValue: item.value,\n  appearance: 'ghost',\n  placeholder: 'Значение',\n  onChange: e => onEdit && onEdit(_objectSpread(_objectSpread({}, item), {}, {\n    value: e.target.value\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 11\n  }\n}), !readOnly && __jsx(Input, {\n  type: 'text',\n  defaultValue: item.name,\n  appearance: 'ghost',\n  placeholder: 'Введите название',\n  onChange: e => onEdit && onEdit(_objectSpread(_objectSpread({}, item), {}, {\n    name: e.target.value\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 11\n  }\n})), !readOnly && onDelete && __jsx(Actions, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }\n}, __jsx(Tooltip, {\n  text: 'Удалить',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 11\n  }\n}, __jsx(Button, {\n  size: 'xs',\n  kind: 'icon',\n  appearance: 'ghost',\n  stroke: 'none',\n  onClick: () => onDelete(item),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 13\n  }\n}, __jsx(Icon, {\n  icon: 'delete',\n  stroke: 'none',\n  fill: 'var(--default-color-red)',\n  size: 'xs',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 15\n  }\n}))))), !readOnly && divided && __jsx(Divider, {\n  clear: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 30\n  }\n}));\nexport const InteractiveList = ({\n  list,\n  readOnly,\n  onChange\n}) => {\n  const onEdit = edited => {\n    const mapped = prev => prev.map(item => (item === null || item === void 0 ? void 0 : item.id) === (edited === null || edited === void 0 ? void 0 : edited.id) ? edited : item);\n\n    if (onChange) onChange(mapped);\n  };\n\n  const onDelete = deleted => {\n    const filtered = prev => prev.filter(item => (item === null || item === void 0 ? void 0 : item.id) !== (deleted === null || deleted === void 0 ? void 0 : deleted.id));\n\n    if (onChange) onChange(filtered);\n  };\n\n  return __jsx(List, {\n    readOnly: readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, (list || []).length === 0 && __jsx(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"\\u041F\\u0443\\u0441\\u0442\\u043E\"), (list || []).map((item, index) => __jsx(ListItem, {\n    key: item === null || item === void 0 ? void 0 : item.id,\n    item: item,\n    readOnly: readOnly,\n    divided: (list || []).length - 1 !== index,\n    onDelete: onDelete,\n    onEdit: onEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  })));\n};\nexport const RoomsEditor = ({\n  label,\n  defaultValue,\n  readOnly,\n  onChange\n}) => {\n  const {\n    0: rooms,\n    1: setRooms\n  } = useState(defaultValue || []);\n\n  const onAdd = () => {\n    const name = 'Новое учебное помещение';\n    const item = {\n      id: v4(),\n      name,\n      value: null\n    };\n    setRooms(prev => [...prev, item]);\n  };\n\n  useEffect(() => {\n    if (onChange) onChange(rooms);\n  }, [rooms, onChange]);\n  useEffect(() => {\n    setRooms(defaultValue);\n  }, [defaultValue]);\n\n  if (readOnly && rooms.length === 0) {\n    return null;\n  }\n\n  return __jsx(Wrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, label && readOnly && __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 31\n    }\n  }, label), __jsx(InteractiveList, {\n    list: rooms,\n    onChange: setRooms,\n    readOnly: readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }), !readOnly && __jsx(AddButton, {\n    type: 'button',\n    onClick: onAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), __jsx(Icon, {\n    type: 'button',\n    icon: 'add',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }))));\n};\nRoomsEditor.defaultProps = {\n  label: 'Количество учебных помещений'\n};\nexport default RoomsEditor;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/RoomsEditor/index.js"],"names":["React","useState","useEffect","styled","css","v4","Row","Column","Button","Tooltip","Divider","Input","Alert","Text","Icon","Title","Wrap","Container","List","readOnly","InputLabel","Item","Header","Actions","AddButton","Trunks","div","value","Value","ListItem","item","divided","onEdit","onDelete","Array","Number","fill","map","_","i","name","e","target","InteractiveList","list","onChange","edited","mapped","prev","id","deleted","filtered","filter","length","width","textAlign","flexGrow","index","RoomsEditor","label","defaultValue","rooms","setRooms","onAdd","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { v4 } from 'uuid'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport Button from '../Button'\r\nimport Tooltip from '../Tooltip'\r\nimport Divider from '../Divider'\r\nimport Input from '../Input'\r\nimport Alert from '../Alert'\r\nimport Text from '../Text'\r\nimport Icon from '../Icon'\r\nimport Title from '../Title'\r\n\r\nexport const Wrap = styled(Column)`\r\n  grid-gap: 0;\r\n`\r\n\r\nexport const Container = styled(Column)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  flex-grow: 1;\r\n  grid-gap: 5px;\r\n  margin-bottom: var(--default-gap);\r\n`\r\n\r\nexport const List = styled(Column)`\r\n  grid-gap: 5px 0;\r\n\r\n  ${({ readOnly }) =>\r\n    readOnly &&\r\n    css`\r\n      flex-direction: row;\r\n      flex-wrap: wrap;\r\n      padding: 2px;\r\n      grid-gap: 15px;\r\n    `}\r\n`\r\n\r\nexport const InputLabel = styled(Text)`\r\n  font-size: var(--font-size-s);\r\n`\r\n\r\nexport const Item = styled(Row)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  grid-gap: 5px;\r\n`\r\n\r\nexport const Header = styled(Row)`\r\n  flex-grow: 1;\r\n  grid-gap: 10px;\r\n\r\n  input:first-child {\r\n    max-width: 96px;\r\n    text-align: right;\r\n  }\r\n\r\n  ${({ readOnly }) =>\r\n    readOnly &&\r\n    css`\r\n      flex-direction: column;\r\n    `}\r\n`\r\n\r\nexport const Actions = styled(Row)`\r\n  align-items: center;\r\n  grid-gap: 5px;\r\n\r\n  button {\r\n    width: 100%;\r\n    flex-grow: 1;\r\n\r\n    & > i {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      & > svg {\r\n        transform: scale(0.35);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const AddButton = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n\r\n  span {\r\n    white-space: nowrap;\r\n  }\r\n\r\n  @media only screen and (max-width: 996px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Trunks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  grid-gap: 5px;\r\n\r\n  span {\r\n    background: var(--default-color-accent);\r\n    border-radius: var(--surface-border-radius);\r\n    width: 4px;\r\n    min-height: 16px;\r\n\r\n    ${({ value }) =>\r\n      value < 9 &&\r\n      css`\r\n        width: 12px;\r\n        border-radius: 4px;\r\n      `}\r\n  }\r\n`\r\n\r\nexport const Value = styled(Title)`\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    font-size: var(--font-size-l);\r\n  }\r\n`\r\n\r\nexport const ListItem = ({ item, readOnly, divided, onEdit, onDelete }) => (\r\n  <React.Fragment>\r\n    <Item readOnly={readOnly}>\r\n      <Header readOnly={readOnly}>\r\n        {(readOnly && item.value) ? (\r\n          <Trunks value={item.value}>\r\n            {new Array(Number(item.value)).fill(null).map((_, i) => <span key={i} />)}\r\n          </Trunks>\r\n        ) : null}\r\n        {readOnly ? (\r\n          <Value tag={'h4'}>\r\n            {item.value ? `${item.value} ` : null}{item.name}\r\n          </Value>\r\n        ) : null}\r\n        {!readOnly && (\r\n          <Input\r\n            type={'text'}\r\n            defaultValue={item.value}\r\n            appearance={'ghost'}\r\n            placeholder={'Значение'}\r\n            onChange={(e) => onEdit && onEdit({ ...item, value: e.target.value })}\r\n          />\r\n        )}\r\n        {!readOnly && (\r\n          <Input\r\n            type={'text'}\r\n            defaultValue={item.name}\r\n            appearance={'ghost'}\r\n            placeholder={'Введите название'}\r\n            onChange={(e) => onEdit && onEdit({ ...item, name: e.target.value })}\r\n          />\r\n        )}\r\n      </Header>\r\n\r\n      {!readOnly && onDelete && (\r\n        <Actions>\r\n          <Tooltip text={'Удалить'}>\r\n            <Button\r\n              size={'xs'}\r\n              kind={'icon'}\r\n              appearance={'ghost'}\r\n              stroke={'none'}\r\n              onClick={() => onDelete(item)}>\r\n              <Icon\r\n                icon={'delete'}\r\n                stroke={'none'}\r\n                fill={'var(--default-color-red)'}\r\n                size={'xs'}\r\n              />\r\n            </Button>\r\n          </Tooltip>\r\n        </Actions>\r\n      )}\r\n    </Item>\r\n    {!readOnly && divided && <Divider clear />}\r\n  </React.Fragment>\r\n)\r\n\r\nexport const InteractiveList = ({ list, readOnly, onChange }) => {\r\n  const onEdit = (edited) => {\r\n    const mapped = (prev) => prev.map((item) => (item?.id === edited?.id ? edited : item))\r\n    if (onChange) onChange(mapped)\r\n  }\r\n\r\n  const onDelete = (deleted) => {\r\n    const filtered = (prev) => prev.filter((item) => item?.id !== deleted?.id)\r\n    if (onChange) onChange(filtered)\r\n  }\r\n\r\n  return (\r\n    <List readOnly={readOnly}>\r\n      {(list || []).length === 0 && (\r\n        <Alert style={{ width: '100%', textAlign: 'center', flexGrow: 1 }}>Пусто</Alert>\r\n      )}\r\n      {(list || []).map((item, index) => (\r\n        <ListItem\r\n          key={item?.id}\r\n          item={item}\r\n          readOnly={readOnly}\r\n          divided={(list || []).length - 1 !== index}\r\n          onDelete={onDelete}\r\n          onEdit={onEdit}\r\n        />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport const RoomsEditor = ({\r\n  label,\r\n  defaultValue,\r\n  readOnly,\r\n  onChange\r\n}) => {\r\n  const [rooms, setRooms] = useState(defaultValue || [])\r\n\r\n  const onAdd = () => {\r\n    const name = 'Новое учебное помещение'\r\n    const item = { id: v4(), name, value: null }\r\n    setRooms((prev) => [...prev, item])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (onChange) onChange(rooms)\r\n  }, [rooms, onChange])\r\n\r\n  useEffect(() => {\r\n    setRooms(defaultValue)\r\n  }, [defaultValue])\r\n\r\n  if (readOnly && rooms.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        {label && readOnly && <InputLabel>{label}</InputLabel>}\r\n\r\n        <InteractiveList\r\n          list={rooms}\r\n          onChange={setRooms}\r\n          readOnly={readOnly}\r\n        />\r\n\r\n        {!readOnly && (\r\n          <AddButton type={'button'} onClick={onAdd}>\r\n            <span>Добавить</span>\r\n            <Icon type={'button'} icon={'add'} stroke={'white'} />\r\n          </AddButton>\r\n        )}\r\n      </Container>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nRoomsEditor.defaultProps = {\r\n  label: 'Количество учебных помещений'\r\n}\r\n\r\nexport default RoomsEditor\r\n"]},"metadata":{},"sourceType":"module"}