{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Select from '../../atomic-ui/components/Select';\nimport Button from '../../atomic-ui/components/Button';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"FormAddMember__Wrap\",\n  componentId: \"kre4m5-0\"\n})([\"padding:var(--default-gap);\"]);\n_c = Wrap;\nexport var AddMember = function AddMember(_ref) {\n  _s2();\n\n  var query = _ref.query,\n      onSubmit = _ref.onSubmit;\n  var members = useSelector(function (state) {\n    return state.root.members;\n  });\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useLazyQuery = useLazyQuery(query, {\n    variables: {\n      email: members.map(function (member) {\n        var _member$value;\n\n        return (member === null || member === void 0 ? void 0 : member.email) || ((_member$value = member.value) === null || _member$value === void 0 ? void 0 : _member$value.email);\n      }),\n      account: ['INDIVIDUAL', 'OFICIAL']\n    }\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      load = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      data = _useLazyQuery2$.data,\n      loading = _useLazyQuery2$.loading;\n\n  useEffect(function () {\n    return load();\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Select, {\n    options: !loading && data ? data.getUsers.map(function (user) {\n      return {\n        value: user,\n        label: user.name\n      };\n    }) : [],\n    appearance: 'ghost',\n    defaultValue: selected,\n    placeholder: 'Введите ФИО, Эл. почту или телефон',\n    onChange: function onChange(item) {\n      return setSelected(item);\n    },\n    isLoading: loading,\n    isSearchable: true\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return selected && onSubmit(selected);\n    },\n    disabled: !selected || loading\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"));\n};\n\n_s2(AddMember, \"7jJp5tipG73VW+GhzdNxNVHP9aA=\", false, function () {\n  return [useSelector, useLazyQuery];\n});\n\n_c2 = AddMember;\nexport default AddMember;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"AddMember\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormAddMember/index.js"],"names":["React","useState","useEffect","styled","useSelector","useLazyQuery","Column","Select","Button","Wrap","AddMember","query","onSubmit","members","state","root","selected","setSelected","variables","email","map","member","value","account","load","data","loading","getUsers","user","label","name","item"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAO,IAAMC,IAAI,GAAGN,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,mCAAV;KAAMG,I;AAIb,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,MAAMC,OAAO,GAAGT,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,OAAtB;AAAA,GAAD,CAA3B;;AADgD,kBAEhBZ,QAAQ,CAAC,IAAD,CAFQ;AAAA;AAAA,MAEzCe,QAFyC;AAAA,MAE/BC,WAF+B;;AAAA,sBAGdZ,YAAY,CAACM,KAAD,EAAQ;AACpDO,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAY,UAACC,MAAD;AAAA;;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEF,KAAR,uBAAiBE,MAAM,CAACC,KAAxB,kDAAiB,cAAcH,KAA/B,CAAZ;AAAA,OAAZ,CADE;AAETI,MAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,SAAf;AAFA;AADyC,GAAR,CAHE;AAAA;AAAA,MAGzCC,IAHyC;AAAA;AAAA,MAGjCC,IAHiC,mBAGjCA,IAHiC;AAAA,MAG3BC,OAH2B,mBAG3BA,OAH2B;;AAUhDxB,EAAAA,SAAS,CAAC;AAAA,WAAMsB,IAAI,EAAV;AAAA,GAAD,EAAe,EAAf,CAAT;AAEA,sBACE,oBAAC,IAAD,qBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EACL,CAACE,OAAD,IAAYD,IAAZ,GACIA,IAAI,CAACE,QAAL,CAAcP,GAAd,CAAkB,UAACQ,IAAD;AAAA,aAAW;AAC3BN,QAAAA,KAAK,EAAEM,IADoB;AAE3BC,QAAAA,KAAK,EAAED,IAAI,CAACE;AAFe,OAAX;AAAA,KAAlB,CADJ,GAKI,EAPR;AASE,IAAA,UAAU,EAAE,OATd;AAUE,IAAA,YAAY,EAAEd,QAVhB;AAWE,IAAA,WAAW,EAAE,oCAXf;AAYE,IAAA,QAAQ,EAAE,kBAACe,IAAD;AAAA,aAAUd,WAAW,CAACc,IAAD,CAArB;AAAA,KAZZ;AAaE,IAAA,SAAS,EAAEL,OAbb;AAcE,IAAA,YAAY;AAdd,IADF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAQ,IAAIJ,QAAQ,CAACI,QAAD,CAA1B;AAAA,KAAjB;AAAuD,IAAA,QAAQ,EAAE,CAACA,QAAD,IAAaU;AAA9E,+GAjBF,CADF;AAuBD,CAnCM;;IAAMhB,S;UACKN,W,EAEkBC,Y;;;MAHvBK,S;AAqCb,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Select from '../../atomic-ui/components/Select'\nimport Button from '../../atomic-ui/components/Button'\n\nexport const Wrap = styled(Column)`\n  padding: var(--default-gap);\n`\n\nexport const AddMember = ({ query, onSubmit }) => {\n  const members = useSelector((state) => state.root.members)\n  const [selected, setSelected] = useState(null)\n  const [load, { data, loading }] = useLazyQuery(query, {\n    variables: {\n      email: members.map((member) => member?.email || member.value?.email),\n      account: ['INDIVIDUAL', 'OFICIAL']\n    }\n  })\n\n  useEffect(() => load(), [])\n\n  return (\n    <Wrap>\n      <Select\n        options={\n          !loading && data\n            ? data.getUsers.map((user) => ({\n                value: user,\n                label: user.name\n              }))\n            : []\n        }\n        appearance={'ghost'}\n        defaultValue={selected}\n        placeholder={'Введите ФИО, Эл. почту или телефон'}\n        onChange={(item) => setSelected(item)}\n        isLoading={loading}\n        isSearchable\n      />\n      <Button onClick={() => selected && onSubmit(selected)} disabled={!selected || loading}>\n        Добавить участника\n      </Button>\n    </Wrap>\n  )\n}\n\nexport default AddMember\n"]},"metadata":{},"sourceType":"module"}