{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Divider from '../Divider';\nexport const Wrap = styled(Column)`\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`;\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  font-weight: var(--font-weight-medium);\n  padding: var(--default-gap) var(--default-gap) 0 var(--default-gap);\n  line-height: 1;\n`;\nexport const ManageButton = styled(Button)`\n  color: var(--default-color-accent);\n`;\nexport const ManageRow = styled(Row)`\n  grid-gap: 0;\n  align-items: center;\n\n  span {\n    font-weight: var(--font-weight-medium);\n  }\n`;\nexport const DangerButton = styled(Button)`\n  color: var(--default-color-red);\n`;\nexport const List = styled(Column)`\n  text-align: left;\n  align-items: flex-start;\n  padding: 0 var(--default-gap) var(--default-gap) var(--default-gap);\n\n  button {\n    font-weight: var(--font-weight-medium);\n    text-align: inherit;\n  }\n`;\nexport const Menu = ({\n  links,\n  header,\n  className,\n  style,\n  listStyle\n}) => __jsx(Wrap, {\n  className: className,\n  style: style\n}, header && __jsx(React.Fragment, null, __jsx(Header, null, __jsx(Text, null, header.title), header.link && __jsx(ManageButton, {\n  appearance: 'clear',\n  onClick: header.link.onClick\n}, __jsx(ManageRow, null, __jsx(\"span\", null, header.link.text), __jsx(Icon, {\n  icon: 'arrowRight',\n  size: 'xs',\n  stroke: 'var(--default-color-accent)'\n})))), __jsx(Divider, {\n  clear: true\n})), links && links.length && __jsx(List, {\n  style: listStyle\n}, links.map((link, index) => link !== 'danger' ? __jsx(Button, {\n  key: index,\n  style: {\n    color: link.active ? 'var(--default-color-accent)' : 'black'\n  },\n  appearance: 'clear',\n  onClick: link.onClick\n}, link.text) : __jsx(DangerButton, {\n  key: index,\n  appearance: 'clear',\n  onClick: link.onClick\n}, link.text))));\nMenu.defaultProps = {\n  appearance: 'default'\n};\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}