{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { v4 } from 'uuid';\nimport Column from '../atomic-ui/components/Column';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Select from '../atomic-ui/components/Select';\nimport DefaultLayout from '../layouts/default';\nimport DashboardLayout from './dashboard';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport HandleBar from '../components/HandleBar';\nimport { LowerLoader } from '../components/Styled';\nimport { useSelector } from 'react-redux';\nconst Wrap = styled(Column).withConfig({\n  displayName: \"content__Wrap\",\n  componentId: \"sc-1afm75p-0\"\n})([\"margin-top:120px;margin-bottom:80px;\", \" @media only screen and (max-width:480px){margin-top:0;}\"], ({\n  clear\n}) => clear && css([\"margin:0;\"]));\n_c = Wrap;\n\nconst ContentLayout = ({\n  title,\n  store,\n  query,\n  handle,\n  filters,\n  options,\n  scaffold,\n  dashboard,\n  variables = {},\n  limit = 6,\n  startOffset = 6,\n  initialize,\n  children\n}) => {\n  _s();\n\n  const router = useRouter();\n  const research = useSelector(state => state.root.search);\n  const Layout = dashboard ? DashboardLayout : DefaultLayout;\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [search, setSearch] = useState(null);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [offset, setOffset] = useState(startOffset + 1);\n  const [documents, setDocuments] = useState((store === null || store === void 0 ? void 0 : store.documents) || []);\n  const [isEnd, setIsEnd] = useState(false);\n  const pageStart = useMemo(() => {\n    var _router$query;\n\n    return Number((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.page) || 1;\n  }, [router]);\n  const [loadDocumentsBySearch, {\n    data: dataBySearch,\n    loading: loadingBySearch,\n    refetch: refetchBySearch\n  }] = useLazyQuery(query);\n  const [loadDocuments, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(query);\n\n  const getFilters = () => {\n    return filters.map(filter => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return /*#__PURE__*/React.createElement(DatePicker, {\n            key: v4(),\n            value: date,\n            placeholder: filter.placeholder || 'Дата публикации',\n            onChange: onChangeDate,\n            withNavigate: true\n          });\n\n        case 'SELECT':\n          return /*#__PURE__*/React.createElement(Select, {\n            key: v4(),\n            options: filter.options,\n            placeholder: filter.placeholder || 'Раздел',\n            selected: select,\n            onChange: item => onChangeSelect(item)\n          });\n\n        default:\n          return null;\n      }\n    });\n  };\n\n  const onSearch = value => {\n    setDocuments([]);\n\n    if (value) {\n      setSearch(value);\n      loadDocumentsBySearch({\n        variables: { ...variables,\n          search: value,\n          offset: 0,\n          limit: startOffset * pageStart\n        }\n      });\n    } else {\n      const result = { ...variables,\n        offset: 0,\n        limit\n      };\n      setSearch(null);\n      if (refetch) refetch(result);else loadDocuments({\n        variables: result\n      });\n    }\n\n    setOffset(0);\n  };\n\n  const loadMore = async page => {\n    const updateOffset = () => setOffset(limit * page + startOffset + 1);\n\n    const result = { ...variables,\n      offset,\n      limit\n    };\n\n    if (search && refetchBySearch) {\n      await refetchBySearch(variables);\n    } else {\n      if (refetch) {\n        await refetch(result);\n        updateOffset();\n      } else {\n        await loadDocuments({\n          variables: result\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (initialize) loadDocuments({\n      variables: {\n        offset,\n        limit\n      }\n    });\n  }, [initialize]);\n  useEffect(() => {\n    if (research) onSearch(research);\n  }, [research]);\n  useEffect(() => {\n    const commonList = !search && !loading && data;\n    const searchList = search && !loadingBySearch && dataBySearch;\n    const resultList = commonList || searchList;\n\n    if (resultList) {\n      const list = resultList[Object.keys(resultList)[0]];\n      if (list.length > 0) setDocuments(prev => [...prev, ...list]);\n      if (list.length === 0) setIsEnd(true);\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch, setIsEnd]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: title,\n    scaffold: scaffold\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    clear: scaffold || dashboard\n  }, !scaffold && !dashboard && /*#__PURE__*/React.createElement(SearchBar, {\n    onChangeFilter: () => setVisibleFilter(!visibleFilter),\n    onSubmit: onSearch\n  }), dashboard && handle && /*#__PURE__*/React.createElement(HandleBar, {\n    title: title,\n    icon: handle.icon,\n    buttonCreateText: handle.buttonCreateText,\n    onCreate: handle.onCreate,\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: handle.onChangeDisplayMethod\n  }), (filters || options) && /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: getFilters(),\n    options: options\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: pageStart || 0,\n    loadMore: loadMore,\n    hasMore: !isEnd,\n    loader: /*#__PURE__*/React.createElement(LowerLoader, {\n      key: 'loader'\n    }, /*#__PURE__*/React.createElement(Spinner, null))\n  }, typeof children === 'function' ? React.createElement(children, {\n    documents\n  }) : children)));\n};\n\n_s(ContentLayout, \"/Uj3PudO7HPoCVI3ylyz4I3rzBo=\", false, function () {\n  return [useRouter, useSelector, useLazyQuery, useLazyQuery];\n});\n\n_c2 = ContentLayout;\nexport default ContentLayout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"ContentLayout\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/layouts/content.js"],"names":["React","useState","useEffect","useMemo","useRouter","styled","css","useLazyQuery","InfiniteScroll","v4","Column","DatePicker","Spinner","Select","DefaultLayout","DashboardLayout","FilterBar","SearchBar","HandleBar","LowerLoader","useSelector","Wrap","clear","ContentLayout","title","store","query","handle","filters","options","scaffold","dashboard","variables","limit","startOffset","initialize","children","router","research","state","root","search","Layout","date","onChangeDate","select","onChangeSelect","setSearch","visibleFilter","setVisibleFilter","offset","setOffset","documents","setDocuments","isEnd","setIsEnd","pageStart","Number","page","loadDocumentsBySearch","data","dataBySearch","loading","loadingBySearch","refetch","refetchBySearch","loadDocuments","getFilters","map","filter","type","placeholder","item","onSearch","value","result","loadMore","updateOffset","commonList","searchList","resultList","list","Object","keys","length","prev","icon","buttonCreateText","onCreate","onChangeDisplayMethod","createElement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { v4 } from 'uuid'\n\nimport Column from '../atomic-ui/components/Column'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Select from '../atomic-ui/components/Select'\n\nimport DefaultLayout from '../layouts/default'\nimport DashboardLayout from './dashboard'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport HandleBar from '../components/HandleBar'\nimport { LowerLoader } from '../components/Styled'\nimport { useSelector } from 'react-redux'\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  ${({ clear }) =>\n    clear &&\n    css`\n      margin: 0;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst ContentLayout = ({\n  title,\n  store,\n  query,\n  handle,\n  filters,\n  options,\n  scaffold,\n  dashboard,\n  variables = {},\n  limit = 6,\n  startOffset = 6,\n  initialize,\n  children\n}) => {\n  const router = useRouter()\n  const research = useSelector((state) => state.root.search)\n  const Layout = dashboard ? DashboardLayout : DefaultLayout\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [search, setSearch] = useState(null)\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const [offset, setOffset] = useState(startOffset + 1)\n  const [documents, setDocuments] = useState(store?.documents || [])\n  const [isEnd, setIsEnd] = useState(false)\n  const pageStart = useMemo(() => Number(router.query?.page) || 1, [router])\n\n  const [\n    loadDocumentsBySearch,\n    { data: dataBySearch, loading: loadingBySearch, refetch: refetchBySearch }\n  ] = useLazyQuery(query)\n\n  const [loadDocuments, { data, loading, refetch }] = useLazyQuery(query)\n\n  const getFilters = () => {\n    return filters.map((filter) => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return (\n            <DatePicker\n              key={v4()}\n              value={date}\n              placeholder={filter.placeholder || 'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />\n          )\n        case 'SELECT':\n          return (\n            <Select\n              key={v4()}\n              options={filter.options}\n              placeholder={filter.placeholder || 'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          )\n        default:\n          return null\n      }\n    })\n  }\n\n  const onSearch = (value) => {\n    setDocuments([])\n    if (value) {\n      setSearch(value)\n      loadDocumentsBySearch({\n        variables: { ...variables, search: value, offset: 0, limit: startOffset * pageStart }\n      })\n    } else {\n      const result = { ...variables, offset: 0, limit }\n\n      setSearch(null)\n\n      if (refetch) refetch(result)\n      else loadDocuments({ variables: result })\n    }\n    setOffset(0)\n  }\n\n  const loadMore = async (page) => {\n    const updateOffset = () => setOffset(limit * page + startOffset + 1)\n\n    const result = { ...variables, offset, limit }\n\n    if (search && refetchBySearch) {\n      await refetchBySearch(variables)\n    } else {\n      if (refetch) {\n        await refetch(result)\n        updateOffset()\n      } else {\n        await loadDocuments({ variables: result })\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (initialize) loadDocuments({ variables: { offset, limit } })\n  }, [initialize])\n\n  useEffect(() => {\n    if (research) onSearch(research)\n  }, [research])\n\n  useEffect(() => {\n    const commonList = !search && !loading && data\n    const searchList = search && !loadingBySearch && dataBySearch\n    const resultList = commonList || searchList\n    if (resultList) {\n      const list = resultList[Object.keys(resultList)[0]]\n      if (list.length > 0) setDocuments((prev) => [...prev, ...list])\n      if (list.length === 0) setIsEnd(true)\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch, setIsEnd])\n\n  return (\n    <Layout title={title} scaffold={scaffold}>\n      <Wrap clear={scaffold || dashboard}>\n        {!scaffold && !dashboard && (\n          <SearchBar onChangeFilter={() => setVisibleFilter(!visibleFilter)} onSubmit={onSearch} />\n        )}\n\n        {dashboard && handle && (\n          <HandleBar\n            title={title}\n            icon={handle.icon}\n            buttonCreateText={handle.buttonCreateText}\n            onCreate={handle.onCreate}\n            onChangeVisibleFilter={() => setVisibleFilter(!visibleFilter)}\n            onChangeDisplayMethod={handle.onChangeDisplayMethod}\n          />\n        )}\n\n        {(filters || options) && (\n          <FilterBar isOpen={visibleFilter} filters={getFilters()} options={options} />\n        )}\n\n        <InfiniteScroll\n          pageStart={pageStart || 0}\n          loadMore={loadMore}\n          hasMore={!isEnd}\n          loader={\n            <LowerLoader key={'loader'}>\n              <Spinner />\n            </LowerLoader>\n          }>\n          {typeof children === 'function' ? React.createElement(children, { documents }) : children}\n        </InfiniteScroll>\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport default ContentLayout\n"]},"metadata":{},"sourceType":"module"}