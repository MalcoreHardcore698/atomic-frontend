{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport ArticleList from '../components/ArticleList';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { hasResponsibleMember } from '../components/Members';\nimport Organizer from '../components/Organizer';\nimport List from '../components/List';\nimport { Loader } from '../components/Styled';\nimport { setCompanies, setCategories, setStatuses, setSearch } from '../store/actions/root';\nimport { onUserClientEdit, onUserAboutMore, onUserMembers, onUserLink } from '../store/helpers/user';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { useProject } from '../hooks/useProject';\nimport { useHelper } from '../hooks/useHelper';\nimport { profilePages } from '../__mock__';\nimport queries from '../graphql/queries';\nconst TITLE = 'Профиль';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\nconst DISABLED_FILTERS = true;\nconst ContainerInProgress = styled(Row).withConfig({\n  displayName: \"profile__ContainerInProgress\",\n  componentId: \"sc-84d5hd-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\n_c = ContainerInProgress;\n\nconst Projects = ({\n  variables\n}) => {\n  _s();\n\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(List, {\n    limit: LIMIT,\n    type: 'getProjects',\n    variables: variables,\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS,\n    emptyMessage: 'Проектов нет',\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    component: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document\n    }))\n  });\n};\n\n_s(Projects, \"1J2i0XYLTUPsHAaUowqhcO/eEy0=\", false, function () {\n  return [useProject];\n});\n\n_c2 = Projects;\n\nconst Articles = ({\n  variables\n}) => /*#__PURE__*/React.createElement(ArticleList, {\n  variables: variables,\n  layout: true\n});\n\n_c3 = Articles;\n\nconst InProgress = () => {\n  _s2();\n\n  const methods = useProject();\n  const user = useSelector(state => state.user);\n  const defaultFolder = useMemo(() => user === null || user === void 0 ? void 0 : user.folders[0], [user]);\n  return /*#__PURE__*/React.createElement(ContainerInProgress, null, /*#__PURE__*/React.createElement(Organizer, {\n    defaultFolder: defaultFolder\n  }), /*#__PURE__*/React.createElement(List, {\n    limit: LIMIT,\n    type: 'getProjectsByIds',\n    variables: {\n      projects: defaultFolder.projects\n    },\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS_BY_IDS,\n    emptyMessage: 'Проектов нет',\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    component: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document,\n      layout: 'row'\n    }))\n  }));\n};\n\n_s2(InProgress, \"CidCUWEpN8cIT6WsFPziniaLDQs=\", false, function () {\n  return [useProject, useSelector];\n});\n\n_c4 = InProgress;\n\nconst Profile = () => {\n  _s3();\n\n  var _user$company;\n\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    user,\n    search,\n    companies,\n    categories,\n    statuses\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }));\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(profilePages[0]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const isAdmin = useMemo(() => (user === null || user === void 0 ? void 0 : user.account) === 'ADMIN', [user]);\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS);\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES);\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES);\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage]);\n\n  const onAddProject = async () => {\n    var _companiesResponse$da, _categoriesResponse$d, _statusesResponse$dat;\n\n    const companiesResponse = (companies === null || companies === void 0 ? void 0 : companies.length) === 0 && loadCompanies && (await loadCompanies({\n      variables: {\n        account: ['ENTITY']\n      }\n    }));\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const companiesResult = companiesResponse === null || companiesResponse === void 0 ? void 0 : (_companiesResponse$da = companiesResponse.data) === null || _companiesResponse$da === void 0 ? void 0 : _companiesResponse$da.getUsers;\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d = categoriesResponse.data) === null || _categoriesResponse$d === void 0 ? void 0 : _categoriesResponse$d.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat = statusesResponse.data) === null || _statusesResponse$dat === void 0 ? void 0 : _statusesResponse$dat.getPostStatus;\n    if (companiesResult) dispatch(setCompanies(companiesResult));\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  };\n\n  const onAddArticle = async () => {\n    var _categoriesResponse$d2, _statusesResponse$dat2;\n\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d2 = categoriesResponse.data) === null || _categoriesResponse$d2 === void 0 ? void 0 : _categoriesResponse$d2.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat2 = statusesResponse.data) === null || _statusesResponse$dat2 === void 0 ? void 0 : _statusesResponse$dat2.getPostStatus;\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  };\n\n  const onSearch = value => {\n    if (value) dispatch(setSearch(value));else dispatch(setSearch(null));\n  };\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null;\n\n    switch (currentPage.value) {\n      case '/projects':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      case '/liked':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            rating: user.email\n          }\n        });\n\n      case '/articles':\n        return /*#__PURE__*/React.createElement(Articles, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(InProgress, null);\n    }\n  }, [user, currentPage]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onEdit: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      canEditAccount: !isAdmin,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user\n    }),\n    onCompanyLink: (user === null || user === void 0 ? void 0 : user.company) && recall(onUserLink, {\n      id: user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.email,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      queries: {\n        userChats: queries.GET_USER_CHATS,\n        chat: queries.GET_CHAT\n      },\n      mutations: {\n        addUserChat: queries.ADD_USER_CHAT,\n        sendMessage: queries.SEND_MESSAGE\n      }\n    }),\n    onMembers: recall(onUserMembers, {\n      id: user === null || user === void 0 ? void 0 : user.email,\n      auth: user === null || user === void 0 ? void 0 : user.email\n    })\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: currentPage,\n    options: profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== '/articles' : true),\n    onChange: item => setCurrentPage(item),\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '',\n    onCreate: isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject || isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle,\n    onChangeFilter: !DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter)),\n    onSubmit: onSearch\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [],\n    options: []\n  }), renderContentPage()));\n};\n\n_s3(Profile, \"3/1duZt2QSxY4+UeuShwij3U+9w=\", false, function () {\n  return [useHelper, useRouter, useSelector, useDispatch, useLazyQuery, useLazyQuery, useLazyQuery];\n});\n\n_c5 = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ContainerInProgress\");\n$RefreshReg$(_c2, \"Projects\");\n$RefreshReg$(_c3, \"Articles\");\n$RefreshReg$(_c4, \"InProgress\");\n$RefreshReg$(_c5, \"Profile\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useState","useEffect","useCallback","useMemo","useSelector","useDispatch","useLazyQuery","useRouter","styled","Row","Column","Switch","Spinner","hasAccess","INITIAL_DISPLAY_METHOD","DefaultLayout","UserBar","FilterBar","SearchBar","ArticleList","ProjectSuit","hasResponsibleMember","Organizer","List","Loader","setCompanies","setCategories","setStatuses","setSearch","onUserClientEdit","onUserAboutMore","onUserMembers","onUserLink","onProjectCreate","onArticleCreate","useProject","useHelper","profilePages","queries","TITLE","START_OFFSET","LIMIT","DISABLED_FILTERS","ContainerInProgress","Projects","variables","methods","GET_PROJECTS","document","Articles","InProgress","user","state","defaultFolder","folders","projects","GET_PROJECTS_BY_IDS","Profile","recall","router","search","companies","categories","statuses","root","dispatch","currentPage","setCurrentPage","visibleFilter","setVisibleFilter","isAdmin","account","loadCompanies","GET_USERS","loadCategories","GET_CATEGORIES","loadStatuses","GET_POST_STATUSES","isProjects","value","isArticles","onAddProject","companiesResponse","length","categoriesResponse","type","statusesResponse","companiesResult","data","getUsers","categoriesResult","getCategories","statusesResult","getPostStatus","mutation","CREATE_PROJECT","query","isPurpose","onAddArticle","CREATE_ARTICLE","onSearch","renderContentPage","author","email","rating","authenticated","push","name","canEditAccount","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update","company","id","auth","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","filter","page","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\n\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport { initializeApollo } from '../apollo'\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content'\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport ArticleList from '../components/ArticleList'\nimport ProjectSuit from '../components/ProjectSuit'\nimport { hasResponsibleMember } from '../components/Members'\nimport Organizer from '../components/Organizer'\nimport List from '../components/List'\nimport { Loader } from '../components/Styled'\nimport { setCompanies, setCategories, setStatuses, setSearch } from '../store/actions/root'\nimport { onUserClientEdit, onUserAboutMore, onUserMembers, onUserLink } from '../store/helpers/user'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { useProject } from '../hooks/useProject'\nimport { useHelper } from '../hooks/useHelper'\nimport { profilePages } from '../__mock__'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Профиль'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst DISABLED_FILTERS = true\n\nconst ContainerInProgress = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst Projects = ({ variables }) => {\n  const methods = useProject()\n\n  return (\n    <List\n      limit={LIMIT}\n      type={'getProjects'}\n      variables={variables}\n      startOffset={START_OFFSET}\n      query={queries.GET_PROJECTS}\n      emptyMessage={'Проектов нет'}\n      initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n      component={(document) => <ProjectSuit {...methods} project={document} />}\n    />\n  )\n}\n\nconst Articles = ({ variables }) => <ArticleList variables={variables} layout />\n\nconst InProgress = () => {\n  const methods = useProject()\n  const user = useSelector((state) => state.user)\n\n  const defaultFolder = useMemo(() => user?.folders[0], [user])\n\n  return (\n    <ContainerInProgress>\n      <Organizer defaultFolder={defaultFolder} />\n\n      <List\n        limit={LIMIT}\n        type={'getProjectsByIds'}\n        variables={{ projects: defaultFolder.projects }}\n        startOffset={START_OFFSET}\n        query={queries.GET_PROJECTS_BY_IDS}\n        emptyMessage={'Проектов нет'}\n        initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n        component={(document) => <ProjectSuit {...methods} project={document} layout={'row'} />}\n      />\n    </ContainerInProgress>\n  )\n}\n\nconst Profile = () => {\n  const recall = useHelper()\n  const router = useRouter()\n  const { user, search, companies, categories, statuses } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }))\n  const dispatch = useDispatch()\n  const [currentPage, setCurrentPage] = useState(profilePages[0])\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const isAdmin = useMemo(() => user?.account === 'ADMIN', [user])\n\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS)\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES)\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES)\n\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage])\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage])\n\n  const onAddProject = async () => {\n    const companiesResponse =\n      companies?.length === 0 &&\n      loadCompanies &&\n      (await loadCompanies({ variables: { account: ['ENTITY'] } }))\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const companiesResult = companiesResponse?.data?.getUsers\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (companiesResult) dispatch(setCompanies(companiesResult))\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }\n\n  const onAddArticle = async () => {\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }\n\n  const onSearch = (value) => {\n    if (value) dispatch(setSearch(value))\n    else dispatch(setSearch(null))\n  }\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null\n    switch (currentPage.value) {\n      case '/projects':\n        return <Projects variables={{ author: user.email }} />\n      case '/liked':\n        return <Projects variables={{ rating: user.email }} />\n      case '/articles':\n        return <Articles variables={{ author: user.email }} />\n      default:\n        return <InProgress />\n    }\n  }, [user, currentPage])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onEdit={recall(onUserClientEdit, {\n            user: user?.email,\n            canEditAccount: !isAdmin,\n            mutations: {\n              del: queries.DELETE_USER,\n              forgotEmail: queries.LOGIN,\n              forgotPassword: queries.RESET,\n              changePassword: queries.UPDATE_CLIENT_USER,\n              checkResetToken: queries.CHECK_RESET_TOKEN,\n              update: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onAboutMore={recall(onUserAboutMore, { user })}\n          onCompanyLink={\n            user?.company &&\n            recall(onUserLink, {\n              id: user?.company?.email,\n              auth: user?.email,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })\n          }\n          onMembers={recall(onUserMembers, { id: user?.email, auth: user?.email })}\n        />\n\n        <Switch\n          defaultValue={currentPage}\n          options={profilePages.filter((page) =>\n            !hasResponsibleMember(user) ? page.value !== '/articles' : true\n          )}\n          onChange={(item) => setCurrentPage(item)}\n          stretch\n        />\n\n        <SearchBar\n          defaultValue={search}\n          buttonCreateText={\n            isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''\n          }\n          onCreate={\n            (isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject) ||\n            (isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle)\n          }\n          onChangeFilter={!DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter))}\n          onSubmit={onSearch}\n        />\n\n        <FilterBar isOpen={visibleFilter} filters={[]} options={[]} />\n\n        {renderContentPage()}\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let categories = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_CATEGORIES\n    })\n\n    if (response && response.data) {\n      categories = response.data.getCategories\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      categories\n    }\n  }\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}