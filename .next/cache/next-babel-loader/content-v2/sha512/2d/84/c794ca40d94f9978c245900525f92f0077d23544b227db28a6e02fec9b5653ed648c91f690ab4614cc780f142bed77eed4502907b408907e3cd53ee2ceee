{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, memo } from 'react';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\nimport { getIntlWeekdays } from '../../assets/scripts/date';\nimport Arrower from '../Arrower';\nimport DateDay from '../DateDay';\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 252px;\n`;\nexport const MonthLabel = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  font-weight: 700;\n  text-transform: uppercase;\n  user-select: none;\n`;\nexport const Headers = styled.div`\n  display: grid;\n  align-content: center;\n  justify-content: center;\n\n  margin-bottom: 10px;\n  user-select: none;\n  grid-template-columns: repeat(auto-fit, minmax(35px, 35px));\n`;\nexport const Header = styled.div`\n  align-self: center;\n  font-size: var(--size-text-xs);\n  font-weight: 500;\n  color: var(--ghost-color-text);\n  text-transform: uppercase;\n  justify-self: center;\n`;\nexport const Days = styled.div`\n  display: grid;\n  align-content: center;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fit, minmax(35px, 35px));\n`;\nexport const Day = styled.div``;\nexport const DateMonth = /*#__PURE__*/memo(({\n  lang,\n  month,\n  value,\n  filterDate,\n  setFilterDate,\n  withNavigate,\n  withMarkers,\n  withYearDisplay,\n  onCompare,\n  onChange\n}) => {\n  const weekDays = useMemo(() => getIntlWeekdays(lang, 'short'), [lang]);\n  return __jsx(Wrap, null, withNavigate ? __jsx(Arrower, {\n    label: __jsx(React.Fragment, null, __jsx(\"span\", null, month.label), withYearDisplay && __jsx(\"span\", null, filterDate.getFullYear())),\n    defaultValue: filterDate,\n    onChange: sign => setFilterDate(new Date(filterDate.getFullYear(), filterDate.getMonth() + sign))\n  }) : __jsx(MonthLabel, null, month.label, withYearDisplay && value && __jsx(\"span\", null, new Date(value).getFullYear())), __jsx(Headers, null, weekDays.map(weekDay => __jsx(Header, {\n    key: v4()\n  }, weekDay))), __jsx(Days, null, month.days.map(dateDay => dateDay ? __jsx(DateDay, {\n    key: v4(),\n    value: dateDay,\n    selectedDate: value,\n    withMarkers: withMarkers,\n    onCompare: onCompare,\n    onChange: () => onChange(dateDay)\n  }) : __jsx(Day, {\n    key: v4()\n  }))));\n});\nexport default DateMonth;","map":null,"metadata":{},"sourceType":"module"}