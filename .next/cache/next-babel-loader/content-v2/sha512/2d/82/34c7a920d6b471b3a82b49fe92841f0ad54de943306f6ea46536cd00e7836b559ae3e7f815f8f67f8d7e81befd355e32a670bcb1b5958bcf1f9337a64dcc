{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { omit, b64EncodeUnicode } from '../atomic-ui/utils/functions';\nimport { setSearch, setParams } from '../store/actions/root';\nexport const parseParams = params => omit(params, ['search']);\nexport const useSearch = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const onSearch = useCallback((search, params) => {\n    var _value;\n\n    if (search) dispatch(setSearch(search));\n    if (params) dispatch(setParams(omit(params, ['search'])));\n    b64EncodeUnicode((_value = value) === null || _value === void 0 ? void 0 : _value.value);\n    router.push({\n      pathname: router.pathname,\n      query: { ...(search ? {\n          search\n        } : {}),\n        ...(params || {})\n      }\n    }, undefined, {\n      shallow: true\n    });\n  }, [router, dispatch]);\n  useEffect(() => {\n    const query = router.query;\n\n    if (query) {\n      dispatch(setParams(parseParams(query)));\n    }\n  }, [router, dispatch]);\n  return [onSearch];\n};","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/hooks/useSearch.js"],"names":["useCallback","useEffect","useRouter","useDispatch","omit","b64EncodeUnicode","setSearch","setParams","parseParams","params","useSearch","router","dispatch","onSearch","search","value","push","pathname","query","undefined","shallow"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,8BAAvC;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AAEA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAYL,IAAI,CAACK,MAAD,EAAS,CAAC,QAAD,CAAT,CAApC;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,QAAQ,GAAGb,WAAW,CAC3B,CAACc,MAAD,EAASL,MAAT,KAAoB;AAAA;;AAClB,QAAIK,MAAJ,EAAYF,QAAQ,CAACN,SAAS,CAACQ,MAAD,CAAV,CAAR;AACZ,QAAIL,MAAJ,EAAYG,QAAQ,CAACL,SAAS,CAACH,IAAI,CAACK,MAAD,EAAS,CAAC,QAAD,CAAT,CAAL,CAAV,CAAR;AAEZJ,IAAAA,gBAAgB,WAACU,KAAD,2CAAC,OAAOA,KAAR,CAAhB;AACAJ,IAAAA,MAAM,CAACK,IAAP,CACC;AACEC,MAAAA,QAAQ,EAAEN,MAAM,CAACM,QADnB;AAEEC,MAAAA,KAAK,EAAE,EACL,IAAIJ,MAAM,GAAG;AAAEA,UAAAA;AAAF,SAAH,GAAgB,EAA1B,CADK;AAEL,YAAIL,MAAM,IAAI,EAAd;AAFK;AAFT,KADD,EAQCU,SARD,EASC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KATD;AAWD,GAjB0B,EAkB3B,CAACT,MAAD,EAASC,QAAT,CAlB2B,CAA5B;AAqBAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,KAAK,GAAGP,MAAM,CAACO,KAArB;;AACA,QAAIA,KAAJ,EAAW;AACTN,MAAAA,QAAQ,CAACL,SAAS,CAACC,WAAW,CAACU,KAAD,CAAZ,CAAV,CAAR;AACD;AACF,GALQ,EAKN,CAACP,MAAD,EAASC,QAAT,CALM,CAAT;AAOA,SAAO,CAACC,QAAD,CAAP;AACD,CAjCM","sourcesContent":["import { useCallback, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch } from 'react-redux'\n\nimport { omit, b64EncodeUnicode } from '../atomic-ui/utils/functions'\n\nimport { setSearch, setParams } from '../store/actions/root'\n\nexport const parseParams = (params) => omit(params, ['search'])\n\nexport const useSearch = () => {\n  const router = useRouter()\n  const dispatch = useDispatch()\n\n  const onSearch = useCallback(\n   (search, params) => {\n     if (search) dispatch(setSearch(search))\n     if (params) dispatch(setParams(omit(params, ['search'])))\n\n     b64EncodeUnicode(value?.value)\n     router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          ...(search ? { search } : {}),\n          ...(params || {})\n        }\n      },\n      undefined,\n      { shallow: true }\n     )\n   },\n   [router, dispatch]\n  )\n\n  useEffect(() => {\n    const query = router.query\n    if (query) {\n      dispatch(setParams(parseParams(query)))\n    }\n  }, [router, dispatch])\n\n  return [onSearch]\n}\n"]},"metadata":{},"sourceType":"module"}