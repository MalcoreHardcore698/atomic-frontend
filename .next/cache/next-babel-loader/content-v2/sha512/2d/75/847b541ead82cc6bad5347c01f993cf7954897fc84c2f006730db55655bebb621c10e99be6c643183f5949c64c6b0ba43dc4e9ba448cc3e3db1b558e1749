{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\DateDay\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n        color: var(--cell-color);\\n        background: var(--default-color-accent);\\n\\n        i {\\n          background: var(--cell-color);\\n        }\\n      \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n        color: var(--default-color-accent);\\n        background: transparent;\\n        border: 1px solid var(--default-color-accent);\\n\\n        i {\\n          display: none;\\n        }\\n      \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  --cell-size: 35px;\\n  --cell-offset: 2.5px;\\n  --cell-color: #fff;\\n  --badge-size: 5px;\\n  --badge-bottom-offset: 2px;\\n  --side-left-radius: 10rem 0 0 10rem;\\n  --side-right-radius: 0 10rem 10rem 0;\\n  --transition: all 150ms ease;\\n\\n  display: flex;\\n  align-items: center;\\n\\n  align-self: center;\\n  justify-content: center;\\n\\n  width: var(--cell-size);\\n  height: var(--cell-size);\\n\\n  margin: var(--cell-offset) 0;\\n  cursor: pointer;\\n  user-select: none;\\n  border: none;\\n  outline: none;\\n  transition: var(--transition);\\n  justify-self: center;\\n\\n  span {\\n    position: relative;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n\\n    width: var(--cell-size);\\n    height: var(--cell-size);\\n\\n    font-size: var(--font-size-s);\\n    font-weight: 400;\\n    color: var(--default-color-text);\\n    border-radius: 50%;\\n    transition: var(--transition);\\n\\n    i {\\n      position: absolute;\\n      bottom: var(--badge-bottom-offset);\\n      width: var(--badge-size);\\n      height: var(--badge-size);\\n      background: var(--default-color-text);\\n      border-radius: 50%;\\n    }\\n\\n    \", \"\\n\\n    \", \"\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { isSame } from '../../assets/scripts/date';\nexport var Wrap = styled.div(_templateObject(), function (_ref) {\n  var current = _ref.current;\n  return current && css(_templateObject2());\n}, function (_ref2) {\n  var selected = _ref2.selected;\n  return selected && css(_templateObject3());\n});\n_c = Wrap;\n\nvar DateDay = function DateDay(_ref3) {\n  var value = _ref3.value,\n      selectedDate = _ref3.selectedDate,\n      withMarkers = _ref3.withMarkers,\n      onCompare = _ref3.onCompare,\n      onChange = _ref3.onChange;\n  var _ref4 = [value.getDate(), value.getMonth(), value.getFullYear()],\n      date = _ref4[0],\n      month = _ref4[1],\n      year = _ref4[2];\n  var _ref5 = [new Date().getDate(), new Date().getMonth(), new Date().getFullYear()],\n      cDate = _ref5[0],\n      cMonth = _ref5[1],\n      cYear = _ref5[2];\n  var isSelectedDate = selectedDate && selectedDate && isSame(value, selectedDate);\n  var isCurrent = cDate === date && cMonth === month && cYear === year;\n  return __jsx(Wrap, {\n    role: 'button',\n    tabIndex: 0,\n    onMouseDown: onChange,\n    selected: isSelectedDate,\n    current: isCurrent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, value.getDate(), withMarkers && onCompare(value) && __jsx(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  })));\n};\n\n_c2 = DateDay;\nexport default DateDay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"DateDay\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/DateDay/index.js"],"names":["React","styled","css","isSame","Wrap","div","current","selected","DateDay","value","selectedDate","withMarkers","onCompare","onChange","getDate","getMonth","getFullYear","date","month","year","Date","cDate","cMonth","cYear","isSelectedDate","isCurrent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,SAASC,MAAT,QAAuB,2BAAvB;AAEA,OAAO,IAAMC,IAAI,GAAGH,MAAM,CAACI,GAAV,oBAmDX;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACAA,OAAO,IACPJ,GADO,oBADP;AAAA,CAnDW,EA+DX;AAAA,MAAGK,QAAH,SAAGA,QAAH;AAAA,SACAA,QAAQ,IACRL,GADQ,oBADR;AAAA,CA/DW,CAAV;KAAME,I;;AA4Eb,IAAMI,OAAO,GAAG,SAAVA,OAAU,QAA+D;AAAA,MAA5DC,KAA4D,SAA5DA,KAA4D;AAAA,MAArDC,YAAqD,SAArDA,YAAqD;AAAA,MAAvCC,WAAuC,SAAvCA,WAAuC;AAAA,MAA1BC,SAA0B,SAA1BA,SAA0B;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAAA,cACjD,CAACJ,KAAK,CAACK,OAAN,EAAD,EAAkBL,KAAK,CAACM,QAAN,EAAlB,EAAoCN,KAAK,CAACO,WAAN,EAApC,CADiD;AAAA,MACtEC,IADsE;AAAA,MAChEC,KADgE;AAAA,MACzDC,IADyD;AAAA,cAE9C,CAC7B,IAAIC,IAAJ,GAAWN,OAAX,EAD6B,EAE7B,IAAIM,IAAJ,GAAWL,QAAX,EAF6B,EAG7B,IAAIK,IAAJ,GAAWJ,WAAX,EAH6B,CAF8C;AAAA,MAEtEK,KAFsE;AAAA,MAE/DC,MAF+D;AAAA,MAEvDC,KAFuD;AAQ7E,MAAMC,cAAc,GAAGd,YAAY,IAAIA,YAAhB,IAAgCP,MAAM,CAACM,KAAD,EAAQC,YAAR,CAA7D;AACA,MAAMe,SAAS,GAAGJ,KAAK,KAAKJ,IAAV,IAAkBK,MAAM,KAAKJ,KAA7B,IAAsCK,KAAK,KAAKJ,IAAlE;AAEA,SACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,WAAW,EAAEN,QAHf;AAIE,IAAA,QAAQ,EAAEW,cAJZ;AAKE,IAAA,OAAO,EAAEC,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KAAK,CAACK,OAAN,EADH,EAEGH,WAAW,IAAIC,SAAS,CAACH,KAAD,CAAxB,IAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFtC,CANF,CADF;AAaD,CAxBD;;MAAMD,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { isSame } from '../../assets/scripts/date'\n\nexport const Wrap = styled.div`\n  --cell-size: 35px;\n  --cell-offset: 2.5px;\n  --cell-color: #fff;\n  --badge-size: 5px;\n  --badge-bottom-offset: 2px;\n  --side-left-radius: 10rem 0 0 10rem;\n  --side-right-radius: 0 10rem 10rem 0;\n  --transition: all 150ms ease;\n\n  display: flex;\n  align-items: center;\n\n  align-self: center;\n  justify-content: center;\n\n  width: var(--cell-size);\n  height: var(--cell-size);\n\n  margin: var(--cell-offset) 0;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  outline: none;\n  transition: var(--transition);\n  justify-self: center;\n\n  span {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    width: var(--cell-size);\n    height: var(--cell-size);\n\n    font-size: var(--font-size-s);\n    font-weight: 400;\n    color: var(--default-color-text);\n    border-radius: 50%;\n    transition: var(--transition);\n\n    i {\n      position: absolute;\n      bottom: var(--badge-bottom-offset);\n      width: var(--badge-size);\n      height: var(--badge-size);\n      background: var(--default-color-text);\n      border-radius: 50%;\n    }\n\n    ${({ current }) =>\n      current &&\n      css`\n        color: var(--default-color-accent);\n        background: transparent;\n        border: 1px solid var(--default-color-accent);\n\n        i {\n          display: none;\n        }\n      `}\n\n    ${({ selected }) =>\n      selected &&\n      css`\n        color: var(--cell-color);\n        background: var(--default-color-accent);\n\n        i {\n          background: var(--cell-color);\n        }\n      `}\n  }\n`\n\nconst DateDay = ({ value, selectedDate, withMarkers, onCompare, onChange }) => {\n  const [date, month, year] = [value.getDate(), value.getMonth(), value.getFullYear()]\n  const [cDate, cMonth, cYear] = [\n    new Date().getDate(),\n    new Date().getMonth(),\n    new Date().getFullYear()\n  ]\n\n  const isSelectedDate = selectedDate && selectedDate && isSame(value, selectedDate)\n  const isCurrent = cDate === date && cMonth === month && cYear === year\n\n  return (\n    <Wrap\n      role={'button'}\n      tabIndex={0}\n      onMouseDown={onChange}\n      selected={isSelectedDate}\n      current={isCurrent}>\n      <span>\n        {value.getDate()}\n        {withMarkers && onCompare(value) && <i />}\n      </span>\n    </Wrap>\n  )\n}\n\nexport default DateDay\n"]},"metadata":{},"sourceType":"module"}