{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.p.withConfig({\n  displayName: \"Text__Wrap\",\n  componentId: \"sc-1jvjkm3-0\"\n})([\"font-size:var(--font-size-m);font-weight:var(--font-weight-regular);color:var(--default-color-text);\", \"\"], ({\n  size\n}) => size && css([\"font-size:var(--font-size-\", \");\"], size));\nexport const Text = forwardRef(({\n  children,\n  ...props\n}, ref) => /*#__PURE__*/React.createElement(Wrap, _extends({\n  ref: ref\n}, props), children));\nText.defaultProps = {\n  size: 'm'\n};\nexport default Text;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Text/index.js"],"names":["React","forwardRef","styled","css","Wrap","p","size","Text","children","props","ref","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,IAAI,GAAGF,MAAM,CAACG,CAAV;AAAA;AAAA;AAAA,iHAKb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,IAAI,IACJH,GADI,uCAE2BG,IAF3B,CANS,CAAV;AAYP,OAAO,MAAMC,IAAI,GAAGN,UAAU,CAAC,CAAC;AAAEO,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAyBC,GAAzB,kBAC7B,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA;AAAX,GAAoBD,KAApB,GACGD,QADH,CAD4B,CAAvB;AAMPD,IAAI,CAACI,YAAL,GAAoB;AAClBL,EAAAA,IAAI,EAAE;AADY,CAApB;AAIA,eAAeC,IAAf","sourcesContent":["import React, { forwardRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const Wrap = styled.p`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n  color: var(--default-color-text);\n\n  ${({ size }) =>\n    size &&\n    css`\n      font-size: var(--font-size-${size});\n    `}\n`\n\nexport const Text = forwardRef(({ children, ...props }, ref) => (\n  <Wrap ref={ref} {...props}>\n    {children}\n  </Wrap>\n))\n\nText.defaultProps = {\n  size: 'm'\n}\n\nexport default Text\n"]},"metadata":{},"sourceType":"module"}