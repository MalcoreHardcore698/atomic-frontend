{"ast":null,"code":"import React, { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport template from '../../atomic-ui/components/Table/templates/article';\nimport { useHelper } from '../../hooks/useHelper';\nimport ArticleCard from '../../components/ArticleCard';\nimport ContentLayout from '../../layouts/dashboard/content';\nimport { onArticleCreate, onArticleEdit, onArticleLink } from '../../store/helpers/article';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Статьи';\nconst START_OFFSET = 0;\nconst LIMIT = 12;\n\nconst Articles = () => {\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const canEditStatus = useMemo(() => user && user.role.name === 'ADMIN', [user]);\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    icon: 'document',\n    template: template,\n    startOffset: START_OFFSET,\n    emptyMessage: 'Статей нет',\n    buttonCreateText: 'Создать статью',\n    getType: 'getArticles',\n    getQuery: queries.GET_ARTICLES,\n    deleteQuery: queries.DELETE_ARTICLE,\n    deleteEntityMultiText: 'статьи',\n    deleteEntitySingleText: 'статья',\n    onLink: article => recall(onArticleLink, {\n      id: article.id\n    })(),\n    onEdit: (article, onAfter) => recall(onArticleEdit, {\n      id: article.id,\n      canEditStatus,\n      mutation: queries.UPDATE_ARTICLE,\n      onAfter\n    })(),\n    onCreate: onAfter => recall(onArticleCreate, {\n      canEditStatus,\n      mutation: queries.CREATE_ARTICLE,\n      onAfter\n    })(),\n    render: document => /*#__PURE__*/React.createElement(ArticleCard, {\n      article: document,\n      withSocials: true\n    })\n  });\n};\n\nexport default Articles;","map":null,"metadata":{},"sourceType":"module"}