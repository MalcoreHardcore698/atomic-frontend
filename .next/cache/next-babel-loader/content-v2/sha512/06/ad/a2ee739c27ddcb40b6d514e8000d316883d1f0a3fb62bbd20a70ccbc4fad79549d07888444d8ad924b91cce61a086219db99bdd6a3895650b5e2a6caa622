{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport More from '../../atomic-ui/components/More';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"ArticleCard__Wrap\",\n  componentId: \"sc-17tznl7-0\"\n})([\"display:grid;grid-template-columns:1fr 2fr;padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\", \" \", \" \", \" \", \" @media only screen and (max-width:480px){display:flex;flex-direction:column;grid-gap:var(--default-gap);}\"], ({\n  layout\n}) => layout === 'column' && css([\"display:flex;flex-wrap:wrap;grid-gap:var(--default-gap);\"]), ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ArticleCard__Poster\",\n  componentId: \"sc-17tznl7-1\"\n})([\"object-fit:cover;width:100%;height:100%;border-radius:var(--surface-border-radius);\", \"\"], ({\n  layout\n}) => layout === 'column' && css([\"height:128px;\"]));\n_c2 = Poster;\nexport const Header = styled(Row).withConfig({\n  displayName: \"ArticleCard__Header\",\n  componentId: \"sc-17tznl7-2\"\n})([\"justify-content:space-between;align-items:center;\"]);\n_c3 = Header;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"ArticleCard__Actions\",\n  componentId: \"sc-17tznl7-3\"\n})([\"grid-gap:5px;\"]);\n_c4 = Actions;\nexport const Name = styled(Title).withConfig({\n  displayName: \"ArticleCard__Name\",\n  componentId: \"sc-17tznl7-4\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\n_c5 = Name;\nexport const HTMLView = ({\n  content,\n  className\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: className,\n  dangerouslySetInnerHTML: {\n    __html: content\n  }\n});\n_c6 = HTMLView;\nexport const ShortText = styled(HTMLView).withConfig({\n  displayName: \"ArticleCard__ShortText\",\n  componentId: \"sc-17tznl7-5\"\n})([\"display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;p{font-size:var(--font-size-m);font-weight:var(--font-weight-regular);color:var(--default-color-text);strong,b,i{font-style:normal;font-weight:inherit;}}\"]);\n_c7 = ShortText;\nexport const Card = ({\n  layout,\n  article,\n  preview,\n  appearance,\n  onLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  var _article$preview, _article$category;\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    appearance: appearance,\n    layout: layout\n  }, article.preview && /*#__PURE__*/React.createElement(Poster, {\n    src: (_article$preview = article.preview) === null || _article$preview === void 0 ? void 0 : _article$preview.path,\n    layout: layout\n  }), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 5,\n      width: '100%',\n      gridColumn: !article.preview && '1 / 3'\n    }\n  }, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n    date: article === null || article === void 0 ? void 0 : article.createdAt,\n    category: article === null || article === void 0 ? void 0 : (_article$category = article.category) === null || _article$category === void 0 ? void 0 : _article$category.name,\n    short: true\n  }), (onChecked || onEdit || onDelete) && /*#__PURE__*/React.createElement(Actions, null, onDelete && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удалить статью'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    appearance: 'red',\n    onClick: onDelete\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white'\n  }))), onEdit && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Редактировать статью'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    onClick: onEdit\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white'\n  }))), onChecked && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Отметить статью',\n    self: true\n  }, /*#__PURE__*/React.createElement(Checkbox, null)))), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: onLink\n  }, article.title), article.body && /*#__PURE__*/React.createElement(ShortText, {\n    content: article.body\n  }), !preview && /*#__PURE__*/React.createElement(More, {\n    onClick: onLink,\n    withButton: true\n  })));\n};\n_c8 = Card;\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Poster\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Actions\");\n$RefreshReg$(_c5, \"Name\");\n$RefreshReg$(_c6, \"HTMLView\");\n$RefreshReg$(_c7, \"ShortText\");\n$RefreshReg$(_c8, \"Card\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ArticleCard/index.js"],"names":["React","styled","css","Row","Column","Title","Image","Meta","More","Button","Icon","Checkbox","Tooltip","Wrap","layout","appearance","Poster","Header","Actions","Name","onClick","HTMLView","content","className","__html","ShortText","Card","article","preview","onLink","onChecked","onEdit","onDelete","path","gridGap","width","gridColumn","createdAt","category","name","title","body","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport More from '../../atomic-ui/components/More'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\n\nexport const Wrap = styled(Row)`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  padding: var(--default-gap);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--surface-shadow);\n\n  ${({ layout }) =>\n    layout === 'column' &&\n    css`\n      display: flex;\n      flex-wrap: wrap;\n      grid-gap: var(--default-gap);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n\n  ${({ layout }) =>\n    layout === 'column' &&\n    css`\n      height: 128px;\n    `}\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const HTMLView = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nexport const ShortText = styled(HTMLView)`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  p {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-regular);\n    color: var(--default-color-text);\n\n    strong, b, i {    \n      font-style: normal;\n      font-weight: inherit;\n    }\n  }\n`\n\nexport const Card = ({\n  layout,\n  article,\n  preview,\n  appearance,\n  onLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  return (\n    <Wrap appearance={appearance} layout={layout}>\n      {article.preview && <Poster src={article.preview?.path} layout={layout} />}\n      <Column\n        style={{\n          gridGap: 5,\n          width: '100%',\n          gridColumn: !article.preview && '1 / 3'\n        }}>\n        <Header>\n          <Meta date={article?.createdAt} category={article?.category?.name} short />\n\n          {(onChecked || onEdit || onDelete) && (\n            <Actions>\n              {onDelete && (\n                <Tooltip text={'Удалить статью'}>\n                  <Button kind={'icon'} size={'xs'} appearance={'red'} onClick={onDelete}>\n                    <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n              )}\n              {onEdit && (\n                <Tooltip text={'Редактировать статью'}>\n                  <Button kind={'icon'} size={'xs'} onClick={onEdit}>\n                    <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n              )}\n              {onChecked && (\n                <Tooltip text={'Отметить статью'} self>\n                  <Checkbox />\n                </Tooltip>\n              )}\n            </Actions>\n          )}\n        </Header>\n\n        <Name tag={'h4'} onClick={onLink}>\n          {article.title}\n        </Name>\n\n        {article.body && <ShortText content={article.body} />}\n        {!preview && <More onClick={onLink} withButton />}\n      </Column>\n    </Wrap>\n  )\n}\n\nCard.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}