{"ast":null,"code":"import { useCallback } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentPage, setVisibleFilters } from '../store/actions/root';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { useHelper } from './useHelper';\nimport { useUser } from './useUser';\nimport queries from '../graphql/queries';\nexport const useProfile = ({\n  isManage\n} = {}) => {\n  const router = useRouter();\n  const recall = useHelper();\n  const {\n    user,\n    visibleFilter\n  } = useSelector(state => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }));\n  const dispatch = useDispatch();\n  const {\n    onMembers,\n    onCompanyLink,\n    onEdit\n  } = useUser({\n    isManage\n  });\n\n  const onChangePage = item => {\n    dispatch(setCurrentPage(item.value));\n    router.push({\n      pathname: router.pathname,\n      query: {\n        page: item.value\n      }\n    }, undefined, {\n      shallow: true\n    });\n  };\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter));\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  }, [recall]);\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onMembers,\n    onEdit\n  };\n};","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useProfile.js"],"names":["useCallback","useRouter","useDispatch","useSelector","setCurrentPage","setVisibleFilters","onArticleCreate","onProjectCreate","useHelper","useUser","queries","useProfile","isManage","router","recall","user","visibleFilter","state","root","dispatch","onMembers","onCompanyLink","onEdit","onChangePage","item","value","push","pathname","query","page","undefined","shallow","onChangeVisibleFilters","onAddProject","mutation","CREATE_PROJECT","GET_USERS","isPurpose","onAddArticle","CREATE_ARTICLE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,uBAAlD;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAe,EAAhB,KAAuB;AAC/C,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA0Bb,WAAW,CAAEc,KAAD,KAAY;AACtDF,IAAAA,IAAI,EAAEE,KAAK,CAACC,IAAN,CAAWH,IADqC;AAEtDC,IAAAA,aAAa,EAAEC,KAAK,CAACC,IAAN,CAAWF;AAF4B,GAAZ,CAAD,CAA3C;AAIA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAM;AAAEkB,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAAuCb,OAAO,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAApD;;AAEA,QAAMW,YAAY,GAAIC,IAAD,IAAU;AAC7BL,IAAAA,QAAQ,CAACf,cAAc,CAACoB,IAAI,CAACC,KAAN,CAAf,CAAR;AAEAZ,IAAAA,MAAM,CAACa,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAEd,MAAM,CAACc,QADnB;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEL,IAAI,CAACC;AADN;AAFT,KADF,EAOEK,SAPF,EAQE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KARF;AAUD,GAbD;;AAeA,QAAMC,sBAAsB,GAAG,MAAMb,QAAQ,CAACd,iBAAiB,CAAC,CAACW,aAAF,CAAlB,CAA7C;;AAEA,QAAMiB,YAAY,GAAGjC,WAAW,CAAC,MAAM;AACrCc,IAAAA,MAAM,CAACP,eAAD,EAAkB;AACtB2B,MAAAA,QAAQ,EAAExB,OAAO,CAACyB,cADI;AAEtBP,MAAAA,KAAK,EAAElB,OAAO,CAAC0B,SAFO;AAGtBC,MAAAA,SAAS,EAAE;AAHW,KAAlB,CAAN;AAKD,GAN+B,EAM7B,CAACvB,MAAD,CAN6B,CAAhC;AAQA,QAAMwB,YAAY,GAAGtC,WAAW,CAAC,MAAM;AACrCc,IAAAA,MAAM,CAACR,eAAD,EAAkB;AACtB4B,MAAAA,QAAQ,EAAExB,OAAO,CAAC6B,cADI;AAEtBF,MAAAA,SAAS,EAAE;AAFW,KAAlB,CAAN;AAID,GAL+B,EAK7B,CAACvB,MAAD,CAL6B,CAAhC;AAOA,SAAO;AACLC,IAAAA,IADK;AAELQ,IAAAA,YAFK;AAGLS,IAAAA,sBAHK;AAILX,IAAAA,aAJK;AAKLY,IAAAA,YALK;AAMLK,IAAAA,YANK;AAOLlB,IAAAA,SAPK;AAQLE,IAAAA;AARK,GAAP;AAUD,CArDM","sourcesContent":["import { useCallback } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setCurrentPage, setVisibleFilters } from '../store/actions/root'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { useHelper } from './useHelper'\nimport { useUser } from './useUser'\nimport queries from '../graphql/queries'\n\nexport const useProfile = ({ isManage } = {}) => {\n  const router = useRouter()\n  const recall = useHelper()\n  const { user, visibleFilter } = useSelector((state) => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }))\n  const dispatch = useDispatch()\n\n  const { onMembers, onCompanyLink, onEdit } = useUser({ isManage })\n\n  const onChangePage = (item) => {\n    dispatch(setCurrentPage(item.value))\n\n    router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          page: item.value\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n  }\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter))\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onMembers,\n    onEdit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}