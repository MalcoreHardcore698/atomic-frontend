{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { setSearch, setParams } from '../store/actions/root';\nexport const useSearch = () => {\n  _s();\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  const onSearch = (search, params) => {\n    if (search) dispatch(setSearch(search));\n    if (params) dispatch(setParams(params));\n    router.push({\n      pathname: router.pathname,\n      query: { ...(search ? {\n          search\n        } : {}),\n        ...(params || {})\n      }\n    }, undefined, {\n      shallow: true\n    });\n  };\n\n  return [onSearch];\n};\n\n_s(useSearch, \"zXnflAqd4rnyBpogtdAc6I4Vk2A=\", false, function () {\n  return [useRouter, useDispatch];\n});","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/hooks/useSearch.js"],"names":["useRouter","useDispatch","setSearch","setParams","useSearch","router","dispatch","onSearch","search","params","push","pathname","query","undefined","shallow"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,QAAQ,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnC,QAAID,MAAJ,EAAYF,QAAQ,CAACJ,SAAS,CAACM,MAAD,CAAV,CAAR;AACZ,QAAIC,MAAJ,EAAYH,QAAQ,CAACH,SAAS,CAACM,MAAD,CAAV,CAAR;AAEZJ,IAAAA,MAAM,CAACK,IAAP,CACE;AACEC,MAAAA,QAAQ,EAAEN,MAAM,CAACM,QADnB;AAEEC,MAAAA,KAAK,EAAE,EACL,IAAIJ,MAAM,GAAG;AAAEA,UAAAA;AAAF,SAAH,GAAgB,EAA1B,CADK;AAEL,YAAIC,MAAM,IAAI,EAAd;AAFK;AAFT,KADF,EAQEI,SARF,EASE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KATF;AAWD,GAfD;;AAiBA,SAAO,CAACP,QAAD,CAAP;AACD,CAtBM;;GAAMH,S;UACIJ,S,EACEC,W","sourcesContent":["import { useRouter } from 'next/router'\nimport { useDispatch } from 'react-redux'\n\nimport { setSearch, setParams } from '../store/actions/root'\n\nexport const useSearch = () => {\n  const router = useRouter()\n  const dispatch = useDispatch()\n\n  const onSearch = (search, params) => {\n    if (search) dispatch(setSearch(search))\n    if (params) dispatch(setParams(params))\n\n    router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          ...(search ? { search } : {}),\n          ...(params || {})\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n  }\n\n  return [onSearch]\n}\n"]},"metadata":{},"sourceType":"module"}