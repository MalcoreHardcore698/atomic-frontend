{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport ContentLayout from '../layouts/content';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { useProject } from '../hooks/useProject';\nimport { projects as filterConfig } from '../components/FilterBar/config';\nimport { COMMON_START_OFFSET, COMMON_LOAD_LIMIT } from '../constants';\nimport queries from '../graphql/queries';\nconst TITLE = 'Проекты';\n\nconst Projects = () => {\n  var _router$query;\n\n  const router = useRouter();\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    getType: 'getProjects',\n    limit: COMMON_LOAD_LIMIT,\n    filterConfig: filterConfig,\n    emptyMessage: 'Проектов нет',\n    getQuery: queries.GET_PROJECTS,\n    startOffsett: COMMON_START_OFFSET,\n    variables: {\n      category: (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.c,\n      status: 'PUBLISHED'\n    },\n    render: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document\n    }))\n  });\n};\n\nexport default Projects;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/projects.js"],"names":["React","useRouter","ContentLayout","ProjectSuit","useProject","projects","filterConfig","COMMON_START_OFFSET","COMMON_LOAD_LIMIT","queries","TITLE","Projects","router","methods","GET_PROJECTS","category","query","c","status","document"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,gCAAzC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,cAAvD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,SAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,OAAO,GAAGT,UAAU,EAA1B;AAEA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEM,KADT;AAEE,IAAA,OAAO,EAAE,aAFX;AAGE,IAAA,KAAK,EAAEF,iBAHT;AAIE,IAAA,YAAY,EAAEF,YAJhB;AAKE,IAAA,YAAY,EAAE,cALhB;AAME,IAAA,QAAQ,EAAEG,OAAO,CAACK,YANpB;AAOE,IAAA,YAAY,EAAEP,mBAPhB;AAQE,IAAA,SAAS,EAAE;AAAEQ,MAAAA,QAAQ,mBAAEH,MAAM,CAACI,KAAT,kDAAE,cAAcC,CAA1B;AAA6BC,MAAAA,MAAM,EAAE;AAArC,KARb;AASE,IAAA,MAAM,EAAGC,QAAD,iBAAc,oBAAC,WAAD,eAAiBN,OAAjB;AAA0B,MAAA,OAAO,EAAEM;AAAnC;AATxB,IADF;AAaD,CAjBD;;AAmBA,eAAeR,QAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport ContentLayout from '../layouts/content'\nimport ProjectSuit from '../components/ProjectSuit'\nimport { useProject } from '../hooks/useProject'\nimport { projects as filterConfig } from '../components/FilterBar/config'\nimport { COMMON_START_OFFSET, COMMON_LOAD_LIMIT } from '../constants'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Проекты'\n\nconst Projects = () => {\n  const router = useRouter()\n  const methods = useProject()\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      getType={'getProjects'}\n      limit={COMMON_LOAD_LIMIT}\n      filterConfig={filterConfig}\n      emptyMessage={'Проектов нет'}\n      getQuery={queries.GET_PROJECTS}\n      startOffsett={COMMON_START_OFFSET}\n      variables={{ category: router.query?.c, status: 'PUBLISHED' }}\n      render={(document) => <ProjectSuit {...methods} project={document} />}\n    />\n  )\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}