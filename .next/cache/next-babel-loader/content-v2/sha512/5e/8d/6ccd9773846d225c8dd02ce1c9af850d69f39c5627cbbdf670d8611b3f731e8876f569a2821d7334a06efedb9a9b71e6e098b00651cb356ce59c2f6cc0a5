{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Icon from '../Icon';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Search__Wrap\",\n  componentId: \"n9mi6m-0\"\n})([\"width:100%;\"]);\n_c = Wrap;\nexport const Search = React.forwardRef(_c2 = _s(({\n  className,\n  defaultValue,\n  onSubmit,\n  onClick,\n  ...props\n}, ref) => {\n  _s();\n\n  const [value, setValue] = useState(defaultValue || '');\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    type: 'text',\n    placeholder: 'Поиск'\n  }, props, {\n    ref: ref,\n    readOnly: !!onClick,\n    defaultValue: defaultValue,\n    onClick: onClick && (() => onClick()),\n    onChange: e => !onClick && setValue(e.target.value),\n    onKeyDown: e => !onClick && e.key === 'Enter' && onSubmit(value)\n  })), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onClick: () => onClick ? onClick : onSubmit(value)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'search',\n    stroke: 'white'\n  })));\n}, \"9vZ7eRReyHxiQzQV0TtvQM8VP1g=\"));\n_c3 = Search;\nexport default Search;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Search$React.forwardRef\");\n$RefreshReg$(_c3, \"Search\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Search/index.js"],"names":["React","useState","useEffect","styled","Row","Input","Button","Icon","Wrap","Search","forwardRef","className","defaultValue","onSubmit","onClick","props","ref","value","setValue","e","target","key"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGL,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,mBAAV;KAAMI,I;AAIb,OAAO,MAAMC,MAAM,GAAGT,KAAK,CAACU,UAAN,UAAiB,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA,OAArC;AAA8C,KAAGC;AAAjD,CAAD,EAA2DC,GAA3D,KAAmE;AAAA;;AACxG,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACW,YAAY,IAAI,EAAjB,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACN,YAAD,CAAR;AACD,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAED;AAAjB,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMI,KAHN;AAIE,IAAA,GAAG,EAAEC,GAJP;AAKE,IAAA,QAAQ,EAAE,CAAC,CAACF,OALd;AAME,IAAA,YAAY,EAAEF,YANhB;AAOE,IAAA,OAAO,EAAEE,OAAO,KAAK,MAAMA,OAAO,EAAlB,CAPlB;AAQE,IAAA,QAAQ,EAAGK,CAAD,IAAO,CAACL,OAAD,IAAYI,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CARvC;AASE,IAAA,SAAS,EAAGE,CAAD,IAAO,CAACL,OAAD,IAAYK,CAAC,CAACE,GAAF,KAAU,OAAtB,IAAiCR,QAAQ,CAACI,KAAD;AAT7D,KADF,eAYE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,MAAd;AAAsB,IAAA,OAAO,EAAE,MAAOH,OAAO,GAAGA,OAAH,GAAaD,QAAQ,CAACI,KAAD;AAAlE,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,QAAZ;AAAsB,IAAA,MAAM,EAAE;AAA9B,IADF,CAZF,CADF;AAkBD,CAzBqB,kCAAf;MAAMR,M;AA2Bb,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../Row'\nimport Input from '../Input'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nexport const Wrap = styled(Row)`\n  width: 100%;\n`\n\nexport const Search = React.forwardRef(({ className, defaultValue, onSubmit, onClick, ...props }, ref) => {\n  const [value, setValue] = useState(defaultValue || '')\n\n  useEffect(() => {\n    setValue(defaultValue)\n  }, [defaultValue])\n\n  return (\n    <Wrap className={className}>\n      <Input\n        type={'text'}\n        placeholder={'Поиск'}\n        {...props}\n        ref={ref}\n        readOnly={!!onClick}\n        defaultValue={defaultValue}\n        onClick={onClick && (() => onClick())}\n        onChange={(e) => !onClick && setValue(e.target.value)}\n        onKeyDown={(e) => !onClick && e.key === 'Enter' && onSubmit(value)}\n      />\n      <Button kind={'icon'} onClick={() => (onClick ? onClick : onSubmit(value))}>\n        <Icon icon={'search'} stroke={'white'} />\n      </Button>\n    </Wrap>\n  )\n})\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}