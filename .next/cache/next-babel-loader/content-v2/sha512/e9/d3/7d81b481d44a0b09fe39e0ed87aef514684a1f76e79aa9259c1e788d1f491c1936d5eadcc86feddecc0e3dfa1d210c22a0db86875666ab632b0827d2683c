{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport template from '../../atomic-ui/components/Table/templates/role';\nimport RoleCard from '../../components/RoleCard';\nimport ContentLayout from '../../layouts/dashboard/content';\nimport { onRoleCreate, onRoleEdit, onRoleLink } from '../../store/helpers/role';\nimport { setDocuments } from '../../store/actions/documents';\nimport { useHelper } from '../../hooks/useHelper';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Роли';\nconst LIMIT = 12;\nconst START_OFFSET = 0;\n\nconst Roles = () => {\n  const recall = useHelper();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    icon: 'lock',\n    template: template,\n    startOffset: START_OFFSET,\n    emptyMessage: 'Ролей нет',\n    buttonCreateText: 'Создать роль',\n    entityType: 'role',\n    getType: 'getRoles',\n    getQuery: queries.GET_ROLES,\n    deleteQuery: queries.DELETE_ROLE,\n    deleteEntityMultiText: 'роли',\n    deleteEntitySingleText: 'роль',\n    onLink: role => recall(onRoleLink, {\n      id: role.id,\n      role\n    })(),\n    onEdit: (role, onAfter) => recall(onRoleEdit, {\n      id: role.id,\n      role,\n      mutation: queries.UPDATE_ROLE,\n      onAfter\n    })(),\n    onCreate: onAfter => recall(onRoleCreate, {\n      mutation: queries.CREATE_ROLE,\n      onAfter\n    })(),\n    render: document => /*#__PURE__*/React.createElement(RoleCard, {\n      role: document\n    })\n  });\n};\n\nexport default Roles;","map":null,"metadata":{},"sourceType":"module"}