{"ast":null,"code":"var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport gql from 'graphql-tag';\nimport { TicketFields } from '../../fragments';\nexport var GET_TICKET = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getTicket($id: ID!) {\\n    getTicket(id: $id) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var GET_TICKETS = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  query getTickets($offset: Int, $limit: Int, $search: String) {\\n    getTickets(offset: $offset, limit: $limit, search: $search) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var GET_USER_TICKETS = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  query getUserTickets {\\n    getUserTickets {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var CREATE_USER_TICKET = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  mutation createUserTicket($input: UserTicketCreateInput!) {\\n    createUserTicket(input: $input)\\n  }\\n\"])));\nexport var CREATE_TICKET = gql(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  mutation createTicket($input: TicketCreateInput!) {\\n    createTicket(input: $input) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var UPDATE_TICKET = gql(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  mutation updateTicket($id: ID!, $input: TicketUpdateInput!) {\\n    updateTicket(id: $id, input: $input) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var DELETE_TICKET = gql(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  mutation deleteTicket($id: ID!) {\\n    deleteTicket(id: $id) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);\nexport var CLOSE_TICKET = gql(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  mutation closeTicket($id: ID!) {\\n    closeTicket(id: $id) {\\n      ...TicketFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketFields);","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/Ticket/index.js"],"names":["gql","TicketFields","GET_TICKET","GET_TICKETS","GET_USER_TICKETS","CREATE_USER_TICKET","CREATE_TICKET","UPDATE_TICKET","DELETE_TICKET","CLOSE_TICKET"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,IAAMC,UAAU,GAAGF,GAAH,4KAMnBC,YANmB,CAAhB;AASP,OAAO,IAAME,WAAW,GAAGH,GAAH,0PAMpBC,YANoB,CAAjB;AASP,OAAO,IAAMG,gBAAgB,GAAGJ,GAAH,qKAMzBC,YANyB,CAAtB;AASP,OAAO,IAAMI,kBAAkB,GAAGL,GAAH,kLAAxB;AAMP,OAAO,IAAMM,aAAa,GAAGN,GAAH,+MAMtBC,YANsB,CAAnB;AASP,OAAO,IAAMM,aAAa,GAAGP,GAAH,kOAMtBC,YANsB,CAAnB;AASP,OAAO,IAAMO,aAAa,GAAGR,GAAH,uLAMtBC,YANsB,CAAnB;AASP,OAAO,IAAMQ,YAAY,GAAGT,GAAH,qLAMrBC,YANqB,CAAlB","sourcesContent":["import gql from 'graphql-tag'\nimport { TicketFields } from '../../fragments'\n\nexport const GET_TICKET = gql`\n  query getTicket($id: ID!) {\n    getTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const GET_TICKETS = gql`\n  query getTickets($offset: Int, $limit: Int, $search: String) {\n    getTickets(offset: $offset, limit: $limit, search: $search) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const GET_USER_TICKETS = gql`\n  query getUserTickets {\n    getUserTickets {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const CREATE_USER_TICKET = gql`\n  mutation createUserTicket($input: UserTicketCreateInput!) {\n    createUserTicket(input: $input)\n  }\n`\n\nexport const CREATE_TICKET = gql`\n  mutation createTicket($input: TicketCreateInput!) {\n    createTicket(input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const UPDATE_TICKET = gql`\n  mutation updateTicket($id: ID!, $input: TicketUpdateInput!) {\n    updateTicket(id: $id, input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const DELETE_TICKET = gql`\n  mutation deleteTicket($id: ID!) {\n    deleteTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const CLOSE_TICKET = gql`\n  mutation closeTicket($id: ID!) {\n    closeTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n"]},"metadata":{},"sourceType":"module"}