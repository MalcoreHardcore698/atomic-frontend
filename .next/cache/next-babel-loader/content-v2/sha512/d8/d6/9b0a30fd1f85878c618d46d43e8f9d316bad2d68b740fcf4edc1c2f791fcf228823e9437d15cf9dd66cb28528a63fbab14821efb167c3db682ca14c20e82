{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Icon from '../Icon';\nimport Button from '../Button';\nimport Switch from '../Switch';\nimport Difinition from '../Difinition';\nimport Checkbox from '../Checkbox';\nimport Tooltip, { Wrap as TooltipWrap } from '../Tooltip';\nimport Popper from '../Popper';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Table__Wrap\",\n  componentId: \"gzldu8-0\"\n})([\"\"]);\nexport const Manage = styled(Row).withConfig({\n  displayName: \"Table__Manage\",\n  componentId: \"gzldu8-1\"\n})([\"display:grid;grid-template-columns:36px 1fr 70px;\", \"\"], ({\n  checkable\n}) => checkable && css([\"grid-template-columns:1fr 40px;\"]));\nexport const Headers = styled(Switch).withConfig({\n  displayName: \"Table__Headers\",\n  componentId: \"gzldu8-2\"\n})([\"\", \" \", \"\"], ({\n  width\n}) => width && css([\"span{width:\", \";}\"], width), ({\n  first,\n  width\n}) => first && width && css([\"span:first-child{width:calc(\", \" + 45px);}\"], width));\nexport const Header = styled(Row).withConfig({\n  displayName: \"Table__Header\",\n  componentId: \"gzldu8-3\"\n})([\"display:flex;justify-content:flex-start;align-items:center;width:100%;height:30px;color:#959595;&:last-child{justify-content:flex-end;}\"]);\nexport const Track = styled(Row).withConfig({\n  displayName: \"Table__Track\",\n  componentId: \"gzldu8-4\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  checked\n}) => checked && css([\"opacity:0.45;\"]));\nexport const Content = styled(Row).withConfig({\n  displayName: \"Table__Content\",\n  componentId: \"gzldu8-5\"\n})([\"padding:5px 15px;width:calc(100% - 85px);\", \" \", \" \", \" & > label{display:flex;justify-content:center;align-items:center;width:calc(var(--input-height-m) - 15px);margin-left:5px;& > span{margin:0;}}\"], ({\n  checkable\n}) => checkable && css([\"width:100%;\"]), ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;\"]));\nexport const Container = styled(Row).withConfig({\n  displayName: \"Table__Container\",\n  componentId: \"gzldu8-6\"\n})([\"width:100%;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;\"]));\nexport const Actions = styled(Column).withConfig({\n  displayName: \"Table__Actions\",\n  componentId: \"gzldu8-7\"\n})([\"justify-content:center;align-items:center;width:70px;padding:5px;grid-gap:5px;button{width:100%;flex-grow:1;}\", \"{width:100%;}\", \" \", \" \", \" \", \"\"], TooltipWrap, ({\n  checkable\n}) => checkable && css([\"width:40px;\"]), ({\n  horizontal\n}) => horizontal && css([\"flex-direction:row;\"]), ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;padding:0;\"]));\nexport const FieldsPopper = styled(Popper).withConfig({\n  displayName: \"Table__FieldsPopper\",\n  componentId: \"gzldu8-8\"\n})([\"display:flex;align-items:center;& > div{display:flex;}\"]);\nexport const Cell = styled(Difinition).withConfig({\n  displayName: \"Table__Cell\",\n  componentId: \"gzldu8-9\"\n})([\"align-items:center;flex-grow:1;width:\", \";overflow:hidden;& > div{width:100%;}h4{font-size:var(--font-size-m);font-weight:var(--font-weight-bold);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;}\"], ({\n  width\n}) => width);\nexport const HeaderList = styled(Column).withConfig({\n  displayName: \"Table__HeaderList\",\n  componentId: \"gzldu8-10\"\n})([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:var(--surface-shadow);border-radius:var(--surface-border-radius);padding:10px;grid-gap:10px;\"]);\nexport const CheckboxTooltip = styled(Tooltip).withConfig({\n  displayName: \"Table__CheckboxTooltip\",\n  componentId: \"gzldu8-11\"\n})([\"display:flex;justify-content:flex-end;align-items:center;\"]);\nexport const getIsAdmin = document => {\n  var _document$name;\n\n  return ((_document$name = document.name) === null || _document$name === void 0 ? void 0 : _document$name.toUpperCase()) === 'ADMIN';\n};\nexport const Table = ({\n  data,\n  template,\n  className,\n  style,\n  appearance,\n  onClick,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const [isAllChecked, setIsAllChecked] = useState(false);\n  const [documents, setDocuments] = useState((data || []).map(item => ({ ...item,\n    id: item.id || v4(),\n    checked: false\n  })));\n  const buttonDeleteDisabled = useMemo(() => !documents.find(item => item.checked), [documents]);\n  const defaultWidth = `${Math.floor(100 / template.length)}%`;\n  const headers = useMemo(() => (template || []).map(item => ({\n    value: v4(),\n    label: item.header,\n    tooltip: item.tooltip || `Сортировка по «${item.header}»`,\n    visible: !item.hidden\n  })), []);\n\n  const handleChecked = document => {\n    setDocuments(prev => {\n      const isExists = item => item.id === document.id;\n\n      const candidate = prev.find(isExists);\n\n      if (candidate) {\n        return prev.map(item => isExists(item) ? { ...document,\n          checked: !item.checked\n        } : { ...item,\n          checked: isAllChecked || item.checked\n        });\n      } else {\n        return [...prev, { ...document,\n          checked: true\n        }];\n      }\n    });\n    setIsAllChecked(false);\n  };\n\n  const handleAllChecked = () => {\n    const value = !isAllChecked;\n    setDocuments(prev => prev.map(item => ({ ...item,\n      checked: !getIsAdmin(item) ? value : false\n    })));\n    setIsAllChecked(value);\n  };\n\n  useEffect(() => {\n    const countChecked = documents.reduce((acc, curr) => acc + (curr.checked ? 1 : 0), 0);\n\n    if (documents.length > 0 && countChecked === documents.length) {\n      setIsAllChecked(true);\n    }\n  }, [documents]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(Manage, {\n    checkable: !onChecked\n  }, onChecked && /*#__PURE__*/React.createElement(CheckboxTooltip, {\n    text: 'Отметить все',\n    self: true\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    size: 's',\n    checked: isAllChecked,\n    onChange: handleAllChecked\n  })), /*#__PURE__*/React.createElement(Headers, {\n    defaultValue: headers[0],\n    options: headers.filter(h => h.visible),\n    first: onChecked,\n    stretch: true\n  }), /*#__PURE__*/React.createElement(Actions, {\n    appearance: appearance,\n    checkable: !onChecked,\n    horizontal: true\n  }, onDelete && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удаление выделенного',\n    place: 'left'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon',\n    appearance: buttonDeleteDisabled ? 'ghost' : 'red',\n    disabled: buttonDeleteDisabled,\n    onClick: () => onDelete(documents.filter(document => document.checked))\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: buttonDeleteDisabled ? 'var(--ghost-color-text)' : 'white'\n  }))), /*#__PURE__*/React.createElement(FieldsPopper, {\n    place: 'left',\n    offset: {\n      bottom: 80\n    },\n    body: /*#__PURE__*/React.createElement(HeaderList, null, headers.map((header, index) => /*#__PURE__*/React.createElement(Checkbox, {\n      key: index,\n      size: 's',\n      label: header.label,\n      checked: header.visible\n    }))),\n    appearance: 'clear'\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Отображение полей',\n    place: 'left'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon'\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'show',\n    size: 'xs',\n    stroke: 'white'\n  })))))), documents.map((document, index) => /*#__PURE__*/React.createElement(Track, {\n    key: index,\n    checked: document.checked\n  }, /*#__PURE__*/React.createElement(Content, {\n    appearance: appearance,\n    checkable: !onChecked\n  }, onChecked && /*#__PURE__*/React.createElement(CheckboxTooltip, {\n    text: 'Отметить документ',\n    self: true\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    size: 's',\n    checked: !getIsAdmin(document) && (isAllChecked || document.checked),\n    onChange: !getIsAdmin(document) && (() => handleChecked(document))\n  })), /*#__PURE__*/React.createElement(Container, {\n    onClick: () => onClick(document)\n  }, template.map((cell, index) => headers[index].visible ? React.cloneElement(cell.content(document), {\n    key: index,\n    label: cell.header,\n    width: (cell === null || cell === void 0 ? void 0 : cell.width) || defaultWidth\n  }) : null))), (onEdit || onDelete) && /*#__PURE__*/React.createElement(Actions, {\n    appearance: appearance,\n    checkable: !onChecked\n  }, onEdit && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Редактирование',\n    place: 'left'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon',\n    disabled: getIsAdmin(document) || document.checked,\n    onClick: () => onEdit(document)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white',\n    fill: getIsAdmin(document) || document.checked ? 'var(--ghost-color-text)' : 'var(--default-color-accent)'\n  }))), onDelete && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удаление',\n    place: 'left'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon',\n    appearance: 'red',\n    disabled: getIsAdmin(document) || document.checked,\n    onClick: () => onDelete(document)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white',\n    fill: getIsAdmin(document) || document.checked ? 'var(--ghost-color-text)' : 'var(--default-color-red)'\n  })))))));\n};\nTable.defaultProps = {\n  appearance: 'default'\n};\nexport default Table;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Table/index.js"],"names":["React","useState","useEffect","useMemo","styled","css","v4","Row","Column","Icon","Button","Switch","Difinition","Checkbox","Tooltip","Wrap","TooltipWrap","Popper","Manage","checkable","Headers","width","first","Header","Track","checked","Content","appearance","Container","onClick","Actions","horizontal","FieldsPopper","Cell","HeaderList","CheckboxTooltip","getIsAdmin","document","name","toUpperCase","Table","data","template","className","style","onChecked","onDelete","onEdit","isAllChecked","setIsAllChecked","documents","setDocuments","map","item","id","buttonDeleteDisabled","find","defaultWidth","Math","floor","length","headers","value","label","header","tooltip","visible","hidden","handleChecked","prev","isExists","candidate","handleAllChecked","countChecked","reduce","acc","curr","filter","h","bottom","index","cell","cloneElement","content","key","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Icon from '../Icon'\nimport Button from '../Button'\nimport Switch from '../Switch'\nimport Difinition from '../Difinition'\nimport Checkbox from '../Checkbox'\nimport Tooltip, { Wrap as TooltipWrap } from '../Tooltip'\nimport Popper from '../Popper'\n\nexport const Wrap = styled(Column)``\n\nexport const Manage = styled(Row)`\n  display: grid;\n  grid-template-columns: 36px 1fr 70px;\n\n  ${({ checkable }) =>\n    checkable &&\n    css`\n      grid-template-columns: 1fr 40px;\n    `}\n`\n\nexport const Headers = styled(Switch)`\n  ${({ width }) =>\n    width &&\n    css`\n      span {\n        width: ${width};\n      }\n    `}\n\n  ${({ first, width }) =>\n    first &&\n    width &&\n    css`\n      span:first-child {\n        width: calc(${width} + 45px);\n      }\n    `}\n`\n\nexport const Header = styled(Row)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  color: #959595;\n\n  &:last-child {\n    justify-content: flex-end;\n  }\n`\n\nexport const Track = styled(Row)`\n  transition: opacity 150ms ease;\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      opacity: 0.45;\n    `}\n`\n\nexport const Content = styled(Row)`\n  padding: 5px 15px;\n  width: calc(100% - 85px);\n\n  ${({ checkable }) =>\n    checkable &&\n    css`\n      width: 100%;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n    `}\n\n  & > label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: calc(var(--input-height-m) - 15px);\n    margin-left: 5px;\n\n    & > span {\n      margin: 0;\n    }\n  }\n`\n\nexport const Container = styled(Row)`\n  width: 100%;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n    `}\n`\n\nexport const Actions = styled(Column)`\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  padding: 5px;\n  grid-gap: 5px;\n\n  button {\n    width: 100%;\n    flex-grow: 1;\n  }\n\n  ${TooltipWrap} {\n    width: 100%;\n  }\n\n  ${({ checkable }) =>\n    checkable &&\n    css`\n      width: 40px;\n    `}\n\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      flex-direction: row;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`\n\nexport const FieldsPopper = styled(Popper)`\n  display: flex;\n  align-items: center;\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Cell = styled(Difinition)`\n  align-items: center;\n  flex-grow: 1;\n\n  width: ${({ width }) => width};\n  overflow: hidden;\n\n  & > div {\n    width: 100%;\n  }\n\n  h4 {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-bold);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport const HeaderList = styled(Column)`\n  border: 1px solid var(--surface-border);\n  background: var(--surface-background);\n  box-shadow: var(--surface-shadow);\n  border-radius: var(--surface-border-radius);\n  padding: 10px;\n  grid-gap: 10px;\n`\n\nexport const CheckboxTooltip = styled(Tooltip)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nexport const getIsAdmin = (document) => document.name?.toUpperCase() === 'ADMIN'\n\nexport const Table = ({\n  data,\n  template,\n  className,\n  style,\n  appearance,\n  onClick,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const [isAllChecked, setIsAllChecked] = useState(false)\n  const [documents, setDocuments] = useState(\n    (data || []).map((item) => ({\n      ...item,\n      id: item.id || v4(),\n      checked: false\n    }))\n  )\n  const buttonDeleteDisabled = useMemo(() => !documents.find((item) => item.checked), [documents])\n  const defaultWidth = `${Math.floor(100 / template.length)}%`\n\n  const headers = useMemo(\n    () =>\n      (template || []).map((item) => ({\n        value: v4(),\n        label: item.header,\n        tooltip: item.tooltip || `Сортировка по «${item.header}»`,\n        visible: !item.hidden\n      })),\n    []\n  )\n\n  const handleChecked = (document) => {\n    setDocuments((prev) => {\n      const isExists = (item) => item.id === document.id\n      const candidate = prev.find(isExists)\n      if (candidate) {\n        return prev.map((item) =>\n          isExists(item)\n            ? {\n                ...document,\n                checked: !item.checked\n              }\n            : {\n                ...item,\n                checked: isAllChecked || item.checked\n              }\n        )\n      } else {\n        return [...prev, { ...document, checked: true }]\n      }\n    })\n    setIsAllChecked(false)\n  }\n\n  const handleAllChecked = () => {\n    const value = !isAllChecked\n    setDocuments((prev) =>\n      prev.map((item) => ({\n        ...item,\n        checked: !getIsAdmin(item) ? value : false\n      }))\n    )\n    setIsAllChecked(value)\n  }\n\n  useEffect(() => {\n    const countChecked = documents.reduce((acc, curr) => acc + (curr.checked ? 1 : 0), 0)\n    if (documents.length > 0 && countChecked === documents.length) {\n      setIsAllChecked(true)\n    }\n  }, [documents])\n\n  return (\n    <Wrap className={className} style={style}>\n      <Manage checkable={!onChecked}>\n        {onChecked && (\n          <CheckboxTooltip text={'Отметить все'} self>\n            <Checkbox size={'s'} checked={isAllChecked} onChange={handleAllChecked} />\n          </CheckboxTooltip>\n        )}\n\n        <Headers\n          defaultValue={headers[0]}\n          options={headers.filter((h) => h.visible)}\n          first={onChecked}\n          stretch\n        />\n\n        <Actions appearance={appearance} checkable={!onChecked} horizontal>\n          {onDelete && (\n            <Tooltip text={'Удаление выделенного'} place={'left'}>\n              <Button\n                size={'xs'}\n                kind={'icon'}\n                appearance={buttonDeleteDisabled ? 'ghost' : 'red'}\n                disabled={buttonDeleteDisabled}\n                onClick={() => onDelete(documents.filter((document) => document.checked))}>\n                <Icon\n                  icon={'delete'}\n                  size={'xs'}\n                  stroke={buttonDeleteDisabled ? 'var(--ghost-color-text)' : 'white'}\n                />\n              </Button>\n            </Tooltip>\n          )}\n\n          <FieldsPopper\n            place={'left'}\n            offset={{ bottom: 80 }}\n            body={\n              <HeaderList>\n                {headers.map((header, index) => (\n                  <Checkbox key={index} size={'s'} label={header.label} checked={header.visible} />\n                ))}\n              </HeaderList>\n            }\n            appearance={'clear'}>\n            <Tooltip text={'Отображение полей'} place={'left'}>\n              <Button size={'xs'} kind={'icon'}>\n                <Icon icon={'show'} size={'xs'} stroke={'white'} />\n              </Button>\n            </Tooltip>\n          </FieldsPopper>\n        </Actions>\n      </Manage>\n\n      {documents.map((document, index) => (\n        <Track key={index} checked={document.checked}>\n          <Content appearance={appearance} checkable={!onChecked}>\n            {onChecked && (\n              <CheckboxTooltip text={'Отметить документ'} self>\n                <Checkbox\n                  size={'s'}\n                  checked={!getIsAdmin(document) && (isAllChecked || document.checked)}\n                  onChange={!getIsAdmin(document) && (() => handleChecked(document))}\n                />\n              </CheckboxTooltip>\n            )}\n\n            <Container onClick={() => onClick(document)}>\n              {template.map((cell, index) =>\n                headers[index].visible\n                  ? React.cloneElement(cell.content(document), {\n                      key: index,\n                      label: cell.header,\n                      width: cell?.width || defaultWidth\n                    })\n                  : null\n              )}\n            </Container>\n          </Content>\n\n          {(onEdit || onDelete) && (\n            <Actions appearance={appearance} checkable={!onChecked}>\n              {onEdit && (\n                <Tooltip text={'Редактирование'} place={'left'}>\n                  <Button\n                    size={'xs'}\n                    kind={'icon'}\n                    disabled={getIsAdmin(document) || document.checked}\n                    onClick={() => onEdit(document)}>\n                    <Icon\n                      icon={'edit'}\n                      size={'xs'}\n                      stroke={'white'}\n                      fill={\n                        getIsAdmin(document) || document.checked\n                          ? 'var(--ghost-color-text)'\n                          : 'var(--default-color-accent)'\n                      }\n                    />\n                  </Button>\n                </Tooltip>\n              )}\n              {onDelete && (\n                <Tooltip text={'Удаление'} place={'left'}>\n                  <Button\n                    size={'xs'}\n                    kind={'icon'}\n                    appearance={'red'}\n                    disabled={getIsAdmin(document) || document.checked}\n                    onClick={() => onDelete(document)}>\n                    <Icon\n                      icon={'delete'}\n                      size={'xs'}\n                      stroke={'white'}\n                      fill={\n                        getIsAdmin(document) || document.checked\n                          ? 'var(--ghost-color-text)'\n                          : 'var(--default-color-red)'\n                      }\n                    />\n                  </Button>\n                </Tooltip>\n              )}\n            </Actions>\n          )}\n        </Track>\n      ))}\n    </Wrap>\n  )\n}\n\nTable.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}