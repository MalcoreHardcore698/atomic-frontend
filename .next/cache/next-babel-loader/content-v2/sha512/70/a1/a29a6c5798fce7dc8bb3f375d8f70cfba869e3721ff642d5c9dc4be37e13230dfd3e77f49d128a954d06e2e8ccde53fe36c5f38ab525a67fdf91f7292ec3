{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport YouTube from 'react-youtube';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions';\nimport HTMLView from '../HTMLView';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ProjectView__Wrap\",\n  componentId: \"sc-1fg5jgh-0\"\n})([\"\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const Container = styled(Row).withConfig({\n  displayName: \"ProjectView__Container\",\n  componentId: \"sc-1fg5jgh-1\"\n})([\"@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c2 = Container;\nexport const Media = styled(Column).withConfig({\n  displayName: \"ProjectView__Media\",\n  componentId: \"sc-1fg5jgh-2\"\n})([\"grid-gap:5px;flex-basis:35%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\n_c3 = Media;\nexport const Content = styled(Column).withConfig({\n  displayName: \"ProjectView__Content\",\n  componentId: \"sc-1fg5jgh-3\"\n})([\"justify-content:space-between;flex-basis:65%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\n_c4 = Content;\nexport const Screenshots = styled(Row).withConfig({\n  displayName: \"ProjectView__Screenshots\",\n  componentId: \"sc-1fg5jgh-4\"\n})([\"justify-content:space-between;grid-gap:5px;\"]);\n_c5 = Screenshots;\nexport const Screenshot = styled.div.withConfig({\n  displayName: \"ProjectView__Screenshot\",\n  componentId: \"sc-1fg5jgh-5\"\n})([\"position:relative;z-index:var(--z-12);width:auto;height:var(--input-height-s);min-width:var(--input-height-s);min-height:var(--input-height-s);border-radius:var(--surface-border-radius);overflow:hidden;transition:opacity 150ms ease;\", \" img{width:100%;height:100%;object-fit:cover;}\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\n_c6 = Screenshot;\nexport const ScreenshotsCounter = styled(Text).withConfig({\n  displayName: \"ProjectView__ScreenshotsCounter\",\n  componentId: \"sc-1fg5jgh-6\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;span{position:relative;z-index:var(--z-12);color:white;}&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;background:var(--default-color-accent);border-radius:var(--surface-border-radius);opacity:0.65;}\"]);\n_c7 = ScreenshotsCounter;\nexport const CentralAlert = styled(Alert).withConfig({\n  displayName: \"ProjectView__CentralAlert\",\n  componentId: \"sc-1fg5jgh-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;text-align:center;\"]);\n_c8 = CentralAlert;\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ProjectView__Poster\",\n  componentId: \"sc-1fg5jgh-8\"\n})([\"object-fit:cover;border-radius:var(--surface-border-radius);flex-grow:1;transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\n_c9 = Poster;\nexport const Difinitions = styled(Row).withConfig({\n  displayName: \"ProjectView__Difinitions\",\n  componentId: \"sc-1fg5jgh-9\"\n})([\"flex-grow:100;justify-content:space-between;grid-gap:var(--default-gap);@media only screen and (max-width:480px){flex-direction:column;}\"]);\n_c10 = Difinitions;\nexport const Presentation = styled(YouTube).withConfig({\n  displayName: \"ProjectView__Presentation\",\n  componentId: \"sc-1fg5jgh-10\"\n})([\"display:flex;flex-grow:1;width:100%;border-radius:var(--surface-border-radius);overflow:hidden;iframe{width:100%;}\"]);\n_c11 = Presentation;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"ProjectView__Actions\",\n  componentId: \"sc-1fg5jgh-11\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\n_c12 = Actions;\nexport const Files = styled(Grid).withConfig({\n  displayName: \"ProjectView__Files\",\n  componentId: \"sc-1fg5jgh-12\"\n})([\"\"]);\n_c13 = Files;\nexport const Members = styled(Grid).withConfig({\n  displayName: \"ProjectView__Members\",\n  componentId: \"sc-1fg5jgh-13\"\n})([\"\"]);\n_c14 = Members;\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  _s();\n\n  var _data$getProject$scre, _data$getProject$cate, _data$getProject$comp, _data$getProject$comp2, _data$getProject$comp3, _data$getProject$memb, _data$getProject$memb2, _data$getProject$file;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  });\n  const [isLiked, setLike] = useState(liked);\n  const [screenshots, setScreenshots] = useState([]);\n  const [residue, setResidue] = useState(0);\n  const [videoId, setVideoId] = useState(null);\n\n  const onClickLike = () => {\n    if (onLike) onLike();\n    setLike(!isLiked);\n  };\n\n  useEffect(() => {\n    if (!loading && data) {\n      var _url$searchParams;\n\n      const response = data.getProject;\n      const images = [response.preview, ...response.screenshots];\n      const slicedImages = images.slice(0, slicedFactor);\n      const url = response.presentation && new URL(response.presentation);\n      setResidue((images.length || slicedFactor) - slicedFactor);\n      setVideoId(url === null || url === void 0 ? void 0 : (_url$searchParams = url.searchParams) === null || _url$searchParams === void 0 ? void 0 : _url$searchParams.get('v'));\n      setScreenshots(slicedImages);\n    }\n  }, [loading, data, slicedFactor]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Media, null, data.getProject.preview ? /*#__PURE__*/React.createElement(Poster, {\n    src: data.getProject.preview.path,\n    onClick: () => onScreenshotClick && onScreenshotClick(data.getProject.preview, data.getProject.preview.id, [data.getProject.preview, ...data.getProject.screenshots])\n  }) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041F\\u0440\\u0435\\u0432\\u044C\\u044E \\u043D\\u0435\\u0442\"), data.getProject.screenshots && ((_data$getProject$scre = data.getProject.screenshots) === null || _data$getProject$scre === void 0 ? void 0 : _data$getProject$scre.length) > 0 && /*#__PURE__*/React.createElement(Screenshots, null, screenshots.map((screenshot, index) => /*#__PURE__*/React.createElement(Screenshot, {\n    key: screenshot.id,\n    onClick: () => onScreenshotClick && onScreenshotClick(screenshot, screenshot.id, [data.getProject.preview, ...data.getProject.screenshots])\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: screenshot.path,\n    alt: screenshot.name\n  }), index === (screenshots === null || screenshots === void 0 ? void 0 : screenshots.length) - 1 && residue > 0 && /*#__PURE__*/React.createElement(ScreenshotsCounter, null, /*#__PURE__*/React.createElement(\"span\", null, \"+\", residue)))))), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Meta, {\n    category: (_data$getProject$cate = data.getProject.category) === null || _data$getProject$cate === void 0 ? void 0 : _data$getProject$cate.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data.getProject.title), /*#__PURE__*/React.createElement(Text, null, data.getProject.description)), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Difinitions, null, /*#__PURE__*/React.createElement(Difinition, _extends({}, data.getProject.company ? {\n    img: (_data$getProject$comp = data.getProject.company) === null || _data$getProject$comp === void 0 ? void 0 : (_data$getProject$comp2 = _data$getProject$comp.avatar) === null || _data$getProject$comp2 === void 0 ? void 0 : _data$getProject$comp2.path\n  } : {\n    icon: 'work'\n  }, {\n    label: 'Компания',\n    text: ((_data$getProject$comp3 = data.getProject.company) === null || _data$getProject$comp3 === void 0 ? void 0 : _data$getProject$comp3.name) || '-',\n    onLink: () => {\n      var _data$getProject$comp4;\n\n      return onCompanyLink((_data$getProject$comp4 = data.getProject.company) === null || _data$getProject$comp4 === void 0 ? void 0 : _data$getProject$comp4.email);\n    }\n  })), !owned && (onLike || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onLike && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Мне нравится'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickLike,\n    revert: !isLiked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'heart',\n    stroke: isLiked ? 'white' : 'var(--default-color-accent)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Добавить проект к себе'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onAdd,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'var(--default-color-accent)'\n  })))))))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.body && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data.getProject.body\n  }), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.presentation && videoId && /*#__PURE__*/React.createElement(Presentation, {\n    videoId: videoId\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), data.getProject.members && ((_data$getProject$memb = data.getProject.members) === null || _data$getProject$memb === void 0 ? void 0 : _data$getProject$memb.length) > 0 && /*#__PURE__*/React.createElement(Members, {\n    percentage: 'minmax(320px, 1fr)'\n  }, data.getProject.members.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: getLabelRole(member.account),\n      text: member.name,\n      onLink: () => onMemberLink && onMemberLink(member.email)\n    });\n  })), (!data.getProject.members || ((_data$getProject$memb2 = data.getProject.members) === null || _data$getProject$memb2 === void 0 ? void 0 : _data$getProject$memb2.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u044B\"), data.getProject.files && data.getProject.files.length > 0 && /*#__PURE__*/React.createElement(Files, {\n    percentage: 'minmax(256px, 1fr)'\n  }, data.getProject.files.map(file => /*#__PURE__*/React.createElement(Difinition, {\n    key: file.id,\n    icon: 'paper',\n    label: file.filename,\n    text: getFileSize(file.size),\n    onLink: () => onFileLink && onFileLink(file)\n  }))), (!data.getProject.files || ((_data$getProject$file = data.getProject.files) === null || _data$getProject$file === void 0 ? void 0 : _data$getProject$file.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u043E\\u0432 \\u043D\\u0435\\u0442\")) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\n\n_s(View, \"HPJ2QAGGQSgO8Ieeflbigw4Qc2A=\", false, function () {\n  return [useQuery];\n});\n\n_c15 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Media\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Screenshots\");\n$RefreshReg$(_c6, \"Screenshot\");\n$RefreshReg$(_c7, \"ScreenshotsCounter\");\n$RefreshReg$(_c8, \"CentralAlert\");\n$RefreshReg$(_c9, \"Poster\");\n$RefreshReg$(_c10, \"Difinitions\");\n$RefreshReg$(_c11, \"Presentation\");\n$RefreshReg$(_c12, \"Actions\");\n$RefreshReg$(_c13, \"Files\");\n$RefreshReg$(_c14, \"Members\");\n$RefreshReg$(_c15, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ProjectView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","YouTube","Row","Column","Grid","Title","Text","Image","Meta","Button","Icon","Alert","Divider","Spinner","Difinition","Tooltip","Wrap","WrapTooltip","getFileSize","getLabelRole","HTMLView","Loader","queries","appearance","Container","Media","Content","Screenshots","Screenshot","div","onClick","ScreenshotsCounter","CentralAlert","Poster","Difinitions","Presentation","Actions","Files","Members","View","project","className","style","slicedFactor","owned","liked","onAdd","onLike","onScreenshotClick","onFileLink","onMemberLink","onCompanyLink","data","loading","error","GET_PROJECT","variables","id","isLiked","setLike","screenshots","setScreenshots","residue","setResidue","videoId","setVideoId","onClickLike","response","getProject","images","preview","slicedImages","slice","url","presentation","URL","length","searchParams","get","path","map","screenshot","index","name","category","marginTop","marginBottom","title","description","company","img","avatar","icon","email","body","members","member","account","width","textAlign","files","file","filename","size","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport YouTube from 'react-youtube'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport HTMLView from '../HTMLView'\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Container = styled(Row)`\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Media = styled(Column)`\n  grid-gap: 5px;\n  flex-basis: 35%;\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  flex-basis: 65%;\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Screenshots = styled(Row)`\n  justify-content: space-between;\n  grid-gap: 5px;\n`\n\nexport const Screenshot = styled.div`\n  position: relative;\n  z-index: var(--z-12);\n  width: auto;\n  height: var(--input-height-s);\n  min-width: var(--input-height-s);\n  min-height: var(--input-height-s);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n\nexport const ScreenshotsCounter = styled(Text)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: var(--z-10);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  span {\n    position: relative;\n    z-index: var(--z-12);\n    color: white;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: var(--z-10);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: var(--default-color-accent);\n    border-radius: var(--surface-border-radius);\n    opacity: 0.65;\n  }\n`\n\nexport const CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n  flex-grow: 1;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Difinitions = styled(Row)`\n  flex-grow: 100;\n  justify-content: space-between;\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`\n\nexport const Presentation = styled(YouTube)`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n  }\n`\n\nexport const Actions = styled(Row)`\n  @media only screen and (max-width: 480px) {\n    ${WrapTooltip} {\n      flex-grow: 1;\n\n      button {\n        flex-grow: 1;\n      }\n    }\n  }\n`\n\nexport const Files = styled(Grid)``\n\nexport const Members = styled(Grid)``\n\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  const { data, loading, error } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  })\n\n  const [isLiked, setLike] = useState(liked)\n\n  const [screenshots, setScreenshots] = useState([])\n  const [residue, setResidue] = useState(0)\n  const [videoId, setVideoId] = useState(null)\n\n  const onClickLike = () => {\n    if (onLike) onLike()\n    setLike(!isLiked)\n  }\n\n  useEffect(() => {\n    if (!loading && data) {\n      const response = data.getProject\n      const images = [response.preview, ...response.screenshots]\n      const slicedImages = images.slice(0, slicedFactor)\n      const url = response.presentation && new URL(response.presentation)\n\n      setResidue((images.length || slicedFactor) - slicedFactor)\n      setVideoId(url?.searchParams?.get('v'))\n      setScreenshots(slicedImages)\n    }\n  }, [loading, data, slicedFactor])\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && data ? (\n        <React.Fragment>\n          <Container>\n            <Media>\n              {data.getProject.preview ? (\n                <Poster\n                  src={data.getProject.preview.path}\n                  onClick={() =>\n                    onScreenshotClick &&\n                    onScreenshotClick(data.getProject.preview, data.getProject.preview.id, [\n                      data.getProject.preview,\n                      ...data.getProject.screenshots\n                    ])\n                  }\n                />\n              ) : (\n                <CentralAlert>Превью нет</CentralAlert>\n              )}\n              {data.getProject.screenshots && data.getProject.screenshots?.length > 0 && (\n                <Screenshots>\n                  {screenshots.map((screenshot, index) => (\n                    <Screenshot\n                      key={screenshot.id}\n                      onClick={() =>\n                        onScreenshotClick &&\n                        onScreenshotClick(screenshot, screenshot.id, [\n                          data.getProject.preview,\n                          ...data.getProject.screenshots\n                        ])\n                      }>\n                      <Image src={screenshot.path} alt={screenshot.name} />\n                      {index === screenshots?.length - 1 && residue > 0 && (\n                        <ScreenshotsCounter>\n                          <span>+{residue}</span>\n                        </ScreenshotsCounter>\n                      )}\n                    </Screenshot>\n                  ))}\n                </Screenshots>\n              )}\n            </Media>\n\n            <Content>\n              <Column>\n                <Meta category={data.getProject.category?.name} />\n                <Title tag={'h3'} style={{ marginTop: -5, marginBottom: 5 }}>\n                  {data.getProject.title}\n                </Title>\n                <Text>{data.getProject.description}</Text>\n              </Column>\n\n              <Column>\n                <Divider clear />\n\n                <Difinitions>\n                  <Difinition\n                    {...(data.getProject.company\n                      ? {\n                          img: data.getProject.company?.avatar?.path\n                        }\n                      : {\n                          icon: 'work'\n                        })}\n                    label={'Компания'}\n                    text={data.getProject.company?.name || '-'}\n                    onLink={() => onCompanyLink(data.getProject.company?.email)}\n                  />\n\n                  {!owned && (onLike || onAdd) && (\n                    <Actions>\n                      {onLike && (\n                        <Tooltip text={'Мне нравится'}>\n                          <Button\n                            type={'button'}\n                            kind={'icon'}\n                            onClick={onClickLike}\n                            revert={!isLiked}>\n                            <Icon\n                              icon={'heart'}\n                              stroke={isLiked ? 'white' : 'var(--default-color-accent)'}\n                            />\n                          </Button>\n                        </Tooltip>\n                      )}\n                      {onAdd && (\n                        <Tooltip text={'Добавить проект к себе'}>\n                          <Button type={'button'} kind={'icon'} onClick={onAdd} revert>\n                            <Icon icon={'add'} stroke={'var(--default-color-accent)'} />\n                          </Button>\n                        </Tooltip>\n                      )}\n                    </Actions>\n                  )}\n                </Difinitions>\n              </Column>\n            </Content>\n          </Container>\n\n          <Divider clear />\n\n          {data.getProject.body && <HTMLView content={data.getProject.body} />}\n\n          <Divider clear />\n\n          {data.getProject.presentation && videoId && <Presentation videoId={videoId} />}\n\n          <Title tag={'h4'}>Участники проекта</Title>\n          {data.getProject.members && data.getProject.members?.length > 0 && (\n            <Members percentage={'minmax(320px, 1fr)'}>\n              {data.getProject.members.map((member) => (\n                <Difinition\n                  key={member.email}\n                  img={member.avatar?.path || '/images/avatar-default.png'}\n                  label={getLabelRole(member.account)}\n                  text={member.name}\n                  onLink={() => onMemberLink && onMemberLink(member.email)}\n                />\n              ))}\n            </Members>\n          )}\n          {(!data.getProject.members || data.getProject.members?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Участников нет</Alert>\n          )}\n\n          <Divider clear />\n\n          <Title tag={'h4'}>Файлы</Title>\n          {data.getProject.files && data.getProject.files.length > 0 && (\n            <Files percentage={'minmax(256px, 1fr)'}>\n              {data.getProject.files.map((file) => (\n                <Difinition\n                  key={file.id}\n                  icon={'paper'}\n                  label={file.filename}\n                  text={getFileSize(file.size)}\n                  onLink={() => onFileLink && onFileLink(file)}\n                />\n              ))}\n            </Files>\n          )}\n          {(!data.getProject.files || data.getProject.files?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Файлов нет</Alert>\n          )}\n        </React.Fragment>\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о проекте\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}