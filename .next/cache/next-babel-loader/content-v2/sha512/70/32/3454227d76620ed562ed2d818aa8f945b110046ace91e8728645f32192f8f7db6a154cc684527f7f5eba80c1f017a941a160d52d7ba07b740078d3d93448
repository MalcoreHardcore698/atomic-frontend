{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Title from '../../atomic-ui/components/Title';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"RoleView__Wrap\",\n  componentId: \"sc-3s69fr-0\"\n})([\"grid-gap:var(--default-gap);height:max-content;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Permissions = styled(Row).withConfig({\n  displayName: \"RoleView__Permissions\",\n  componentId: \"sc-3s69fr-1\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\nexport const View = ({\n  role,\n  appearance,\n  className,\n  style\n}) => /*#__PURE__*/React.createElement(Wrap, {\n  className: className,\n  style: style,\n  appearance: appearance\n}, /*#__PURE__*/React.createElement(Column, {\n  style: {\n    gridGap: 0\n  }\n}, /*#__PURE__*/React.createElement(Meta, {\n  date: role.createdAt\n}), /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, getLabelRole(role.name))), /*#__PURE__*/React.createElement(Divider, {\n  clear: true\n}), role && role.permissions.length > 0 ? /*#__PURE__*/React.createElement(Permissions, null, role.permissions.map(permission => /*#__PURE__*/React.createElement(Chip, {\n  key: v4(),\n  color: 'ghost',\n  appearance: 'outlined'\n}, getLabelPermission(permission)))) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"));\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/RoleView/index.js"],"names":["React","styled","css","v4","Row","Column","Meta","Divider","Chip","Alert","Title","getLabelRole","getLabelPermission","Wrap","appearance","Permissions","View","role","className","style","gridGap","createdAt","name","permissions","length","map","permission","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,iCAAjD;AAEA,OAAO,MAAMC,IAAI,GAAGZ,MAAM,CAACI,MAAD,CAAT;AAAA;AAAA;AAAA,sEAIb,CAAC;AAAES,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACAZ,GADA,+KALa,EAcb,CAAC;AAAEY,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAZ,GADA,4EAfa,EAwBb,CAAC;AAAEY,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAZ,GADA,4EAzBa,CAAV;AAmCP,OAAO,MAAMa,WAAW,GAAGd,MAAM,CAACG,GAAD,CAAT;AAAA;AAAA;AAAA,qCAAjB;AAKP,OAAO,MAAMY,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQH,EAAAA,UAAR;AAAoBI,EAAAA,SAApB;AAA+BC,EAAAA;AAA/B,CAAD,kBAClB,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAED,SAAjB;AAA4B,EAAA,KAAK,EAAEC,KAAnC;AAA0C,EAAA,UAAU,EAAEL;AAAtD,gBACE,oBAAC,MAAD;AAAQ,EAAA,KAAK,EAAE;AAAEM,IAAAA,OAAO,EAAE;AAAX;AAAf,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEH,IAAI,CAACI;AAAjB,EADF,eAGE,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAE;AAAZ,GAAmBV,YAAY,CAACM,IAAI,CAACK,IAAN,CAA/B,CAHF,CADF,eAOE,oBAAC,OAAD;AAAS,EAAA,KAAK;AAAd,EAPF,EASGL,IAAI,IAAIA,IAAI,CAACM,WAAL,CAAiBC,MAAjB,GAA0B,CAAlC,gBACC,oBAAC,WAAD,QACGP,IAAI,CAACM,WAAL,CAAiBE,GAAjB,CAAsBC,UAAD,iBACpB,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEvB,EAAE,EAAb;AAAiB,EAAA,KAAK,EAAE,OAAxB;AAAiC,EAAA,UAAU,EAAE;AAA7C,GACGS,kBAAkB,CAACc,UAAD,CADrB,CADD,CADH,CADD,gBASC,oBAAC,KAAD,0IAlBJ,CADK;AAwBPV,IAAI,CAACW,YAAL,GAAoB;AAClBb,EAAAA,UAAU,EAAE;AADM,CAApB;AAIA,eAAeE,IAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Chip from '../../atomic-ui/components/Chip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Title from '../../atomic-ui/components/Title'\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions'\n\nexport const Wrap = styled(Column)`\n  grid-gap: var(--default-gap);\n  height: max-content;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Permissions = styled(Row)`\n  flex-wrap: wrap;\n  grid-gap: 10px;\n`\n\nexport const View = ({ role, appearance, className, style }) => (\n  <Wrap className={className} style={style} appearance={appearance}>\n    <Column style={{ gridGap: 0 }}>\n      <Meta date={role.createdAt} />\n\n      <Title tag={'h4'}>{getLabelRole(role.name)}</Title>\n    </Column>\n\n    <Divider clear />\n\n    {role && role.permissions.length > 0 ? (\n      <Permissions>\n        {role.permissions.map((permission) => (\n          <Chip key={v4()} color={'ghost'} appearance={'outlined'}>\n            {getLabelPermission(permission)}\n          </Chip>\n        ))}\n      </Permissions>\n    ) : (\n      <Alert>Привелегии отсутствует</Alert>\n    )}\n  </Wrap>\n)\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}