{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Title from '../atomic-ui/components/Title';\nimport ContentLayout from '../layouts/content';\nimport UserList from '../components/UserList';\nimport ArticleList from '../components/ArticleList';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { useProject } from '../hooks/useProject';\nimport { COMMON_START_OFFSET, INDEX_LOAD_LIMIT } from '../constants';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst ASIDE_PROPS = {\n  limit: 3,\n  startOffset: COMMON_START_OFFSET,\n  gridOptions: {\n    length: 'auto-fit',\n    percentage: '1fr'\n  }\n};\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c = Aside;\n\nconst Document = ({\n  document\n}) => {\n  _s();\n\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n    project: document\n  }));\n};\n\n_s(Document, \"1J2i0XYLTUPsHAaUowqhcO/eEy0=\", false, function () {\n  return [useProject];\n});\n\n_c2 = Document;\n\nconst HomeAside = () => {\n  _s2();\n\n  const search = useSelector(state => state.root.search);\n  return /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), /*#__PURE__*/React.createElement(UserList, _extends({}, ASIDE_PROPS, {\n    withoutMore: !search\n  })), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(ArticleList, _extends({}, ASIDE_PROPS, {\n    variables: {\n      status: ['PUBLISHED']\n    },\n    layout: 'column',\n    withoutMore: !search\n  })));\n};\n\n_s2(HomeAside, \"QVWJpjPD7ypYcjDSL6S9xEthZgg=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = HomeAside;\n\nconst Home = ({\n  store\n}) => /*#__PURE__*/React.createElement(ContentLayout, {\n  title: TITLE,\n  store: store,\n  getType: 'getProjects',\n  limit: INDEX_LOAD_LIMIT,\n  emptyMessage: 'Проектов нет',\n  getQuery: queries.GET_PROJECTS,\n  startOffset: COMMON_START_OFFSET,\n  variables: {\n    status: 'PUBLISHED'\n  },\n  render: document => /*#__PURE__*/React.createElement(Document, {\n    document: document\n  }),\n  aside: /*#__PURE__*/React.createElement(HomeAside, null)\n});\n\n_c4 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Aside\");\n$RefreshReg$(_c2, \"Document\");\n$RefreshReg$(_c3, \"HomeAside\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/index.js"],"names":["React","useSelector","styled","Title","ContentLayout","UserList","ArticleList","ProjectSuit","useProject","COMMON_START_OFFSET","INDEX_LOAD_LIMIT","queries","TITLE","ASIDE_PROPS","limit","startOffset","gridOptions","length","percentage","Aside","aside","Document","document","methods","HomeAside","search","state","root","status","Home","store","GET_PROJECTS"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,+BAAlB;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,cAAtD;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,QAAd;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CADW;AAElBC,EAAAA,WAAW,EAAEN,mBAFK;AAGlBO,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE,UAAV;AAAsBC,IAAAA,UAAU,EAAE;AAAlC;AAHK,CAApB;AAMA,MAAMC,KAAK,GAAGjB,MAAM,CAACkB,KAAV;AAAA;AAAA;AAAA,yIAAX;KAAMD,K;;AAWN,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,sBAAO,oBAAC,WAAD,eAAiBe,OAAjB;AAA0B,IAAA,OAAO,EAAED;AAAnC,KAAP;AACD,CAHD;;GAAMD,Q;UACYb,U;;;MADZa,Q;;AAKN,MAAMG,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,MAAvB,CAA1B;AAEA,sBACE,oBAAC,KAAD,qBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,4CADF,eAEE,oBAAC,QAAD,eAAcZ,WAAd;AAA2B,IAAA,WAAW,EAAE,CAACY;AAAzC,KAFF,eAIE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,kDAJF,eAKE,oBAAC,WAAD,eACMZ,WADN;AAEE,IAAA,SAAS,EAAE;AAAEe,MAAAA,MAAM,EAAE,CAAC,WAAD;AAAV,KAFb;AAGE,IAAA,MAAM,EAAE,QAHV;AAIE,IAAA,WAAW,EAAE,CAACH;AAJhB,KALF,CADF;AAcD,CAjBD;;IAAMD,S;UACWvB,W;;;MADXuB,S;;AAmBN,MAAMK,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACX,oBAAC,aAAD;AACE,EAAA,KAAK,EAAElB,KADT;AAEE,EAAA,KAAK,EAAEkB,KAFT;AAGE,EAAA,OAAO,EAAE,aAHX;AAIE,EAAA,KAAK,EAAEpB,gBAJT;AAKE,EAAA,YAAY,EAAE,cALhB;AAME,EAAA,QAAQ,EAAEC,OAAO,CAACoB,YANpB;AAOE,EAAA,WAAW,EAAEtB,mBAPf;AAQE,EAAA,SAAS,EAAE;AAAEmB,IAAAA,MAAM,EAAE;AAAV,GARb;AASE,EAAA,MAAM,EAAGN,QAAD,iBAAc,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA;AAApB,IATxB;AAUE,EAAA,KAAK,eAAE,oBAAC,SAAD;AAVT,EADF;;MAAMO,I;;AAuCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Title from '../atomic-ui/components/Title'\n\nimport ContentLayout from '../layouts/content'\nimport UserList from '../components/UserList'\nimport ArticleList from '../components/ArticleList'\nimport ProjectSuit from '../components/ProjectSuit'\nimport { useProject } from '../hooks/useProject'\nimport { initializeApollo } from '../apollo'\nimport { COMMON_START_OFFSET, INDEX_LOAD_LIMIT } from '../constants'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Атомик'\n\nconst ASIDE_PROPS = {\n  limit: 3,\n  startOffset: COMMON_START_OFFSET,\n  gridOptions: { length: 'auto-fit', percentage: '1fr' }\n}\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Document = ({ document }) => {\n  const methods = useProject()\n  return <ProjectSuit {...methods} project={document} />\n}\n\nconst HomeAside = () => {\n  const search = useSelector((state) => state.root.search)\n\n  return (\n    <Aside>\n      <Title tag={'h4'}>Авторы</Title>\n      <UserList {...ASIDE_PROPS} withoutMore={!search} />\n\n      <Title tag={'h4'}>Новости</Title>\n      <ArticleList\n        {...ASIDE_PROPS}\n        variables={{ status: ['PUBLISHED'] }}\n        layout={'column'}\n        withoutMore={!search}\n      />\n    </Aside>\n  )\n}\n\nconst Home = ({ store }) => (\n  <ContentLayout\n    title={TITLE}\n    store={store}\n    getType={'getProjects'}\n    limit={INDEX_LOAD_LIMIT}\n    emptyMessage={'Проектов нет'}\n    getQuery={queries.GET_PROJECTS}\n    startOffset={COMMON_START_OFFSET}\n    variables={{ status: 'PUBLISHED' }}\n    render={(document) => <Document document={document} />}\n    aside={<HomeAside />}\n  />\n)\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let scaffold = null\n\n  try {\n    const response = await client.query({ query: queries.GET_META_SCAFFOLD })\n\n    if (response && response.data) {\n      scaffold = response.data.getDashboardSettings?.scaffold\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        scaffold\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}