{"ast":null,"code":"import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Column from '../../atomic-ui/components/Column';\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Button from '../../atomic-ui/components/Button';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Icon from '../../atomic-ui/components/Icon';\nimport { getLabelRole, hasAccess } from '../../atomic-ui/utils/functions';\nimport { useMutationEffect } from '../../hooks/useMutationEffect';\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Members__Wrap\",\n  componentId: \"sc-2k8qnt-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n\nconst hasResponsibleMember = member => hasAccess(member, 'PURPOSE_PROJECT') && hasAccess(member, 'PURPOSE_ARTICLE');\n\nexport const Members = ({\n  user,\n  style,\n  appearance,\n  className,\n  onMemberLink,\n  onMembersInvite\n}) => {\n  const authUser = useSelector(state => state.user);\n  const {\n    setQuery\n  } = useEntityQuery();\n  const [members, setMembers] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user\n    }\n  });\n  const [exclude, {\n    loading: loadingExclude,\n    error: errorExclude\n  }] = useMutationEffect(queries.EXCLUDE_USER_MEMBER, 'getUserMembers', setMembers);\n  const [appoint, {\n    loading: loadingAppoint,\n    error: errorAppoint\n  }] = useMutationEffect(queries.APPOINT_USER_MEMBER, 'excludeUserMember', setMembers);\n  const [dismiss, {\n    loading: loadingDismiss,\n    error: errorDismiss\n  }] = useMutationEffect(queries.DISMISS_USER_MEMBER, 'appointUserMember', setMembers);\n\n  const getExclude = member => ({\n    text: 'Исключить',\n    color: 'red',\n    onClick: () => exclude({\n      variables: {\n        email: member.email\n      }\n    })\n  });\n\n  const getDefaultActions = member => [{\n    text: 'Назначить ответственным',\n    onClick: () => appoint({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getExclude(member)];\n\n  const getResponsibleActions = member => [{\n    text: 'Снять полномочия',\n    onClick: () => dismiss({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getExclude(member)];\n\n  useUpdateEffect(data, loading, 'getUserMembers', setMembers);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && !loadingExclude && !loadingAppoint && !loadingDismiss && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    percentage: 'minmax(320px, 1fr)'\n  }, members.map(member => {\n    var _member$avatar, _member$role;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: /*#__PURE__*/React.createElement(MarkedText, null, /*#__PURE__*/React.createElement(\"span\", null, getLabelRole((_member$role = member.role) === null || _member$role === void 0 ? void 0 : _member$role.name)), hasResponsibleMember(member) ? ` | ${/*#__PURE__*/React.createElement(Tooltip, {\n        text: 'Ответственный'\n      }, /*#__PURE__*/React.createElement(Icon, {\n        icon: 'shieldDone',\n        size: 'xs',\n        stroke: 'var(--ghost-color-text)'\n      }))}` : ''),\n      text: member.name,\n      actions: authUser.email === user && (hasResponsibleMember(member) ? getResponsibleActions(member) : getDefaultActions(member)),\n      onLink: () => setQuery(member.email, 'user', onMemberLink),\n      stretch: true\n    });\n  })), onMembersInvite && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'button',\n    onClick: onMembersInvite\n  }, \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432\"))) : error || errorExclude || errorAppoint || errorDismiss ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\\u0445\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nMembers.defaultProps = {\n  appearance: 'default'\n};\nexport default Members;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Members/index.js"],"names":["React","useState","styled","css","useSelector","useQuery","Row","Grid","Column","Difinition","MarkedText","Spinner","Button","Tooltip","Alert","Icon","getLabelRole","hasAccess","useMutationEffect","useUpdateEffect","useEntityQuery","queries","Loader","Wrap","appearance","hasResponsibleMember","member","Members","user","style","className","onMemberLink","onMembersInvite","authUser","state","setQuery","members","setMembers","data","loading","error","GET_USER_MEMBERS","variables","email","exclude","loadingExclude","errorExclude","EXCLUDE_USER_MEMBER","appoint","loadingAppoint","errorAppoint","APPOINT_USER_MEMBER","dismiss","loadingDismiss","errorDismiss","DISMISS_USER_MEMBER","getExclude","text","color","onClick","getDefaultActions","getResponsibleActions","map","avatar","path","role","name","flexGrow","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Column from '../../atomic-ui/components/Column'\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Button from '../../atomic-ui/components/Button'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Icon from '../../atomic-ui/components/Icon'\nimport { getLabelRole, hasAccess } from '../../atomic-ui/utils/functions'\n\nimport { useMutationEffect } from '../../hooks/useMutationEffect'\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect'\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport queries from '../../graphql/queries'\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nconst hasResponsibleMember = (member) =>\n  hasAccess(member, 'PURPOSE_PROJECT') && hasAccess(member, 'PURPOSE_ARTICLE')\n\nexport const Members = ({ user, style, appearance, className, onMemberLink, onMembersInvite }) => {\n  const authUser = useSelector((state) => state.user)\n  const { setQuery } = useEntityQuery()\n  const [members, setMembers] = useState([])\n\n  const { data, loading, error } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user\n    }\n  })\n\n  const [exclude, { loading: loadingExclude, error: errorExclude }] = useMutationEffect(\n    queries.EXCLUDE_USER_MEMBER,\n    'getUserMembers',\n    setMembers\n  )\n\n  const [appoint, { loading: loadingAppoint, error: errorAppoint }] = useMutationEffect(\n    queries.APPOINT_USER_MEMBER,\n    'excludeUserMember',\n    setMembers\n  )\n\n  const [dismiss, { loading: loadingDismiss, error: errorDismiss }] = useMutationEffect(\n    queries.DISMISS_USER_MEMBER,\n    'appointUserMember',\n    setMembers\n  )\n\n  const getExclude = (member) => ({\n    text: 'Исключить',\n    color: 'red',\n    onClick: () => exclude({ variables: { email: member.email } })\n  })\n\n  const getDefaultActions = (member) => [\n    {\n      text: 'Назначить ответственным',\n      onClick: () => appoint({ variables: { email: member.email } })\n    },\n    getExclude(member)\n  ]\n\n  const getResponsibleActions = (member) => [\n    { text: 'Снять полномочия', onClick: () => dismiss({ variables: { email: member.email } }) },\n    getExclude(member)\n  ]\n\n  useUpdateEffect(data, loading, 'getUserMembers', setMembers)\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && !loadingExclude && !loadingAppoint && !loadingDismiss && data ? (\n        <React.Fragment>\n          <Grid percentage={'minmax(320px, 1fr)'}>\n            {members.map((member) => (\n              <Difinition\n                key={member.email}\n                img={member.avatar?.path || '/images/avatar-default.png'}\n                label={\n                  <MarkedText>\n                    <span>{getLabelRole(member.role?.name)}</span>\n                    {hasResponsibleMember(member)\n                      ? ` | ${(\n                          <Tooltip text={'Ответственный'}>\n                            <Icon\n                              icon={'shieldDone'}\n                              size={'xs'}\n                              stroke={'var(--ghost-color-text)'}\n                            />\n                          </Tooltip>\n                        )}`\n                      : ''}\n                  </MarkedText>\n                }\n                text={member.name}\n                actions={\n                  authUser.email === user &&\n                  (hasResponsibleMember(member)\n                    ? getResponsibleActions(member)\n                    : getDefaultActions(member))\n                }\n                onLink={() => setQuery(member.email, 'user', onMemberLink)}\n                stretch\n              />\n            ))}\n          </Grid>\n          {onMembersInvite && (\n            <Row>\n              <Button style={{ flexGrow: 1 }} type={'button'} onClick={onMembersInvite}>\n                Пригласить участников\n              </Button>\n            </Row>\n          )}\n        </React.Fragment>\n      ) : error || errorExclude || errorAppoint || errorDismiss ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о участниках\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nMembers.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Members\n"]},"metadata":{},"sourceType":"module"}