{"ast":null,"code":"import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Column from '../../atomic-ui/components/Column';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Button from '../../atomic-ui/components/Button';\nimport Input from '../../atomic-ui/components/Input';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition';\nimport { getLabelRole, hasAccess } from '../../atomic-ui/utils/functions';\nimport { useMutationEffect } from '../../hooks/useMutationEffect';\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { setModal } from '../../store/actions/modal';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nimport Form from '../Form';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Members__Wrap\",\n  componentId: \"sc-2k8qnt-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const hasResponsibleMember = member => {\n  const hasPurposeProject = hasAccess(member, 'PURPOSE_PROJECT');\n  const hasPurposeArticle = hasAccess(member, 'PURPOSE_ARTICLE');\n  return hasPurposeProject && hasPurposeArticle;\n};\nexport const ResponsibleMark = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", null, \" | \"), /*#__PURE__*/React.createElement(Tooltip, {\n  text: 'Ответственный'\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'shieldDone',\n  size: 'xs',\n  stroke: 'var(--ghost-color-text)'\n})));\nexport const Invite = () => {\n  const dispatch = useDispatch();\n\n  const hideModal = () => dispatch(setModal(null));\n\n  const onSubmit = (form, action) => {\n    action({\n      variables: {\n        email: form.email\n      }\n    });\n    hideModal();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    appearance: 'clear',\n    style: {\n      padding: 'var(--default-gap)'\n    },\n    mutation: queries.INVITE_USER_MEMBER,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'email',\n    ref: register({\n      required: true\n    }),\n    placeholder: 'Введите Эл. почту',\n    appearance: 'ghost',\n    disabled: loading,\n    autoComplete: 'off'\n  })), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'button',\n    appearance: 'ghost',\n    disabled: loading,\n    onClick: hideModal\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C\"))));\n};\nexport const Members = ({\n  user,\n  style,\n  appearance,\n  className,\n  onMemberLink\n}) => {\n  const authUser = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    setQuery\n  } = useEntityQuery();\n  const [members, setMembers] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user\n    }\n  });\n  const [exclude, {\n    loading: loadingExclude,\n    error: errorExclude\n  }] = useMutationEffect(queries.EXCLUDE_USER_MEMBER, 'excludeUserMember', setMembers);\n  const [appoint, {\n    loading: loadingAppoint,\n    error: errorAppoint\n  }] = useMutationEffect(queries.APPOINT_USER_MEMBER, 'appointUserMember', setMembers);\n  const [dismiss, {\n    loading: loadingDismiss,\n    error: errorDismiss\n  }] = useMutationEffect(queries.DISMISS_USER_MEMBER, 'dismissUserMember', setMembers);\n\n  const getDismiss = member => ({\n    text: 'Исключить',\n    color: 'red',\n    onClick: () => dismiss({\n      variables: {\n        email: member.email\n      }\n    })\n  });\n\n  const getDefaultActions = member => [{\n    text: 'Назначить ответственным',\n    onClick: () => appoint({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getDismiss(member)];\n\n  const getResponsibleActions = member => [{\n    text: 'Снять полномочия',\n    onClick: () => exclude({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getDismiss(member)];\n\n  const onMemberInvite = () => {\n    dispatch(setModal([{\n      path: '/',\n      title: 'Пригласить участника',\n      component: () => /*#__PURE__*/React.createElement(Invite, null)\n    }]));\n  };\n\n  useUpdateEffect(data, loading, 'getUserMembers', setMembers);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && !loadingExclude && !loadingAppoint && !loadingDismiss && data ? /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Grid, {\n    percentage: 'minmax(320px, 1fr)'\n  }, members.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: /*#__PURE__*/React.createElement(MarkedText, null, /*#__PURE__*/React.createElement(\"span\", null, getLabelRole(member.account)), hasResponsibleMember(member) && /*#__PURE__*/React.createElement(ResponsibleMark, null)),\n      text: member.name,\n      actions: authUser.email === user && (hasResponsibleMember(member) ? getResponsibleActions(member) : getDefaultActions(member)),\n      onLink: () => setQuery(member.email, 'user', onMemberLink),\n      stretch: true\n    });\n  })), authUser.email === user && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'button',\n    onClick: onMemberInvite\n  }, \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"))) : error || errorExclude || errorAppoint || errorDismiss ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\\u0445\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nMembers.defaultProps = {\n  appearance: 'default'\n};\nexport default Members;","map":null,"metadata":{},"sourceType":"module"}