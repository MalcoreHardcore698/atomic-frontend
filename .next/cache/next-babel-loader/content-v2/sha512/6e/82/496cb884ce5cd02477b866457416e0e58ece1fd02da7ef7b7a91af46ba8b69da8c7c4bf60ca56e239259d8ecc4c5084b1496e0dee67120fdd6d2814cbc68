{"ast":null,"code":"import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Comment from '../../atomic-ui/components/Comment';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Comments__Wrap\",\n  componentId: \"sc-6rcmxi-0\"\n})([\"flex-grow:1;\"]);\nexport const CentralAlert = styled(Alert).withConfig({\n  displayName: \"Comments__CentralAlert\",\n  componentId: \"sc-6rcmxi-1\"\n})([\"display:flex;justify-content:center;align-items:center;text-align:center;width:100%;flex-grow:1;\"]);\nexport const Comments = ({\n  comments,\n  loading,\n  appearance,\n  onLink,\n  onReply,\n  onLike,\n  onAttach,\n  onSubmit\n}) => {\n  const user = useSelector(state => state.user);\n  const [message, setMessage] = useState('');\n  const messageRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Wrap, null, comments && comments.length > 0 ? comments.map(comment => {\n    var _comment$likes;\n\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: comment.id,\n      user: comment.author,\n      message: comment.text,\n      likes: (_comment$likes = comment.likes) === null || _comment$likes === void 0 ? void 0 : _comment$likes.length,\n      time: comment.time,\n      isLiked: comment.likes.find(likedUser => likedUser.email === user.email),\n      onLink: onLink,\n      onReply: onReply,\n      onLike: liked => onLike(comment.id, liked)\n    });\n  }) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C\"), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !comments,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: 'text',\n    ref: messageRef,\n    placeholder: 'Отправьте комментарий...',\n    disabled: loading && !comments,\n    appearance: appearance,\n    onChange: e => {\n      var _e$target;\n\n      return setMessage((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '');\n    },\n    onKeyDown: e => {\n      // Pressed ENTER\n      if (e.keyCode === 13) {\n        onSubmit(message);\n        messageRef.current.value = '';\n      }\n    },\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onClick: () => {\n      onSubmit(message);\n      messageRef.current.value = '';\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\nComments.defaultProps = {\n  appearance: 'default'\n};\nexport default Comments;","map":null,"metadata":{},"sourceType":"module"}