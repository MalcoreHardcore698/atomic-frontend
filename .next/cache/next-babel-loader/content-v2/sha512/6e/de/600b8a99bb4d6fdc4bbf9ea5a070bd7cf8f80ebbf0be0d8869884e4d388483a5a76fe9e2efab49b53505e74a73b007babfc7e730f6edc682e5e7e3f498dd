{"ast":null,"code":"var _templateObject, _templateObject2;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport gql from 'graphql-tag';\nimport { ChatFields, MessageFields } from '../../fragments';\nexport var GET_USER_CHATS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getUserChats {\\n    getUserChats {\\n      chat {\\n        ...ChatFields\\n        messages {\\n          ...MessageFields\\n        }\\n      }\\n      status\\n      updatedAt\\n      createdAt\\n    }\\n  }\\n  \", \"\\n  \", \"\\n\"])), ChatFields, MessageFields);\nexport var ADD_USER_CHAT = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  mutation addUserChat($recipient: String!) {\\n    addUserChat(recipient: $recipient)\\n  }\\n\"])));","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/UserChat/index.js"],"names":["gql","ChatFields","MessageFields","GET_USER_CHATS","ADD_USER_CHAT"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,iBAA1C;AAEA,OAAO,IAAMC,cAAc,GAAGH,GAAH,ySAcvBC,UAduB,EAevBC,aAfuB,CAApB;AAkBP,OAAO,IAAME,aAAa,GAAGJ,GAAH,qKAAnB","sourcesContent":["import gql from 'graphql-tag'\nimport { ChatFields, MessageFields } from '../../fragments'\n\nexport const GET_USER_CHATS = gql`\n  query getUserChats {\n    getUserChats {\n      chat {\n        ...ChatFields\n        messages {\n          ...MessageFields\n        }\n      }\n      status\n      updatedAt\n      createdAt\n    }\n  }\n  ${ChatFields}\n  ${MessageFields}\n`\n\nexport const ADD_USER_CHAT = gql`\n  mutation addUserChat($recipient: String!) {\n    addUserChat(recipient: $recipient)\n  }\n`\n"]},"metadata":{},"sourceType":"module"}