{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport Button from '../../atomic-ui/components/Button';\nimport { getLabelRole } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { hasResponsibleMember, ResponsibleMark } from '../Members';\nimport ProjectCard from '../ProjectCard';\nimport Processed from '../Processed';\nimport { More } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"UserView__Wrap\",\n  componentId: \"ph8qrp-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const RoundedAvatar = styled(Image).withConfig({\n  displayName: \"UserView__RoundedAvatar\",\n  componentId: \"ph8qrp-1\"\n})([\"width:196px;height:196px;border-radius:var(--surface-border-radius);border:1px solid var(--ghost-color-background);object-fit:cover;@media only screen and (max-width:480px){width:100%;height:256px;}\"]);\n_c2 = RoundedAvatar;\nexport const Content = styled(Column).withConfig({\n  displayName: \"UserView__Content\",\n  componentId: \"ph8qrp-2\"\n})([\"grid-gap:0;width:100%;\"]);\n_c3 = Content;\nexport const Difinitions = styled(Row).withConfig({\n  displayName: \"UserView__Difinitions\",\n  componentId: \"ph8qrp-3\"\n})([\"justify-content:space-between;@media only screen and (max-width:480px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c4 = Difinitions;\nexport const About = styled.div.withConfig({\n  displayName: \"UserView__About\",\n  componentId: \"ph8qrp-4\"\n})([\"flex-grow:100;p{display:-webkit-box;-webkit-line-clamp:5;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;}\"]);\n_c5 = About;\nexport const Projects = styled.div.withConfig({\n  displayName: \"UserView__Projects\",\n  componentId: \"ph8qrp-5\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c6 = Projects;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"UserView__Actions\",\n  componentId: \"ph8qrp-6\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\n_c7 = Actions;\nexport const View = ({\n  user,\n  owned,\n  appearance,\n  className,\n  style,\n  onChat,\n  onAdd,\n  onMembers,\n  onAboutMore,\n  onProjectAdd,\n  onProjectLink,\n  onCompanyLink,\n  onProjectCompanyLink,\n  onProjectScreenshotClick\n}) => {\n  _s();\n\n  var _data$getUser, _data$getUser$avatar, _data$getUser2, _data$getUser3, _data$getUser4, _data$getUser5, _data$getUser6, _data$getUser6$about, _data$getUser7, _data$getUser8, _data$getUser9, _data$getUser10, _data$getUser11, _data$getUser12, _data$getUser13, _data$getUser13$compa, _data$getUser13$compa2, _data$getUser14, _data$getUser14$compa, _data$getUser15, _dataParticipatingUse, _dataParticipatingUse2, _dataParticipatingUse3;\n\n  const {\n    setQuery\n  } = useEntityQuery();\n  const [isAdded, setAdded] = useState(false);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_USER, {\n    variables: {\n      email: user\n    }\n  });\n  const {\n    data: dataParticipatingUserProjects,\n    loading: loadingParticipatingUserProjects,\n    error: errorParticipatingUserProjects\n  } = useQuery(queries.GET_USER_PARTICIPANT_PROJECTS, {\n    variables: {\n      member: user\n    }\n  });\n\n  const onClickAdd = () => {\n    if (onAdd) onAdd();\n    setAdded(!isAdded);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getUser,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о пользователе',\n    emptyMessage: 'Кажется такого пользователя не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(RoundedAvatar, {\n    src: (data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : (_data$getUser$avatar = _data$getUser.avatar) === null || _data$getUser$avatar === void 0 ? void 0 : _data$getUser$avatar.path) || '/images/avatar-default.png'\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(MarkedText, null, (data === null || data === void 0 ? void 0 : (_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.account) && /*#__PURE__*/React.createElement(Meta, {\n    category: getLabelRole(data === null || data === void 0 ? void 0 : (_data$getUser3 = data.getUser) === null || _data$getUser3 === void 0 ? void 0 : _data$getUser3.account)\n  }), (data === null || data === void 0 ? void 0 : data.getUser) && hasResponsibleMember(data === null || data === void 0 ? void 0 : data.getUser) && /*#__PURE__*/React.createElement(ResponsibleMark, null)), (data === null || data === void 0 ? void 0 : (_data$getUser4 = data.getUser) === null || _data$getUser4 === void 0 ? void 0 : _data$getUser4.name) && /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, data === null || data === void 0 ? void 0 : (_data$getUser5 = data.getUser) === null || _data$getUser5 === void 0 ? void 0 : _data$getUser5.name), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(About, null, (data === null || data === void 0 ? void 0 : (_data$getUser6 = data.getUser) === null || _data$getUser6 === void 0 ? void 0 : (_data$getUser6$about = _data$getUser6.about) === null || _data$getUser6$about === void 0 ? void 0 : _data$getUser6$about.length) > 255 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, data === null || data === void 0 ? void 0 : (_data$getUser7 = data.getUser) === null || _data$getUser7 === void 0 ? void 0 : _data$getUser7.about.slice(0, 255), \"...\"), /*#__PURE__*/React.createElement(More, {\n    onClick: () => onAboutMore(data === null || data === void 0 ? void 0 : data.getUser)\n  }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")) : /*#__PURE__*/React.createElement(Text, null, (data === null || data === void 0 ? void 0 : (_data$getUser8 = data.getUser) === null || _data$getUser8 === void 0 ? void 0 : _data$getUser8.about) || 'Информация о себе не заполнена')))), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Difinitions, null, (data === null || data === void 0 ? void 0 : (_data$getUser9 = data.getUser) === null || _data$getUser9 === void 0 ? void 0 : _data$getUser9.account) === 'ENTITY' ? /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'chart',\n    label: 'Участники',\n    text: (data === null || data === void 0 ? void 0 : (_data$getUser10 = data.getUser) === null || _data$getUser10 === void 0 ? void 0 : _data$getUser10.members) || '-',\n    onLink: (data === null || data === void 0 ? void 0 : (_data$getUser11 = data.getUser) === null || _data$getUser11 === void 0 ? void 0 : _data$getUser11.members) && onMembers\n  }) : /*#__PURE__*/React.createElement(Difinition, _extends({}, data !== null && data !== void 0 && (_data$getUser12 = data.getUser) !== null && _data$getUser12 !== void 0 && _data$getUser12.company ? {\n    img: data === null || data === void 0 ? void 0 : (_data$getUser13 = data.getUser) === null || _data$getUser13 === void 0 ? void 0 : (_data$getUser13$compa = _data$getUser13.company) === null || _data$getUser13$compa === void 0 ? void 0 : (_data$getUser13$compa2 = _data$getUser13$compa.avatar) === null || _data$getUser13$compa2 === void 0 ? void 0 : _data$getUser13$compa2.path\n  } : {\n    icon: 'chart'\n  }, {\n    label: 'Компания',\n    text: (data === null || data === void 0 ? void 0 : (_data$getUser14 = data.getUser) === null || _data$getUser14 === void 0 ? void 0 : (_data$getUser14$compa = _data$getUser14.company) === null || _data$getUser14$compa === void 0 ? void 0 : _data$getUser14$compa.name) || '-',\n    onLink: (data === null || data === void 0 ? void 0 : (_data$getUser15 = data.getUser) === null || _data$getUser15 === void 0 ? void 0 : _data$getUser15.company) && (() => {\n      var _data$getUser16, _data$getUser16$compa;\n\n      return setQuery(data === null || data === void 0 ? void 0 : (_data$getUser16 = data.getUser) === null || _data$getUser16 === void 0 ? void 0 : (_data$getUser16$compa = _data$getUser16.company) === null || _data$getUser16$compa === void 0 ? void 0 : _data$getUser16$compa.email, 'user', onCompanyLink);\n    })\n  })), /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'work',\n    label: 'Проекты',\n    text: (dataParticipatingUserProjects === null || dataParticipatingUserProjects === void 0 ? void 0 : (_dataParticipatingUse = dataParticipatingUserProjects.getProjects) === null || _dataParticipatingUse === void 0 ? void 0 : _dataParticipatingUse.length) || '-'\n  }), !owned && (onChat || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onChat && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Написать пользователю'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    appearance: 'green',\n    onClick: onChat,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'chat',\n    stroke: 'var(--default-color-green)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Подписаться на пользователя'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickAdd,\n    revert: !isAdded\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: isAdded ? 'check' : 'add',\n    stroke: isAdded ? 'white' : 'var(--default-color-accent)'\n  }))))), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0420\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Processed, {\n    data: dataParticipatingUserProjects === null || dataParticipatingUserProjects === void 0 ? void 0 : dataParticipatingUserProjects.getProjects,\n    loading: loadingParticipatingUserProjects,\n    error: errorParticipatingUserProjects,\n    errorMessage: 'Упс! Не удалось загрузить информацию о проектах',\n    emptyMessage: 'Пользователь не реализовал(-а) ни одного проекта'\n  }, /*#__PURE__*/React.createElement(Projects, null, (dataParticipatingUserProjects === null || dataParticipatingUserProjects === void 0 ? void 0 : (_dataParticipatingUse2 = dataParticipatingUserProjects.getProjects) === null || _dataParticipatingUse2 === void 0 ? void 0 : _dataParticipatingUse2.length) === 0 ? /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0440\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043B(-\\u0430) \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\") : dataParticipatingUserProjects === null || dataParticipatingUserProjects === void 0 ? void 0 : (_dataParticipatingUse3 = dataParticipatingUserProjects.getProjects) === null || _dataParticipatingUse3 === void 0 ? void 0 : _dataParticipatingUse3.map(project => /*#__PURE__*/React.createElement(ProjectCard, {\n    key: project.id,\n    owned: owned,\n    project: project,\n    appearance: 'clear',\n    onAdd: () => onProjectAdd(project),\n    onLink: () => onProjectLink(project),\n    onAboutMore: () => onAboutMore(project),\n    onCompanyLink: project.company && (() => onProjectCompanyLink(project.company)),\n    onScreenshotClick: (_, key) => onProjectScreenshotClick && onProjectScreenshotClick(_, key, [project.preview, ...project.screenshots])\n  }))))))));\n};\n\n_s(View, \"bZlrqXo45o6fr+qgT7TMdNYffhE=\", false, function () {\n  return [useEntityQuery, useQuery, useQuery];\n});\n\n_c8 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"RoundedAvatar\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Difinitions\");\n$RefreshReg$(_c5, \"About\");\n$RefreshReg$(_c6, \"Projects\");\n$RefreshReg$(_c7, \"Actions\");\n$RefreshReg$(_c8, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/UserView/index.js"],"names":["React","useState","styled","css","useQuery","Row","Column","Title","Text","Image","Meta","Icon","Alert","Divider","Difinition","MarkedText","Tooltip","Wrap","WrapTooltip","Button","getLabelRole","useEntityQuery","hasResponsibleMember","ResponsibleMark","ProjectCard","Processed","More","queries","appearance","RoundedAvatar","Content","Difinitions","About","div","Projects","Actions","View","user","owned","className","style","onChat","onAdd","onMembers","onAboutMore","onProjectAdd","onProjectLink","onCompanyLink","onProjectCompanyLink","onProjectScreenshotClick","setQuery","isAdded","setAdded","data","loading","error","GET_USER","variables","email","dataParticipatingUserProjects","loadingParticipatingUserProjects","errorParticipatingUserProjects","GET_USER_PARTICIPANT_PROJECTS","member","onClickAdd","getUser","avatar","path","account","name","about","length","slice","members","company","img","icon","getProjects","width","textAlign","map","project","id","_","key","preview","screenshots","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport Button from '../../atomic-ui/components/Button'\nimport { getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { hasResponsibleMember, ResponsibleMark } from '../Members'\nimport ProjectCard from '../ProjectCard'\nimport Processed from '../Processed'\nimport { More } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const RoundedAvatar = styled(Image)`\n  width: 196px;\n  height: 196px;\n  border-radius: var(--surface-border-radius);\n  border: 1px solid var(--ghost-color-background);\n  object-fit: cover;\n\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n    height: 256px;\n  }\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n  width: 100%;\n`\n\nexport const Difinitions = styled(Row)`\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const About = styled.div`\n  flex-grow: 100;\n\n  p {\n    display: -webkit-box;\n    -webkit-line-clamp: 5;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport const Projects = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nexport const Actions = styled(Row)`\n  @media only screen and (max-width: 480px) {\n    ${WrapTooltip} {\n      flex-grow: 1;\n\n      button {\n        flex-grow: 1;\n      }\n    }\n  }\n`\n\nexport const View = ({\n  user,\n  owned,\n  appearance,\n  className,\n  style,\n  onChat,\n  onAdd,\n  onMembers,\n  onAboutMore,\n  onProjectAdd,\n  onProjectLink,\n  onCompanyLink,\n  onProjectCompanyLink,\n  onProjectScreenshotClick\n}) => {\n  const { setQuery } = useEntityQuery()\n  const [isAdded, setAdded] = useState(false)\n  const { data, loading, error } = useQuery(queries.GET_USER, {\n    variables: {\n      email: user\n    }\n  })\n  const {\n    data: dataParticipatingUserProjects,\n    loading: loadingParticipatingUserProjects,\n    error: errorParticipatingUserProjects\n  } = useQuery(queries.GET_USER_PARTICIPANT_PROJECTS, {\n    variables: {\n      member: user\n    }\n  })\n\n  const onClickAdd = () => {\n    if (onAdd) onAdd()\n    setAdded(!isAdded)\n  }\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      <Processed\n        data={data?.getUser}\n        loading={loading}\n        error={error}\n        errorMessage={'Упс! Не удалось загрузить информацию о пользователе'}\n        emptyMessage={'Кажется такого пользователя не существует'}>\n        <React.Fragment>\n          <Row>\n            <RoundedAvatar src={data?.getUser?.avatar?.path || '/images/avatar-default.png'} />\n\n            <Content>\n              <MarkedText>\n                {data?.getUser?.account && <Meta category={getLabelRole(data?.getUser?.account)} />}\n                {data?.getUser && hasResponsibleMember(data?.getUser) && <ResponsibleMark />}\n              </MarkedText>\n              {data?.getUser?.name && <Title tag={'h3'}>{data?.getUser?.name}</Title>}\n\n              <Divider />\n\n              <About>\n                {data?.getUser?.about?.length > 255 ? (\n                  <React.Fragment>\n                    <Text>{data?.getUser?.about.slice(0, 255)}...</Text>\n                    <More onClick={() => onAboutMore(data?.getUser)}>Подробнее</More>\n                  </React.Fragment>\n                ) : (\n                  <Text>{data?.getUser?.about || 'Информация о себе не заполнена'}</Text>\n                )}\n              </About>\n            </Content>\n          </Row>\n\n          <Divider />\n\n          <Difinitions>\n            {data?.getUser?.account === 'ENTITY' ? (\n              <Difinition\n                icon={'chart'}\n                label={'Участники'}\n                text={data?.getUser?.members || '-'}\n                onLink={data?.getUser?.members && onMembers}\n              />\n            ) : (\n              <Difinition\n                {...(data?.getUser?.company\n                  ? {\n                      img: data?.getUser?.company?.avatar?.path\n                    }\n                  : {\n                      icon: 'chart'\n                    })}\n                label={'Компания'}\n                text={data?.getUser?.company?.name || '-'}\n                onLink={\n                  data?.getUser?.company &&\n                  (() => setQuery(data?.getUser?.company?.email, 'user', onCompanyLink))\n                }\n              />\n            )}\n            <Difinition\n              icon={'work'}\n              label={'Проекты'}\n              text={dataParticipatingUserProjects?.getProjects?.length || '-'}\n            />\n            {!owned && (onChat || onAdd) && (\n              <Actions>\n                {onChat && (\n                  <Tooltip text={'Написать пользователю'}>\n                    <Button\n                      type={'button'}\n                      kind={'icon'}\n                      appearance={'green'}\n                      onClick={onChat}\n                      revert>\n                      <Icon icon={'chat'} stroke={'var(--default-color-green)'} />\n                    </Button>\n                  </Tooltip>\n                )}\n                {onAdd && (\n                  <Tooltip text={'Подписаться на пользователя'}>\n                    <Button type={'button'} kind={'icon'} onClick={onClickAdd} revert={!isAdded}>\n                      <Icon\n                        icon={isAdded ? 'check' : 'add'}\n                        stroke={isAdded ? 'white' : 'var(--default-color-accent)'}\n                      />\n                    </Button>\n                  </Tooltip>\n                )}\n              </Actions>\n            )}\n          </Difinitions>\n\n          <Divider />\n\n          <Column>\n            <Title tag={'h4'}>Реализованные проекты</Title>\n            <Processed\n              data={dataParticipatingUserProjects?.getProjects}\n              loading={loadingParticipatingUserProjects}\n              error={errorParticipatingUserProjects}\n              errorMessage={'Упс! Не удалось загрузить информацию о проектах'}\n              emptyMessage={'Пользователь не реализовал(-а) ни одного проекта'}>\n              <Projects>\n                {dataParticipatingUserProjects?.getProjects?.length === 0 ? (\n                  <Alert style={{ width: '100%', textAlign: 'center' }}>\n                    Пользователь не реализовал(-а) ни одного проекта\n                  </Alert>\n                ) : (\n                  dataParticipatingUserProjects?.getProjects?.map((project) => (\n                    <ProjectCard\n                      key={project.id}\n                      owned={owned}\n                      project={project}\n                      appearance={'clear'}\n                      onAdd={() => onProjectAdd(project)}\n                      onLink={() => onProjectLink(project)}\n                      onAboutMore={() => onAboutMore(project)}\n                      onCompanyLink={\n                        project.company && (() => onProjectCompanyLink(project.company))\n                      }\n                      onScreenshotClick={(_, key) =>\n                        onProjectScreenshotClick &&\n                        onProjectScreenshotClick(_, key, [project.preview, ...project.screenshots])\n                      }\n                    />\n                  ))\n                )}\n              </Projects>\n            </Processed>\n          </Column>\n        </React.Fragment>\n      </Processed>\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}