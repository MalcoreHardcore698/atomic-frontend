{"ast":null,"code":"import React from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport NextNprogress from 'nextjs-progressbar';\nimport { motion } from 'framer-motion';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport '../atomic-ui/theme/default.css';\nimport '../atomic-ui/assets/styles/styles.css';\nimport theme from '../atomic-ui/theme';\nimport { useApollo, initializeApollo } from '../apollo';\nimport { useStore, initializeStore } from '../store';\nconst GlobalStyle = createGlobalStyle`\n  #nprogress {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: var(--z-override);\n    width: 100vw;\n    height: 100vh;\n    background: rgba(255, 255, 255, 0.45);\n    cursor: default;\n\n    .spinner, .spinner-icon {\n      display: none;\n    }\n  }\n`;\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const client = useApollo(pageProps.initialApolloState);\n  const store = useStore(pageProps.initialReduxState);\n  const router = useRouter();\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client\n  }, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: 'utf-8'\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: 'viewport',\n    content: 'minimum-scale=1, initial-scale=1, width=device-width'\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: 'theme-color',\n    content: '#000000'\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: 'yandex-verification',\n    content: 'bfd04b96d30382f5'\n  })), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(GlobalStyle, null), /*#__PURE__*/React.createElement(motion.div, {\n    key: router.route,\n    initial: 'pageInitial',\n    animate: 'pageAnimate',\n    variants: {\n      pageInitial: {\n        opacity: 0\n      },\n      pageAnimate: {\n        opacity: 1\n      }\n    }\n  }, /*#__PURE__*/React.createElement(Component, pageProps)), /*#__PURE__*/React.createElement(NextNprogress, {\n    color: 'var(--default-color-accent)',\n    startPosition: 0.3,\n    stopDelayMs: 200,\n    height: 3\n  }))));\n};\n\nexport const getServerSideProps = async () => {\n  const store = initializeStore();\n  const client = initializeApollo();\n  return {\n    props: {\n      initialReduxState: store.getState(),\n      initialApolloState: client.cache.extract()\n    },\n    revalidate: 1\n  };\n};\nexport default App;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/_app.js"],"names":["React","Head","useRouter","ThemeProvider","createGlobalStyle","Provider","ApolloProvider","NextNprogress","motion","theme","useApollo","initializeApollo","useStore","initializeStore","GlobalStyle","App","Component","pageProps","client","initialApolloState","store","initialReduxState","router","route","pageInitial","opacity","pageAnimate","getServerSideProps","props","getState","cache","extract","revalidate"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,mBAAjD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAO,yDAAP;AACA,OAAO,gCAAP;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,WAA5C;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,UAA1C;AAEA,MAAMC,WAAW,GAAGV,iBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;;AAiBA,MAAMW,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACxC,QAAMC,MAAM,GAAGR,SAAS,CAACO,SAAS,CAACE,kBAAX,CAAxB;AACA,QAAMC,KAAK,GAAGR,QAAQ,CAACK,SAAS,CAACI,iBAAX,CAAtB;AACA,QAAMC,MAAM,GAAGpB,SAAS,EAAxB;AAEA,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEkB;AAAjB,kBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF;AAAxB,kBACE,oBAAC,IAAD,qBACE;AAAM,IAAA,OAAO,EAAE;AAAf,IADF,eAEE;AACE,IAAA,IAAI,EAAE,UADR;AAEE,IAAA,OAAO,EAAE;AAFX,IAFF,eAME;AAAM,IAAA,IAAI,EAAE,aAAZ;AAA2B,IAAA,OAAO,EAAE;AAApC,IANF,eAOE;AAAM,IAAA,IAAI,EAAE,qBAAZ;AAAmC,IAAA,OAAO,EAAE;AAA5C,IAPF,CADF,eAWE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAET;AAAtB,kBACE,oBAAC,WAAD,OADF,eAGE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEa,MAAM,CAACC,KADd;AAEE,IAAA,OAAO,EAAE,aAFX;AAGE,IAAA,OAAO,EAAE,aAHX;AAIE,IAAA,QAAQ,EAAE;AACRC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE;AADE,OADL;AAIRC,MAAAA,WAAW,EAAE;AACXD,QAAAA,OAAO,EAAE;AADE;AAJL;AAJZ,kBAYE,oBAAC,SAAD,EAAeR,SAAf,CAZF,CAHF,eAkBE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,6BADT;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,WAAW,EAAE,GAHf;AAIE,IAAA,MAAM,EAAE;AAJV,IAlBF,CAXF,CADF,CADF;AAyCD,CA9CD;;AAgDA,OAAO,MAAMU,kBAAkB,GAAG,YAAY;AAC5C,QAAMP,KAAK,GAAGP,eAAe,EAA7B;AACA,QAAMK,MAAM,GAAGP,gBAAgB,EAA/B;AAEA,SAAO;AACLiB,IAAAA,KAAK,EAAE;AACLP,MAAAA,iBAAiB,EAAED,KAAK,CAACS,QAAN,EADd;AAELV,MAAAA,kBAAkB,EAAED,MAAM,CAACY,KAAP,CAAaC,OAAb;AAFf,KADF;AAKLC,IAAAA,UAAU,EAAE;AALP,GAAP;AAOD,CAXM;AAaP,eAAejB,GAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport NextNprogress from 'nextjs-progressbar'\nimport { motion } from 'framer-motion'\n\nimport 'react-lazy-load-image-component/src/effects/opacity.css'\nimport '../atomic-ui/theme/default.css'\nimport '../atomic-ui/assets/styles/styles.css'\nimport theme from '../atomic-ui/theme'\n\nimport { useApollo, initializeApollo } from '../apollo'\nimport { useStore, initializeStore } from '../store'\n\nconst GlobalStyle = createGlobalStyle`\n  #nprogress {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: var(--z-override);\n    width: 100vw;\n    height: 100vh;\n    background: rgba(255, 255, 255, 0.45);\n    cursor: default;\n\n    .spinner, .spinner-icon {\n      display: none;\n    }\n  }\n`\n\nconst App = ({ Component, pageProps }) => {\n  const client = useApollo(pageProps.initialApolloState)\n  const store = useStore(pageProps.initialReduxState)\n  const router = useRouter()\n\n  return (\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <Head>\n          <meta charSet={'utf-8'} />\n          <meta\n            name={'viewport'}\n            content={'minimum-scale=1, initial-scale=1, width=device-width'}\n          />\n          <meta name={'theme-color'} content={'#000000'} />\n          <meta name={'yandex-verification'} content={'bfd04b96d30382f5'} />\n        </Head>\n\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n\n          <motion.div\n            key={router.route}\n            initial={'pageInitial'}\n            animate={'pageAnimate'}\n            variants={{\n              pageInitial: {\n                opacity: 0\n              },\n              pageAnimate: {\n                opacity: 1\n              }\n            }}>\n            <Component {...pageProps} />\n          </motion.div>\n\n          <NextNprogress\n            color={'var(--default-color-accent)'}\n            startPosition={0.3}\n            stopDelayMs={200}\n            height={3}\n          />\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>\n  )\n}\n\nexport const getServerSideProps = async () => {\n  const store = initializeStore()\n  const client = initializeApollo()\n\n  return {\n    props: {\n      initialReduxState: store.getState(),\n      initialApolloState: client.cache.extract()\n    },\n    revalidate: 1\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}