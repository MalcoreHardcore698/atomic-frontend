{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Message\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Avatar from '../Avatar';\nimport Title from '../Title';\nimport Text from '../Text';\nimport DateText from '../DateText';\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 64px 1fr;\n  grid-template-areas: 'avatar opinion';\n  margin: 0;\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      grid-template-columns: 1fr 64px;\n      grid-template-areas: 'opinion avatar';\n    `}\n`;\nexport const OpinionAvatar = styled(Avatar)`\n  grid-area: avatar;\n  transition: opacity 150ms ease;\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n    `}\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const Opinion = styled.div`\n  position: relative;\n  padding: 10px var(--default-gap) 25px var(--default-gap);\n  border-radius: var(--surface-border-radius);\n  color: white;\n  width: fit-content;\n  grid-area: opinion;\n\n  ${({\n  side\n}) => side === 'observer' && css`\n      background: var(--ghost-color-background);\n      color: var(--ghost-color-text);\n    `}\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n      background: var(--default-color-accent);\n      color: white;\n    `}\n`;\nexport const OpinionName = styled(Title)`\n  color: inherit;\n  transition: opacity 150ms ease;\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const OpinionText = styled(Text)`\n  color: inherit;\n`;\nexport const DispatchTime = styled(DateText)`\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n`;\nexport const Message = ({\n  avatar,\n  side,\n  name,\n  text,\n  time,\n  onLink\n}) => __jsx(Wrap, {\n  side: side,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }\n}, __jsx(OpinionAvatar, {\n  side: side,\n  src: avatar,\n  onClick: onLink,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}), __jsx(Opinion, {\n  side: side,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }\n}, __jsx(OpinionName, {\n  tag: 'h5',\n  onClick: onLink,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }\n}, name), __jsx(OpinionText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 7\n  }\n}, text), __jsx(DispatchTime, {\n  text: time,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 7\n  }\n})));\nMessage.defaultProps = {\n  side: 'observer',\n  text: 'Some Message',\n  time: '15:00'\n};\nexport default Message;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Message/index.js"],"names":["React","styled","css","Avatar","Title","Text","DateText","Wrap","div","side","OpinionAvatar","onClick","Opinion","OpinionName","OpinionText","DispatchTime","Message","avatar","name","text","time","onLink","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Avatar from '../Avatar'\nimport Title from '../Title'\nimport Text from '../Text'\nimport DateText from '../DateText'\n\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 64px 1fr;\n  grid-template-areas: 'avatar opinion';\n  margin: 0;\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      grid-template-columns: 1fr 64px;\n      grid-template-areas: 'opinion avatar';\n    `}\n`\n\nexport const OpinionAvatar = styled(Avatar)`\n  grid-area: avatar;\n  transition: opacity 150ms ease;\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      justify-self: end;\n    `}\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Opinion = styled.div`\n  position: relative;\n  padding: 10px var(--default-gap) 25px var(--default-gap);\n  border-radius: var(--surface-border-radius);\n  color: white;\n  width: fit-content;\n  grid-area: opinion;\n\n  ${({ side }) =>\n    side === 'observer' &&\n    css`\n      background: var(--ghost-color-background);\n      color: var(--ghost-color-text);\n    `}\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      justify-self: end;\n      background: var(--default-color-accent);\n      color: white;\n    `}\n`\n\nexport const OpinionName = styled(Title)`\n  color: inherit;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const OpinionText = styled(Text)`\n  color: inherit;\n`\n\nexport const DispatchTime = styled(DateText)`\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n`\n\nexport const Message = ({ avatar, side, name, text, time, onLink }) => (\n  <Wrap side={side}>\n    <OpinionAvatar side={side} src={avatar} onClick={onLink} />\n    <Opinion side={side}>\n      <OpinionName tag={'h5'} onClick={onLink}>\n        {name}\n      </OpinionName>\n      <OpinionText>{text}</OpinionText>\n      <DispatchTime text={time} />\n    </Opinion>\n  </Wrap>\n)\n\nMessage.defaultProps = {\n  side: 'observer',\n  text: 'Some Message',\n  time: '15:00'\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}