{"ast":null,"code":"import React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport generator from 'generate-password';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport TextArea from '../../atomic-ui/components/TextArea';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport DatePicker from '../../atomic-ui/components/DatePicker';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Switch from '../../atomic-ui/components/Switch';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Select from '../../atomic-ui/components/Select';\nimport Divider from '../../atomic-ui/components/Divider';\nimport { getLabelRole } from '../../atomic-ui/utils/functions';\nimport Form from '../Form';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nconst TAB_TYPES = [{\n  label: 'Основное',\n  value: 'GENERAL'\n}, {\n  label: 'Безопасность',\n  value: 'SECURITY'\n}];\nconst ACCOUNT_TYPES = [{\n  label: 'Физ. лицо',\n  value: 'INDIVIDUAL',\n  tooltip: 'Любое лицо'\n}, {\n  label: 'Оф. лицо',\n  value: 'OFICIAL',\n  tooltip: 'Государственный деятель'\n}, {\n  label: 'Юр. лицо',\n  value: 'ENTITY',\n  tooltip: 'Организация'\n}];\nconst GENDER_TYPES = [{\n  label: 'Мужской',\n  value: 'MALE'\n}, {\n  label: 'Женский',\n  value: 'FEMALE'\n}];\nexport const AdaptiveDropzone = styled(Dropzone).withConfig({\n  displayName: \"FormUser__AdaptiveDropzone\",\n  componentId: \"c1ieix-0\"\n})([\"width:196px;height:276px;@media only screen and (max-width:575px){width:100% !important;height:256px;}\"]);\nexport const AdaptiveRow = styled(Row).withConfig({\n  displayName: \"FormUser__AdaptiveRow\",\n  componentId: \"c1ieix-1\"\n})([\"@media only screen and (max-width:575px){flex-direction:column;grid-gap:var(--default-gap);\", \"{flex-grow:1;button{width:100%;}}}\"], WrapTooltip);\nexport const Tab = styled(Column).withConfig({\n  displayName: \"FormUser__Tab\",\n  componentId: \"c1ieix-2\"\n})([\"display:none;\", \"\"], ({\n  active\n}) => active && css([\"display:flex;\"]));\nexport const detect = (list, value) => {\n  return list.find(item => item.value === value);\n};\nexport const detectAccountType = (types, user) => detect(types, user === null || user === void 0 ? void 0 : user.account);\nexport const detectGender = (types, user) => detect(types, user === null || user === void 0 ? void 0 : user.gender);\nexport const getAccountType = role => {\n  if (role) {\n    return ACCOUNT_TYPES.find(type => type.value === role);\n  }\n\n  return ACCOUNT_TYPES[0];\n};\nexport const getLabelGender = gender => {\n  if (gender) {\n    return GENDER_TYPES.find(type => type.value === gender);\n  }\n\n  return GENDER_TYPES[0];\n};\nexport const User = ({\n  user,\n  roles,\n  mutation,\n  appearance,\n  className,\n  accountTypes,\n  genderTypes,\n  canEditRole,\n  onSubmit,\n  onChangePassword\n}) => {\n  const {\n    data,\n    loading: loadingData,\n    error\n  } = user ? useQuery(queries.GET_USER, {\n    variables: {\n      email: user\n    }\n  }) : {\n    data: {\n      getUser: {}\n    },\n    loading: false,\n    error: false\n  };\n  const {\n    data: dataCompanies,\n    loading: loadingCompanies\n  } = useQuery(queries.GET_USERS, {\n    variables: {\n      account: ['ENTITY']\n    }\n  });\n  const [tab, setTab] = useState(TAB_TYPES[0]);\n  const [account, setAccount] = useState(null);\n  const [isShowPassword, setShowPassword] = useState(false);\n\n  const onTogglePassword = () => setShowPassword(!isShowPassword);\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: (form, action) => {\n      var _data$getUser;\n\n      return onSubmit({ ...form,\n        account: account || getAccountType(data === null || data === void 0 ? void 0 : (_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : _data$getUser.account)\n      }, action);\n    }\n  }, ({\n    register,\n    control,\n    loading,\n    errors,\n    setValue,\n    getValues\n  }) => {\n    var _data$getUser2, _data$getUser3, _data$getUser3$role, _data$getUser4, _data$getUser5, _data$getUser6, _data$getUser7, _data$getUser8, _data$getUser8$role, _data$getUser9, _data$getUser9$role, _data$getUser10, _data$getUser11, _data$getUser12, _data$getUser14, _data$getUser15, _data$getUser15$role, _data$getUser16, _data$getUser17, _data$getUser18, _data$getUser18$role, _data$getUser19, _data$getUser20, _data$getUser20$role, _data$getUser21, _data$getUser22, _data$getUser23, _data$getUser24, _data$getUser25, _data$getUser26, _data$getUser27, _data$getUser28, _data$getUser28$role;\n\n    return !loading && !loadingData && data && data.getUser ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n      defaultValue: tab,\n      options: TAB_TYPES,\n      onChange: setTab,\n      stretch: true\n    }), /*#__PURE__*/React.createElement(Tab, {\n      active: tab.value === 'GENERAL'\n    }, /*#__PURE__*/React.createElement(AdaptiveRow, null, /*#__PURE__*/React.createElement(Controller, {\n      name: 'avatar',\n      control: control,\n      defaultValue: getValues('avatar') || user && (((_data$getUser2 = data.getUser) === null || _data$getUser2 === void 0 ? void 0 : _data$getUser2.avatar) || {\n        path: '/images/avatar-default.png'\n      }) || null,\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(AdaptiveDropzone, {\n        accept: 'image/*',\n        defaultValue: value,\n        onChange: onChange,\n        placeholder: 'Перетащите сюда изображение для превью',\n        tooltip: 'Разрешение: 675x590px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n      })\n    }), /*#__PURE__*/React.createElement(Column, {\n      style: {\n        flexGrow: 1\n      }\n    }, ((_data$getUser3 = data.getUser) === null || _data$getUser3 === void 0 ? void 0 : (_data$getUser3$role = _data$getUser3.role) === null || _data$getUser3$role === void 0 ? void 0 : _data$getUser3$role.name) !== 'ADMIN' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u0410\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"), /*#__PURE__*/React.createElement(Switch, {\n      defaultValue: account !== null && account !== void 0 && account.value ? account : getAccountType((_data$getUser4 = data.getUser) === null || _data$getUser4 === void 0 ? void 0 : _data$getUser4.account),\n      options: (accountTypes === null || accountTypes === void 0 ? void 0 : accountTypes.length) > 1 && accountTypes || ACCOUNT_TYPES,\n      onChange: value => setAccount(value),\n      disabled: loading,\n      stretch: true\n    })), /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, account !== null && account !== void 0 && account.value && (account === null || account === void 0 ? void 0 : account.value) === 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser5 = data.getUser) === null || _data$getUser5 === void 0 ? void 0 : _data$getUser5.account) === 'ENTITY' ? 'Название компании' : 'ФИО'), canEditRole && errors && errors.name && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u0424\\u0418\\u041E\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      name: 'name',\n      ref: register({\n        required: !user\n      }),\n      defaultValue: getValues('name') || ((_data$getUser6 = data.getUser) === null || _data$getUser6 === void 0 ? void 0 : _data$getUser6.name),\n      placeholder: account !== null && account !== void 0 && account.value && (account === null || account === void 0 ? void 0 : account.value) === 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser7 = data.getUser) === null || _data$getUser7 === void 0 ? void 0 : _data$getUser7.account) === 'ENTITY' ? 'Название компании' : 'ФИО',\n      appearance: 'ghost',\n      disabled: loading\n    }), ((_data$getUser8 = data.getUser) === null || _data$getUser8 === void 0 ? void 0 : (_data$getUser8$role = _data$getUser8.role) === null || _data$getUser8$role === void 0 ? void 0 : _data$getUser8$role.name) === 'ADMIN' && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, \"\\u0423 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430 \\u043E\\u0433\\u0440\\u0430\\u043D\\u0438\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0441\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0433\\u043E \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"), ((_data$getUser9 = data.getUser) === null || _data$getUser9 === void 0 ? void 0 : (_data$getUser9$role = _data$getUser9.role) === null || _data$getUser9$role === void 0 ? void 0 : _data$getUser9$role.name) !== 'ADMIN' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, account !== null && account !== void 0 && account.value && (account === null || account === void 0 ? void 0 : account.value) === 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser10 = data.getUser) === null || _data$getUser10 === void 0 ? void 0 : _data$getUser10.account) === 'ENTITY' ? 'Дата основания' : 'Дата рождения'), /*#__PURE__*/React.createElement(Controller, {\n      name: 'dateOfBirth',\n      control: control,\n      defaultValue: getValues('dateOfBirth') || ((_data$getUser11 = data.getUser) === null || _data$getUser11 === void 0 ? void 0 : _data$getUser11.dateOfBirth) && new Date((_data$getUser12 = data.getUser) === null || _data$getUser12 === void 0 ? void 0 : _data$getUser12.dateOfBirth) || null,\n      render: ({\n        value,\n        onChange\n      }) => {\n        var _data$getUser13;\n\n        return /*#__PURE__*/React.createElement(DatePicker, {\n          value: value,\n          onChange: onChange,\n          placeholder: account !== null && account !== void 0 && account.value && (account === null || account === void 0 ? void 0 : account.value) === 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser13 = data.getUser) === null || _data$getUser13 === void 0 ? void 0 : _data$getUser13.account) === 'ENTITY' ? 'Дата основания' : 'Дата рождения',\n          appearance: 'ghost',\n          withYearDisplay: false,\n          withNavigate: true,\n          canEditYear: true\n        });\n      }\n    })))), ((account === null || account === void 0 ? void 0 : account.value) && (account === null || account === void 0 ? void 0 : account.value) !== 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser14 = data.getUser) === null || _data$getUser14 === void 0 ? void 0 : _data$getUser14.account) !== 'ENTITY') && ((_data$getUser15 = data.getUser) === null || _data$getUser15 === void 0 ? void 0 : (_data$getUser15$role = _data$getUser15.role) === null || _data$getUser15$role === void 0 ? void 0 : _data$getUser15$role.name) !== 'ADMIN' && /*#__PURE__*/React.createElement(Column, {\n      style: {\n        flexGrow: 1\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041F\\u043E\\u043B\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'gender',\n      control: control,\n      defaultValue: getValues('gender') || getLabelGender((_data$getUser16 = data.getUser) === null || _data$getUser16 === void 0 ? void 0 : _data$getUser16.gender),\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Switch, {\n        defaultValue: value,\n        onChange: onChange,\n        options: (genderTypes === null || genderTypes === void 0 ? void 0 : genderTypes.length) > 1 && genderTypes || GENDER_TYPES,\n        disabled: loading,\n        stretch: true\n      })\n    })), ((account === null || account === void 0 ? void 0 : account.value) && (account === null || account === void 0 ? void 0 : account.value) !== 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser17 = data.getUser) === null || _data$getUser17 === void 0 ? void 0 : _data$getUser17.account) !== 'ENTITY') && ((_data$getUser18 = data.getUser) === null || _data$getUser18 === void 0 ? void 0 : (_data$getUser18$role = _data$getUser18.role) === null || _data$getUser18$role === void 0 ? void 0 : _data$getUser18$role.name) !== 'ADMIN' && /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'company',\n      control: control,\n      defaultValue: getValues('company') || ((_data$getUser19 = data.getUser) !== null && _data$getUser19 !== void 0 && _data$getUser19.company ? {\n        value: data.getUser.company.id,\n        label: data.getUser.company.name\n      } : null),\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Select, {\n        appearance: 'ghost',\n        defaultValue: value,\n        placeholder: 'Выберите компанию',\n        options: ((dataCompanies === null || dataCompanies === void 0 ? void 0 : dataCompanies.getUsers) || []).map(company => ({\n          value: company.email,\n          label: company.name\n        })),\n        onChange: onChange,\n        isLoading: loadingCompanies || loading,\n        isSearchable: true,\n        cacheOptions: true\n      })\n    })), ((_data$getUser20 = data.getUser) === null || _data$getUser20 === void 0 ? void 0 : (_data$getUser20$role = _data$getUser20.role) === null || _data$getUser20$role === void 0 ? void 0 : _data$getUser20$role.name) !== 'ADMIN' && /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, account !== null && account !== void 0 && account.value && (account === null || account === void 0 ? void 0 : account.value) === 'ENTITY' || !(account !== null && account !== void 0 && account.value) && ((_data$getUser21 = data.getUser) === null || _data$getUser21 === void 0 ? void 0 : _data$getUser21.account) === 'ENTITY' ? 'О компании' : 'О себе'), /*#__PURE__*/React.createElement(TextArea, {\n      type: 'text',\n      name: 'about',\n      ref: register(),\n      defaultValue: getValues('about') || ((_data$getUser22 = data.getUser) === null || _data$getUser22 === void 0 ? void 0 : _data$getUser22.about) || '',\n      placeholder: 'Расскажите о себе пару слов',\n      disabled: loading,\n      appearance: 'ghost'\n    }))), /*#__PURE__*/React.createElement(Tab, {\n      active: tab.value === 'SECURITY'\n    }, canEditRole && errors && (errors.email || errors.phone) && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, errors.email && /*#__PURE__*/React.createElement(\"p\", null, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0430 \\u044D\\u043B. \\u043F\\u043E\\u0447\\u0442\\u0430\"), errors.phone && /*#__PURE__*/React.createElement(\"p\", null, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0430 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\")), /*#__PURE__*/React.createElement(AdaptiveRow, null, /*#__PURE__*/React.createElement(Column, {\n      style: {\n        flexGrow: 1\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u042D\\u043B. \\u043F\\u043E\\u0447\\u0442\\u0430\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'email',\n      name: 'email',\n      ref: register({\n        required: !user\n      }),\n      defaultValue: getValues('email') || ((_data$getUser23 = data.getUser) === null || _data$getUser23 === void 0 ? void 0 : _data$getUser23.email),\n      placeholder: 'Эл. почта',\n      appearance: 'ghost',\n      disabled: loading\n    })), /*#__PURE__*/React.createElement(Column, {\n      style: {\n        flexGrow: 1\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'tel',\n      name: 'phone',\n      ref: register({\n        required: !user\n      }),\n      defaultValue: getValues('phone') || ((_data$getUser24 = data.getUser) === null || _data$getUser24 === void 0 ? void 0 : _data$getUser24.phone),\n      placeholder: 'Телефон',\n      appearance: 'ghost',\n      disabled: loading\n    }))), /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), canEditRole && errors && errors.password && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(AdaptiveRow, null, /*#__PURE__*/React.createElement(Input, {\n      name: 'password',\n      ref: register({\n        required: !user\n      }),\n      type: isShowPassword ? 'text' : 'password',\n      defaultValue: getValues('password') || ((_data$getUser25 = data.getUser) === null || _data$getUser25 === void 0 ? void 0 : _data$getUser25.password),\n      appearance: 'ghost',\n      placeholder: 'Пароль',\n      readOnly: !canEditRole\n    }), canEditRole && /*#__PURE__*/React.createElement(Tooltip, {\n      text: 'Генерация пароля'\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: 'button',\n      kind: 'icon',\n      disabled: loading,\n      onClick: () => setValue('password', generator.generate())\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: 'password',\n      stroke: 'white'\n    }))), canEditRole && /*#__PURE__*/React.createElement(Tooltip, {\n      text: 'Отображение пароля'\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: 'button',\n      kind: 'icon',\n      disabled: loading,\n      onClick: onTogglePassword,\n      revert: !isShowPassword\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: isShowPassword ? 'hide' : 'show',\n      stroke: isShowPassword ? 'white' : 'var(--default-color-accent)'\n    }))), !canEditRole && /*#__PURE__*/React.createElement(Tooltip, {\n      text: 'Смена пароля'\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: 'button',\n      kind: 'icon',\n      disabled: loading,\n      onClick: onChangePassword\n    }, /*#__PURE__*/React.createElement(Icon, {\n      icon: 'edit',\n      stroke: 'white'\n    })))), /*#__PURE__*/React.createElement(Text, null, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0435\\u0435 \\u0432\\u043E\\u0441\\u044C\\u043C\\u0438 \\u0437\\u043D\\u0430\\u043A\\u043E\\u0432, \\u0432\\u043A\\u043B\\u044E\\u0447\\u0430\\u0442\\u044C \\u0431\\u0443\\u043A\\u0432\\u044B, \\u0446\\u0438\\u0444\\u0440\\u044B \\u0438 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u044B\")), canEditRole && /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), canEditRole && errors && errors.role && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0430 \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u0430 \\u0440\\u043E\\u043B\\u044C\"), canEditRole && /*#__PURE__*/React.createElement(Controller, {\n      name: 'role',\n      control: control,\n      defaultValue: getValues('role') || ((_data$getUser26 = data.getUser) === null || _data$getUser26 === void 0 ? void 0 : _data$getUser26.role) && {\n        value: (_data$getUser27 = data.getUser) === null || _data$getUser27 === void 0 ? void 0 : _data$getUser27.role.id,\n        label: getLabelRole((_data$getUser28 = data.getUser) === null || _data$getUser28 === void 0 ? void 0 : (_data$getUser28$role = _data$getUser28.role) === null || _data$getUser28$role === void 0 ? void 0 : _data$getUser28$role.name)\n      } || null,\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Select, {\n        appearance: 'ghost',\n        defaultValue: value,\n        onChange: onChange,\n        placeholder: 'Выберите роль',\n        options: (roles || []).map(item => ({\n          value: item.id,\n          label: getLabelRole(item.name)\n        })),\n        menuPlacement: 'top',\n        isLoading: loading,\n        isClearable: true\n      })\n    }), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n      type: 'submit',\n      style: {\n        flexGrow: 1\n      },\n      disabled: loading\n    }, user ? 'Сохранить' : 'Создать'))) : error ? /*#__PURE__*/React.createElement(Alert, {\n      appearance: 'error',\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  });\n};\nUser.defaultProps = {\n  canEditAccount: true\n};\nexport default User;","map":null,"metadata":{},"sourceType":"module"}