{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Notice from '../../atomic-ui/components/Notice';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Indicator from '../../atomic-ui/components/Indicator';\nimport Chart from '../../atomic-ui/components/Chart';\nimport { useHelper } from '../../hooks/useHelper';\nimport DashboardLayout from '../../layouts/dashboard';\nimport Processed from '../../components/Processed';\nimport FadeLoad from '../../components/FadeLoad';\nimport LazyLoad from '../../components/LazyLoad';\nimport ProjectCard from '../../components/ProjectCard';\nimport ArticleCard from '../../components/ArticleCard';\nimport { onProjectLink } from '../../store/helpers/project';\nimport { onArticleLink } from '../../store/helpers/article';\nimport { onUserAboutMore } from '../../store/helpers/user';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Панель администратора';\nconst GREETING_TEXT = 'Добро пожаловать';\nconst Container = styled(Column).withConfig({\n  displayName: \"dashboard__Container\",\n  componentId: \"yu92ty-0\"\n})([\"grid-gap:10px;\"]);\n_c = Container;\nconst Statistics = styled(Row).withConfig({\n  displayName: \"dashboard__Statistics\",\n  componentId: \"yu92ty-1\"\n})([\"flex-wrap:wrap;\"]);\n_c2 = Statistics;\nconst Graph = styled(Chart).withConfig({\n  displayName: \"dashboard__Graph\",\n  componentId: \"yu92ty-2\"\n})([\"height:100%;flex-grow:1;\"]);\n_c3 = Graph;\nconst Header = styled(Row).withConfig({\n  displayName: \"dashboard__Header\",\n  componentId: \"yu92ty-3\"\n})([\"flex-wrap:wrap;justify-content:space-between;align-items:center;a{color:var(--default-color-accent);}\"]);\n_c4 = Header;\n\nconst Dashboard = () => {\n  _s();\n\n  var _dataStatistics$getDa, _dataStatistics$getDa2, _dataStatistics$getDa3, _dataStatistics$getDa4;\n\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  const {\n    data: dataStatistics,\n    loading: loadingStatistics,\n    error: errorStatistics\n  } = useQuery(queries.GET_META_DASHBOARD_STATISTICS);\n  const {\n    data: dataActivities,\n    loading: loadingActivities,\n    error: errorActivities\n  } = useQuery(queries.GET_META_DASHBOARD_ACTIVITIES);\n  const {\n    data: dataProjects,\n    loading: loadingProjects,\n    error: errorProjects\n  } = useQuery(queries.GET_META_DASHBOARD_PREVIEW_PROJECTS, {\n    variables: {\n      offset: 0,\n      limit: 4\n    }\n  });\n  const {\n    data: dataArticles,\n    loading: loadingArticles,\n    error: errorArticles\n  } = useQuery(queries.GET_META_DASHBOARD_PREVIEW_ARTICLES, {\n    variables: {\n      offset: 0,\n      limit: 4\n    }\n  });\n  const dataChart = useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axesChart = useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  const tooltip = React.useMemo(() => ({\n    align: 'closest',\n    anchor: 'auto'\n  }), []);\n  return /*#__PURE__*/React.createElement(DashboardLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'activity',\n    text: GREETING_TEXT\n  }), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Statistics, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataStatistics,\n    loading: loadingStatistics,\n    error: errorStatistics\n  }, /*#__PURE__*/React.createElement(Indicator, {\n    label: 'Пользователи',\n    value: dataStatistics === null || dataStatistics === void 0 ? void 0 : (_dataStatistics$getDa = dataStatistics.getDashboardStatistics) === null || _dataStatistics$getDa === void 0 ? void 0 : _dataStatistics$getDa.usersCount,\n    movement: 34,\n    positive: true\n  }), /*#__PURE__*/React.createElement(Indicator, {\n    label: 'Проекты',\n    value: dataStatistics === null || dataStatistics === void 0 ? void 0 : (_dataStatistics$getDa2 = dataStatistics.getDashboardStatistics) === null || _dataStatistics$getDa2 === void 0 ? void 0 : _dataStatistics$getDa2.projectsCount,\n    movement: 17,\n    positive: true\n  }), /*#__PURE__*/React.createElement(Indicator, {\n    label: 'Статьи',\n    value: dataStatistics === null || dataStatistics === void 0 ? void 0 : (_dataStatistics$getDa3 = dataStatistics.getDashboardStatistics) === null || _dataStatistics$getDa3 === void 0 ? void 0 : _dataStatistics$getDa3.articlesCount,\n    movement: 3,\n    positive: true\n  }), /*#__PURE__*/React.createElement(Indicator, {\n    label: 'Категории',\n    value: dataStatistics === null || dataStatistics === void 0 ? void 0 : (_dataStatistics$getDa4 = dataStatistics.getDashboardStatistics) === null || _dataStatistics$getDa4 === void 0 ? void 0 : _dataStatistics$getDa4.categoriesCount,\n    movement: 1,\n    positive: true\n  }))), /*#__PURE__*/React.createElement(Graph, {\n    data: dataChart,\n    axes: axesChart,\n    tooltip: tooltip\n  })), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u043E\\u0441\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\")), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Processed, {\n    data: dataActivities,\n    loading: loadingActivities,\n    error: errorActivities\n  }, ((dataActivities === null || dataActivities === void 0 ? void 0 : dataActivities.getDashboardActivities) || []).map(activity => {\n    var _activity$user, _activity$user$avatar;\n\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: activity.id\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(Notice, {\n      key: activity.id,\n      img: (_activity$user = activity.user) === null || _activity$user === void 0 ? void 0 : (_activity$user$avatar = _activity$user.avatar) === null || _activity$user$avatar === void 0 ? void 0 : _activity$user$avatar.path,\n      title: activity.user.name,\n      message: activity.message,\n      date: activity.createdAt,\n      appearance: 'clear'\n    })));\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Link, {\n    href: '/dashboard/projects'\n  }, /*#__PURE__*/React.createElement(\"a\", null, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit',\n    percentage: 'minmax(395px, 1fr)'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataProjects,\n    loading: loadingProjects,\n    error: errorProjects\n  }, ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: project.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ProjectCard, {\n    project: project,\n    onLink: recall(onProjectLink, {\n      id: project.id,\n      user\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user: project\n    })\n  }))))))), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438\"), /*#__PURE__*/React.createElement(Link, {\n    href: '/dashboard/articles'\n  }, /*#__PURE__*/React.createElement(\"a\", null, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0435\\u0439\"))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit',\n    percentage: 'minmax(395px, 1fr)'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataArticles,\n    loading: loadingArticles,\n    error: errorArticles\n  }, ((dataArticles === null || dataArticles === void 0 ? void 0 : dataArticles.getArticles) || []).map(article => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: article.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ArticleCard, {\n    article: article,\n    onLink: recall(onArticleLink, {\n      id: article.id\n    })\n  })))))))));\n};\n\n_s(Dashboard, \"715pv/0kC0o4XMeTxPxC0xWdbnM=\", false, function () {\n  return [useHelper, useSelector, useQuery, useQuery, useQuery, useQuery];\n});\n\n_c5 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Graph\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/dashboard/index.js"],"names":["React","useMemo","Link","styled","useQuery","useSelector","Row","Grid","Column","Title","Notice","Difinition","Indicator","Chart","useHelper","DashboardLayout","Processed","FadeLoad","LazyLoad","ProjectCard","ArticleCard","onProjectLink","onArticleLink","onUserAboutMore","queries","TITLE","GREETING_TEXT","Container","Statistics","Graph","Header","Dashboard","recall","user","state","data","dataStatistics","loading","loadingStatistics","error","errorStatistics","GET_META_DASHBOARD_STATISTICS","dataActivities","loadingActivities","errorActivities","GET_META_DASHBOARD_ACTIVITIES","dataProjects","loadingProjects","errorProjects","GET_META_DASHBOARD_PREVIEW_PROJECTS","variables","offset","limit","dataArticles","loadingArticles","errorArticles","GET_META_DASHBOARD_PREVIEW_ARTICLES","dataChart","label","axesChart","primary","type","position","tooltip","align","anchor","getDashboardStatistics","usersCount","projectsCount","articlesCount","categoriesCount","getDashboardActivities","map","activity","id","avatar","path","name","message","createdAt","getProjects","project","getArticles","article"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport Link from 'next/link'\nimport styled from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector } from 'react-redux'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Notice from '../../atomic-ui/components/Notice'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Indicator from '../../atomic-ui/components/Indicator'\nimport Chart from '../../atomic-ui/components/Chart'\n\nimport { useHelper } from '../../hooks/useHelper'\nimport DashboardLayout from '../../layouts/dashboard'\nimport Processed from '../../components/Processed'\nimport FadeLoad from '../../components/FadeLoad'\nimport LazyLoad from '../../components/LazyLoad'\nimport ProjectCard from '../../components/ProjectCard'\nimport ArticleCard from '../../components/ArticleCard'\nimport { onProjectLink } from '../../store/helpers/project'\nimport { onArticleLink } from '../../store/helpers/article'\nimport { onUserAboutMore } from '../../store/helpers/user'\nimport queries from '../../graphql/queries'\n\nconst TITLE = 'Панель администратора'\nconst GREETING_TEXT = 'Добро пожаловать'\n\nconst Container = styled(Column)`\n  grid-gap: 10px;\n`\n\nconst Statistics = styled(Row)`\n  flex-wrap: wrap;\n`\n\nconst Graph = styled(Chart)`\n  height: 100%;\n  flex-grow: 1;\n`\n\nconst Header = styled(Row)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  a {\n    color: var(--default-color-accent);\n  }\n`\n\nconst Dashboard = () => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.user)\n\n  const { data: dataStatistics, loading: loadingStatistics, error: errorStatistics } = useQuery(\n    queries.GET_META_DASHBOARD_STATISTICS\n  )\n\n  const { data: dataActivities, loading: loadingActivities, error: errorActivities } = useQuery(\n    queries.GET_META_DASHBOARD_ACTIVITIES\n  )\n\n  const { data: dataProjects, loading: loadingProjects, error: errorProjects } = useQuery(\n    queries.GET_META_DASHBOARD_PREVIEW_PROJECTS,\n    {\n      variables: {\n        offset: 0,\n        limit: 4\n      }\n    }\n  )\n\n  const { data: dataArticles, loading: loadingArticles, error: errorArticles } = useQuery(\n    queries.GET_META_DASHBOARD_PREVIEW_ARTICLES,\n    {\n      variables: {\n        offset: 0,\n        limit: 4\n      }\n    }\n  )\n\n  const dataChart = useMemo(\n    () => [\n      {\n        label: 'Series 1',\n        data: [\n          [0, 1],\n          [1, 2],\n          [2, 4],\n          [3, 2],\n          [4, 7]\n        ]\n      },\n      {\n        label: 'Series 2',\n        data: [\n          [0, 3],\n          [1, 1],\n          [2, 5],\n          [3, 6],\n          [4, 4]\n        ]\n      }\n    ],\n    []\n  )\n\n  const axesChart = useMemo(\n    () => [\n      { primary: true, type: 'linear', position: 'bottom' },\n      { type: 'linear', position: 'left' }\n    ],\n    []\n  )\n\n  const tooltip = React.useMemo(\n    () => ({\n      align: 'closest',\n      anchor: 'auto'\n    }),\n    []\n  )\n\n  return (\n    <DashboardLayout title={TITLE}>\n      <Difinition icon={'activity'} text={GREETING_TEXT} />\n\n      <Grid length={'auto-fit'}>\n        <Column>\n          <Statistics length={'auto-fit'}>\n            <Processed data={dataStatistics} loading={loadingStatistics} error={errorStatistics}>\n              <Indicator\n                label={'Пользователи'}\n                value={dataStatistics?.getDashboardStatistics?.usersCount}\n                movement={34}\n                positive\n              />\n              <Indicator\n                label={'Проекты'}\n                value={dataStatistics?.getDashboardStatistics?.projectsCount}\n                movement={17}\n                positive\n              />\n              <Indicator\n                label={'Статьи'}\n                value={dataStatistics?.getDashboardStatistics?.articlesCount}\n                movement={3}\n                positive\n              />\n              <Indicator\n                label={'Категории'}\n                value={dataStatistics?.getDashboardStatistics?.categoriesCount}\n                movement={1}\n                positive\n              />\n            </Processed>\n          </Statistics>\n\n          <Graph data={dataChart} axes={axesChart} tooltip={tooltip} />\n        </Column>\n\n        <Container>\n          <Header>\n            <Title tag={'h3'}>Активность пользователей</Title>\n          </Header>\n\n          <Column>\n            <Processed data={dataActivities} loading={loadingActivities} error={errorActivities}>\n              {(dataActivities?.getDashboardActivities || []).map((activity) => (\n                <FadeLoad key={activity.id}>\n                  <LazyLoad>\n                    <Notice\n                      key={activity.id}\n                      img={activity.user?.avatar?.path}\n                      title={activity.user.name}\n                      message={activity.message}\n                      date={activity.createdAt}\n                      appearance={'clear'}\n                    />\n                  </LazyLoad>\n                </FadeLoad>\n              ))}\n            </Processed>\n          </Column>\n        </Container>\n      </Grid>\n\n      <Grid length={'auto-fit'}>\n        <Container>\n          <Header>\n            <Title tag={'h3'}>Последние проекты</Title>\n            <Link href={'/dashboard/projects'}>\n              <a>Больше проектов</a>\n            </Link>\n          </Header>\n\n          <Grid length={'auto-fit'} percentage={'minmax(395px, 1fr)'}>\n            <Processed data={dataProjects} loading={loadingProjects} error={errorProjects}>\n              {(dataProjects?.getProjects || []).map((project) => (\n                <FadeLoad key={project.id}>\n                  <LazyLoad>\n                    <ProjectCard\n                      project={project}\n                      onLink={recall(onProjectLink, { id: project.id, user })}\n                      onAboutMore={recall(onUserAboutMore, { user: project })}\n                    />\n                  </LazyLoad>\n                </FadeLoad>\n              ))}\n            </Processed>\n          </Grid>\n        </Container>\n\n        <Container>\n          <Header>\n            <Title tag={'h3'}>Последние статьи</Title>\n            <Link href={'/dashboard/articles'}>\n              <a>Больше статей</a>\n            </Link>\n          </Header>\n\n          <Grid length={'auto-fit'} percentage={'minmax(395px, 1fr)'}>\n            <Processed data={dataArticles} loading={loadingArticles} error={errorArticles}>\n              {(dataArticles?.getArticles || []).map((article) => (\n                <FadeLoad key={article.id}>\n                  <LazyLoad>\n                    <ArticleCard\n                      article={article}\n                      onLink={recall(onArticleLink, { id: article.id })}\n                    />\n                  </LazyLoad>\n                </FadeLoad>\n              ))}\n            </Processed>\n          </Grid>\n        </Container>\n      </Grid>\n    </DashboardLayout>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}