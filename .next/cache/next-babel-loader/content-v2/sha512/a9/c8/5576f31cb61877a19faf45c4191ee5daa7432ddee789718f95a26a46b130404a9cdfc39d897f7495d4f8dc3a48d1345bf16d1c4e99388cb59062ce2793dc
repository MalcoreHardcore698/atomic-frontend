{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Difinition from '../../atomic-ui/components/Difinition';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormTicket__Wrap\",\n  componentId: \"n5aw2g-0\"\n})([\"width:100%;\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"FormTicket__Header\",\n  componentId: \"n5aw2g-1\"\n})([\"justify-content:space-between;width:100%;\"]);\nexport const Messages = styled(Column).withConfig({\n  displayName: \"FormTicket__Messages\",\n  componentId: \"n5aw2g-2\"\n})([\"position:relative;background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);padding-top:55px;flex-grow:1;\"]);\nexport const Meta = styled(Row).withConfig({\n  displayName: \"FormTicket__Meta\",\n  componentId: \"n5aw2g-3\"\n})([\"position:absolute;top:0;left:0;width:100%;justify-content:space-between;padding:8px var(--default-gap);border-radius:var(--surface-border-radius) var(--surface-border-radius) 0 0;background:var(--ghost-color-background);\"]);\nexport const Empty = styled(Text).withConfig({\n  displayName: \"FormTicket__Empty\",\n  componentId: \"n5aw2g-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;\"]);\nexport const Ticket = ({\n  ticket,\n  appearance,\n  onFinish,\n  onReport,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Wrap, props, ticket && /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n    label: 'Номер обращения',\n    text: (ticket === null || ticket === void 0 ? void 0 : ticket.token) || '-'\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onFinish,\n    disabled: !ticket\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onReport,\n    kind: 'icon',\n    appearance: 'red',\n    disabled: !ticket\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'flag',\n    stroke: 'white'\n  })))), /*#__PURE__*/React.createElement(Messages, null, ticket && /*#__PURE__*/React.createElement(Meta, null, /*#__PURE__*/React.createElement(Text, null, \"\\u0422\\u0435\\u043C\\u0430: \", ticket.title), /*#__PURE__*/React.createElement(Text, null, ticket.createdAt)), ticket && ticket.messages && ticket.messages.length > 0 ? ticket.messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    key: message.id,\n    avatar: message.avatar,\n    side: message.side,\n    name: message.name,\n    text: message.text,\n    time: message.time,\n    onLink: onLink\n  })) : /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    placeholder: 'Отправьте сообщенение...',\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onSubmit: onSubmit\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\nexport default Ticket;","map":null,"metadata":{},"sourceType":"module"}