{"ast":null,"code":"import { useMemo } from 'react';\nimport merge from 'deepmerge';\nimport createApolloClient from './client';\nlet apolloClient;\nexport function initializeApollo(initialState = null) {\n  var _apolloClient2;\n\n  const _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  if (initialState) {\n    const existingCache = _apolloClient.extract();\n\n    const data = merge(initialState, existingCache);\n\n    _apolloClient.cache.restore(data);\n  }\n\n  if (false) return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  return useMemo(() => initializeApollo(initialState), [initialState]);\n}","map":null,"metadata":{},"sourceType":"module"}