{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Breadcrumbs\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Button from '../Button';\nexport const Wrap = styled(Row)`\n  display: inline-block\n  white-space: nowrap\n  overflow: hidden\n  text-overflow: ellipsis\n`;\nexport const BreadButton = styled(Button)`\n  ${({\n  disabled\n}) => disabled ? css`\n          background: none;\n          border: none;\n\n          &:hover {\n            background: none;\n            border: none;\n            color: var(--ghost-color-text);\n          }\n        ` : css`\n          color: var(--default-color-active);\n          border: none;\n          transition: opacity 150ms ease;\n\n          &:hover {\n            opacity: 0.75;\n            border: none;\n          }\n        `}\n`;\nexport const Delimiter = styled.span`\n  color: var(--input-placeholder-color);\n`;\nexport const BreadCrumb = ({\n  label,\n  callback,\n  active\n}) => __jsx(BreadButton, {\n  appearance: 'clear',\n  disabled: !active,\n  onClick: callback,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, label);\nexport const BreadCrumbs = (_ref) => {\n  let {\n    links,\n    callback\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"links\", \"callback\"]);\n\n  return __jsx(Wrap, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }), (links || []).map((link, index) => __jsx(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(BreadCrumb, {\n    label: link.label,\n    callback: () => callback(link.path),\n    active: !!link.path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), index % 2 === 0 && index !== links.length - 1 && __jsx(Delimiter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 59\n    }\n  }, \"/\"))));\n};\nexport default BreadCrumbs;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Breadcrumbs/index.js"],"names":["React","styled","css","Row","Button","Wrap","BreadButton","disabled","Delimiter","span","BreadCrumb","label","callback","active","BreadCrumbs","links","props","map","link","index","path","length"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGJ,MAAM,CAACE,GAAD,CAAM;AAChC;AACA;AACA;AACA;AACA,CALO;AAOP,OAAO,MAAMG,WAAW,GAAGL,MAAM,CAACG,MAAD,CAAS;AAC1C,IAAI,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,QAAQ,GACJL,GAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAVY,GAWJA,GAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAU;AACV,CAvBO;AAyBP,OAAO,MAAMM,SAAS,GAAGP,MAAM,CAACQ,IAAK;AACrC;AACA,CAFO;AAIP,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KACxB,MAAC,WAAD;AAAa,EAAA,UAAU,EAAE,OAAzB;AAAkC,EAAA,QAAQ,EAAE,CAACA,MAA7C;AAAqD,EAAA,OAAO,EAAED,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KADH,CADK;AAMP,OAAO,MAAMG,WAAW,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASH,IAAAA;AAAT,GAAD;AAAA,MAAuBI,KAAvB;;AAAA,SACzB,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,CAACD,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,KACjB,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAED,IAAI,CAACP,KAAxB;AAA+B,IAAA,QAAQ,EAAE,MAAMC,QAAQ,CAACM,IAAI,CAACE,IAAN,CAAvD;AAAoE,IAAA,MAAM,EAAE,CAAC,CAACF,IAAI,CAACE,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,KAAKJ,KAAK,CAACM,MAAN,GAAe,CAA5C,IAAiD,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFpD,CADD,CADH,CADyB;AAAA,CAApB;AAWP,eAAeP,WAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Button from '../Button'\n\nexport const Wrap = styled(Row)`\n  display: inline-block\n  white-space: nowrap\n  overflow: hidden\n  text-overflow: ellipsis\n`\n\nexport const BreadButton = styled(Button)`\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          background: none;\n          border: none;\n\n          &:hover {\n            background: none;\n            border: none;\n            color: var(--ghost-color-text);\n          }\n        `\n      : css`\n          color: var(--default-color-active);\n          border: none;\n          transition: opacity 150ms ease;\n\n          &:hover {\n            opacity: 0.75;\n            border: none;\n          }\n        `}\n`\n\nexport const Delimiter = styled.span`\n  color: var(--input-placeholder-color);\n`\n\nexport const BreadCrumb = ({ label, callback, active }) => (\n  <BreadButton appearance={'clear'} disabled={!active} onClick={callback}>\n    {label}\n  </BreadButton>\n)\n\nexport const BreadCrumbs = ({ links, callback, ...props }) => (\n  <Wrap {...props}>\n    {(links || []).map((link, index) => (\n      <React.Fragment key={index}>\n        <BreadCrumb label={link.label} callback={() => callback(link.path)} active={!!link.path} />\n        {index % 2 === 0 && index !== links.length - 1 && <Delimiter>/</Delimiter>}\n      </React.Fragment>\n    ))}\n  </Wrap>\n)\n\nexport default BreadCrumbs\n"]},"metadata":{},"sourceType":"module"}