{"ast":null,"code":"import React, { useEffect, memo } from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport Column from '../atomic-ui/components/Column';\nimport Snacks from '../atomic-ui/components/Snacks';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Button from '../atomic-ui/components/Button';\nimport Divider from '../atomic-ui/components/Divider';\nimport Modal from '../atomic-ui/components/Modal';\nimport Text from '../atomic-ui/components/Text';\nimport Drawer from '../components/Drawer';\nimport { FixedLoader } from '../components/Styled';\nimport { removeItem, clearItems } from '../store/actions/snacks';\nimport { setMutate, setSearch, setSettings } from '../store/actions/root';\nimport { setModal } from '../store/actions/modal';\nimport { setUser } from '../store/actions/user';\nimport queries from '../graphql/queries';\nimport config from '../config';\nconst LIFETIME_OF_SNACK = 10000;\nconst Wrapper = styled.div.withConfig({\n  displayName: \"main__Wrapper\",\n  componentId: \"r90a11-0\"\n})([\"display:flex;flex-direction:column;margin-top:72px;width:100%;\"]);\nconst GuideButton = styled(Button).withConfig({\n  displayName: \"main__GuideButton\",\n  componentId: \"r90a11-1\"\n})([\"display:flex;justify-content:center;align-items:center;color:var(--default-color-accent);\"]);\n\nconst Welcome = ({\n  close\n}) => {\n  const router = useRouter();\n  return /*#__PURE__*/React.createElement(Column, {\n    style: {\n      padding: '15px'\n    }\n  }, /*#__PURE__*/React.createElement(Text, null, \"Atomic - \\u0441\\u0432\\u043E\\u0435\\u043E\\u0431\\u0440\\u0430\\u0437\\u043D\\u0430\\u044F \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u043A\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0435\\u0440\\u0435\\u0433\\u043E\\u0432\\u043E\\u0440\\u043E\\u0432 \\u043C\\u0435\\u0436\\u0434\\u0443 \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044F\\u043C\\u0438 \\u0438\\u043D\\u0434\\u0443\\u0441\\u0442\\u0440\\u0438\\u0438. \\u0410\\u043D\\u0430\\u043B\\u043E\\u0433\\u0438\\u0447\\u043D\\u043E \\u0441\\u043E\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0439 \\u0441\\u0435\\u0442\\u0438 \\u043D\\u0430 \\u0441\\u0430\\u0439\\u0442\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0440\\u0435\\u0430\\u0433\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043D\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B, \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u044B\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u043E\\u0432 \\u0438 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0447\\u0438\\u043A\\u043E\\u0432, \\u043E\\u0446\\u0435\\u043D\\u0438\\u0432\\u0430\\u0442\\u044C \\u0438\\u0445 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u044B \\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B, \\u043E\\u0431\\u0449\\u0430\\u0442\\u044C\\u0441\\u044F \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0441\\u043E\\u0431\\u043E\\u0439 \\u0438 \\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0435\\u0439 \\u0440\\u0435\\u0441\\u0443\\u0440\\u0441\\u0430 \\u043D\\u0430 \\u043B\\u044E\\u0431\\u044B\\u0445 \\u0434\\u0440\\u0443\\u0433\\u0438\\u0445 \\u043F\\u043B\\u043E\\u0449\\u0430\\u0434\\u043A\\u0430\\u0445.\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: close\n  }, \"\\u0412\\u043F\\u0435\\u0440\\u0435\\u0434!\"), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(GuideButton, {\n    onClick: () => {\n      close();\n      return router.push('/guide');\n    },\n    appearance: 'clear'\n  }, \"\\u0418\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0446\\u0438\\u044F\"));\n};\n\nconst Mutator = ({\n  mutation,\n  variables,\n  callback\n}) => {\n  const [action] = useMutation(mutation);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function mutate() {\n      const response = await action({\n        variables\n      });\n      dispatch(setMutate(null, null));\n      if (callback) await callback(response);\n    }\n\n    mutate().then();\n  }, [action, dispatch, variables, callback]);\n  return null;\n};\n\nconst MainHead = () => {\n  const root = useSelector(state => state.root);\n  return /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, root.settings.meta.title), /*#__PURE__*/React.createElement(\"meta\", {\n    name: 'description',\n    content: root.settings.meta.description\n  }));\n};\n\nconst MainContent = ({\n  children\n}) => {\n  const router = useRouter();\n  const [getUser, {\n    data,\n    loading\n  }] = useLazyQuery(queries.GET_USER);\n  const {\n    data: dataMeta,\n    loading: loadingMeta\n  } = useQuery(queries.GET_META);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!loadingMeta && dataMeta !== null && dataMeta !== void 0 && dataMeta.getDashboardSettings) {\n      dispatch(setSettings(dataMeta === null || dataMeta === void 0 ? void 0 : dataMeta.getDashboardSettings));\n    }\n  }, [dataMeta, loadingMeta]);\n  useEffect(() => {\n    if (true) {\n      const token = localStorage.getItem(config.get('secret'));\n      if (token) getUser();\n    }\n  }, []);\n  useEffect(() => {\n    if (data && data.getUser) {\n      dispatch(setUser(data.getUser));\n    }\n  }, [data, dispatch]);\n  useEffect(() => {\n    dispatch(setSearch(router.query.search));\n  }, [dispatch]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FixedLoader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, null, children);\n};\n\nconst MainModal = memo(() => {\n  const {\n    user,\n    modal\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const onModalHide = () => {\n    dispatch(setModal(null));\n  };\n\n  useEffect(() => {\n    if (user.authenticated && user.register) {\n      dispatch(setModal([{\n        path: '/',\n        title: 'Добро пожаловать!',\n        component: ({\n          close\n        }) => /*#__PURE__*/React.createElement(Welcome, {\n          close: close\n        })\n      }]));\n    }\n  }, [user, dispatch]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: modal === null || modal === void 0 ? void 0 : modal.size,\n    routes: modal === null || modal === void 0 ? void 0 : modal.routes,\n    onHide: onModalHide\n  });\n});\nconst MainSnacks = memo(() => {\n  const snacks = useSelector(state => state.snacks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if ((snacks === null || snacks === void 0 ? void 0 : snacks.length) > 0) {\n      setTimeout(() => dispatch(clearItems()), LIFETIME_OF_SNACK);\n    }\n  }, [snacks, dispatch]);\n  return /*#__PURE__*/React.createElement(Snacks, {\n    snacks: snacks,\n    onRemove: snack => dispatch(removeItem(snack.id))\n  });\n});\n\nconst MainMutator = () => {\n  const root = useSelector(state => state.root);\n  return root.mutation && /*#__PURE__*/React.createElement(Mutator, {\n    mutation: root.mutation,\n    variables: root.variables,\n    callback: root.callback\n  });\n};\n\nexport const MainLayout = ({\n  children\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MainHead, null), /*#__PURE__*/React.createElement(MainContent, null, children), /*#__PURE__*/React.createElement(Drawer, null), /*#__PURE__*/React.createElement(MainSnacks, null), /*#__PURE__*/React.createElement(MainModal, null), /*#__PURE__*/React.createElement(MainMutator, null));\nexport default MainLayout;","map":null,"metadata":{},"sourceType":"module"}