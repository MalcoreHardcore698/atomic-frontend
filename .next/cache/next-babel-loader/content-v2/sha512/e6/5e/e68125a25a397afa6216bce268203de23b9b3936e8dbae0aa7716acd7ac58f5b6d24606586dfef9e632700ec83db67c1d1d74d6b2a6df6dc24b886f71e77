{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Column from '../atomic-ui/components/Column';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Select from '../atomic-ui/components/Select';\nimport DashboardLayout from './dashboard';\nimport DefaultLayout from '../layouts/default';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport HandleBar from '../components/HandleBar';\nimport { LowerLoader } from '../components/Styled';\nimport { setSearch } from '../store/actions/root';\nimport { Card } from './dashboard/content';\nimport List from '../components/List';\nexport const INITIAL_DISPLAY_METHOD = 'grid';\nconst Wrap = styled(Column).withConfig({\n  displayName: \"content__Wrap\",\n  componentId: \"sc-1afm75p-0\"\n})([\"margin-top:120px;margin-bottom:80px;\", \" @media only screen and (max-width:480px){margin-top:0;}\"], ({\n  clear\n}) => clear && css([\"margin:0;\"]));\nconst Container = styled.div.withConfig({\n  displayName: \"content__Container\",\n  componentId: \"sc-1afm75p-1\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;\", \" @media only screen and (max-width:1196px){grid-template-columns:1fr;}\"], ({\n  isSearch\n}) => isSearch && css([\"grid-template-columns:1fr;\"]));\n\nconst ContentLayout = ({\n  limit,\n  title,\n  store,\n  aside,\n  handle,\n  render,\n  filters,\n  getType,\n  getQuery,\n  options,\n  scaffold,\n  dashboard,\n  variables = {},\n  emptyMessage,\n  startOffset,\n  initialize,\n  children,\n  onLink\n}) => {\n  const search = useSelector(state => state.root.search);\n  const Layout = dashboard ? DashboardLayout : DefaultLayout;\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [documents, setDocuments] = useState((store === null || store === void 0 ? void 0 : store.documents) || []);\n  const dispatch = useDispatch();\n  const [loadDocumentsBySearch, {\n    data: dataBySearch,\n    loading: loadingBySearch,\n    refetch: refetchBySearch\n  }] = useLazyQuery(getQuery);\n  const [loadDocuments, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(getQuery);\n\n  const getFilters = () => {\n    return filters.map(filter => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return /*#__PURE__*/React.createElement(DatePicker, {\n            key: v4(),\n            value: date,\n            placeholder: filter.placeholder || 'Дата публикации',\n            onChange: onChangeDate,\n            withNavigate: true\n          });\n\n        case 'SELECT':\n          return /*#__PURE__*/React.createElement(Select, {\n            key: v4(),\n            options: filter.options,\n            placeholder: filter.placeholder || 'Раздел',\n            selected: select,\n            onChange: item => onChangeSelect(item)\n          });\n\n        default:\n          return null;\n      }\n    });\n  };\n\n  const onSearch = value => {\n    setDocuments([]);\n\n    if (value) {\n      dispatch(setSearch(value));\n      loadDocumentsBySearch({\n        variables: { ...variables,\n          search: value\n        }\n      });\n    } else {\n      const result = { ...variables\n      };\n      dispatch(setSearch(null));\n      if (refetch) refetch(result);else loadDocuments({\n        variables: result\n      });\n    }\n  };\n\n  const loadMore = async () => {\n    if (search && refetchBySearch) {\n      await refetchBySearch(variables);\n    } else {\n      if (refetch) {\n        await refetch(variables);\n      } else {\n        await loadDocuments({\n          variables\n        });\n      }\n    }\n  };\n\n  const renderLoader = () => /*#__PURE__*/React.createElement(LowerLoader, {\n    key: 'loader'\n  }, /*#__PURE__*/React.createElement(Spinner, null));\n\n  useEffect(() => {\n    if (initialize) loadDocuments();\n  }, [initialize]);\n  useEffect(() => {\n    if (search) onSearch(search);\n  }, [search]);\n  useEffect(() => {\n    const commonList = !search && !loading && data;\n    const searchList = search && !loadingBySearch && dataBySearch;\n    const resultList = commonList || searchList;\n\n    if (resultList) {\n      const list = resultList[Object.keys(resultList)[0]];\n      if (list.length > 0) setDocuments(list);\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: title,\n    scaffold: scaffold\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    clear: scaffold || dashboard\n  }, !scaffold && !dashboard && /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    onChangeFilter: () => setVisibleFilter(!visibleFilter),\n    onSubmit: onSearch\n  }), dashboard && handle && /*#__PURE__*/React.createElement(HandleBar, {\n    title: title,\n    icon: handle.icon,\n    buttonCreateText: handle.buttonCreateText,\n    onCreate: handle.onCreate,\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: handle.onChangeDisplayMethod\n  }), (filters || options) && /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: getFilters(),\n    options: options\n  }), search && loadingBySearch ? renderLoader() : search ? typeof children === 'function' ? React.createElement(children, {\n    documents\n  }) : children : /*#__PURE__*/React.createElement(Container, {\n    isSearch: search\n  }, /*#__PURE__*/React.createElement(List, {\n    limit: limit,\n    type: getType,\n    query: getQuery,\n    startOffset: startOffset,\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    component: item => /*#__PURE__*/React.createElement(Card, {\n      item: item,\n      component: render(item),\n      onLink: item => onLink(item),\n      withoutChecked: true\n    }),\n    emptyMessage: emptyMessage,\n    onClick: item => onLink(item)\n  }), aside)));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/layouts/content.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useLazyQuery","styled","css","v4","Column","DatePicker","Spinner","Select","DashboardLayout","DefaultLayout","FilterBar","SearchBar","HandleBar","LowerLoader","setSearch","Card","List","INITIAL_DISPLAY_METHOD","Wrap","clear","Container","div","isSearch","ContentLayout","limit","title","store","aside","handle","render","filters","getType","getQuery","options","scaffold","dashboard","variables","emptyMessage","startOffset","initialize","children","onLink","search","state","root","Layout","date","onChangeDate","select","onChangeSelect","visibleFilter","setVisibleFilter","documents","setDocuments","dispatch","loadDocumentsBySearch","data","dataBySearch","loading","loadingBySearch","refetch","refetchBySearch","loadDocuments","getFilters","map","filter","type","placeholder","item","onSearch","value","result","loadMore","renderLoader","commonList","searchList","resultList","list","Object","keys","length","icon","buttonCreateText","onCreate","onChangeDisplayMethod","createElement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Column from '../atomic-ui/components/Column'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Select from '../atomic-ui/components/Select'\n\nimport DashboardLayout from './dashboard'\nimport DefaultLayout from '../layouts/default'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport HandleBar from '../components/HandleBar'\nimport { LowerLoader } from '../components/Styled'\nimport { setSearch } from '../store/actions/root'\nimport { Card } from './dashboard/content'\nimport List from '../components/List'\n\nexport const INITIAL_DISPLAY_METHOD = 'grid'\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  ${({ clear }) =>\n    clear &&\n    css`\n      margin: 0;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  ${({ isSearch }) =>\n    isSearch &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ContentLayout = ({\n  limit,\n  title,\n  store,\n  aside,\n  handle,\n  render,\n  filters,\n  getType,\n  getQuery,\n  options,\n  scaffold,\n  dashboard,\n  variables = {},\n  emptyMessage,\n  startOffset,\n  initialize,\n  children,\n  onLink\n}) => {\n  const search = useSelector((state) => state.root.search)\n  const Layout = dashboard ? DashboardLayout : DefaultLayout\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const [documents, setDocuments] = useState(store?.documents || [])\n\n  const dispatch = useDispatch()\n\n  const [\n    loadDocumentsBySearch,\n    { data: dataBySearch, loading: loadingBySearch, refetch: refetchBySearch }\n  ] = useLazyQuery(getQuery)\n\n  const [loadDocuments, { data, loading, refetch }] = useLazyQuery(getQuery)\n\n  const getFilters = () => {\n    return filters.map((filter) => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return (\n            <DatePicker\n              key={v4()}\n              value={date}\n              placeholder={filter.placeholder || 'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />\n          )\n        case 'SELECT':\n          return (\n            <Select\n              key={v4()}\n              options={filter.options}\n              placeholder={filter.placeholder || 'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          )\n        default:\n          return null\n      }\n    })\n  }\n\n  const onSearch = (value) => {\n    setDocuments([])\n    if (value) {\n      dispatch(setSearch(value))\n      loadDocumentsBySearch({\n        variables: { ...variables, search: value }\n      })\n    } else {\n      const result = { ...variables }\n\n      dispatch(setSearch(null))\n\n      if (refetch) refetch(result)\n      else loadDocuments({ variables: result })\n    }\n  }\n\n  const loadMore = async () => {\n    if (search && refetchBySearch) {\n      await refetchBySearch(variables)\n    } else {\n      if (refetch) {\n        await refetch(variables)\n      } else {\n        await loadDocuments({ variables })\n      }\n    }\n  }\n\n  const renderLoader = () => (\n    <LowerLoader key={'loader'}>\n      <Spinner />\n    </LowerLoader>\n  )\n\n  useEffect(() => {\n    if (initialize) loadDocuments()\n  }, [initialize])\n\n  useEffect(() => {\n    if (search) onSearch(search)\n  }, [search])\n\n  useEffect(() => {\n    const commonList = !search && !loading && data\n    const searchList = search && !loadingBySearch && dataBySearch\n    const resultList = commonList || searchList\n    if (resultList) {\n      const list = resultList[Object.keys(resultList)[0]]\n      if (list.length > 0) setDocuments(list)\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch])\n\n  return (\n    <Layout title={title} scaffold={scaffold}>\n      <Wrap clear={scaffold || dashboard}>\n        {!scaffold && !dashboard && (\n          <SearchBar\n            defaultValue={search}\n            onChangeFilter={() => setVisibleFilter(!visibleFilter)}\n            onSubmit={onSearch}\n          />\n        )}\n\n        {dashboard && handle && (\n          <HandleBar\n            title={title}\n            icon={handle.icon}\n            buttonCreateText={handle.buttonCreateText}\n            onCreate={handle.onCreate}\n            onChangeVisibleFilter={() => setVisibleFilter(!visibleFilter)}\n            onChangeDisplayMethod={handle.onChangeDisplayMethod}\n          />\n        )}\n\n        {(filters || options) && (\n          <FilterBar isOpen={visibleFilter} filters={getFilters()} options={options} />\n        )}\n\n        {search && loadingBySearch ? (\n          renderLoader()\n        ) : search ? (\n          typeof children === 'function' ? (\n            React.createElement(children, { documents })\n          ) : (\n            children\n          )\n        ) : (\n          <Container isSearch={search}>\n            <List\n              limit={limit}\n              type={getType}\n              query={getQuery}\n              startOffset={startOffset}\n              initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n              component={(item) => (\n                <Card\n                  item={item}\n                  component={render(item)}\n                  onLink={(item) => onLink(item)}\n                  withoutChecked\n                />\n              )}\n              emptyMessage={emptyMessage}\n              onClick={(item) => onLink(item)}\n            />\n            {aside}\n          </Container>\n        )}\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport default ContentLayout\n"]},"metadata":{},"sourceType":"module"}