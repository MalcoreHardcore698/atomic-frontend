{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Loader } from '../Styled';\nimport Alert from '../../atomic-ui/components/Alert';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"MessengerChat__Wrap\",\n  componentId: \"sc-1qcfj1w-0\"\n})([\"width:100%;flex-grow:1;\"]);\n_c = Wrap;\nexport const Messages = styled(Column).withConfig({\n  displayName: \"MessengerChat__Messages\",\n  componentId: \"sc-1qcfj1w-1\"\n})([\"background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);flex-grow:1;\"]);\n_c2 = Messages;\nexport const Empty = styled(Text).withConfig({\n  displayName: \"MessengerChat__Empty\",\n  componentId: \"sc-1qcfj1w-2\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;flex-grow:1;\"]);\n_c3 = Empty;\nexport const MessengerChat = ({\n  chat,\n  error,\n  loading,\n  appearance,\n  className,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  _s();\n\n  var _chat$messages, _chat$messages2;\n\n  const [message, setMessage] = useState('');\n  const messageRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    className: className\n  }), /*#__PURE__*/React.createElement(Messages, null, !loading && (chat === null || chat === void 0 ? void 0 : (_chat$messages = chat.messages) === null || _chat$messages === void 0 ? void 0 : _chat$messages.length) > 0 ? chat.messages.map(item => {\n    var _item$user, _item$user$avatar;\n\n    return /*#__PURE__*/React.createElement(Message, {\n      key: item.id,\n      avatar: (_item$user = item.user) === null || _item$user === void 0 ? void 0 : (_item$user$avatar = _item$user.avatar) === null || _item$user$avatar === void 0 ? void 0 : _item$user$avatar.path,\n      side: item.side,\n      name: item.name,\n      text: item.text,\n      time: item.createdAt,\n      tails: {\n        default: '/parts/tail.svg',\n        owner: '/parts/tail-owner.svg'\n      },\n      onLink: onLink\n    });\n  }) : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u0447\\u0430\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Empty, null, (chat === null || chat === void 0 ? void 0 : (_chat$messages2 = chat.messages) === null || _chat$messages2 === void 0 ? void 0 : _chat$messages2.length) === 0 ? 'История сообщений пуста' : 'Выберите чат')), chat && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !chat,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: 'text',\n    ref: messageRef,\n    placeholder: 'Отправьте сообщенение...',\n    disabled: loading || !chat,\n    appearance: appearance,\n    onChange: e => {\n      var _e$target;\n\n      return setMessage((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '');\n    },\n    onKeyDown: e => {\n      // Pressed ENTER\n      if (e.keyCode === 13) {\n        onSubmit(message);\n        messageRef.current.value = '';\n      }\n    },\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !chat,\n    onClick: () => {\n      onSubmit(message);\n      messageRef.current.value = '';\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\n\n_s(MessengerChat, \"o6/O0AA4vKUAGCLy8WDqCgCImPY=\");\n\n_c4 = MessengerChat;\nexport default MessengerChat;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Messages\");\n$RefreshReg$(_c3, \"Empty\");\n$RefreshReg$(_c4, \"MessengerChat\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/MessengerChat/index.js"],"names":["React","useRef","useState","styled","Row","Column","Message","Input","Button","Icon","Text","Spinner","Loader","Alert","Wrap","Messages","Empty","MessengerChat","chat","error","loading","appearance","className","onLink","onAttach","onSubmit","props","message","setMessage","messageRef","messages","length","map","item","id","user","avatar","path","side","name","text","createdAt","default","owner","width","textAlign","e","target","value","keyCode","current"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport { Loader } from '../Styled'\nimport Alert from '../../atomic-ui/components/Alert'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n  flex-grow: 1;\n`\n\nexport const Messages = styled(Column)`\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  flex-grow: 1;\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n`\n\nexport const MessengerChat = ({\n  chat,\n  error,\n  loading,\n  appearance,\n  className,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [message, setMessage] = useState('')\n  const messageRef = useRef(null)\n\n  return (\n    <Wrap {...props} className={className}>\n      <Messages>\n        {!loading && chat?.messages?.length > 0 ? (\n          chat.messages.map((item) => (\n            <Message\n              key={item.id}\n              avatar={item.user?.avatar?.path}\n              side={item.side}\n              name={item.name}\n              text={item.text}\n              time={item.createdAt}\n              tails={{\n                default: '/parts/tail.svg',\n                owner: '/parts/tail-owner.svg'\n              }}\n              onLink={onLink}\n            />\n          ))\n        ) : loading ? (\n          <Loader>\n            <Spinner />\n          </Loader>\n        ) : error ? (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об чате\n          </Alert>\n        ) : (\n          <Empty>{chat?.messages?.length === 0 ? 'История сообщений пуста' : 'Выберите чат'}</Empty>\n        )}\n      </Messages>\n\n      {chat && (\n        <Row>\n          <Button kind={'icon'} disabled={loading || !chat} onSubmit={onAttach}>\n            <Icon icon={'attach'} stroke={'white'} />\n          </Button>\n          <Input\n            name={'text'}\n            ref={messageRef}\n            placeholder={'Отправьте сообщенение...'}\n            disabled={loading || !chat}\n            appearance={appearance}\n            onChange={(e) => setMessage(e?.target?.value || '')}\n            onKeyDown={(e) => {\n              // Pressed ENTER\n              if (e.keyCode === 13) {\n                onSubmit(message)\n                messageRef.current.value = ''\n              }\n            }}\n            tabIndex={-1}\n          />\n          <Button\n            kind={'icon'}\n            disabled={loading || !chat}\n            onClick={() => {\n              onSubmit(message)\n              messageRef.current.value = ''\n            }}>\n            <Icon icon={'send'} stroke={'white'} />\n          </Button>\n        </Row>\n      )}\n    </Wrap>\n  )\n}\n\nexport default MessengerChat\n"]},"metadata":{},"sourceType":"module"}