{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport ProjectList from '../components/ProjectList';\nimport ArticleList from '../components/ArticleList';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { hasResponsibleMember } from '../components/Members';\nimport Organizer from '../components/Organizer';\nimport List from '../components/List';\nimport { Loader } from '../components/Styled';\nimport { setCompanies, setCategories, setStatuses, setSearch } from '../store/actions/root';\nimport { onUserClientEdit, onUserAboutMore, onUserMembers, onUserLink } from '../store/helpers/user';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { useProject } from '../hooks/useProject';\nimport { useHelper } from '../hooks/useHelper';\nimport { profilePages } from '../__mock__';\nimport queries from '../graphql/queries';\nconst TITLE = 'Профиль';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\nconst DISABLED_FILTERS = true;\nconst ContainerInProgress = styled(Row).withConfig({\n  displayName: \"profile__ContainerInProgress\",\n  componentId: \"sc-84d5hd-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\n\nconst InProgress = () => {\n  const methods = useProject();\n  const user = useSelector(state => state.user);\n  const defaultFolder = useMemo(() => user === null || user === void 0 ? void 0 : user.folders[0], [user]);\n  return /*#__PURE__*/React.createElement(ContainerInProgress, null, /*#__PURE__*/React.createElement(Organizer, {\n    defaultFolder: defaultFolder\n  }), /*#__PURE__*/React.createElement(List, {\n    limit: LIMIT,\n    type: 'getProjectsByIds',\n    variables: {\n      projects: defaultFolder.projects\n    },\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS_BY_IDS,\n    emptyMessage: 'Проектов нет',\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    component: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document,\n      layout: 'row'\n    }))\n  }));\n};\n\nconst Profile = () => {\n  var _user$company;\n\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    user,\n    search,\n    companies,\n    categories,\n    statuses\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }));\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(profilePages[0]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const isAdmin = useMemo(() => (user === null || user === void 0 ? void 0 : user.account) === 'ADMIN', [user]);\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS);\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES);\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES);\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage]);\n\n  const onAddProject = async () => {\n    var _companiesResponse$da, _categoriesResponse$d, _statusesResponse$dat;\n\n    const companiesResponse = (companies === null || companies === void 0 ? void 0 : companies.length) === 0 && loadCompanies && (await loadCompanies({\n      variables: {\n        account: ['ENTITY']\n      }\n    }));\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const companiesResult = companiesResponse === null || companiesResponse === void 0 ? void 0 : (_companiesResponse$da = companiesResponse.data) === null || _companiesResponse$da === void 0 ? void 0 : _companiesResponse$da.getUsers;\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d = categoriesResponse.data) === null || _categoriesResponse$d === void 0 ? void 0 : _categoriesResponse$d.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat = statusesResponse.data) === null || _statusesResponse$dat === void 0 ? void 0 : _statusesResponse$dat.getPostStatus;\n    if (companiesResult) dispatch(setCompanies(companiesResult));\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  };\n\n  const onAddArticle = async () => {\n    var _categoriesResponse$d2, _statusesResponse$dat2;\n\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d2 = categoriesResponse.data) === null || _categoriesResponse$d2 === void 0 ? void 0 : _categoriesResponse$d2.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat2 = statusesResponse.data) === null || _statusesResponse$dat2 === void 0 ? void 0 : _statusesResponse$dat2.getPostStatus;\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  };\n\n  const onSearch = value => {\n    if (value) dispatch(setSearch(value));else dispatch(setSearch(null));\n  };\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null;\n\n    switch (currentPage.value) {\n      case '/projects':\n        return /*#__PURE__*/React.createElement(ProjectList, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      case '/liked':\n        return /*#__PURE__*/React.createElement(ProjectList, {\n          variables: {\n            rating: user.email\n          }\n        });\n\n      case '/articles':\n        return /*#__PURE__*/React.createElement(ArticleList, {\n          variables: {\n            author: user.email\n          },\n          layout: 'row'\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(InProgress, null);\n    }\n  }, [user, currentPage]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onEdit: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      canEditAccount: !isAdmin,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user\n    }),\n    onCompanyLink: (user === null || user === void 0 ? void 0 : user.company) && recall(onUserLink, {\n      id: user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.email,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      queries: {\n        userChats: queries.GET_USER_CHATS,\n        chat: queries.GET_CHAT\n      },\n      mutations: {\n        addUserChat: queries.ADD_USER_CHAT,\n        sendMessage: queries.SEND_MESSAGE\n      }\n    }),\n    onMembers: recall(onUserMembers, {\n      id: user === null || user === void 0 ? void 0 : user.email,\n      auth: user === null || user === void 0 ? void 0 : user.email\n    })\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: currentPage,\n    options: profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== '/articles' : true),\n    onChange: item => setCurrentPage(item),\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '',\n    onCreate: isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject || isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle,\n    onChangeFilter: !DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter)),\n    onSubmit: onSearch\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [],\n    options: []\n  }), renderContentPage()));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useState","useEffect","useCallback","useMemo","useSelector","useDispatch","useLazyQuery","useRouter","styled","Row","Column","Switch","Spinner","hasAccess","INITIAL_DISPLAY_METHOD","DefaultLayout","UserBar","FilterBar","SearchBar","ProjectList","ArticleList","ProjectSuit","hasResponsibleMember","Organizer","List","Loader","setCompanies","setCategories","setStatuses","setSearch","onUserClientEdit","onUserAboutMore","onUserMembers","onUserLink","onProjectCreate","onArticleCreate","useProject","useHelper","profilePages","queries","TITLE","START_OFFSET","LIMIT","DISABLED_FILTERS","ContainerInProgress","InProgress","methods","user","state","defaultFolder","folders","projects","GET_PROJECTS_BY_IDS","document","Profile","recall","router","search","companies","categories","statuses","root","dispatch","currentPage","setCurrentPage","visibleFilter","setVisibleFilter","isAdmin","account","loadCompanies","GET_USERS","loadCategories","GET_CATEGORIES","loadStatuses","GET_POST_STATUSES","isProjects","value","isArticles","onAddProject","companiesResponse","length","variables","categoriesResponse","type","statusesResponse","companiesResult","data","getUsers","categoriesResult","getCategories","statusesResult","getPostStatus","mutation","CREATE_PROJECT","query","isPurpose","onAddArticle","CREATE_ARTICLE","onSearch","renderContentPage","author","email","rating","authenticated","push","name","canEditAccount","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update","company","id","auth","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","filter","page","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,OAAjE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,SAAnD,QAAoE,uBAApE;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,aAA5C,EAA2DC,UAA3D,QAA6E,uBAA7E;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,KAAK,GAAG,CAAd;AAEA,MAAMC,gBAAgB,GAAG,IAAzB;AAEA,MAAMC,mBAAmB,GAAGpC,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,oGAAzB;;AAQA,MAAMoC,UAAU,GAAG,MAAM;AACvB,QAAMC,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAMW,IAAI,GAAG3C,WAAW,CAAE4C,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,QAAME,aAAa,GAAG9C,OAAO,CAAC,MAAM4C,IAAN,aAAMA,IAAN,uBAAMA,IAAI,CAAEG,OAAN,CAAc,CAAd,CAAP,EAAyB,CAACH,IAAD,CAAzB,CAA7B;AAEA,sBACE,oBAAC,mBAAD,qBACE,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAEE;AAA1B,IADF,eAGE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEP,KADT;AAEE,IAAA,IAAI,EAAE,kBAFR;AAGE,IAAA,SAAS,EAAE;AAAES,MAAAA,QAAQ,EAAEF,aAAa,CAACE;AAA1B,KAHb;AAIE,IAAA,WAAW,EAAEV,YAJf;AAKE,IAAA,KAAK,EAAEF,OAAO,CAACa,mBALjB;AAME,IAAA,YAAY,EAAE,cANhB;AAOE,IAAA,oBAAoB,EAAEtC,sBAPxB;AAQE,IAAA,SAAS,EAAGuC,QAAD,iBAAc,oBAAC,WAAD,eAAiBP,OAAjB;AAA0B,MAAA,OAAO,EAAEO,QAAnC;AAA6C,MAAA,MAAM,EAAE;AAArD;AAR3B,IAHF,CADF;AAgBD,CAtBD;;AAwBA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,MAAM,GAAGjD,SAAS,EAAxB;AACA,QAAM;AAAEwC,IAAAA,IAAF;AAAQU,IAAAA,MAAR;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,UAA3B;AAAuCC,IAAAA;AAAvC,MAAoDxD,WAAW,CAAE4C,KAAD,KAAY;AAChFD,IAAAA,IAAI,EAAEC,KAAK,CAACD,IADoE;AAEhFU,IAAAA,MAAM,EAAET,KAAK,CAACa,IAAN,CAAWJ,MAF6D;AAGhFC,IAAAA,SAAS,EAAEV,KAAK,CAACa,IAAN,CAAWH,SAH0D;AAIhFC,IAAAA,UAAU,EAAEX,KAAK,CAACa,IAAN,CAAWF,UAJyD;AAKhFC,IAAAA,QAAQ,EAAEZ,KAAK,CAACa,IAAN,CAAWD;AAL2D,GAAZ,CAAD,CAArE;AAOA,QAAME,QAAQ,GAAGzD,WAAW,EAA5B;AACA,QAAM,CAAC0D,WAAD,EAAcC,cAAd,IAAgChE,QAAQ,CAACsC,YAAY,CAAC,CAAD,CAAb,CAA9C;AACA,QAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoClE,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMmE,OAAO,GAAGhE,OAAO,CAAC,MAAM,CAAA4C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEqB,OAAN,MAAkB,OAAzB,EAAkC,CAACrB,IAAD,CAAlC,CAAvB;AAEA,QAAM,CAACsB,aAAD,IAAkB/D,YAAY,CAACiC,OAAO,CAAC+B,SAAT,CAApC;AACA,QAAM,CAACC,cAAD,IAAmBjE,YAAY,CAACiC,OAAO,CAACiC,cAAT,CAArC;AACA,QAAM,CAACC,YAAD,IAAiBnE,YAAY,CAACiC,OAAO,CAACmC,iBAAT,CAAnC;AAEA,QAAMC,UAAU,GAAGxE,OAAO,CAAC,MAAM4D,WAAW,CAACa,KAAZ,KAAsB,WAA7B,EAA0C,CAACb,WAAD,CAA1C,CAA1B;AACA,QAAMc,UAAU,GAAG1E,OAAO,CAAC,MAAM4D,WAAW,CAACa,KAAZ,KAAsB,WAA7B,EAA0C,CAACb,WAAD,CAA1C,CAA1B;;AAEA,QAAMe,YAAY,GAAG,YAAY;AAAA;;AAC/B,UAAMC,iBAAiB,GACrB,CAAArB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEsB,MAAX,MAAsB,CAAtB,IACAX,aADA,KAEC,MAAMA,aAAa,CAAC;AAAEY,MAAAA,SAAS,EAAE;AAAEb,QAAAA,OAAO,EAAE,CAAC,QAAD;AAAX;AAAb,KAAD,CAFpB,CADF;AAIA,UAAMc,kBAAkB,GACtB,CAAAvB,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEqB,MAAZ,MAAuB,CAAvB,IACAT,cADA,KAEC,MAAMA,cAAc,CAAC;AAAEU,MAAAA,SAAS,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR;AAAb,KAAD,CAFrB,CADF;AAIA,UAAMC,gBAAgB,GAAG,CAAAxB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEoB,MAAV,MAAqB,CAArB,IAA0BP,YAA1B,KAA2C,MAAMA,YAAY,EAA7D,CAAzB;AAEA,UAAMY,eAAe,GAAGN,iBAAH,aAAGA,iBAAH,gDAAGA,iBAAiB,CAAEO,IAAtB,0DAAG,sBAAyBC,QAAjD;AACA,UAAMC,gBAAgB,GAAGN,kBAAH,aAAGA,kBAAH,gDAAGA,kBAAkB,CAAEI,IAAvB,0DAAG,sBAA0BG,aAAnD;AACA,UAAMC,cAAc,GAAGN,gBAAH,aAAGA,gBAAH,gDAAGA,gBAAgB,CAAEE,IAArB,0DAAG,sBAAwBK,aAA/C;AAEA,QAAIN,eAAJ,EAAqBvB,QAAQ,CAACpC,YAAY,CAAC2D,eAAD,CAAb,CAAR;AACrB,QAAIG,gBAAJ,EAAsB1B,QAAQ,CAACnC,aAAa,CAAC6D,gBAAD,CAAd,CAAR;AACtB,QAAIE,cAAJ,EAAoB5B,QAAQ,CAAClC,WAAW,CAAC8D,cAAD,CAAZ,CAAR;AAEpBnC,IAAAA,MAAM,CAACrB,eAAD,EAAkB;AACtBwB,MAAAA,SAAS,EAAE2B,eAAe,IAAI3B,SADR;AAEtBC,MAAAA,UAAU,EAAE6B,gBAAgB,IAAI7B,UAFV;AAGtBC,MAAAA,QAAQ,EAAE8B,cAAc,IAAI9B,QAHN;AAItBgC,MAAAA,QAAQ,EAAErD,OAAO,CAACsD,cAJI;AAKtBC,MAAAA,KAAK,EAAEvD,OAAO,CAAC+B,SALO;AAMtByB,MAAAA,SAAS,EAAE;AANW,KAAlB,CAAN;AAQD,GA3BD;;AA6BA,QAAMC,YAAY,GAAG,YAAY;AAAA;;AAC/B,UAAMd,kBAAkB,GACtB,CAAAvB,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEqB,MAAZ,MAAuB,CAAvB,IACAT,cADA,KAEC,MAAMA,cAAc,CAAC;AAAEU,MAAAA,SAAS,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR;AAAb,KAAD,CAFrB,CADF;AAIA,UAAMC,gBAAgB,GAAG,CAAAxB,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEoB,MAAV,MAAqB,CAArB,IAA0BP,YAA1B,KAA2C,MAAMA,YAAY,EAA7D,CAAzB;AAEA,UAAMe,gBAAgB,GAAGN,kBAAH,aAAGA,kBAAH,iDAAGA,kBAAkB,CAAEI,IAAvB,2DAAG,uBAA0BG,aAAnD;AACA,UAAMC,cAAc,GAAGN,gBAAH,aAAGA,gBAAH,iDAAGA,gBAAgB,CAAEE,IAArB,2DAAG,uBAAwBK,aAA/C;AAEA,QAAIH,gBAAJ,EAAsB1B,QAAQ,CAACnC,aAAa,CAAC6D,gBAAD,CAAd,CAAR;AACtB,QAAIE,cAAJ,EAAoB5B,QAAQ,CAAClC,WAAW,CAAC8D,cAAD,CAAZ,CAAR;AAEpBnC,IAAAA,MAAM,CAACpB,eAAD,EAAkB;AACtBwB,MAAAA,UAAU,EAAE6B,gBAAgB,IAAI7B,UADV;AAEtBC,MAAAA,QAAQ,EAAE8B,cAAc,IAAI9B,QAFN;AAGtBgC,MAAAA,QAAQ,EAAErD,OAAO,CAAC0D,cAHI;AAItBF,MAAAA,SAAS,EAAE;AAJW,KAAlB,CAAN;AAMD,GAnBD;;AAqBA,QAAMG,QAAQ,GAAItB,KAAD,IAAW;AAC1B,QAAIA,KAAJ,EAAWd,QAAQ,CAACjC,SAAS,CAAC+C,KAAD,CAAV,CAAR,CAAX,KACKd,QAAQ,CAACjC,SAAS,CAAC,IAAD,CAAV,CAAR;AACN,GAHD;;AAKA,QAAMsE,iBAAiB,GAAGjG,WAAW,CAAC,MAAM;AAC1C,QAAI,CAAC6C,IAAL,EAAW,OAAO,IAAP;;AACX,YAAQgB,WAAW,CAACa,KAApB;AACE,WAAK,WAAL;AACE,4BAAO,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAE;AAAEwB,YAAAA,MAAM,EAAErD,IAAI,CAACsD;AAAf;AAAxB,UAAP;;AACF,WAAK,QAAL;AACE,4BAAO,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAE;AAAEC,YAAAA,MAAM,EAAEvD,IAAI,CAACsD;AAAf;AAAxB,UAAP;;AACF,WAAK,WAAL;AACE,4BAAO,oBAAC,WAAD;AAAa,UAAA,SAAS,EAAE;AAAED,YAAAA,MAAM,EAAErD,IAAI,CAACsD;AAAf,WAAxB;AAAgD,UAAA,MAAM,EAAE;AAAxD,UAAP;;AACF;AACE,4BAAO,oBAAC,UAAD,OAAP;AARJ;AAUD,GAZoC,EAYlC,CAACtD,IAAD,EAAOgB,WAAP,CAZkC,CAArC;AAcA9D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC8C,IAAI,CAACwD,aAAV,EAAyB;AACvB/C,MAAAA,MAAM,CAACgD,IAAP,CAAY,OAAZ;AACD;AACF,GAJQ,EAIN,CAACzD,IAAD,CAJM,CAAT;;AAMA,MAAI,CAACA,IAAI,CAACwD,aAAV,EAAyB;AACvB,wBACE,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CADF;AAKD;;AAED,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAExD,IAAI,CAACwD,aAAL,GAAqBxD,IAAI,CAAC0D,IAAL,IAAajE,KAAlC,GAA0C;AAAhE,kBACE,oBAAC,MAAD,qBACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEO,IADR;AAEE,IAAA,MAAM,EAAEQ,MAAM,CAACzB,gBAAD,EAAmB;AAC/BiB,MAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEsD,KADmB;AAE/BK,MAAAA,cAAc,EAAE,CAACvC,OAFc;AAG/BwC,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAErE,OAAO,CAACsE,WADJ;AAETC,QAAAA,WAAW,EAAEvE,OAAO,CAACwE,KAFZ;AAGTC,QAAAA,cAAc,EAAEzE,OAAO,CAAC0E,KAHf;AAITC,QAAAA,cAAc,EAAE3E,OAAO,CAAC4E,kBAJf;AAKTC,QAAAA,eAAe,EAAE7E,OAAO,CAAC8E,iBALhB;AAMTC,QAAAA,MAAM,EAAE/E,OAAO,CAAC4E;AANP;AAHoB,KAAnB,CAFhB;AAcE,IAAA,WAAW,EAAE5D,MAAM,CAACxB,eAAD,EAAkB;AAAEgB,MAAAA;AAAF,KAAlB,CAdrB;AAeE,IAAA,aAAa,EACX,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEwE,OAAN,KACAhE,MAAM,CAACtB,UAAD,EAAa;AACjBuF,MAAAA,EAAE,EAAEzE,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAEwE,OAAR,kDAAE,cAAelB,KADF;AAEjBoB,MAAAA,IAAI,EAAE1E,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEsD,KAFK;AAGjB9D,MAAAA,OAAO,EAAE;AACPmF,QAAAA,SAAS,EAAEnF,OAAO,CAACoF,cADZ;AAEPC,QAAAA,IAAI,EAAErF,OAAO,CAACsF;AAFP,OAHQ;AAOjBlB,MAAAA,SAAS,EAAE;AACTmB,QAAAA,WAAW,EAAEvF,OAAO,CAACwF,aADZ;AAETC,QAAAA,WAAW,EAAEzF,OAAO,CAAC0F;AAFZ;AAPM,KAAb,CAjBV;AA8BE,IAAA,SAAS,EAAE1E,MAAM,CAACvB,aAAD,EAAgB;AAAEwF,MAAAA,EAAE,EAAEzE,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEsD,KAAZ;AAAmBoB,MAAAA,IAAI,EAAE1E,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEsD;AAA/B,KAAhB;AA9BnB,IADF,eAkCE,oBAAC,MAAD;AACE,IAAA,YAAY,EAAEtC,WADhB;AAEE,IAAA,OAAO,EAAEzB,YAAY,CAAC4F,MAAb,CAAqBC,IAAD,IAC3B,CAAC7G,oBAAoB,CAACyB,IAAD,CAArB,GAA8BoF,IAAI,CAACvD,KAAL,KAAe,WAA7C,GAA2D,IADpD,CAFX;AAKE,IAAA,QAAQ,EAAGwD,IAAD,IAAUpE,cAAc,CAACoE,IAAD,CALpC;AAME,IAAA,OAAO;AANT,IAlCF,eA2CE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAE3E,MADhB;AAEE,IAAA,gBAAgB,EACdkB,UAAU,GAAG,mBAAH,GAAyBE,UAAU,GAAG,mBAAH,GAAyB,EAH1E;AAKE,IAAA,QAAQ,EACLF,UAAU,IAAI9D,SAAS,CAACkC,IAAD,EAAO,iBAAP,CAAvB,IAAoD+B,YAArD,IACCD,UAAU,IAAIhE,SAAS,CAACkC,IAAD,EAAO,iBAAP,CAAvB,IAAoDiD,YAPzD;AASE,IAAA,cAAc,EAAE,CAACrD,gBAAD,KAAsB,MAAMuB,gBAAgB,CAAC,CAACD,aAAF,CAA5C,CATlB;AAUE,IAAA,QAAQ,EAAEiC;AAVZ,IA3CF,eAwDE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEjC,aAAnB;AAAkC,IAAA,OAAO,EAAE,EAA3C;AAA+C,IAAA,OAAO,EAAE;AAAxD,IAxDF,EA0DGkC,iBAAiB,EA1DpB,CADF,CADF;AAgED,CAzKD;;AA2KA,eAAe7C,OAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\n\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content'\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport ProjectList from '../components/ProjectList'\nimport ArticleList from '../components/ArticleList'\nimport ProjectSuit from '../components/ProjectSuit'\nimport { hasResponsibleMember } from '../components/Members'\nimport Organizer from '../components/Organizer'\nimport List from '../components/List'\nimport { Loader } from '../components/Styled'\nimport { setCompanies, setCategories, setStatuses, setSearch } from '../store/actions/root'\nimport { onUserClientEdit, onUserAboutMore, onUserMembers, onUserLink } from '../store/helpers/user'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { useProject } from '../hooks/useProject'\nimport { useHelper } from '../hooks/useHelper'\nimport { profilePages } from '../__mock__'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Профиль'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst DISABLED_FILTERS = true\n\nconst ContainerInProgress = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst InProgress = () => {\n  const methods = useProject()\n  const user = useSelector((state) => state.user)\n\n  const defaultFolder = useMemo(() => user?.folders[0], [user])\n\n  return (\n    <ContainerInProgress>\n      <Organizer defaultFolder={defaultFolder} />\n\n      <List\n        limit={LIMIT}\n        type={'getProjectsByIds'}\n        variables={{ projects: defaultFolder.projects }}\n        startOffset={START_OFFSET}\n        query={queries.GET_PROJECTS_BY_IDS}\n        emptyMessage={'Проектов нет'}\n        initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n        component={(document) => <ProjectSuit {...methods} project={document} layout={'row'} />}\n      />\n    </ContainerInProgress>\n  )\n}\n\nconst Profile = () => {\n  const recall = useHelper()\n  const router = useRouter()\n  const { user, search, companies, categories, statuses } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }))\n  const dispatch = useDispatch()\n  const [currentPage, setCurrentPage] = useState(profilePages[0])\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const isAdmin = useMemo(() => user?.account === 'ADMIN', [user])\n\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS)\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES)\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES)\n\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage])\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage])\n\n  const onAddProject = async () => {\n    const companiesResponse =\n      companies?.length === 0 &&\n      loadCompanies &&\n      (await loadCompanies({ variables: { account: ['ENTITY'] } }))\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const companiesResult = companiesResponse?.data?.getUsers\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (companiesResult) dispatch(setCompanies(companiesResult))\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }\n\n  const onAddArticle = async () => {\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }\n\n  const onSearch = (value) => {\n    if (value) dispatch(setSearch(value))\n    else dispatch(setSearch(null))\n  }\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null\n    switch (currentPage.value) {\n      case '/projects':\n        return <ProjectList variables={{ author: user.email }} />\n      case '/liked':\n        return <ProjectList variables={{ rating: user.email }} />\n      case '/articles':\n        return <ArticleList variables={{ author: user.email }} layout={'row'} />\n      default:\n        return <InProgress />\n    }\n  }, [user, currentPage])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onEdit={recall(onUserClientEdit, {\n            user: user?.email,\n            canEditAccount: !isAdmin,\n            mutations: {\n              del: queries.DELETE_USER,\n              forgotEmail: queries.LOGIN,\n              forgotPassword: queries.RESET,\n              changePassword: queries.UPDATE_CLIENT_USER,\n              checkResetToken: queries.CHECK_RESET_TOKEN,\n              update: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onAboutMore={recall(onUserAboutMore, { user })}\n          onCompanyLink={\n            user?.company &&\n            recall(onUserLink, {\n              id: user?.company?.email,\n              auth: user?.email,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })\n          }\n          onMembers={recall(onUserMembers, { id: user?.email, auth: user?.email })}\n        />\n\n        <Switch\n          defaultValue={currentPage}\n          options={profilePages.filter((page) =>\n            !hasResponsibleMember(user) ? page.value !== '/articles' : true\n          )}\n          onChange={(item) => setCurrentPage(item)}\n          stretch\n        />\n\n        <SearchBar\n          defaultValue={search}\n          buttonCreateText={\n            isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''\n          }\n          onCreate={\n            (isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject) ||\n            (isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle)\n          }\n          onChangeFilter={!DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter))}\n          onSubmit={onSearch}\n        />\n\n        <FilterBar isOpen={visibleFilter} filters={[]} options={[]} />\n\n        {renderContentPage()}\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}