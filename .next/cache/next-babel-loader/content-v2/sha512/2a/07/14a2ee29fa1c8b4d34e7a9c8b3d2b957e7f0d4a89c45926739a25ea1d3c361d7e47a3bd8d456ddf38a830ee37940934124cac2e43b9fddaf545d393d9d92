{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Alert from '../../atomic-ui/components/Alert';\nimport DatePicker from '../../atomic-ui/components/DatePicker';\nimport Select from '../../atomic-ui/components/Select';\nimport Table from '../../atomic-ui/components/Table';\nimport templates from '../../atomic-ui/components/Table/templates';\nimport { useHelper } from '../../hooks/useHelper';\nimport DashboardLayout from '../../layouts/dashboard';\nimport HandleBar from '../../components/HandleBar';\nimport FilterBar from '../../components/FilterBar';\nimport RoleCard from '../../components/RoleCard';\nimport LazyLoad from '../../components/LazyLoad';\nimport FadeLoad from '../../components/FadeLoad';\nimport { onRoleCreate, onRoleEdit, onRoleDelete, onRoleLink } from '../../store/helpers/role';\nimport { setDocuments } from '../../store/actions/documents';\nimport { categories } from '../../__mock__';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Роли';\n\nconst Roles = ({\n  store\n}) => {\n  const recall = useHelper();\n  const documents = useSelector(state => state.documents);\n  const dispatch = useDispatch();\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [displayMethod, onChangeDisplayMethod] = useState('grid');\n  const roles = useMemo(() => documents || store.roles, [documents, store]);\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(DashboardLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(HandleBar, {\n    icon: 'lock',\n    title: TITLE,\n    buttonCreateText: 'Создать роль',\n    onCreate: recall(onRoleCreate, {\n      mutation: queries.CREATE_ROLE\n    }),\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: item => onChangeDisplayMethod(item.value)\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [/*#__PURE__*/React.createElement(DatePicker, {\n      key: 0,\n      value: date,\n      placeholder: 'Дата публикации',\n      onChange: onChangeDate,\n      withNavigate: true\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: 1,\n      options: categories,\n      placeholder: 'Раздел',\n      selected: select,\n      onChange: item => onChangeSelect(item)\n    })],\n    options: displayMethod === 'list' ? [] : templates.role.map((item, index) => ({\n      label: item.header,\n      value: index\n    }))\n  }), roles.length === 0 && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0420\\u043E\\u043B\\u0435\\u0439 \\u043D\\u0435\\u0442\"), displayMethod === 'list' && /*#__PURE__*/React.createElement(Table, {\n    data: roles,\n    template: templates.role,\n    onChecked: () => {},\n    onClick: role => recall(onRoleLink, {\n      id: role.id,\n      role\n    })(),\n    onDelete: role => recall(onRoleDelete, {\n      id: role.id,\n      role,\n      mutation: queries.DELETE_ROLE\n    })(),\n    onEdit: role => recall(onRoleEdit, {\n      id: role.id,\n      role,\n      mutation: queries.UPDATE_ROLE\n    })(),\n    style: {\n      overflowX: 'auto',\n      width: 'calc(100vw - 290px)'\n    }\n  }), displayMethod === 'grid' && /*#__PURE__*/React.createElement(Grid, null, roles.map(role => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: role.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(RoleCard, {\n    role: role,\n    onChecked: () => {},\n    onLink: recall(onRoleLink, {\n      id: role.id,\n      role\n    }),\n    onDelete: recall(onRoleDelete, {\n      id: role.id,\n      role,\n      mutation: queries.DELETE_ROLE\n    }),\n    onEdit: recall(onRoleEdit, {\n      id: role.id,\n      role,\n      mutation: queries.UPDATE_ROLE\n    })\n  }))))));\n};\n\nexport var __N_SSP = true;\nexport default Roles;","map":null,"metadata":{},"sourceType":"module"}