{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../atomic-ui/utils/functions';\nimport { useHelper } from './useHelper';\nimport { useMutate } from './useMutate';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onCategoryLink } from '../store/helpers/category';\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project';\nimport { onRoleLink } from '../store/helpers/role';\nimport { onUserLink } from '../store/helpers/user';\nimport { onTicketLink } from '../store/helpers/ticket';\nimport { updateUser } from '../store/actions/user';\nimport queries from '../graphql/queries';\nexport const getProjectLinkProps = (project, user, owned, dispatch, mutate, recall, callback) => ({\n  id: project === null || project === void 0 ? void 0 : project.id,\n  title: project === null || project === void 0 ? void 0 : project.title,\n  auth: user === null || user === void 0 ? void 0 : user.email,\n  liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === (project === null || project === void 0 ? void 0 : project.id)),\n  onLike: user.email && mutate(queries.LIKE_PROJECT, {\n    id: project === null || project === void 0 ? void 0 : project.id\n  }, response => dispatch(updateUser(response.data.likeProject))),\n  onAdd: user.email && recall(onProjectAdd, {\n    id: project === null || project === void 0 ? void 0 : project.id,\n    folders: user === null || user === void 0 ? void 0 : user.folders,\n    mutations: {\n      addProject: queries.ADD_USER_PROJECT,\n      createFolder: queries.ADD_USER_FOLDER\n    },\n    callback\n  }),\n  owned\n});\nexport const getUserLinkProps = (id, user, owned) => ({\n  id,\n  auth: user === null || user === void 0 ? void 0 : user.email,\n  owned,\n  queries: {\n    userChats: queries.GET_USER_CHATS,\n    chat: queries.GET_CHAT\n  },\n  mutations: {\n    addUserChat: queries.ADD_USER_CHAT,\n    sendMessage: queries.SEND_MESSAGE\n  }\n});\nexport const invokeRecall = (recall, mutate, user, dispatch, query) => {\n  if (query.article) {\n    const id = b64DecodeUnicode(query.article);\n    recall(onArticleLink, {\n      id\n    })();\n  }\n\n  if (query.category) {\n    const id = b64DecodeUnicode(query.category);\n    recall(onCategoryLink, {\n      id\n    })();\n  }\n\n  if (query.project) {\n    var _user$projects;\n\n    const id = b64DecodeUnicode(query.project);\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === id);\n    recall(onProjectLink, getProjectLinkProps(id, user, owned, dispatch, mutate, recall))();\n  }\n\n  if (query.role) {\n    const id = b64DecodeUnicode(query.role);\n    recall(onRoleLink, {\n      id\n    })();\n  }\n\n  if (query.user) {\n    const id = b64DecodeUnicode(query.user);\n    const owned = id === (user === null || user === void 0 ? void 0 : user.name);\n    recall(onUserLink, getUserLinkProps(id, user, owned))();\n  }\n\n  if (query.ticket) {\n    const id = b64DecodeUnicode(query.ticket);\n    recall(onTicketLink, {\n      id,\n      auth: user === null || user === void 0 ? void 0 : user.email\n    })();\n  }\n};\nexport const useEntityQuery = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const router = useRouter();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  const setQuery = async (str, entity, callback) => {\n    await router.push({\n      pathname: router.pathname,\n      query: {\n        [entity]: b64EncodeUnicode(str)\n      }\n    }, undefined, {\n      shallow: true\n    });\n    if (callback) callback(str);\n  };\n\n  const useDetectQuery = () => {\n    _s();\n\n    useEffect(() => {\n      const query = router.query;\n      invokeRecall(recall, mutate, user, dispatch, query);\n    }, [router]);\n  };\n\n  _s(useDetectQuery, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return {\n    setQuery,\n    useDetectQuery\n  };\n};\n\n_s2(useEntityQuery, \"xvJUp8/UH0J7Qj1gc/rGlRh9RFY=\", false, function () {\n  return [useHelper, useMutate, useRouter, useSelector, useDispatch];\n});\n\nexport default useEntityQuery;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useEntityQuery.js"],"names":["useEffect","useRouter","useDispatch","useSelector","b64DecodeUnicode","b64EncodeUnicode","useHelper","useMutate","onArticleLink","onCategoryLink","onProjectAdd","onProjectLink","onRoleLink","onUserLink","onTicketLink","updateUser","queries","getProjectLinkProps","project","user","owned","dispatch","mutate","recall","callback","id","title","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","getUserLinkProps","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","invokeRecall","query","article","category","projects","candidate","role","name","ticket","useEntityQuery","router","state","setQuery","str","entity","push","pathname","undefined","shallow","useDetectQuery"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../atomic-ui/utils/functions'\n\nimport { useHelper } from './useHelper'\nimport { useMutate } from './useMutate'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onCategoryLink } from '../store/helpers/category'\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project'\nimport { onRoleLink } from '../store/helpers/role'\nimport { onUserLink } from '../store/helpers/user'\nimport { onTicketLink } from '../store/helpers/ticket'\nimport { updateUser } from '../store/actions/user'\nimport queries from '../graphql/queries'\n\nexport const getProjectLinkProps = (project, user, owned, dispatch, mutate, recall, callback) => ({\n  id: project?.id,\n  title: project?.title,\n  auth: user?.email,\n  liked: !!(user?.likedProjects || []).find((item) => item.id === project?.id),\n  onLike:\n    user.email &&\n    mutate(queries.LIKE_PROJECT, { id: project?.id }, (response) =>\n      dispatch(updateUser(response.data.likeProject))\n    ),\n  onAdd:\n    user.email &&\n    recall(onProjectAdd, {\n      id: project?.id,\n      folders: user?.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      },\n      callback\n    }),\n  owned\n})\n\nexport const getUserLinkProps = (id, user, owned) => ({\n  id,\n  auth: user?.email,\n  owned,\n  queries: {\n    userChats: queries.GET_USER_CHATS,\n    chat: queries.GET_CHAT\n  },\n  mutations: {\n    addUserChat: queries.ADD_USER_CHAT,\n    sendMessage: queries.SEND_MESSAGE\n  }\n})\n\nexport const invokeRecall = (recall, mutate, user, dispatch, query) => {\n  if (query.article) {\n    const id = b64DecodeUnicode(query.article)\n    recall(onArticleLink, { id })()\n  }\n\n  if (query.category) {\n    const id = b64DecodeUnicode(query.category)\n    recall(onCategoryLink, { id })()\n  }\n\n  if (query.project) {\n    const id = b64DecodeUnicode(query.project)\n    const owned = user?.projects?.find((candidate) => candidate.id === id)\n    recall(onProjectLink, getProjectLinkProps(id, user, owned, dispatch, mutate, recall))()\n  }\n\n  if (query.role) {\n    const id = b64DecodeUnicode(query.role)\n    recall(onRoleLink, { id })()\n  }\n\n  if (query.user) {\n    const id = b64DecodeUnicode(query.user)\n    const owned = id === user?.name\n    recall(onUserLink, getUserLinkProps(id, user, owned))()\n  }\n\n  if (query.ticket) {\n    const id = b64DecodeUnicode(query.ticket)\n    recall(onTicketLink, { id, auth: user?.email })()\n  }\n}\n\nexport const useEntityQuery = () => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const router = useRouter()\n\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  const setQuery = async (str, entity, callback) => {\n    await router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          [entity]: b64EncodeUnicode(str)\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n    if (callback) callback(str)\n  }\n\n  const useDetectQuery = () => {\n    useEffect(() => {\n      const query = router.query\n      invokeRecall(recall, mutate, user, dispatch, query)\n    }, [router])\n  }\n\n  return { setQuery, useDetectQuery }\n}\n\nexport default useEntityQuery\n"]},"metadata":{},"sourceType":"module"}