{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 25rem;\n  font-weight: var(--font-weight-regular);\n\n  ${({\n  size\n}) => size === 'xs' && css`\n      width: 16px;\n      height: 16px;\n      font-size: var(--font-size-xs);\n    `}\n\n  ${({\n  size\n}) => size === 's' && css`\n      width: 20px;\n      height: 20px;\n      font-size: var(--font-size-s);\n    `}\n\n  ${({\n  size\n}) => size === 'm' && css`\n      width: 25px;\n      height: 25px;\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      color: white;\n      background: var(--default-color-accent);\n      border: 1px solid var(--default-color-accent);\n\n      &:hover {\n        background: var(--default-color-accent__hover);\n        border: 1px solid var(--default-color-accent__hover);\n      }\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'outlined' && css`\n      color: gray;\n      border: 1px solid rgba(0, 0, 0, 15%);\n\n      &:hover {\n        color: var(--default-color-accent);\n        border: 1px solid var(--default-color-accent);\n      }\n    `}\n`;\nexport const Badge = (_ref) => {\n  let {\n    count\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"count\"]);\n\n  return __jsx(Wrap, props, count);\n};\nBadge.defaultProps = {\n  count: 0,\n  size: 's',\n  appearance: 'default'\n};\nexport default Badge;","map":null,"metadata":{},"sourceType":"module"}