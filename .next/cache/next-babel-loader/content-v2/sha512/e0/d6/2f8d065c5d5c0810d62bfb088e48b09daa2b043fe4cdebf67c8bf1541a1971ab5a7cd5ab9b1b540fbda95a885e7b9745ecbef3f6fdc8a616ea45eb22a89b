{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Search from '../SearchBar';\nimport TicketChat from '../TicketChat';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"TicketView__Wrap\",\n  componentId: \"sc-1wxiq0b-0\"\n})([\"height:100%;flex-grow:1;@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Tickets = styled(Column).withConfig({\n  displayName: \"TicketView__Tickets\",\n  componentId: \"sc-1wxiq0b-1\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\nexport const Ticket = styled(Member).withConfig({\n  displayName: \"TicketView__Ticket\",\n  componentId: \"sc-1wxiq0b-2\"\n})([\"margin:10px 0 0 0;padding:10px;border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);\"]));\nexport const LIMIT_TICKETS = 36;\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null); // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n\n  const [offsetTickets, setOffsetTickets] = useState(0);\n  const [tickets, setTickets] = useState([]);\n  const documents = useSelector(state => state.documents);\n  const dispatch = useDispatch();\n  const variablesTickets = useMemo(() => ({\n    offset: offsetTickets,\n    limit: LIMIT_TICKETS\n  }), [offsetTickets]);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy: 'no-cache'\n  });\n  const [closeTicket, {\n    data: dataCloseTicket,\n    loading: loadingCloseTicket,\n    error: errorCloseTicket\n  }] = useMutation(queries.CLOSE_TICKET);\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets // fetchMore: updateTickets\n\n  } = useQuery(queries.GET_TICKETS, {\n    variables: variablesTickets,\n    fetchPolicy: 'no-cache'\n  });\n  useEffect(() => {\n    if (!loading && data !== null && data !== void 0 && data.getTicket) {\n      setCurrentTicket(data.getTicket);\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket !== null && dataCloseTicket !== void 0 && dataCloseTicket.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket;\n      setCurrentTicket(candidate);\n      dispatch(setDocuments(documents.map(document => document.id === candidate.id ? candidate : document)));\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket]);\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets(prev => [...prev, ...dataTickets.getTickets]);\n    }\n  }, [dataTickets, loadingTickets]);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Tickets, null, /*#__PURE__*/React.createElement(Search, {\n    appearance: 'ghost'\n  }), !loadingTickets ? tickets.map(item => {\n    var _item$author;\n\n    return /*#__PURE__*/React.createElement(Ticket, {\n      key: item.id,\n      name: item.title,\n      position: (_item$author = item.author) === null || _item$author === void 0 ? void 0 : _item$author.name,\n      active: currentTicket && currentTicket.id === item.id,\n      onClick: () => {\n        refetch({\n          id: item.id\n        });\n        setCurrentTicket(item);\n      }\n    });\n  }) : errorTickets ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      marginTop: 15,\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(TicketChat, {\n    ticket: currentTicket,\n    loading: loading || errorCloseTicket,\n    onLink: onMemberLink,\n    onFinish: () => closeTicket({\n      variables: {\n        id: ticket\n      }\n    }),\n    onReport: onReport,\n    onAttach: onAttach,\n    onSubmit: onSubmit\n  }));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketView/index.js"],"names":["React","useState","useEffect","useMemo","styled","css","useQuery","useMutation","useSelector","useDispatch","Row","Column","Member","Alert","Spinner","Search","TicketChat","setDocuments","queries","Loader","Wrap","appearance","Tickets","Ticket","active","LIMIT_TICKETS","View","ticket","onMemberLink","onReport","onAttach","onSubmit","props","currentTicket","setCurrentTicket","offsetTickets","setOffsetTickets","tickets","setTickets","documents","state","dispatch","variablesTickets","offset","limit","data","loading","refetch","GET_TICKET","variables","id","fetchPolicy","closeTicket","dataCloseTicket","loadingCloseTicket","error","errorCloseTicket","CLOSE_TICKET","dataTickets","loadingTickets","errorTickets","GET_TICKETS","getTicket","candidate","map","document","prev","getTickets","item","title","author","name","marginTop","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport Search from '../SearchBar'\nimport TicketChat from '../TicketChat'\nimport { setDocuments } from '../../store/actions/documents'\nimport queries from '../../graphql/queries'\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Tickets = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Ticket = styled(Member)`\n  margin: 10px 0 0 0;\n  padding: 10px;\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n    `}\n`\n\nexport const LIMIT_TICKETS = 36\n\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null)\n  // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n  const [offsetTickets, setOffsetTickets] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const documents = useSelector((state) => state.documents)\n  const dispatch = useDispatch()\n\n  const variablesTickets = useMemo(\n    () => ({\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    }),\n    [offsetTickets]\n  )\n\n  const { data, loading, refetch } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy: 'no-cache'\n  })\n\n  const [\n    closeTicket,\n    { data: dataCloseTicket, loading: loadingCloseTicket, error: errorCloseTicket }\n  ] = useMutation(queries.CLOSE_TICKET)\n\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets\n    // fetchMore: updateTickets\n  } = useQuery(queries.GET_TICKETS, {\n    variables: variablesTickets,\n    fetchPolicy: 'no-cache'\n  })\n\n  useEffect(() => {\n    if (!loading && data?.getTicket) {\n      setCurrentTicket(data.getTicket)\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket?.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket\n\n      setCurrentTicket(candidate)\n      dispatch(\n        setDocuments(\n          documents.map((document) => (document.id === candidate.id ? candidate : document))\n        )\n      )\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket])\n\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets((prev) => [...prev, ...dataTickets.getTickets])\n    }\n  }, [dataTickets, loadingTickets])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Tickets>\n        <Search appearance={'ghost'} />\n        {!loadingTickets ? (\n          tickets.map((item) => (\n            <Ticket\n              key={item.id}\n              name={item.title}\n              position={item.author?.name}\n              active={currentTicket && currentTicket.id === item.id}\n              onClick={() => {\n                refetch({ id: item.id })\n                setCurrentTicket(item)\n              }}\n            />\n          ))\n        ) : errorTickets ? (\n          <Alert appearance={'error'} style={{ marginTop: 15, width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )}\n      </Tickets>\n      <TicketChat\n        ticket={currentTicket}\n        loading={loading || errorCloseTicket}\n        onLink={onMemberLink}\n        onFinish={() =>\n          closeTicket({\n            variables: {\n              id: ticket\n            }\n          })\n        }\n        onReport={onReport}\n        onAttach={onAttach}\n        onSubmit={onSubmit}\n      />\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}