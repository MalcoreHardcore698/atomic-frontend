{"ast":null,"code":"import React from 'react';\nimport TicketForm from '../../components/FormTicket';\nimport DeleteForm from '../../components/FormDelete';\nimport TicketCard from '../../components/TicketCard';\nimport TicketView from '../../components/TicketView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink } from './user';\nimport { onFileLink } from '.';\nexport function onTicketLink(dispatch, props) {\n  const {\n    ticket\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Обращение',\n    content: /*#__PURE__*/React.createElement(TicketView, {\n      ticket: ticket,\n      appearance: 'clear',\n      onFileLink: () => onFileLink(dispatch),\n      onMemberLink: () => onUserLink(dispatch)\n    })\n  }));\n}\nexport function onTicketCreate(dispatch, props) {\n  const {\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Создание обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              input: {\n                title: form.title,\n                body: form.body || 'Содержимое отсутствует',\n                status: form.status.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.createTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно создано'\n          }));\n        } catch (err) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketEdit(dispatch, props) {\n  const {\n    ticket,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Редактирвоание обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      ticket: ticket,\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              id: ticket.id,\n              input: {\n                title: form.title,\n                body: form.body || 'Содержимое отсутствует',\n                status: form.status.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.updateTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно отредактировано'\n          }));\n        } catch (_unused) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketDelete(dispatch, props) {\n  const {\n    ticket,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление обращения',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              id: ticket.id\n            }\n          });\n          dispatch(setDocuments(tickets.data.deleteTicket));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно удалено'\n          }));\n        } catch (_unused2) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить обращение'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(TicketCard, {\n      ticket: ticket,\n      appearance: 'clear'\n    }))\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}