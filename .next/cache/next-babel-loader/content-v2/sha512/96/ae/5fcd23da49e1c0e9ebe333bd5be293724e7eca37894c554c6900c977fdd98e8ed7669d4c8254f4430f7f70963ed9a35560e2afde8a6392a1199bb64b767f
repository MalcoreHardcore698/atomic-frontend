{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Menu\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Divider from '../Divider';\nexport const Wrap = styled(Column)`\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`;\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  font-weight: var(--font-weight-medium);\n  padding: var(--default-gap) var(--default-gap) 0 var(--default-gap);\n  line-height: 1;\n`;\nexport const ManageButton = styled(Button)`\n  color: var(--default-color-accent);\n`;\nexport const ManageRow = styled(Row)`\n  grid-gap: 0;\n  align-items: center;\n\n  span {\n    font-weight: var(--font-weight-medium);\n  }\n`;\nexport const DangerButton = styled(Button)`\n  color: var(--default-color-red);\n`;\nexport const List = styled(Column)`\n  text-align: left;\n  align-items: flex-start;\n  padding: 0 var(--default-gap) var(--default-gap) var(--default-gap);\n\n  button {\n    font-weight: var(--font-weight-medium);\n    text-align: inherit;\n  }\n`;\nexport const Menu = ({\n  links,\n  header,\n  className,\n  style,\n  listStyle\n}) => __jsx(Wrap, {\n  className: className,\n  style: style,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }\n}, header && __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }\n}, __jsx(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }\n}, __jsx(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 11\n  }\n}, header.title), header.link && __jsx(ManageButton, {\n  appearance: 'clear',\n  onClick: header.link.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }\n}, __jsx(ManageRow, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 15\n  }\n}, __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }\n}, header.link.text), __jsx(Icon, {\n  icon: 'arrowRight',\n  size: 'xs',\n  stroke: 'var(--default-color-accent)',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 17\n  }\n})))), __jsx(Divider, {\n  clear: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }\n})), links && links.length && __jsx(List, {\n  style: listStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }\n}, links.map((link, index) => link !== 'danger' ? __jsx(Button, {\n  key: index,\n  style: {\n    color: link.active ? 'var(--default-color-accent)' : 'black'\n  },\n  appearance: 'clear',\n  onClick: link.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }\n}, link.text) : __jsx(DangerButton, {\n  key: index,\n  appearance: 'clear',\n  onClick: link.onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }\n}, link.text))));\nMenu.defaultProps = {\n  appearance: 'default'\n};\nexport default Menu;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Menu/index.js"],"names":["React","styled","css","Row","Column","Button","Text","Icon","Divider","Wrap","appearance","Header","ManageButton","ManageRow","DangerButton","List","Menu","links","header","className","style","listStyle","title","link","onClick","text","length","map","index","color","active","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Button from '../Button'\nimport Text from '../Text'\nimport Icon from '../Icon'\nimport Divider from '../Divider'\n\nexport const Wrap = styled(Column)`\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  font-weight: var(--font-weight-medium);\n  padding: var(--default-gap) var(--default-gap) 0 var(--default-gap);\n  line-height: 1;\n`\n\nexport const ManageButton = styled(Button)`\n  color: var(--default-color-accent);\n`\n\nexport const ManageRow = styled(Row)`\n  grid-gap: 0;\n  align-items: center;\n\n  span {\n    font-weight: var(--font-weight-medium);\n  }\n`\n\nexport const DangerButton = styled(Button)`\n  color: var(--default-color-red);\n`\n\nexport const List = styled(Column)`\n  text-align: left;\n  align-items: flex-start;\n  padding: 0 var(--default-gap) var(--default-gap) var(--default-gap);\n\n  button {\n    font-weight: var(--font-weight-medium);\n    text-align: inherit;\n  }\n`\n\nexport const Menu = ({ links, header, className, style, listStyle }) => (\n  <Wrap className={className} style={style}>\n    {header && (\n      <React.Fragment>\n        <Header>\n          <Text>{header.title}</Text>\n          {header.link && (\n            <ManageButton appearance={'clear'} onClick={header.link.onClick}>\n              <ManageRow>\n                <span>{header.link.text}</span>\n                <Icon icon={'arrowRight'} size={'xs'} stroke={'var(--default-color-accent)'} />\n              </ManageRow>\n            </ManageButton>\n          )}\n        </Header>\n\n        <Divider clear />\n      </React.Fragment>\n    )}\n\n    {links && links.length && (\n      <List style={listStyle}>\n        {links.map((link, index) =>\n          link !== 'danger' ? (\n            <Button\n              key={index}\n              style={{ color: link.active ? 'var(--default-color-accent)' : 'black' }}\n              appearance={'clear'}\n              onClick={link.onClick}>\n              {link.text}\n            </Button>\n          ) : (\n            <DangerButton key={index} appearance={'clear'} onClick={link.onClick}>\n              {link.text}\n            </DangerButton>\n          )\n        )}\n      </List>\n    )}\n  </Wrap>\n)\n\nMenu.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}