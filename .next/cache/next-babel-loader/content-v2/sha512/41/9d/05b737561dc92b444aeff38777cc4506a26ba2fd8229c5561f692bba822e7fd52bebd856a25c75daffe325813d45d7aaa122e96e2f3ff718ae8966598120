{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Title from '../../atomic-ui/components/Title';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"RoleView__Wrap\",\n  componentId: \"sc-3s69fr-0\"\n})([\"grid-gap:var(--default-gap);height:max-content;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Permissions = styled(Row).withConfig({\n  displayName: \"RoleView__Permissions\",\n  componentId: \"sc-3s69fr-1\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\nexport const View = ({\n  role,\n  appearance,\n  className,\n  style\n}) => /*#__PURE__*/React.createElement(Wrap, {\n  className: className,\n  style: style,\n  appearance: appearance\n}, /*#__PURE__*/React.createElement(Column, {\n  style: {\n    gridGap: 0\n  }\n}, /*#__PURE__*/React.createElement(Meta, {\n  date: role.createdAt\n}), /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, getLabelRole(role.name))), /*#__PURE__*/React.createElement(Divider, {\n  clear: true\n}), role && role.permissions.length > 0 ? /*#__PURE__*/React.createElement(Permissions, null, role.permissions.map(permission => /*#__PURE__*/React.createElement(Chip, {\n  key: v4(),\n  color: 'ghost',\n  appearance: 'outlined'\n}, getLabelPermission(permission)))) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"));\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}