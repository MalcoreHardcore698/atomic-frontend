{"ast":null,"code":"import gql from 'graphql-tag';\nimport { ArticleFields } from '../../fragments';\nexport const GET_ARTICLE = gql`\n  query getArticle($id: ID!) {\n    getArticle(id: $id) {\n      ...ArticleFields\n    }\n  }\n  ${ArticleFields}\n`;\nexport const GET_ARTICLES = gql`\n  query getArticles(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $category: ID\n    $search: String\n    $author: String\n    $status: PostStatus\n    $createdAt: String\n  ) {\n    getArticles(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      category: $category\n      search: $search\n      author: $author\n      status: $status\n      createdAt: $createdAt\n    ) {\n      id\n      author {\n        name\n        avatar {\n          path\n        }\n      }\n      title\n      body\n      preview {\n        path\n      }\n      category {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const CREATE_ARTICLE = gql`\n  mutation createArticle($input: ArticleCreateInput!, $status: PostStatus) {\n    createArticle(input: $input, status: $status) {\n      ...ArticleFields\n    }\n  }\n  ${ArticleFields}\n`;\nexport const UPDATE_ARTICLE = gql`\n  mutation updateArticle($id: ID!, $input: ArticleUpdateInput!, $status: PostStatus) {\n    updateArticle(id: $id, input: $input, status: $status) {\n      ...ArticleFields\n    }\n  }\n  ${ArticleFields}\n`;\nexport const DELETE_ARTICLE = gql`\n  mutation deleteArticle($id: [ID]!, $status: PostStatus) {\n    deleteArticle(id: $id, status: $status) {\n      ...ArticleFields\n    }\n  }\n  ${ArticleFields}\n`;","map":null,"metadata":{},"sourceType":"module"}