{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport CategoryCard from '../../CategoryCard';\nimport ArticleCard from '../../ArticleCard';\nimport ProjectCard from '../../ProjectCard';\nimport TicketCard from '../../TicketCard';\nimport RoleCard from '../../RoleCard';\nimport queries from '../../../graphql/queries';\nimport { useUser } from '../../../hooks/useUser';\nimport UserSuit from '../../UserSuit';\nexport const entities = [{\n  value: 'getUsers',\n  label: 'Пользователи',\n  singlePath: 'user',\n  originPath: 'users',\n  query: queries.GET_USERS,\n  deleteQuery: queries.DELETE_USER,\n  deleteEntityMultiText: 'Пользователи',\n  deleteEntitySingleText: 'Пользователь',\n  render: _s(item => {\n    _s();\n\n    const {\n      onLink,\n      onChat,\n      onAboutMore,\n      onMember,\n      onCompanyLink\n    } = useUser();\n    return /*#__PURE__*/React.createElement(UserSuit, {\n      user: item,\n      onLink: onLink,\n      onChat: onChat,\n      onAboutMore: onAboutMore,\n      onMember: onMember,\n      onCompanyLink: onCompanyLink\n    });\n  }, \"hYib8K97vWTdAB5Qo7z+LiRR2xI=\", false, function () {\n    return [useUser];\n  })\n}, {\n  value: 'getCategories',\n  label: 'Категории',\n  singlePath: 'category',\n  originPath: 'categories',\n  query: queries.GET_CATEGORIES,\n  deleteQuery: queries.DELETE_CATEGORY,\n  deleteEntityMultiText: 'Категории',\n  deleteEntitySingleText: 'Категория',\n  render: item => /*#__PURE__*/React.createElement(CategoryCard, {\n    category: item\n  })\n}, {\n  value: 'getArticles',\n  label: 'Статьи',\n  singlePath: 'article',\n  originPath: 'articles',\n  query: queries.GET_ARTICLES,\n  deleteQuery: queries.DELETE_ARTICLE,\n  deleteEntityMultiText: 'Статьи',\n  deleteEntitySingleText: 'Статья',\n  render: item => /*#__PURE__*/React.createElement(ArticleCard, {\n    article: item\n  })\n}, {\n  value: 'getProjects',\n  label: 'Проекты',\n  singlePath: 'project',\n  originPath: 'projects',\n  query: queries.GET_PROJECTS,\n  deleteQuery: queries.DELETE_PROJECT,\n  deleteEntityMultiText: 'Продукты',\n  deleteEntitySingleText: 'Продукт',\n  render: item => /*#__PURE__*/React.createElement(ProjectCard, {\n    project: item,\n    preview: true\n  })\n}, {\n  value: 'getTickets',\n  label: 'Обращения',\n  singlePath: 'ticket',\n  originPath: 'tickets',\n  query: queries.GET_TICKETS,\n  deleteQuery: queries.DELETE_TICKET,\n  deleteEntityMultiText: 'Обращения',\n  deleteEntitySingleText: 'Обращение',\n  render: item => /*#__PURE__*/React.createElement(TicketCard, {\n    ticket: item\n  })\n}, {\n  value: 'getRoles',\n  label: 'Роли',\n  singlePath: 'role',\n  originPath: 'roles',\n  query: queries.GET_ROLES,\n  deleteQuery: queries.DELETE_ROLE,\n  deleteEntityMultiText: 'Роли',\n  deleteEntitySingleText: 'Роль',\n  render: item => /*#__PURE__*/React.createElement(RoleCard, {\n    role: item\n  })\n}];","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/Search/mocks/index.js"],"names":["React","CategoryCard","ArticleCard","ProjectCard","TicketCard","RoleCard","queries","useUser","UserSuit","entities","value","label","singlePath","originPath","query","GET_USERS","deleteQuery","DELETE_USER","deleteEntityMultiText","deleteEntitySingleText","render","item","onLink","onChat","onAboutMore","onMember","onCompanyLink","GET_CATEGORIES","DELETE_CATEGORY","GET_ARTICLES","DELETE_ARTICLE","GET_PROJECTS","DELETE_PROJECT","GET_TICKETS","DELETE_TICKET","GET_ROLES","DELETE_ROLE"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport CategoryCard from '../../CategoryCard'\nimport ArticleCard from '../../ArticleCard'\nimport ProjectCard from '../../ProjectCard'\nimport TicketCard from '../../TicketCard'\nimport RoleCard from '../../RoleCard'\nimport queries from '../../../graphql/queries'\nimport { useUser } from '../../../hooks/useUser'\nimport UserSuit from '../../UserSuit'\n\nexport const entities = [\n  {\n    value: 'getUsers',\n    label: 'Пользователи',\n    singlePath: 'user',\n    originPath: 'users',\n    query: queries.GET_USERS,\n    deleteQuery: queries.DELETE_USER,\n    deleteEntityMultiText: 'Пользователи',\n    deleteEntitySingleText: 'Пользователь',\n    render: (item) => {\n      const { onLink, onChat, onAboutMore, onMember, onCompanyLink } = useUser()\n\n      return (\n        <UserSuit\n          user={item}\n          onLink={onLink}\n          onChat={onChat}\n          onAboutMore={onAboutMore}\n          onMember={onMember}\n          onCompanyLink={onCompanyLink}\n        />\n      )\n    }\n  },\n  {\n    value: 'getCategories',\n    label: 'Категории',\n    singlePath: 'category',\n    originPath: 'categories',\n    query: queries.GET_CATEGORIES,\n    deleteQuery: queries.DELETE_CATEGORY,\n    deleteEntityMultiText: 'Категории',\n    deleteEntitySingleText: 'Категория',\n    render: (item) => <CategoryCard category={item} />\n  },\n  {\n    value: 'getArticles',\n    label: 'Статьи',\n    singlePath: 'article',\n    originPath: 'articles',\n    query: queries.GET_ARTICLES,\n    deleteQuery: queries.DELETE_ARTICLE,\n    deleteEntityMultiText: 'Статьи',\n    deleteEntitySingleText: 'Статья',\n    render: (item) => <ArticleCard article={item} />\n  },\n  {\n    value: 'getProjects',\n    label: 'Проекты',\n    singlePath: 'project',\n    originPath: 'projects',\n    query: queries.GET_PROJECTS,\n    deleteQuery: queries.DELETE_PROJECT,\n    deleteEntityMultiText: 'Продукты',\n    deleteEntitySingleText: 'Продукт',\n    render: (item) => <ProjectCard project={item} preview />\n  },\n  {\n    value: 'getTickets',\n    label: 'Обращения',\n    singlePath: 'ticket',\n    originPath: 'tickets',\n    query: queries.GET_TICKETS,\n    deleteQuery: queries.DELETE_TICKET,\n    deleteEntityMultiText: 'Обращения',\n    deleteEntitySingleText: 'Обращение',\n    render: (item) => <TicketCard ticket={item} />\n  },\n  {\n    value: 'getRoles',\n    label: 'Роли',\n    singlePath: 'role',\n    originPath: 'roles',\n    query: queries.GET_ROLES,\n    deleteQuery: queries.DELETE_ROLE,\n    deleteEntityMultiText: 'Роли',\n    deleteEntitySingleText: 'Роль',\n    render: (item) => <RoleCard role={item} />\n  }\n]\n"]},"metadata":{},"sourceType":"module"}