{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Text from '../Text';\nimport Image from '../Image';\nexport const Wrap = styled(Row)`\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 96px;\n  align-items: center;\n  padding: var(--default-gap);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  p {\n    font-size: var(--font-h3);\n    font-weight: 700;\n    color: white;\n\n    ${({\n  type,\n  color\n}) => (type !== 'solid' || !type) && color && css`\n        padding-left: 15px;\n        color: #232323;\n      `}\n  }\n\n  ${({\n  type,\n  color\n}) => (type !== 'solid' || !type) && color && css`\n      &::before {\n        content: '';\n        position: absolute;\n        top: 10px;\n        left: 0;\n        width: 3px;\n        height: calc(100% - 20px);\n        background: ${color.accent};\n        border-radius: 0 var(--surface-border-radius) var(--surface-border-radius) 0;\n      }\n    `}\n\n  ${({\n  type\n}) => type === 'solid' && css`\n      font-size: var(--font-h3);\n      font-weight: 700;\n      color: white;\n    `}\n\n  ${({\n  type,\n  color\n}) => type === 'solid' && color && css`\n      background: ${color.accent};\n      border: none;\n    `}\n`;\nexport const Extras = styled.span`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  transform: rotate(15deg);\n\n  ${({\n  type,\n  color\n}) => type === 'solid' && color && css`\n      position: relative;\n      top: 4px;\n      font-size: 60px;\n      font-weight: 700;\n      color: ${color.dim};\n      line-height: 0;\n      transform: rotate(0);\n\n      svg {\n        path,\n        circle {\n          stroke: ${color.dim};\n        }\n        transform: scale(2.35);\n      }\n    `}\n`;\nexport const getColor = color => {\n  switch (color) {\n    case 'blue':\n      return {\n        accent: '#009EE3',\n        dim: '#3EC0F0'\n      };\n\n    case 'orange':\n      return {\n        accent: '#F07C00',\n        dim: '#F39300'\n      };\n\n    case 'green':\n      return {\n        accent: '#93C11C',\n        dim: '#B8CF21'\n      };\n\n    case 'purple':\n      return {\n        accent: '#4065AD',\n        dim: '#697DBD'\n      };\n\n    case 'red':\n      return {\n        accent: '#E40039',\n        dim: '#EA4C60'\n      };\n\n    case 'pink':\n      return {\n        accent: '#A71380',\n        dim: '#B44996'\n      };\n\n    default:\n      return {\n        accent: 'white',\n        dim: 'white'\n      };\n  }\n};\nexport const Card = (_ref) => {\n  let {\n    text,\n    color,\n    extras,\n    type\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"text\", \"color\", \"extras\", \"type\"]);\n\n  return __jsx(Wrap, _extends({\n    type: type,\n    color: getColor(color)\n  }, props), __jsx(Text, null, text), __jsx(Extras, {\n    type: type,\n    color: getColor(color)\n  }, typeof extras === 'string' ? __jsx(Image, {\n    src: extras,\n    alt: 'Icon'\n  }) : extras));\n};\nexport default Card;","map":null,"metadata":{},"sourceType":"module"}