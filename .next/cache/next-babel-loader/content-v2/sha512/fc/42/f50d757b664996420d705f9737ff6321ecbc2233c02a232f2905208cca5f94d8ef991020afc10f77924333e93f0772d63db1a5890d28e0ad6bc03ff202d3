{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Icon from '../Icon';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"Rating__Wrap\",\n  componentId: \"sc-73mo4u-0\"\n})([\"display:flex;grid-gap:5px;background:var(--default-color-accent-dim);border-radius:25rem;padding:var(--space-offset-xs);width:min-content;height:fit-content;\", \"\"], ({\n  disabled\n}) => disabled && css([\"background:var(--ghost-color-background);\"]));\nexport const Rate = styled.span.withConfig({\n  displayName: \"Rating__Rate\",\n  componentId: \"sc-73mo4u-1\"\n})([\"display:flex;justify-content:center;align-items:center;cursor:pointer;\", \" \", \" \", \" svg{path{stroke:none;transition:fill 150ms linear;}}\"], ({\n  size\n}) => size === 'xs' && css([\"width:8px;height:8px;\"]), ({\n  size\n}) => size === 's' && css([\"width:12px;height:12px;\"]), ({\n  readOnly,\n  disabled\n}) => (readOnly || disabled) && css([\"cursor:default;\"]));\nexport const Rating = ({\n  max,\n  icon,\n  size,\n  icons,\n  readOnly,\n  disabled,\n  defaultValue,\n  onChange,\n  ...props\n}) => {\n  const list = new Array(max).fill(null).map((_, i) => i + 1);\n  const [value, setValue] = useState(defaultValue);\n  const [rate, setRate] = useState(null);\n\n  const onMouseEnter = item => {\n    if (!readOnly && !disabled) setRate(item);\n  };\n\n  const onMouseLeave = () => {\n    if (!readOnly && !disabled) setRate(null);\n  };\n\n  const onClick = item => {\n    if (!readOnly && !disabled) setValue(item);\n    if (onChange && !readOnly && !disabled) onChange(item);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    size: size,\n    disabled: disabled\n  }), list.map((item, index) => /*#__PURE__*/React.createElement(Rate, {\n    key: item,\n    size: size,\n    onMouseEnter: () => onMouseEnter(item),\n    onMouseLeave: onMouseLeave,\n    onClick: () => onClick(item),\n    readOnly: readOnly,\n    disabled: disabled\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: icons && icons.length === max ? icons[index] : icon,\n    fill: item <= value || item <= rate ? 'var(--default-color-accent)' : disabled ? 'var(--default-color-text)' : 'var(--default-color-accent-gray)',\n    style: size === 'xs' ? {\n      transform: 'scale(.85)'\n    } : {},\n    size: 'xs'\n  }))));\n};\nRating.defaultProps = {\n  icon: 'star',\n  size: 's',\n  defaultValue: 0,\n  max: 5\n};\nexport default Rating;","map":null,"metadata":{},"sourceType":"module"}