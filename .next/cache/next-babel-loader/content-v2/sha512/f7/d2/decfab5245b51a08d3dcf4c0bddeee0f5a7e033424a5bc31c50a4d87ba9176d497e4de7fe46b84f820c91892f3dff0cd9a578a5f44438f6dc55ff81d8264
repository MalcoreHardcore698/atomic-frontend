{"ast":null,"code":"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport QuerySearch from '../QuerySearch';\nimport { entities } from './mocks';\nexport const Search = ({\n  onJump,\n  onHide\n}) => {\n  var _settings$meta;\n\n  const {\n    settings\n  } = useSelector(state => state.root.settings);\n  const [entity, setEntity] = useState(null);\n  const [search, setSearch] = useState(null);\n  return /*#__PURE__*/React.createElement(QuerySearch, {\n    search: search,\n    entity: entity,\n    entities: entities,\n    placeholder: settings === null || settings === void 0 ? void 0 : (_settings$meta = settings.meta) === null || _settings$meta === void 0 ? void 0 : _settings$meta.search,\n    setSearch: setSearch,\n    onChange: setEntity,\n    onJump: onJump,\n    onHide: onHide\n  });\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Search/index.js"],"names":["React","useState","useSelector","QuerySearch","entities","Search","onJump","onHide","settings","state","root","entity","setEntity","search","setSearch","meta"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAAhC;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AAEA,sBACE,oBAAC,WAAD;AACE,IAAA,MAAM,EAAEY,MADV;AAEE,IAAA,MAAM,EAAEF,MAFV;AAGE,IAAA,QAAQ,EAAEP,QAHZ;AAIE,IAAA,WAAW,EAAEI,QAAF,aAAEA,QAAF,yCAAEA,QAAQ,CAAEO,IAAZ,mDAAE,eAAgBF,MAJ/B;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,QAAQ,EAAEF,SANZ;AAOE,IAAA,MAAM,EAAEN,MAPV;AAQE,IAAA,MAAM,EAAEC;AARV,IADF;AAYD,CAlBM;AAoBP,eAAeF,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport QuerySearch from '../QuerySearch'\nimport { entities } from './mocks'\n\nexport const Search = ({ onJump, onHide }) => {\n  const { settings } = useSelector((state) => state.root.settings)\n\n  const [entity, setEntity] = useState(null)\n  const [search, setSearch] = useState(null)\n\n  return (\n    <QuerySearch\n      search={search}\n      entity={entity}\n      entities={entities}\n      placeholder={settings?.meta?.search}\n      setSearch={setSearch}\n      onChange={setEntity}\n      onJump={onJump}\n      onHide={onHide}\n    />\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}