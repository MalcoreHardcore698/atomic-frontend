{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Dropzone\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport styled, { css } from 'styled-components';\nimport imageCompression from 'browser-image-compression';\nimport { useDropzone } from 'react-dropzone';\nimport { v4 } from 'uuid';\nimport Image from '../Image';\nimport Text from '../Text';\nimport Button from '../Button';\nimport Grid from '../Grid';\nimport Tooltip from '../Tooltip';\nimport Icon from '../Icon';\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  grid-gap: 10px;\n\n  width: 100%;\n  height: 256px;\n  min-height: 256px;\n`;\nexport const InfoTooltip = styled(Tooltip)`\n  position: absolute;\n  right: var(--default-gap);\n  bottom: var(--default-gap);\n  z-index: var(--z-15);\n`;\nexport const InfoIcon = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n  z-index: var(--z-12);\n\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-s);\n  font-family: var(--font-family);\n  color: var(--input-placeholder-color);\n\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  border: 2px dashed var(--input-placeholder-color);\n  outline: none;\n  overflow: hidden;\n  flex-grow: 1;\n\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${({\n  error\n}) => error && css`\n      color: var(--default-color-red);\n      border: 2px dashed var(--default-color-red);\n    `}\n\n  &:hover {\n    color: var(--default-color-accent);\n    border: 2px dashed var(--default-color-accent);\n\n    ${({\n  error\n}) => error && css`\n        color: var(--default-color-red);\n        border: 2px dashed var(--default-color-red);\n      `}\n  }\n`;\nexport const Area = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  & > span {\n    height: 100%;\n  }\n`;\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  padding: 1rem;\n  background: #fff;\n  width: fit-content;\n  border: 1px solid rgba(0, 0, 0, 15%);\n`;\nconst MiddleOriented = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\nconst ActionsLayout = styled.div`\n  input {\n    width: 100%;\n  }\n`;\nconst ButtonsLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n`;\nexport const PreviewList = styled(Grid)`\n  img {\n    height: 128px;\n  }\n`;\nexport const Preview = styled(Image)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n`;\nexport const Placeholder = styled(Text)`\n  color: inherit;\n  padding: var(--default-gap);\n  text-align: center;\n`;\nexport function getFile(file) {\n  var _file$type;\n\n  return {\n    file,\n    id: v4(),\n    blob: ((_file$type = file.type) === null || _file$type === void 0 ? void 0 : _file$type.includes('image')) && URL.createObjectURL(file)\n  };\n}\nexport async function compressedUpload(file, maxWidthOrHeight = 1366) {\n  try {\n    return await imageCompression(file, {\n      maxSizeMB: 1,\n      maxWidthOrHeight,\n      useWebWorker: true\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport const Dropzone = ({\n  style,\n  accept,\n  avatar,\n  className,\n  defaultValue,\n  placeholder,\n  tooltip,\n  multiple,\n  maxFiles,\n  onChange\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: initScale,\n    1: setScale\n  } = useState([0.8]);\n  const {\n    0: avatarState,\n    1: setAvatar\n  } = useState([]);\n  const {\n    0: avatarHistory,\n    1: setHistory\n  } = useState([]);\n  const onDrop = useCallback(async droppedFiles => {\n    setError(false);\n\n    if (avatar) {\n      setAvatar(true);\n    }\n\n    if (droppedFiles.length > maxFiles || droppedFiles.length === 0) {\n      setError(true);\n      return false;\n    }\n\n    const candidate = multiple ? [] : await compressedUpload(droppedFiles[0]);\n\n    if (multiple) {\n      for (let file of droppedFiles) {\n        var _file$type2;\n\n        let compressedFile;\n        let miniature;\n\n        if ((_file$type2 = file.type) !== null && _file$type2 !== void 0 && _file$type2.includes('image')) {\n          compressedFile = await compressedUpload(file);\n          miniature = await compressedUpload(file, 185);\n        } else {\n          compressedFile = file;\n        }\n\n        if (compressedFile) {\n          candidate.push(_objectSpread(_objectSpread({}, getFile(compressedFile)), {}, {\n            size: compressedFile.size,\n            miniature: _objectSpread(_objectSpread({}, getFile(miniature)), {}, {\n              size: miniature.size\n            })\n          }));\n        }\n      }\n    }\n\n    const result = candidate.length > 1 ? candidate : _objectSpread(_objectSpread({}, getFile(candidate)), {}, {\n      size: droppedFiles[0].size\n    });\n    setImages(result);\n\n    if (onChange) {\n      onChange(result);\n    }\n  }, [setImages]);\n  let imageScaled = null;\n\n  const handleScale = e => {\n    const scale = parseFloat(e.target.value);\n    setScale(scale);\n  };\n\n  const clearImages = () => {\n    setAvatar(false);\n\n    if (!avatarHistory) {\n      setImages('');\n    } else {\n      setImages(avatarHistory);\n    }\n  };\n\n  const onClickSave = () => {\n    if (imageScaled) {\n      const canvasScaled = imageScaled.getImageScaledToCanvas();\n      images.blob = canvasScaled.toDataURL('image/png');\n      setImages(images);\n      setAvatar(false);\n      setHistory(images);\n    }\n  };\n\n  const setEditorRef = editor => imageScaled = editor;\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple,\n    avatar,\n    accept,\n    initScale,\n    handleScale,\n    clearImages,\n    onClickSave,\n    setEditorRef\n  });\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, tooltip && __jsx(InfoTooltip, {\n    text: tooltip,\n    maxWidth: 215,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }\n  }, __jsx(InfoIcon, {\n    size: 's',\n    icon: 'infoCircle',\n    stroke: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) > 0 ? 'white' : 'var(--default-color-accent)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  })), avatarState && images.blob && __jsx(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, __jsx(MiddleOriented, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, __jsx(AvatarEditor, {\n    image: images.blob || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.path) || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.blob),\n    width: 220,\n    height: 256,\n    border: 10,\n    color: [255, 255, 255, 0.6],\n    scale: parseFloat(initScale),\n    rotate: 0,\n    ref: setEditorRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  })), __jsx(ActionsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    name: \"scale\",\n    type: \"range\",\n    onChange: handleScale,\n    min: \"0.8\",\n    max: \"2\",\n    step: \"0.01\",\n    defaultValue: \"0.8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }), __jsx(ButtonsLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    appearance: 'default',\n    onClick: onClickSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    appearance: 'outlined',\n    onClick: clearImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\")))), __jsx(Container, _extends({\n    className: 'dropzone-container'\n  }, getRootProps(), {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", _extends({\n    accept: accept\n  }, getInputProps(), {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  })), __jsx(Area, {\n    className: 'dropzone-area',\n    active: isDragActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, !defaultValue && images.length === 0 && __jsx(Placeholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, error ? `Файлов не может быть больше ${maxFiles} или равно нулю` : placeholder), multiple && (Array.isArray(images) && images.length > 1 || Array.isArray(defaultValue) && (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) > 1) && __jsx(PreviewList, {\n    percentage: 'minmax(196px, 1fr)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, (defaultValue || images).map(file => __jsx(Preview, {\n    key: v4(),\n    src: (file === null || file === void 0 ? void 0 : file.blob) || file,\n    alt: file.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 19\n    }\n  }))), !multiple && (!Array.isArray(images) || defaultValue) && __jsx(Preview, {\n    src: images.blob || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.path) || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.blob),\n    alt: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }))));\n};\nDropzone.defaultProps = {\n  maxFiles: 1,\n  multiple: false\n};\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Dropzone/index.js"],"names":["React","useState","useCallback","AvatarEditor","styled","css","imageCompression","useDropzone","v4","Image","Text","Button","Grid","Tooltip","Icon","Wrap","div","InfoTooltip","InfoIcon","Container","error","Area","Overlay","MiddleOriented","ActionsLayout","ButtonsLayout","PreviewList","Preview","Placeholder","getFile","file","id","blob","type","includes","URL","createObjectURL","compressedUpload","maxWidthOrHeight","maxSizeMB","useWebWorker","console","log","Dropzone","style","accept","avatar","className","defaultValue","placeholder","tooltip","multiple","maxFiles","onChange","setError","images","setImages","initScale","setScale","avatarState","setAvatar","avatarHistory","setHistory","onDrop","droppedFiles","length","candidate","compressedFile","miniature","push","size","result","imageScaled","handleScale","e","scale","parseFloat","target","value","clearImages","onClickSave","canvasScaled","getImageScaledToCanvas","toDataURL","setEditorRef","editor","getRootProps","getInputProps","isDragActive","path","Array","isArray","map","name","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport AvatarEditor from 'react-avatar-editor'\nimport styled, { css } from 'styled-components'\nimport imageCompression from 'browser-image-compression'\nimport { useDropzone } from 'react-dropzone'\nimport { v4 } from 'uuid'\n\nimport Image from '../Image'\nimport Text from '../Text'\nimport Button from '../Button'\nimport Grid from '../Grid'\nimport Tooltip from '../Tooltip'\nimport Icon from '../Icon'\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  grid-gap: 10px;\n\n  width: 100%;\n  height: 256px;\n  min-height: 256px;\n`\n\nexport const InfoTooltip = styled(Tooltip)`\n  position: absolute;\n  right: var(--default-gap);\n  bottom: var(--default-gap);\n  z-index: var(--z-15);\n`\n\nexport const InfoIcon = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n  z-index: var(--z-12);\n\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-s);\n  font-family: var(--font-family);\n  color: var(--input-placeholder-color);\n\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  border: 2px dashed var(--input-placeholder-color);\n  outline: none;\n  overflow: hidden;\n  flex-grow: 1;\n\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${({ error }) =>\n    error &&\n    css`\n      color: var(--default-color-red);\n      border: 2px dashed var(--default-color-red);\n    `}\n\n  &:hover {\n    color: var(--default-color-accent);\n    border: 2px dashed var(--default-color-accent);\n\n    ${({ error }) =>\n      error &&\n      css`\n        color: var(--default-color-red);\n        border: 2px dashed var(--default-color-red);\n      `}\n  }\n`\n\nexport const Area = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  & > span {\n    height: 100%;\n  }\n`\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  padding: 1rem;\n  background: #fff;\n  width: fit-content;\n  border: 1px solid rgba(0, 0, 0, 15%);\n`\n\nconst MiddleOriented = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`\n\nconst ActionsLayout = styled.div`\n  input {\n    width: 100%;\n  }\n`\n\nconst ButtonsLayout = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n`\n\nexport const PreviewList = styled(Grid)`\n  img {\n    height: 128px;\n  }\n`\n\nexport const Preview = styled(Image)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Placeholder = styled(Text)`\n  color: inherit;\n  padding: var(--default-gap);\n  text-align: center;\n`\n\nexport function getFile(file) {\n  return { file, id: v4(), blob: file.type?.includes('image') && URL.createObjectURL(file) }\n}\n\nexport async function compressedUpload(file, maxWidthOrHeight = 1366) {\n  try {\n    return await imageCompression(file, {\n      maxSizeMB: 1,\n      maxWidthOrHeight,\n      useWebWorker: true\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const Dropzone = ({\n  style,\n  accept,\n  avatar,\n  className,\n  defaultValue,\n  placeholder,\n  tooltip,\n  multiple,\n  maxFiles,\n  onChange\n}) => {\n  const [error, setError] = useState(false)\n  const [images, setImages] = useState([])\n  const [initScale, setScale] = useState([0.8])\n  const [avatarState, setAvatar] = useState([])\n  const [avatarHistory, setHistory] = useState([])\n\n  const onDrop = useCallback(\n    async (droppedFiles) => {\n      setError(false)\n\n      if (avatar) {\n        setAvatar(true)\n      }\n\n      if (droppedFiles.length > maxFiles || droppedFiles.length === 0) {\n        setError(true)\n        return false\n      }\n\n      const candidate = multiple ? [] : await compressedUpload(droppedFiles[0])\n\n      if (multiple) {\n        for (let file of droppedFiles) {\n          let compressedFile\n          let miniature\n\n          if (file.type?.includes('image')) {\n            compressedFile = await compressedUpload(file)\n            miniature = await compressedUpload(file, 185)\n          } else {\n            compressedFile = file\n          }\n\n          if (compressedFile) {\n            candidate.push({\n              ...getFile(compressedFile),\n              size: compressedFile.size,\n              miniature: {\n                ...getFile(miniature),\n                size: miniature.size\n              }\n            })\n          }\n        }\n      }\n\n      const result =\n        candidate.length > 1\n          ? candidate\n          : {\n              ...getFile(candidate),\n              size: droppedFiles[0].size\n            }\n\n      setImages(result)\n      if (onChange) {\n        onChange(result)\n      }\n    },\n    [setImages]\n  )\n\n  let imageScaled = null\n  const handleScale = (e) => {\n    const scale = parseFloat(e.target.value)\n    setScale(scale)\n  }\n\n  const clearImages = () => {\n    setAvatar(false)\n    if (!avatarHistory) {\n      setImages('')\n    } else {\n      setImages(avatarHistory)\n    }\n  }\n\n  const onClickSave = () => {\n    if (imageScaled) {\n      const canvasScaled = imageScaled.getImageScaledToCanvas()\n      images.blob = canvasScaled.toDataURL('image/png')\n      setImages(images)\n      setAvatar(false)\n      setHistory(images)\n    }\n  }\n\n  const setEditorRef = (editor) => (imageScaled = editor)\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple,\n    avatar,\n    accept,\n    initScale,\n    handleScale,\n    clearImages,\n    onClickSave,\n    setEditorRef\n  })\n\n  return (\n    <Wrap className={className} style={style}>\n      {tooltip && (\n        <InfoTooltip text={tooltip} maxWidth={215}>\n          <InfoIcon\n            size={'s'}\n            icon={'infoCircle'}\n            stroke={defaultValue?.length > 0 ? 'white' : 'var(--default-color-accent)'}\n          />\n        </InfoTooltip>\n      )}\n\n      {avatarState && images.blob && (\n        <Overlay>\n          <MiddleOriented>\n            <AvatarEditor\n              image={images.blob || defaultValue?.path || defaultValue?.blob}\n              width={220}\n              height={256}\n              border={10}\n              color={[255, 255, 255, 0.6]}\n              scale={parseFloat(initScale)}\n              rotate={0}\n              ref={setEditorRef}\n            />\n          </MiddleOriented>\n          <ActionsLayout>\n            <input\n              name=\"scale\"\n              type=\"range\"\n              onChange={handleScale}\n              min=\"0.8\"\n              max=\"2\"\n              step=\"0.01\"\n              defaultValue=\"0.8\"\n            />\n            <ButtonsLayout>\n              <Button appearance={'default'} onClick={onClickSave}>\n                Сохранить\n              </Button>\n              <Button appearance={'outlined'} onClick={clearImages}>\n                Отмена\n              </Button>\n            </ButtonsLayout>\n          </ActionsLayout>\n        </Overlay>\n      )}\n\n      <Container className={'dropzone-container'} {...getRootProps()} error={error}>\n        <input accept={accept} {...getInputProps()} hidden />\n        <Area className={'dropzone-area'} active={isDragActive}>\n          {!defaultValue && images.length === 0 && (\n            <Placeholder>\n              {error ? `Файлов не может быть больше ${maxFiles} или равно нулю` : placeholder}\n            </Placeholder>\n          )}\n\n          {multiple &&\n            ((Array.isArray(images) && images.length > 1) ||\n              (Array.isArray(defaultValue) && defaultValue?.length > 1)) && (\n              <PreviewList percentage={'minmax(196px, 1fr)'}>\n                {(defaultValue || images).map((file) => (\n                  <Preview key={v4()} src={file?.blob || file} alt={file.id} />\n                ))}\n              </PreviewList>\n            )}\n\n          {!multiple && (!Array.isArray(images) || defaultValue) && (\n            <Preview\n              src={images.blob || defaultValue?.path || defaultValue?.blob}\n              alt={defaultValue?.name}\n            />\n          )}\n        </Area>\n      </Container>\n    </Wrap>\n  )\n}\n\nDropzone.defaultProps = {\n  maxFiles: 1,\n  multiple: false\n}\n\nexport default Dropzone\n"]},"metadata":{},"sourceType":"module"}