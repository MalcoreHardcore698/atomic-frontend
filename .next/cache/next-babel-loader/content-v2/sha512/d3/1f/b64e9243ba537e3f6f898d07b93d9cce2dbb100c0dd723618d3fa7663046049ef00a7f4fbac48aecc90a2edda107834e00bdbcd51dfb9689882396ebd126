{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from 'react-hook-form';\nexport const Wrap = styled.form.withConfig({\n  displayName: \"Form__Wrap\",\n  componentId: \"wqhajt-0\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);padding:var(--default-gap);\", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;padding:0;\"]));\nexport const Form = ({\n  children,\n  onSubmit,\n  mutation,\n  ...props\n}) => {\n  if (mutation) {\n    const [action, {\n      data,\n      loading,\n      error\n    }] = useMutation(mutation);\n    const methods = useForm();\n    const Children = children;\n    return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n      onSubmit: methods.handleSubmit(form => onSubmit(form, action))\n    }), /*#__PURE__*/React.createElement(Children, _extends({}, methods, {\n      data: data,\n      loading: loading,\n      error: error\n    })));\n  }\n\n  return null;\n};\nForm.defaultProps = {\n  appearance: 'default'\n};\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}