{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Comment\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  grid-gap: 0;\\n  cursor: pointer;\\n\\n  span {\\n    color: var(--default-color-text);\\n    transition: color 150ms ease;\\n  }\\n\\n  &:hover {\\n    span {\\n      color: var(--default-color-accent);\\n    }\\n\\n    svg {\\n      path,\\n      circle {\\n        stroke: var(--default-color-accent);\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--default-color-accent);\\n  font-size: var(--font-size-s);\\n  font-weight: var(--font-weight-regular);\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 5px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 0;\\n  width: 100%;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: black;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    cursor: pointer;\\n\\n    &:hover {\\n      opacity: .65;\\n    }\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-medium);\\n  color: var(--default-color-accent);\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Text from '../Text';\nimport DateText from '../DateText';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Tooltip from '../Tooltip';\nexport var Wrap = styled(Row)(_templateObject());\n_c = Wrap;\nexport var Name = styled(Text)(_templateObject2(), function (_ref) {\n  var onClick = _ref.onClick;\n  return onClick && css(_templateObject3());\n});\n_c2 = Name;\nexport var Message = styled(Text)(_templateObject4());\n_c3 = Message;\nexport var Content = styled(Column)(_templateObject5());\n_c4 = Content;\nexport var Meta = styled(Row)(_templateObject6());\n_c5 = Meta;\nexport var Line = styled(Row)(_templateObject7());\n_c6 = Line;\nexport var DispatchTime = styled(DateText)(_templateObject8());\n_c7 = DispatchTime;\nexport var ReplyButton = styled(Button)(_templateObject9());\n_c8 = ReplyButton;\nexport var LikeButton = styled(Row)(_templateObject10());\n_c9 = LikeButton;\nexport var Comment = function Comment(_ref2) {\n  _s();\n\n  var _user$avatar$path, _user$avatar;\n\n  var user = _ref2.user,\n      message = _ref2.message,\n      likes = _ref2.likes,\n      liked = _ref2.liked,\n      time = _ref2.time,\n      className = _ref2.className,\n      style = _ref2.style,\n      onLink = _ref2.onLink,\n      onReply = _ref2.onReply,\n      onLike = _ref2.onLike;\n\n  var _useState = useState(false),\n      isLiked = _useState[0],\n      setLiked = _useState[1];\n\n  var color = isLiked || liked ? 'var(--default-color-accent)' : 'var(--default-color-text)';\n\n  var onClick = function onClick() {\n    setLiked(!isLiked);\n    if (onLike) onLike();\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, __jsx(Avatar, {\n    src: (_user$avatar$path = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) !== null && _user$avatar$path !== void 0 ? _user$avatar$path : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(Name, {\n    onClick: onLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, user.name), __jsx(Message, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, message), __jsx(Line, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Meta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(DispatchTime, {\n    text: time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), __jsx(ReplyButton, {\n    appearance: 'clear',\n    onClick: onReply,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\")), likes && likes > 0 && __jsx(Tooltip, {\n    text: 'Мне нравится',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, __jsx(LikeButton, {\n    type: 'button',\n    onClick: onClick,\n    appearance: 'clear',\n    size: 'xs',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, likes), __jsx(Icon, {\n    icon: 'heart',\n    size: 'xs',\n    stroke: color,\n    fill: isLiked || liked ? 'var(--default-color-accent)' : 'none',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n_s(Comment, \"H9KTnuaPGAZ7ARuZ+C7CT/stPe4=\");\n\n_c10 = Comment;\nexport default Comment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Name\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Meta\");\n$RefreshReg$(_c6, \"Line\");\n$RefreshReg$(_c7, \"DispatchTime\");\n$RefreshReg$(_c8, \"ReplyButton\");\n$RefreshReg$(_c9, \"LikeButton\");\n$RefreshReg$(_c10, \"Comment\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Comment/index.js"],"names":["React","useState","styled","css","Row","Column","Avatar","Text","DateText","Button","Icon","Tooltip","Wrap","Name","onClick","Message","Content","Meta","Line","DispatchTime","ReplyButton","LikeButton","Comment","user","message","likes","liked","time","className","style","onLink","onReply","onLike","isLiked","setLiked","color","avatar","path","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Avatar from '../Avatar'\nimport Text from '../Text'\nimport DateText from '../DateText'\nimport Button from '../Button'\nimport Icon from '../Icon'\nimport Tooltip from '../Tooltip'\n\nexport const Wrap = styled(Row)`\n  margin: 0;\n  padding: 0;\n`\n\nexport const Name = styled(Text)`\n  font-weight: var(--font-weight-medium);\n  color: var(--default-color-accent);\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) => (onClick) && css`\n    cursor: pointer;\n\n    &:hover {\n      opacity: .65;\n    }\n  `}\n`\n\nexport const Message = styled(Text)`\n  color: black;\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n  width: 100%;\n`\n\nexport const Meta = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const Line = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const DispatchTime = styled(DateText)`\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`\n\nexport const ReplyButton = styled(Button)`\n  color: var(--default-color-accent);\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n`\n\nexport const LikeButton = styled(Row)`\n  align-items: center;\n  grid-gap: 0;\n  cursor: pointer;\n\n  span {\n    color: var(--default-color-text);\n    transition: color 150ms ease;\n  }\n\n  &:hover {\n    span {\n      color: var(--default-color-accent);\n    }\n\n    svg {\n      path,\n      circle {\n        stroke: var(--default-color-accent);\n      }\n    }\n  }\n`\n\nexport const Comment = ({\n  user,\n  message,\n  likes,\n  liked,\n  time,\n  className,\n  style,\n  onLink,\n  onReply,\n  onLike\n}) => {\n  const [isLiked, setLiked] = useState(false)\n  const color = isLiked || liked ? 'var(--default-color-accent)' : 'var(--default-color-text)'\n\n  const onClick = () => {\n    setLiked(!isLiked)\n    if (onLike) onLike()\n  }\n\n  return (\n    <Wrap className={className} style={style}>\n      <Avatar src={user?.avatar?.path ?? ''} />\n\n      <Content>\n        <Name onClick={onLink}>{user.name}</Name>\n        <Message>{message}</Message>\n\n        <Line>\n          <Meta>\n            <DispatchTime text={time} />\n            <ReplyButton appearance={'clear'} onClick={onReply}>\n              Ответить\n            </ReplyButton>\n          </Meta>\n\n          {likes && likes > 0 && (\n            <Tooltip text={'Мне нравится'}>\n              <LikeButton type={'button'} onClick={onClick} appearance={'clear'} size={'xs'}>\n                <span style={{ color }}>{likes}</span>\n                <Icon\n                  icon={'heart'}\n                  size={'xs'}\n                  stroke={color}\n                  fill={isLiked || liked ? 'var(--default-color-accent)' : 'none'}\n                />\n              </LikeButton>\n            </Tooltip>\n          )}\n        </Line>\n      </Content>\n    </Wrap>\n  )\n}\n\nexport default Comment\n"]},"metadata":{},"sourceType":"module"}