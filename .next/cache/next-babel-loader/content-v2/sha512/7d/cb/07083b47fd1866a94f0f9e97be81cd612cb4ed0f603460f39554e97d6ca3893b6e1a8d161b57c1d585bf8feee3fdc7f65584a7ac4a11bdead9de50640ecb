{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Switch\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n      left: 26px;\\n      background: var(--default-color-accent);\\n    \"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  left: 4px;\\n\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 18px;\\n  height: 18px;\\n\\n  border-radius: 50%;\\n  background: var(--ghost-color-text);\\n  box-shadow: var(--surface-box-shadow);\\n  transition: left 150ms ease;\\n\\n  \", \"\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n      border-radius: var(--surface-border-radius);\\n      background: var(--surface-background);\\n      box-shadow: var(--surface-box-shadow);\\n      color: var(--default-color-accent);\\n\\n      svg {\\n        path,\\n        circle {\\n          stroke: var(--default-color-accent);\\n        }\\n      }\\n    \"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  border: var(--surface-border);\\n  background: none;\\n  box-shadow: none;\\n  color: var(--ghost-color-text);\\n  font-size: var(--font-size-m);\\n  font-weight: var(--font-weight-medium);\\n  white-space: nowrap;\\n  padding: 0 15px;\\n  cursor: pointer;\\n  flex-grow: 1;\\n\\n  width: \", \";\\n\\n  svg {\\n    path,\\n    circle {\\n      stroke: var(--ghost-color-text);\\n    }\\n  }\\n\\n  \", \"\\n\\n  @media only screen and (max-width: 480px) {\\n    height: var(--input-height-m);\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-m);\\n  font-weight: var(--font-weight-regular);\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n      flex-grow: 1;\\n      width: 100%;\\n    \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      width: 48px;\\n      height: 24px;\\n      border-radius: 25rem;\\n      cursor: pointer;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  border-radius: var(--surface-border-radius);\\n  background: var(--ghost-color-background);\\n  padding: 3px;\\n  width: 100%;\\n  height: var(--input-height-m);\\n\\n  \", \"\\n\\n  \", \"\\n  \\n  @media only screen and (max-width: 480px) {\\n    flex-direction: column;\\n    height: auto;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  width: min-content;\\n  min-width: 240px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Tooltip from '../Tooltip';\nexport var Wrap = styled.div(_templateObject());\n_c = Wrap;\nexport var Track = styled.div(_templateObject2(), function (_ref) {\n  var unary = _ref.unary;\n  return unary && css(_templateObject3());\n}, function (_ref2) {\n  var stretch = _ref2.stretch;\n  return stretch && css(_templateObject4());\n});\n_c2 = Track;\nexport var Label = styled.p(_templateObject5());\n_c3 = Label;\nexport var LabeledToggle = styled.span(_templateObject6(), function (_ref3) {\n  var width = _ref3.width;\n  return width;\n}, function (_ref4) {\n  var active = _ref4.active;\n  return active && css(_templateObject7());\n});\n_c4 = LabeledToggle;\nexport var Toggle = styled.span(_templateObject8(), function (_ref5) {\n  var active = _ref5.active;\n  return active && css(_templateObject9());\n});\n_c5 = Toggle;\nexport var Switch = function Switch(_ref6) {\n  _s();\n\n  var label = _ref6.label,\n      options = _ref6.options,\n      ltr = _ref6.ltr,\n      rtl = _ref6.rtl,\n      defaultValue = _ref6.defaultValue,\n      className = _ref6.className,\n      style = _ref6.style,\n      onChange = _ref6.onChange;\n  var list = options || [0, 1];\n\n  var _useState = useState(defaultValue),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var _onClick = function onClick(item) {\n    setSelected(item);\n    if (onChange) onChange(item);\n  };\n\n  var renderLabeledToggle = function renderLabeledToggle(item, key) {\n    return __jsx(LabeledToggle, {\n      key: key,\n      width: item.width || 'auto',\n      active: selected && item.value === selected.value,\n      onClick: function onClick() {\n        return _onClick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, item.label);\n  };\n\n  return options && options.length > 0 ? __jsx(Track, {\n    className: className,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, list.map(function (item, index) {\n    return item.tooltip ? __jsx(Tooltip, {\n      key: index,\n      style: {\n        flexGrow: 1\n      },\n      text: item.tooltip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, renderLabeledToggle(item)) : renderLabeledToggle(item, index);\n  })) : __jsx(Wrap, {\n    className: className,\n    style: style,\n    onClick: function onClick() {\n      return _onClick(!selected);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, ltr && !rtl && __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, label), __jsx(Track, {\n    unary: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(Toggle, {\n    active: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })), rtl && __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, label));\n};\n\n_s(Switch, \"+je1LhJiKYRwlU9jgDfC/VH7l5o=\");\n\n_c6 = Switch;\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n};\nexport default Switch;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Track\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"LabeledToggle\");\n$RefreshReg$(_c5, \"Toggle\");\n$RefreshReg$(_c6, \"Switch\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Switch/index.js"],"names":["React","useState","styled","css","Tooltip","Wrap","div","Track","unary","stretch","Label","p","LabeledToggle","span","width","active","Toggle","Switch","label","options","ltr","rtl","defaultValue","className","style","onChange","list","selected","setSelected","onClick","item","renderLabeledToggle","key","value","length","map","index","tooltip","flexGrow","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Tooltip from '../Tooltip'\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: min-content;\n  min-width: 240px;\n`\n\nexport const Track = styled.div`\n  position: relative;\n  display: flex;\n  border-radius: var(--surface-border-radius);\n  background: var(--ghost-color-background);\n  padding: 3px;\n  width: 100%;\n  height: var(--input-height-m);\n\n  ${({ unary }) =>\n    unary &&\n    css`\n      width: 48px;\n      height: 24px;\n      border-radius: 25rem;\n      cursor: pointer;\n    `}\n\n  ${({ stretch }) =>\n    stretch &&\n    css`\n      flex-grow: 1;\n      width: 100%;\n    `}\n  \n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    height: auto;\n  }\n`\n\nexport const Label = styled.p`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n`\n\nexport const LabeledToggle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: var(--surface-border);\n  background: none;\n  box-shadow: none;\n  color: var(--ghost-color-text);\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-medium);\n  white-space: nowrap;\n  padding: 0 15px;\n  cursor: pointer;\n  flex-grow: 1;\n\n  width: ${({ width }) => width};\n\n  svg {\n    path,\n    circle {\n      stroke: var(--ghost-color-text);\n    }\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      border-radius: var(--surface-border-radius);\n      background: var(--surface-background);\n      box-shadow: var(--surface-box-shadow);\n      color: var(--default-color-accent);\n\n      svg {\n        path,\n        circle {\n          stroke: var(--default-color-accent);\n        }\n      }\n    `}\n\n  @media only screen and (max-width: 480px) {\n    height: var(--input-height-m);\n  }\n`\n\nexport const Toggle = styled.span`\n  position: absolute;\n  left: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n\n  border-radius: 50%;\n  background: var(--ghost-color-text);\n  box-shadow: var(--surface-box-shadow);\n  transition: left 150ms ease;\n\n  ${({ active }) =>\n    active &&\n    css`\n      left: 26px;\n      background: var(--default-color-accent);\n    `}\n`\n\nexport const Switch = ({ label, options, ltr, rtl, defaultValue, className, style, onChange }) => {\n  const list = options || [0, 1]\n  const [selected, setSelected] = useState(defaultValue)\n\n  const onClick = (item) => {\n    setSelected(item)\n    if (onChange) onChange(item)\n  }\n\n  const renderLabeledToggle = (item, key) => (\n    <LabeledToggle\n      key={key}\n      width={item.width || 'auto'}\n      active={selected && item.value === selected.value}\n      onClick={() => onClick(item)}>\n      {item.label}\n    </LabeledToggle>\n  )\n\n  return options && options.length > 0 ? (\n    <Track className={className} style={style}>\n      {list.map((item, index) =>\n        item.tooltip ? (\n          <Tooltip key={index} style={{ flexGrow: 1 }} text={item.tooltip}>\n            {renderLabeledToggle(item)}\n          </Tooltip>\n        ) : (\n          renderLabeledToggle(item, index)\n        )\n      )}\n    </Track>\n  ) : (\n    <Wrap className={className} style={style} onClick={() => onClick(!selected)}>\n      {ltr && !rtl && <Label>{label}</Label>}\n      <Track unary>\n        <Toggle active={selected} />\n      </Track>\n      {rtl && <Label>{label}</Label>}\n    </Wrap>\n  )\n}\n\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n}\n\nexport default Switch\n"]},"metadata":{},"sourceType":"module"}