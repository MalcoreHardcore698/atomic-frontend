{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-bold);\\n  line-height: 1;\\n\\n  @media only screen and (max-width: 480px) {\\n    font-size: var(--font-size-l);\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n      width: auto;\\n    \"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n      color: var(--ghost-color-text);\\n    \"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--ghost-color-text);\\n  font-size: var(--font-size-s);\\n  white-space: nowrap;\\n  width: 128px;\\n  max-width: 400px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n      background: var(--ghost-color-background);\\n\\n      svg path {\\n        stroke: var(--ghost-color-text);\\n      }\\n    \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-m);\\n  height: var(--input-height-m);\\n  min-width: var(--input-height-m);\\n  min-height: var(--input-height-m);\\n  background: var(--default-color-\", \"-dim);\\n  border-radius: var(--surface-border-radius);\\n\\n  \", \"\\n\\n  @media only screen and (max-width: 480px) {\\n    width: var(--input-height-s);\\n    height: var(--input-height-s);\\n    min-width: var(--input-height-s);\\n    min-height: var(--input-height-s);\\n\\n    svg {\\n      transform: scale(0.85);\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-m);\\n  height: var(--input-height-m);\\n  min-width: var(--input-height-m);\\n  min-height: var(--input-height-m);\\n  border-radius: var(--surface-border-radius);\\n  object-fit: cover;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: center;\\n  grid-gap: 0;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n\\n      &:hover {\\n        opacity: 0.65;\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Text from '../Text';\nimport Title from '../Title';\nimport Icon from '../Icon';\nimport Chip from '../Chip';\nimport { v4 } from 'uuid';\nimport Tooltip from '../Tooltip';\nexport var Wrap = styled(Row)(_templateObject(), function (_ref) {\n  var clickable = _ref.clickable;\n  return clickable && css(_templateObject2());\n});\nexport var Content = styled(Column)(_templateObject3());\nexport var Image = styled.img(_templateObject4());\nexport var RoundedIcon = styled(Icon)(_templateObject5(), function (_ref2) {\n  var color = _ref2.color;\n  return color || 'accent';\n}, function (_ref3) {\n  var disabled = _ref3.disabled;\n  return disabled && css(_templateObject6());\n});\nexport var Label = styled(Text)(_templateObject7(), function (_ref4) {\n  var disabled = _ref4.disabled;\n  return disabled && css(_templateObject8());\n}, function (_ref5) {\n  var stretch = _ref5.stretch;\n  return stretch && css(_templateObject9());\n});\nexport var Value = styled(Title)(_templateObject10());\nexport var getValue = function getValue(label, text, disabled) {\n  var disabledStyle = disabled ? {\n    color: 'var(--ghost-color-text)'\n  } : {};\n\n  if (Array.isArray(text)) {\n    var slicedFactor = 3;\n    return __jsx(React.Fragment, null, text.slice(0, slicedFactor).map(function (item) {\n      return __jsx(Chip, {\n        key: v4(),\n        style: {\n          display: 'inline-flex'\n        },\n        color: 'ghost',\n        appearance: 'outlined',\n        size: 'xs'\n      }, item);\n    }), text.length > 5 && __jsx(Chip, {\n      style: {\n        display: 'inline-flex'\n      },\n      color: 'ghost',\n      appearance: 'outlined',\n      size: 'xs'\n    }, \"+\", text.slice(slicedFactor).length));\n  } // eslint-disable-next-line valid-typeof\n\n\n  if (typeof Text === 'funciton') {\n    var _Text = text;\n    return __jsx(_Text, {\n      style: disabledStyle\n    });\n  }\n\n  return __jsx(Value, {\n    style: disabledStyle,\n    tag: !label ? 'h2' : 'h4'\n  }, text);\n};\nexport var Difinition = function Difinition(_ref6) {\n  var img = _ref6.img,\n      color = _ref6.color,\n      icon = _ref6.icon,\n      label = _ref6.label,\n      text = _ref6.text,\n      tooltip = _ref6.tooltip,\n      className = _ref6.className,\n      style = _ref6.style,\n      stretch = _ref6.stretch,\n      disabled = _ref6.disabled,\n      revert = _ref6.revert,\n      onLink = _ref6.onLink;\n\n  var renderLabel = function renderLabel() {\n    return label && __jsx(Label, {\n      stretch: stretch,\n      disabled: disabled\n    }, label);\n  };\n\n  var renderText = function renderText() {\n    return tooltip ? __jsx(Tooltip, {\n      place: 'top',\n      text: tooltip\n    }, __jsx(Row, null, getValue(label, text, disabled))) : __jsx(Row, null, getValue(label, text, disabled));\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    clickable: !disabled && !!onLink,\n    onClick: function onClick() {\n      return !disabled && onLink && onLink();\n    }\n  }, img && !icon && __jsx(Image, {\n    src: img,\n    alt: 'Avatar'\n  }), !img && icon && __jsx(RoundedIcon, {\n    icon: icon,\n    color: color,\n    disabled: disabled,\n    stroke: \"var(--default-color-\".concat(color || 'accent', \")\")\n  }), __jsx(Content, null, !revert && renderLabel(), !revert && renderText(), revert && renderText(), revert && renderLabel()));\n};\nexport default Difinition;","map":null,"metadata":{},"sourceType":"module"}