{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"FadeLoad__Wrap\",\n  componentId: \"sc-1rdnrub-0\"\n})([\"opacity:0;transition:opacity 100ms ease;\", \"\"], ({\n  isVisible\n}) => isVisible && css([\"opacity:1;\"]));\nexport const FadeLoad = ({\n  children\n}) => {\n  const [isVisible, setVisible] = useState(true);\n  const domRef = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n    return () => observer.unobserve(domRef.current);\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    isVisible: isVisible,\n    ref: domRef\n  }, children);\n};\nexport default FadeLoad;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FadeLoad/index.js"],"names":["React","useState","useEffect","useRef","styled","css","Wrap","div","isVisible","FadeLoad","children","setVisible","domRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qDAIb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,SAAS,IACTH,GADS,gBALI,CAAV;AAWP,OAAO,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACxC,QAAM,CAACF,SAAD,EAAYG,UAAZ,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMW,MAAM,GAAGT,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;AACrDA,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAWN,UAAU,CAACM,KAAK,CAACC,cAAP,CAArC;AACD,KAFgB,CAAjB;AAIAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBP,MAAM,CAACQ,OAAxB;AACA,WAAO,MAAMP,QAAQ,CAACQ,SAAT,CAAmBT,MAAM,CAACQ,OAA1B,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,SAAjB;AAA4B,IAAA,GAAG,EAAEI;AAAjC,KACGF,QADH,CADF;AAKD,CAlBM;AAoBP,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const Wrap = styled.div`\n  opacity: 0;\n  transition: opacity 100ms ease;\n\n  ${({ isVisible }) =>\n    isVisible &&\n    css`\n      opacity: 1;\n    `}\n`\n\nexport const FadeLoad = ({ children }) => {\n  const [isVisible, setVisible] = useState(true)\n  const domRef = useRef()\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => setVisible(entry.isIntersecting))\n    })\n\n    observer.observe(domRef.current)\n    return () => observer.unobserve(domRef.current)\n  }, [])\n\n  return (\n    <Wrap isVisible={isVisible} ref={domRef}>\n      {children}\n    </Wrap>\n  )\n}\n\nexport default FadeLoad\n"]},"metadata":{},"sourceType":"module"}