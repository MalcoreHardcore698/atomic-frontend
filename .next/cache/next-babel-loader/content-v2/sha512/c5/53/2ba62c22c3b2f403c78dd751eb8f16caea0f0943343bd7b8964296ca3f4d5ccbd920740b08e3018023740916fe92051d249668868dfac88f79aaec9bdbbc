{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nimport { Surface } from '../Styled';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { onCategoryEdit, onCategoryDelete } from '../../store/helpers/category';\nimport { useHelper } from '../../hooks/useHelper';\nimport CardActions from '../CardActions';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Surface).withConfig({\n  displayName: \"CategoryCard__Wrap\",\n  componentId: \"sc-10psc0b-0\"\n})([\"height:100%;min-height:100px;\"]);\nexport const Poster = styled(Image).withConfig({\n  displayName: \"CategoryCard__Poster\",\n  componentId: \"sc-10psc0b-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"CategoryCard__Header\",\n  componentId: \"sc-10psc0b-2\"\n})([\"justify-content:space-between;align-items:center;\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"CategoryCard__Content\",\n  componentId: \"sc-10psc0b-3\"\n})([\"grid-gap:0;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"CategoryCard__Name\",\n  componentId: \"sc-10psc0b-4\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\nexport const Card = ({\n  category,\n  checked,\n  appearance,\n  className,\n  style,\n  onLink,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const recall = useHelper();\n  const {\n    setQuery\n  } = useEntityQuery();\n\n  const handleEdit = () => {\n    recall(onCategoryEdit, {\n      id: category.id,\n      category,\n      mutation: queries.UPDATE_CATEGORY\n    })();\n    if (onEdit) onEdit();\n  };\n\n  const handleDelete = () => {\n    recall(onCategoryDelete, {\n      id: category.id,\n      category,\n      mutation: queries.DELETE_CATEGORY\n    })();\n    if (onDelete) onDelete();\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    checked: checked,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n    date: category.createdAt,\n    category: getLabelCategory(category.type)\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    typeText: 'категорию',\n    checked: checked,\n    onEdit: onEdit && handleEdit,\n    onDelete: onDelete && handleDelete,\n    onChecked: onChecked\n  })), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: () => setQuery(category.id, 'category', onLink)\n  }, category.name), /*#__PURE__*/React.createElement(Text, null, category.description)));\n};\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;","map":null,"metadata":{},"sourceType":"module"}