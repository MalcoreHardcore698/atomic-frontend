{"ast":null,"code":"/**\n * @return {Date[]} List with date objects for each day of the month\n */\nexport var getDaysInMonth = function getDaysInMonth(year, month) {\n  var date = new Date(year, month, 1);\n  var days = [];\n  var day = date.getDay();\n  var spaces = 0;\n  if (day === 0) spaces = 6;else spaces = day - 1;\n\n  while (spaces > 0) {\n    days.push(null);\n    spaces -= 1;\n  }\n\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n\n  return days;\n};\nexport var getDaysInMonthUTC = function getDaysInMonthUTC(year, month) {\n  var date = new Date(Date.UTC(year, month, 1));\n  var days = [];\n\n  while (date.getUTCMonth() === month) {\n    days.push(new Date(date));\n    date.setUTCDate(date.getUTCDate() + 1);\n  }\n\n  return days;\n};\n/**\n * @return {Date[]} List with date objects for each day of the week\n */\n\nexport var getDaysInWeek = function getDaysInWeek(date) {\n  var week = [];\n  var day = date.getDay();\n  var mondayCorrection = day === 0 ? -6 : 1;\n  date.setDate(date.getDate() - day + mondayCorrection);\n\n  for (var i = 0; i < 7; i += 1) {\n    week.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n\n  return week;\n};\n/**\n * @return {string[]} List with internalization months\n */\n\nexport var getIntlMonths = function getIntlMonths(lang) {\n  return new Array(12).fill(null).map(function (_, index) {\n    return new Date(new Date().getFullYear(), index);\n  }).map(function (month) {\n    return month.toLocaleDateString(lang, {\n      month: 'short'\n    });\n  });\n};\n/**\n * @return {string[]} List with internalization weekdays\n */\n\nexport var getIntlWeekdays = function getIntlWeekdays(lang, repr) {\n  return new Array(7).fill(null).map(function (_, index) {\n    return new Date(new Date().getFullYear(), 0, index - 1);\n  }).map(function (weekDay) {\n    return weekDay.toLocaleDateString(lang, {\n      weekday: repr\n    });\n  });\n};\nexport var isWeekDay = function isWeekDay(date) {\n  return date.getDay() !== 0 && date.getDay() !== 6;\n};\nexport var isSame = function isSame(_date1, _date2) {\n  var date1 = new Date(_date1);\n  date1.setHours(0, 0, 0, 0);\n  var date2 = new Date(_date2);\n  date2.setHours(0, 0, 0, 0);\n  return new Date(date1).getTime() === new Date(date2).getTime();\n};\nexport var parseDate = function parseDate(date) {\n  if (!date) return null;\n  return new Date(date) || null;\n};\nexport var getDateLabel = function getDateLabel(date) {\n  var _Date;\n\n  if (!date) return null;\n  return ((_Date = new Date(date)) === null || _Date === void 0 ? void 0 : _Date.toLocaleDateString()) || null;\n};","map":null,"metadata":{},"sourceType":"module"}