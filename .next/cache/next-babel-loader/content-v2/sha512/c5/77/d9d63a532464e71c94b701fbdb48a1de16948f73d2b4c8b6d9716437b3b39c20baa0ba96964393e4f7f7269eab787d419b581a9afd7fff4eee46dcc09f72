{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Loader } from '../Styled';\nimport Alert from '../../atomic-ui/components/Alert';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"MessengerChat__Wrap\",\n  componentId: \"sc-1qcfj1w-0\"\n})([\"width:100%;flex-grow:1;\"]);\nexport const Messages = styled(Column).withConfig({\n  displayName: \"MessengerChat__Messages\",\n  componentId: \"sc-1qcfj1w-1\"\n})([\"background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);flex-grow:1;\"]);\nexport const Empty = styled(Text).withConfig({\n  displayName: \"MessengerChat__Empty\",\n  componentId: \"sc-1qcfj1w-2\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;flex-grow:1;\"]);\nexport const MessengerChat = ({\n  chat,\n  error,\n  loading,\n  appearance,\n  className,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  var _chat$messages, _chat$messages2;\n\n  const [message, setMessage] = useState('');\n  const messageRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    className: className\n  }), /*#__PURE__*/React.createElement(Messages, null, !loading && (chat === null || chat === void 0 ? void 0 : (_chat$messages = chat.messages) === null || _chat$messages === void 0 ? void 0 : _chat$messages.length) > 0 ? chat.messages.map(item => {\n    var _item$user, _item$user$avatar;\n\n    return /*#__PURE__*/React.createElement(Message, {\n      key: item.id,\n      avatar: (_item$user = item.user) === null || _item$user === void 0 ? void 0 : (_item$user$avatar = _item$user.avatar) === null || _item$user$avatar === void 0 ? void 0 : _item$user$avatar.path,\n      side: item.side,\n      name: item.name,\n      text: item.text,\n      time: item.createdAt,\n      tails: {\n        default: '/parts/tail.svg',\n        owner: '/parts/tail-owner.svg'\n      },\n      onLink: onLink\n    });\n  }) : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u0447\\u0430\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Empty, null, (chat === null || chat === void 0 ? void 0 : (_chat$messages2 = chat.messages) === null || _chat$messages2 === void 0 ? void 0 : _chat$messages2.length) === 0 ? 'История сообщений пуста' : 'Выберите чат')), chat && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !chat,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: 'text',\n    ref: messageRef,\n    placeholder: 'Отправьте сообщенение...',\n    disabled: loading || !chat,\n    appearance: appearance,\n    onChange: e => {\n      var _e$target;\n\n      return setMessage((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '');\n    },\n    onKeyDown: e => {\n      // Pressed ENTER\n      if (e.keyCode === 13) {\n        onSubmit(message);\n        messageRef.current.value = '';\n      }\n    },\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !chat,\n    onClick: () => {\n      onSubmit(message);\n      messageRef.current.value = '';\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\nexport default MessengerChat;","map":null,"metadata":{},"sourceType":"module"}