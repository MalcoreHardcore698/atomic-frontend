{"ast":null,"code":"import gql from 'graphql-tag';\nimport { TicketFields } from '../../fragments';\nexport const GET_TICKET = gql`\n  query getTicket($id: ID!) {\n    getTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const GET_TICKETS = gql`\n  query getTickets($offset: Int, $limit: Int, $search: String) {\n    getTickets(offset: $offset, limit: $limit, search: $search) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const GET_USER_TICKETS = gql`\n  query getUserTickets {\n    getUserTickets {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const CREATE_USER_TICKET = gql`\n  mutation createUserTicket($input: UserTicketCreateInput!) {\n    createUserTicket(input: $input)\n  }\n`;\nexport const CREATE_TICKET = gql`\n  mutation createTicket($input: TicketCreateInput!) {\n    createTicket(input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const UPDATE_TICKET = gql`\n  mutation updateTicket($id: ID!, $input: TicketUpdateInput!) {\n    updateTicket(id: $id, input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const DELETE_TICKET = gql`\n  mutation deleteTicket($id: ID!) {\n    deleteTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const CLOSE_TICKET = gql`\n  mutation closeTicket($id: ID!) {\n    closeTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/Ticket/index.js"],"names":["gql","TicketFields","GET_TICKET","GET_TICKETS","GET_USER_TICKETS","CREATE_USER_TICKET","CREATE_TICKET","UPDATE_TICKET","DELETE_TICKET","CLOSE_TICKET"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,UAAU,GAAGF,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAME,WAAW,GAAGH,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAMG,gBAAgB,GAAGJ,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAMI,kBAAkB,GAAGL,GAAI;AACtC;AACA;AACA;AACA,CAJO;AAMP,OAAO,MAAMM,aAAa,GAAGN,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAMM,aAAa,GAAGP,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAMO,aAAa,GAAGR,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO;AASP,OAAO,MAAMQ,YAAY,GAAGT,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,IAAIC,YAAa;AACjB,CAPO","sourcesContent":["import gql from 'graphql-tag'\nimport { TicketFields } from '../../fragments'\n\nexport const GET_TICKET = gql`\n  query getTicket($id: ID!) {\n    getTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const GET_TICKETS = gql`\n  query getTickets($offset: Int, $limit: Int, $search: String) {\n    getTickets(offset: $offset, limit: $limit, search: $search) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const GET_USER_TICKETS = gql`\n  query getUserTickets {\n    getUserTickets {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const CREATE_USER_TICKET = gql`\n  mutation createUserTicket($input: UserTicketCreateInput!) {\n    createUserTicket(input: $input)\n  }\n`\n\nexport const CREATE_TICKET = gql`\n  mutation createTicket($input: TicketCreateInput!) {\n    createTicket(input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const UPDATE_TICKET = gql`\n  mutation updateTicket($id: ID!, $input: TicketUpdateInput!) {\n    updateTicket(id: $id, input: $input) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const DELETE_TICKET = gql`\n  mutation deleteTicket($id: ID!) {\n    deleteTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const CLOSE_TICKET = gql`\n  mutation closeTicket($id: ID!) {\n    closeTicket(id: $id) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n"]},"metadata":{},"sourceType":"module"}