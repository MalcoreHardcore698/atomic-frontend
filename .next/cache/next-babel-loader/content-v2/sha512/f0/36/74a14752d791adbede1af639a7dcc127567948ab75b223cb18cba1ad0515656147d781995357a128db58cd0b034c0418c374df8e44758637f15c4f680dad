{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Icon from '../Icon';\nimport Button from '../Button';\nimport Switch from '../Switch';\nimport Difinition from '../Difinition';\nimport Checkbox from '../Checkbox';\nimport Tooltip from '../Tooltip';\nimport Popper from '../Popper';\nexport const Wrap = styled(Column)``;\nexport const Manage = styled(Row)``;\nexport const Headers = styled(Switch)`\n  ${({\n  width\n}) => width && css`\n      span {\n        width: ${width};\n      }\n    `}\n\n  ${({\n  first,\n  width\n}) => first && width && css`\n      span:first-child {\n        width: calc(${width} + 45px);\n      }\n    `}\n`;\nexport const Track = styled(Row)`\n  transition: opacity 150ms ease;\n\n  ${({\n  checked\n}) => checked && css`\n      opacity: 0.45;\n    `}\n`;\nexport const Content = styled(Row)`\n  padding: 5px 15px;\n  width: calc(100% - 55px);\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n    `}\n\n  & > label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: calc(var(--input-height-m) - 15px);\n    margin-left: 5px;\n\n    & > span {\n      margin: 0;\n    }\n  }\n`;\nexport const Container = styled(Row)`\n  width: 100%;\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n    `}\n`;\nexport const Actions = styled(Column)`\n  padding: 5px;\n  width: var(--input-height-m);\n  grid-gap: 5px;\n\n  button {\n    width: 100%;\n    flex-grow: 1;\n  }\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`;\nexport const Cell = styled(Difinition)`\n  align-items: center;\n  flex-grow: 1;\n\n  width: ${({\n  width\n}) => width};\n  overflow: hidden;\n\n  & > div {\n    width: 100%;\n  }\n\n  h4 {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-bold);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nexport const HeaderList = styled(Column)`\n  border: 1px solid var(--surface-border);\n  background: var(--surface-background);\n  box-shadow: var(--surface-shadow);\n  border-radius: var(--surface-border-radius);\n  padding: 10px;\n  grid-gap: 10px;\n`;\nexport const CheckboxTooltip = styled(Tooltip)`\n  display: flex;\n  align-items: center;\n`;\nexport const Table = ({\n  data,\n  template,\n  className,\n  style,\n  appearance,\n  onClick,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const {\n    0: documents,\n    1: setDocuments\n  } = useState((data || []).map(item => _objectSpread(_objectSpread({}, item), {}, {\n    id: v4(),\n    checked: false\n  })));\n  const defaultWidth = `${Math.floor(100 / template.length)}%`;\n  /* eslint-disable-next-line */\n\n  const {\n    0: headers,\n    1: setHeaders\n  } = useState((template || []).map(item => ({\n    value: v4(),\n    label: item.header,\n    width: item.width || defaultWidth,\n    tooltip: item.tooltip || `Сортировка по «${item.header}‎»`,\n    visible: !item.hidden\n  })));\n  /* eslint-disable-next-line */\n\n  const {\n    0: header,\n    1: setHeader\n  } = useState(headers[0] || null);\n\n  const handleChecked = document => {\n    setDocuments(prev => prev.map(item => item.id === document.id ? _objectSpread(_objectSpread({}, document), {}, {\n      checked: !item.checked\n    }) : item));\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style\n  }, __jsx(Manage, null, __jsx(Headers, {\n    defaultValue: headers[0],\n    options: headers.filter(h => h.visible),\n    onChange: item => setHeader(item),\n    first: onChecked,\n    stretch: true\n  }), __jsx(Popper, {\n    place: 'left',\n    offset: {\n      bottom: 80\n    },\n    body: __jsx(HeaderList, null, headers.map((header, index) => __jsx(Checkbox, {\n      key: index,\n      size: 's',\n      label: header.label,\n      checked: header.visible\n    }))),\n    appearance: 'clear'\n  }, __jsx(Tooltip, {\n    text: 'Отображение полей',\n    place: 'left'\n  }, __jsx(Button, {\n    kind: 'icon'\n  }, __jsx(Icon, {\n    icon: 'show',\n    stroke: 'white'\n  }))))), documents.map((document, index) => __jsx(Track, {\n    key: index,\n    checked: document.checked\n  }, __jsx(Content, {\n    appearance: appearance\n  }, __jsx(CheckboxTooltip, {\n    text: 'Отметить документ',\n    self: true\n  }, onChecked && __jsx(Checkbox, {\n    size: 's',\n    onChange: () => handleChecked(document)\n  })), __jsx(Container, {\n    onClick: () => onClick(document)\n  }, template.map((cell, index) => headers[index].visible ? /*#__PURE__*/React.cloneElement(cell.content(document), {\n    key: index,\n    label: cell.header,\n    width: (cell === null || cell === void 0 ? void 0 : cell.width) || defaultWidth\n  }) : null))), (onEdit || onDelete) && __jsx(Actions, {\n    appearance: appearance\n  }, onEdit && __jsx(Tooltip, {\n    text: 'Редактирование',\n    place: 'left'\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    onClick: () => onEdit(document)\n  }, __jsx(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white'\n  }))), onDelete && __jsx(Tooltip, {\n    text: 'Удаление',\n    place: 'left'\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    appearance: 'red',\n    onClick: () => onDelete(document)\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white'\n  })))))));\n};\nTable.defaultProps = {\n  appearance: 'default'\n};\nexport default Table;","map":null,"metadata":{},"sourceType":"module"}