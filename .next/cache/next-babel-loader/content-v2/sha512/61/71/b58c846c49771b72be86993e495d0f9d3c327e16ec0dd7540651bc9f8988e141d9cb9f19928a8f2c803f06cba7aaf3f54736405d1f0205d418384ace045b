{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Divider from '../Divider';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Menu__Wrap\",\n  componentId: \"sc-7yh9hs-0\"\n})([\"\", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const Header = styled(Row).withConfig({\n  displayName: \"Menu__Header\",\n  componentId: \"sc-7yh9hs-1\"\n})([\"justify-content:space-between;align-items:center;font-weight:var(--font-weight-medium);padding:var(--default-gap) var(--default-gap) 0 var(--default-gap);line-height:1;\"]);\n_c2 = Header;\nexport const ManageButton = styled(Button).withConfig({\n  displayName: \"Menu__ManageButton\",\n  componentId: \"sc-7yh9hs-2\"\n})([\"color:var(--default-color-accent);\"]);\n_c3 = ManageButton;\nexport const ManageRow = styled(Row).withConfig({\n  displayName: \"Menu__ManageRow\",\n  componentId: \"sc-7yh9hs-3\"\n})([\"grid-gap:0;align-items:center;span{font-weight:var(--font-weight-medium);}\"]);\n_c4 = ManageRow;\nexport const DangerButton = styled(Button).withConfig({\n  displayName: \"Menu__DangerButton\",\n  componentId: \"sc-7yh9hs-4\"\n})([\"color:var(--default-color-red);\"]);\n_c5 = DangerButton;\nexport const List = styled(Column).withConfig({\n  displayName: \"Menu__List\",\n  componentId: \"sc-7yh9hs-5\"\n})([\"text-align:left;align-items:flex-start;padding:0 var(--default-gap) var(--default-gap) var(--default-gap);button{font-weight:var(--font-weight-medium);text-align:inherit;}\"]);\n_c6 = List;\nexport const Menu = ({\n  links,\n  header,\n  className,\n  style,\n  listStyle\n}) => /*#__PURE__*/React.createElement(Wrap, {\n  className: className,\n  style: style\n}, header && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Text, null, header.title), header.link && /*#__PURE__*/React.createElement(ManageButton, {\n  appearance: 'clear',\n  onClick: header.link.onClick\n}, /*#__PURE__*/React.createElement(ManageRow, null, /*#__PURE__*/React.createElement(\"span\", null, header.link.text), /*#__PURE__*/React.createElement(Icon, {\n  icon: 'arrowRight',\n  size: 'xs',\n  stroke: 'var(--default-color-accent)'\n})))), /*#__PURE__*/React.createElement(Divider, {\n  clear: true\n})), links && links.length && /*#__PURE__*/React.createElement(List, {\n  style: listStyle\n}, links.map((link, index) => link !== 'danger' ? /*#__PURE__*/React.createElement(Button, {\n  key: index,\n  style: {\n    color: link.active ? 'var(--default-color-accent)' : 'black'\n  },\n  appearance: 'clear',\n  onClick: link.onClick\n}, link.text) : /*#__PURE__*/React.createElement(DangerButton, {\n  key: index,\n  appearance: 'clear',\n  onClick: link.onClick\n}, link.text))));\n_c7 = Menu;\nMenu.defaultProps = {\n  appearance: 'default'\n};\nexport default Menu;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ManageButton\");\n$RefreshReg$(_c4, \"ManageRow\");\n$RefreshReg$(_c5, \"DangerButton\");\n$RefreshReg$(_c6, \"List\");\n$RefreshReg$(_c7, \"Menu\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/atomic-ui/components/Menu/index.js"],"names":["React","styled","css","Row","Column","Button","Text","Icon","Divider","Wrap","appearance","Header","ManageButton","ManageRow","DangerButton","List","Menu","links","header","className","style","listStyle","title","link","onClick","text","length","map","index","color","active","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Button from '../Button'\nimport Text from '../Text'\nimport Icon from '../Icon'\nimport Divider from '../Divider'\n\nexport const Wrap = styled(Column)`\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  font-weight: var(--font-weight-medium);\n  padding: var(--default-gap) var(--default-gap) 0 var(--default-gap);\n  line-height: 1;\n`\n\nexport const ManageButton = styled(Button)`\n  color: var(--default-color-accent);\n`\n\nexport const ManageRow = styled(Row)`\n  grid-gap: 0;\n  align-items: center;\n\n  span {\n    font-weight: var(--font-weight-medium);\n  }\n`\n\nexport const DangerButton = styled(Button)`\n  color: var(--default-color-red);\n`\n\nexport const List = styled(Column)`\n  text-align: left;\n  align-items: flex-start;\n  padding: 0 var(--default-gap) var(--default-gap) var(--default-gap);\n\n  button {\n    font-weight: var(--font-weight-medium);\n    text-align: inherit;\n  }\n`\n\nexport const Menu = ({ links, header, className, style, listStyle }) => (\n  <Wrap className={className} style={style}>\n    {header && (\n      <React.Fragment>\n        <Header>\n          <Text>{header.title}</Text>\n          {header.link && (\n            <ManageButton appearance={'clear'} onClick={header.link.onClick}>\n              <ManageRow>\n                <span>{header.link.text}</span>\n                <Icon icon={'arrowRight'} size={'xs'} stroke={'var(--default-color-accent)'} />\n              </ManageRow>\n            </ManageButton>\n          )}\n        </Header>\n\n        <Divider clear />\n      </React.Fragment>\n    )}\n\n    {links && links.length && (\n      <List style={listStyle}>\n        {links.map((link, index) =>\n          link !== 'danger' ? (\n            <Button\n              key={index}\n              style={{ color: link.active ? 'var(--default-color-accent)' : 'black' }}\n              appearance={'clear'}\n              onClick={link.onClick}>\n              {link.text}\n            </Button>\n          ) : (\n            <DangerButton key={index} appearance={'clear'} onClick={link.onClick}>\n              {link.text}\n            </DangerButton>\n          )\n        )}\n      </List>\n    )}\n  </Wrap>\n)\n\nMenu.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}