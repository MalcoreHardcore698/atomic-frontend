{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport template from '../../atomic-ui/components/Table/templates/role';\nimport RoleCard from '../../components/RoleCard';\nimport ContentLayout from '../../layouts/dashboard/content';\nimport { roles as filterConfig } from '../../components/FilterBar/config';\nimport { onRoleCreate, onRoleEdit, onRoleLink } from '../../store/helpers/role';\nimport { setDocuments } from '../../store/actions/documents';\nimport { useHelper } from '../../hooks/useHelper';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Роли';\nconst LIMIT = 12;\nconst START_OFFSET = 0;\n\nconst Roles = () => {\n  _s();\n\n  const recall = useHelper();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    icon: 'lock',\n    template: template,\n    startOffset: START_OFFSET,\n    emptyMessage: 'Ролей нет',\n    filterConfig: filterConfig,\n    buttonCreateText: 'Создать роль',\n    entityType: 'role',\n    getType: 'getRoles',\n    getQuery: queries.GET_ROLES,\n    deleteQuery: queries.DELETE_ROLE,\n    deleteEntityMultiText: 'роли',\n    deleteEntitySingleText: 'роль',\n    onLink: role => recall(onRoleLink, {\n      id: role.id,\n      role\n    })(),\n    onEdit: (role, onAfter) => recall(onRoleEdit, {\n      id: role.id,\n      role,\n      mutation: queries.UPDATE_ROLE,\n      onAfter\n    })(),\n    onCreate: onAfter => recall(onRoleCreate, {\n      mutation: queries.CREATE_ROLE,\n      onAfter\n    })(),\n    render: document => /*#__PURE__*/React.createElement(RoleCard, {\n      role: document\n    })\n  });\n};\n\n_s(Roles, \"+AhuUFCwRGRe/B96tJ9iu8AcwFc=\", false, function () {\n  return [useHelper, useDispatch];\n});\n\n_c = Roles;\nexport default Roles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/pages/dashboard/roles.js"],"names":["React","useEffect","useDispatch","template","RoleCard","ContentLayout","roles","filterConfig","onRoleCreate","onRoleEdit","onRoleLink","setDocuments","useHelper","queries","TITLE","LIMIT","START_OFFSET","Roles","recall","dispatch","GET_ROLES","DELETE_ROLE","role","id","onAfter","mutation","UPDATE_ROLE","CREATE_ROLE","document"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,iDAArB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,KAAK,IAAIC,YAAlB,QAAsC,mCAAtC;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,UAAnC,QAAqD,0BAArD;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,KAAK,GAAG,MAAd;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGjB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACR,YAAY,CAAC,IAAD,CAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,QAAQ,EAAEZ,QAJZ;AAKE,IAAA,WAAW,EAAEa,YALf;AAME,IAAA,YAAY,EAAE,WANhB;AAOE,IAAA,YAAY,EAAET,YAPhB;AAQE,IAAA,gBAAgB,EAAE,cARpB;AASE,IAAA,UAAU,EAAE,MATd;AAUE,IAAA,OAAO,EAAE,UAVX;AAWE,IAAA,QAAQ,EAAEM,OAAO,CAACO,SAXpB;AAYE,IAAA,WAAW,EAAEP,OAAO,CAACQ,WAZvB;AAaE,IAAA,qBAAqB,EAAE,MAbzB;AAcE,IAAA,sBAAsB,EAAE,MAd1B;AAeE,IAAA,MAAM,EAAGC,IAAD,IAAUJ,MAAM,CAACR,UAAD,EAAa;AAAEa,MAAAA,EAAE,EAAED,IAAI,CAACC,EAAX;AAAeD,MAAAA;AAAf,KAAb,CAAN,EAfpB;AAgBE,IAAA,MAAM,EAAE,CAACA,IAAD,EAAOE,OAAP,KACNN,MAAM,CAACT,UAAD,EAAa;AACjBc,MAAAA,EAAE,EAAED,IAAI,CAACC,EADQ;AAEjBD,MAAAA,IAFiB;AAGjBG,MAAAA,QAAQ,EAAEZ,OAAO,CAACa,WAHD;AAIjBF,MAAAA;AAJiB,KAAb,CAAN,EAjBJ;AAwBE,IAAA,QAAQ,EAAGA,OAAD,IAAaN,MAAM,CAACV,YAAD,EAAe;AAAEiB,MAAAA,QAAQ,EAAEZ,OAAO,CAACc,WAApB;AAAiCH,MAAAA;AAAjC,KAAf,CAAN,EAxBzB;AAyBE,IAAA,MAAM,EAAGI,QAAD,iBAAc,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAzBxB,IADF;AA6BD,CArCD;;GAAMX,K;UACWL,S,EACEV,W;;;KAFbe,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport template from '../../atomic-ui/components/Table/templates/role'\n\nimport RoleCard from '../../components/RoleCard'\nimport ContentLayout from '../../layouts/dashboard/content'\nimport { roles as filterConfig } from '../../components/FilterBar/config'\nimport { onRoleCreate, onRoleEdit, onRoleLink } from '../../store/helpers/role'\nimport { setDocuments } from '../../store/actions/documents'\nimport { useHelper } from '../../hooks/useHelper'\nimport queries from '../../graphql/queries'\n\nconst TITLE = 'Роли'\n\nconst LIMIT = 12\nconst START_OFFSET = 0\n\nconst Roles = () => {\n  const recall = useHelper()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setDocuments(null))\n  }, [])\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      icon={'lock'}\n      template={template}\n      startOffset={START_OFFSET}\n      emptyMessage={'Ролей нет'}\n      filterConfig={filterConfig}\n      buttonCreateText={'Создать роль'}\n      entityType={'role'}\n      getType={'getRoles'}\n      getQuery={queries.GET_ROLES}\n      deleteQuery={queries.DELETE_ROLE}\n      deleteEntityMultiText={'роли'}\n      deleteEntitySingleText={'роль'}\n      onLink={(role) => recall(onRoleLink, { id: role.id, role })()}\n      onEdit={(role, onAfter) =>\n        recall(onRoleEdit, {\n          id: role.id,\n          role,\n          mutation: queries.UPDATE_ROLE,\n          onAfter\n        })()\n      }\n      onCreate={(onAfter) => recall(onRoleCreate, { mutation: queries.CREATE_ROLE, onAfter })()}\n      render={(document) => <RoleCard role={document} />}\n    />\n  )\n}\n\nexport default Roles\n"]},"metadata":{},"sourceType":"module"}