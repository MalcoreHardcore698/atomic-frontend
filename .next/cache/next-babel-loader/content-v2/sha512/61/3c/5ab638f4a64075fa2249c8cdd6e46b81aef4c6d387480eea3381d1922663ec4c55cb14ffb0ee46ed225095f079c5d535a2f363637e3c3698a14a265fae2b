{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Title from '../atomic-ui/components/Title';\nimport ProjectList from '../components/ProjectList';\nimport ArticleList from '../components/ArticleList';\nimport UserList from '../components/UserList';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport ContentLayout from '../layouts/content';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 13;\nconst LIMIT = 5;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;@media only screen and (max-width:1196px){grid-template-columns:1fr;}\"]);\n_c = Container;\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c2 = Aside;\n\nconst Home = ({\n  store\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const [search, setSearch] = useState(null);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const scaffold = useMemo(() => {\n    var _store$projects, _store$projects2;\n\n    return {\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: ((_store$projects = store.projects) === null || _store$projects === void 0 ? void 0 : _store$projects.length) > 0 && store.projects[0],\n      residue: ((_store$projects2 = store.projects) === null || _store$projects2 === void 0 ? void 0 : _store$projects2.length) === 3 && store.projects.slice(1, 3),\n      onLink: (project, owned) => recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        project,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      })(),\n      onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject)))()),\n      onAdd: user.email && (project => recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      })()),\n      onSearch: value => setSearch(value),\n      onAboutMore: project => recall(onUserAboutMore, {\n        user: project\n      }),\n      onCompanyLink: project => {\n        var _project$company;\n\n        return recall(onUserLink, {\n          id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n          auth: user\n        })();\n      },\n      onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    research: search,\n    scaffold: scaffold,\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS,\n    variables: {\n      status: 'PUBLISHED'\n    },\n    initialize: true\n  }, ({\n    documents\n  }) => /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(ProjectList, {\n    initialList: documents,\n    layout: true\n  }), /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), /*#__PURE__*/React.createElement(UserList, {\n    variables: {\n      offset: 0,\n      limit: 3\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(ArticleList, {\n    variables: {\n      offset: 0,\n      limit: 2\n    }\n  }))));\n};\n\n_s(Home, \"fXaryvt0PAAnshSiNUK3Ih4DPiU=\", false, function () {\n  return [useHelper, useMutate, useSelector, useDispatch];\n});\n\n_c3 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Aside\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useMemo","useState","styled","useSelector","useDispatch","Title","ProjectList","ArticleList","UserList","useHelper","useMutate","ContentLayout","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserAboutMore","onUserLink","queries","TITLE","START_OFFSET","LIMIT","Container","div","Aside","aside","Home","store","recall","mutate","search","setSearch","user","state","dispatch","scaffold","title","background","primary","projects","length","residue","slice","onLink","project","owned","id","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","onSearch","value","onAboutMore","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","GET_PROJECTS","status","documents","offset","limit"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Title from '../atomic-ui/components/Title'\n\nimport ProjectList from '../components/ProjectList'\nimport ArticleList from '../components/ArticleList'\nimport UserList from '../components/UserList'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport ContentLayout from '../layouts/content'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user'\nimport queries from '../graphql/queries'\nimport { initializeApollo } from '../apollo'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 13\nconst LIMIT = 5\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Home = ({ store }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const [search, setSearch] = useState(null)\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  const scaffold = useMemo(\n    () => ({\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: store.projects?.length > 0 && store.projects[0],\n      residue: store.projects?.length === 3 && store.projects.slice(1, 3),\n      onLink: (project, owned) =>\n        recall(onProjectLink, {\n          id: project.id,\n          auth: user?.email,\n          project,\n          liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n          onLike:\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            ),\n          onAdd:\n            user.email &&\n            recall(onProjectAdd, {\n              id: project.id,\n              project,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              }\n            }),\n          owned\n        })(),\n      onLike:\n        user.email &&\n        ((project) =>\n          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n            dispatch(updateUser(response.data.likeProject))\n          )()),\n      onAdd:\n        user.email &&\n        ((project) =>\n          recall(onProjectAdd, {\n            id: project.id,\n            project,\n            folders: user?.folders,\n            mutations: {\n              addProject: queries.ADD_USER_PROJECT,\n              createFolder: queries.ADD_USER_FOLDER\n            }\n          })()),\n      onSearch: (value) => setSearch(value),\n      onAboutMore: (project) => recall(onUserAboutMore, { user: project }),\n      onCompanyLink: (project) => recall(onUserLink, { id: project.company?.email, auth: user })(),\n      onScreenshotClick: (project, key) =>\n        recall(onProjectScreenshot, {\n          screenshots: [project.preview, ...project.screenshots],\n          key\n        })()\n    }),\n    []\n  )\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      research={search}\n      scaffold={scaffold}\n      startOffset={START_OFFSET}\n      query={queries.GET_PROJECTS}\n      variables={{ status: 'PUBLISHED' }}\n      initialize>\n      {({ documents }) => (\n        <Container>\n          <ProjectList initialList={documents} layout />\n\n          <Aside>\n            <Title tag={'h4'}>Авторы</Title>\n            <UserList variables={{ offset: 0, limit: 3 }} />\n\n            <Title tag={'h4'}>Новости</Title>\n            <ArticleList variables={{ offset: 0, limit: 2 }} />\n          </Aside>\n        </Container>\n      )}\n    </ContentLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let projects = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_PROJECTS,\n      variables: {\n        offset: 0,\n        limit: 3\n      }\n    })\n\n    if (response && response.data) {\n      projects = response.data.getProjects\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        projects\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}