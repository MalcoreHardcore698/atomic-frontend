{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\TextArea\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.textarea`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  resize: none;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: var(--surface-background);\n\n  margin: 0;\n  padding: 10px;\n\n  width: 100%;\n  height: 180px;\n  max-width: 100%;\n\n  &::placeholder {\n    font-family: var(--default-font-family);\n    color: var(--input-placeholder-color);\n  }\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      color: var(--surface-color);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'ghost' && css`\n      color: var(--input-color);\n      background: var(--input-background);\n    `}\n`;\nexport const TextArea = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    defaultValue\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"defaultValue\"]);\n\n  return __jsx(Wrap, _extends({}, props, {\n    ref: ref,\n    defaultValue: defaultValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }));\n});\nTextArea.defaultProps = {\n  placeholder: 'Введите содержимое'\n};\nexport default TextArea;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/TextArea/index.js"],"names":["React","styled","css","Wrap","textarea","appearance","TextArea","forwardRef","ref","defaultValue","props","defaultProps","placeholder"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,IAAI,GAAGF,MAAM,CAACG,QAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACAH,GAAI;AACR;AACA;AACA;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAH,GAAI;AACR;AACA;AACA,KAAM;AACN,CApCO;AAsCP,OAAO,MAAMI,QAAQ,gBAAGN,KAAK,CAACO,UAAN,CAAiB,OAA6BC,GAA7B;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAoBC,KAApB;;AAAA,SACvC,MAAC,IAAD,eAAUA,KAAV;AAAiB,IAAA,GAAG,EAAEF,GAAtB;AAA2B,IAAA,YAAY,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADuC;AAAA,CAAjB,CAAjB;AAIPH,QAAQ,CAACK,YAAT,GAAwB;AACtBC,EAAAA,WAAW,EAAE;AADS,CAAxB;AAIA,eAAeN,QAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const Wrap = styled.textarea`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  resize: none;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: var(--surface-background);\n\n  margin: 0;\n  padding: 10px;\n\n  width: 100%;\n  height: 180px;\n  max-width: 100%;\n\n  &::placeholder {\n    font-family: var(--default-font-family);\n    color: var(--input-placeholder-color);\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      color: var(--surface-color);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      color: var(--input-color);\n      background: var(--input-background);\n    `}\n`\n\nexport const TextArea = React.forwardRef(({ defaultValue, ...props }, ref) => (\n  <Wrap {...props} ref={ref} defaultValue={defaultValue} />\n))\n\nTextArea.defaultProps = {\n  placeholder: 'Введите содержимое'\n}\n\nexport default TextArea\n"]},"metadata":{},"sourceType":"module"}