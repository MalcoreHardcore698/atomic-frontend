{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\n  &:hover {\\n    svg {\\n      path,\\n      circle {\\n        stroke: var(--default-color-accent);\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\n  span {\\n    color: var(--default-color-text);\\n    transition: color 150ms ease;\\n  }\\n\\n  &:hover {\\n    span {\\n      color: var(--default-color-accent);\\n    }\\n  }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  grid-gap: 0;\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--default-color-accent);\\n  font-size: var(--font-size-s);\\n  font-weight: var(--font-weight-regular);\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  grid-gap: 10px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 5px;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 0;\\n  width: 100%;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  color: black;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 128px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n\\n      &:hover {\\n        opacity: 0.65;\\n      }\\n    \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n      display: flex;\\n      align-items: center;\\n      grid-gap: 10px;\\n      margin-bottom: 5px;\\n    \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-medium);\\n  color: var(--default-color-accent);\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-xs);\\n  height: var(--input-height-xs);\\n  min-width: var(--input-height-xs);\\n  min-height: var(--input-height-xs);\\n  border-radius: var(--surface-border-radius);\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      opacity: 0.45;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Text from '../Text';\nimport DateText from '../DateText';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Tooltip from '../Tooltip';\nimport Checkbox from '../Checkbox';\nimport TextArea from '../TextArea';\nexport var Wrap = styled(Row)(_templateObject(), function (_ref) {\n  var checked = _ref.checked;\n  return checked && css(_templateObject2());\n});\nexport var MiniAvatar = styled(Avatar)(_templateObject3());\nexport var Name = styled(Text)(_templateObject4(), function (_ref2) {\n  var compact = _ref2.compact;\n  return compact && css(_templateObject5());\n}, function (_ref3) {\n  var onClick = _ref3.onClick;\n  return onClick && css(_templateObject6());\n});\nexport var MessageTextArea = styled(TextArea)(_templateObject7());\nexport var MessageText = styled(Text)(_templateObject8());\nexport var Content = styled(Column)(_templateObject9());\nexport var Meta = styled(Row)(_templateObject10());\nexport var Line = styled(Row)(_templateObject11());\nexport var Actions = styled(Row)(_templateObject12());\nexport var DispatchUpdatedDate = styled(DateText)(_templateObject13());\nexport var DispatchTime = styled(DateText)(_templateObject14());\nexport var ReplyButton = styled(Button)(_templateObject15());\nexport var Likes = styled(Row)(_templateObject16());\nexport var LikesButton = styled(Button)(_templateObject17());\nexport var LikeButton = styled(Button)(_templateObject18());\nexport var Comment = function Comment(_ref4) {\n  var _user$avatar$path, _user$avatar, _user$avatar$path2, _user$avatar2;\n\n  var user = _ref4.user,\n      message = _ref4.message,\n      likes = _ref4.likes,\n      time = _ref4.time,\n      className = _ref4.className,\n      style = _ref4.style,\n      compact = _ref4.compact,\n      initialLiked = _ref4.isLiked,\n      isUpdated = _ref4.isUpdated,\n      isChecked = _ref4.isChecked,\n      onLink = _ref4.onLink,\n      onReply = _ref4.onReply,\n      onChecked = _ref4.onChecked,\n      onShowLikes = _ref4.onShowLikes,\n      onDelete = _ref4.onDelete,\n      onEdit = _ref4.onEdit,\n      onLike = _ref4.onLike;\n\n  var _useState = useState(isUpdated ? time : null),\n      updatedAt = _useState[0],\n      setUpdatedAt = _useState[1];\n\n  var _useState2 = useState(isChecked),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(likes),\n      count = _useState3[0],\n      setCount = _useState3[1];\n\n  var _useState4 = useState(false),\n      isEdit = _useState4[0],\n      setEdit = _useState4[1];\n\n  var _useState5 = useState(initialLiked),\n      isLiked = _useState5[0],\n      setLiked = _useState5[1];\n\n  var color = useMemo(function () {\n    return isLiked ? 'var(--default-color-accent)' : 'var(--default-color-text)';\n  }, [isLiked]);\n  var textLikes = useMemo(function () {\n    return count === 1 ? 'человеку' : 'людям';\n  }, [count]);\n\n  var _useState6 = useState(message),\n      comment = _useState6[0],\n      setComment = _useState6[1];\n\n  var commentRef = useRef(null);\n\n  var onClick = function onClick() {\n    var value = !isLiked;\n    if (onLike) onLike(value);\n    setCount(function (prev) {\n      return prev + (value ? 1 : -1);\n    });\n    setLiked(value);\n  };\n\n  var handleToggleEdit = function handleToggleEdit() {\n    return setEdit(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleChecked = function handleChecked(e) {\n    var value = e.target.checked;\n    if (onChecked) onChecked(value);\n    setChecked(value);\n  };\n\n  var handleApplyChanges = function handleApplyChanges() {\n    var _commentRef$current;\n\n    var value = commentRef === null || commentRef === void 0 ? void 0 : (_commentRef$current = commentRef.current) === null || _commentRef$current === void 0 ? void 0 : _commentRef$current.value;\n\n    if (value) {\n      if (onEdit) onEdit(value);\n      setUpdatedAt(new Date());\n      setComment(value);\n    }\n\n    handleToggleEdit();\n  };\n\n  return __jsx(Wrap, {\n    checked: checked,\n    style: style,\n    className: className\n  }, !compact && __jsx(Avatar, {\n    src: (_user$avatar$path = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) !== null && _user$avatar$path !== void 0 ? _user$avatar$path : ''\n  }), __jsx(Content, null, __jsx(Name, {\n    compact: compact,\n    onClick: onLink\n  }, compact && __jsx(MiniAvatar, {\n    src: (_user$avatar$path2 = user === null || user === void 0 ? void 0 : (_user$avatar2 = user.avatar) === null || _user$avatar2 === void 0 ? void 0 : _user$avatar2.path) !== null && _user$avatar$path2 !== void 0 ? _user$avatar$path2 : ''\n  }), user.name), isEdit ? __jsx(MessageTextArea, {\n    ref: commentRef,\n    defaultValue: comment,\n    appearance: 'ghost'\n  }) : __jsx(MessageText, null, comment), compact && onEdit && onDelete && __jsx(Actions, null, !isEdit ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    text: 'Удалить комментарий'\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: onDelete\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white'\n  }))), __jsx(Tooltip, {\n    text: 'Редактировать комментарий'\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    onClick: handleToggleEdit\n  }, __jsx(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white'\n  }))), __jsx(Tooltip, {\n    text: 'Отметить комментарий',\n    self: true\n  }, __jsx(Checkbox, {\n    checked: checked,\n    onChange: handleChecked\n  }))) : __jsx(React.Fragment, null, __jsx(Tooltip, {\n    text: 'Применить изменения',\n    self: true\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'green',\n    onClick: handleApplyChanges\n  }, __jsx(Icon, {\n    icon: 'check',\n    size: 'xs',\n    stroke: 'white'\n  }))), __jsx(Tooltip, {\n    text: 'Отменить изменения',\n    self: true\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: handleToggleEdit\n  }, __jsx(Icon, {\n    icon: 'closeSquare',\n    size: 'xs',\n    stroke: 'white'\n  }))))), __jsx(Line, null, __jsx(Meta, null, updatedAt ? __jsx(DispatchUpdatedDate, null, \"\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\", ' ', new Date(updatedAt).toLocaleString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })) : __jsx(DispatchTime, {\n    text: time\n  }), __jsx(ReplyButton, {\n    appearance: 'clear',\n    onClick: onReply\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\")), likes && likes > 0 && __jsx(Likes, null, __jsx(Tooltip, {\n    text: \"\".concat(count, \" \").concat(textLikes, \" \\u044D\\u0442\\u043E \\u043D\\u0440\\u0430\\u0432\\u0438\\u0442\\u0441\\u044F\")\n  }, __jsx(LikesButton, {\n    type: 'button',\n    onClick: onShowLikes,\n    appearance: 'clear',\n    size: 'xs'\n  }, __jsx(\"span\", {\n    style: {\n      color: color\n    }\n  }, count))), __jsx(Tooltip, {\n    text: 'Мне нравится'\n  }, __jsx(LikeButton, {\n    type: 'button',\n    onClick: onClick,\n    appearance: 'clear',\n    size: 'xs'\n  }, __jsx(Icon, {\n    icon: 'heart',\n    size: 'xs',\n    stroke: color,\n    fill: isLiked ? 'var(--default-color-accent)' : 'none'\n  })))))));\n};\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}