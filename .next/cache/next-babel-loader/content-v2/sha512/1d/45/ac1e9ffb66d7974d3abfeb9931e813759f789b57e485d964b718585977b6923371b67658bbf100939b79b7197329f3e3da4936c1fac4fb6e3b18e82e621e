{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Title from '../atomic-ui/components/Title';\nimport ArticleList from '../components/ArticleList';\nimport UserList from '../components/UserList';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport ContentLayout from '../layouts/content';\nimport { setUserFolder, updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot, onProjectRemove } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user';\nimport queries from '../graphql/queries';\nimport ProjectCard from '../components/ProjectCard';\nimport { getProjectLinkProps } from '../hooks/useEntityQuery';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c = Aside;\n\nconst Home = ({\n  store\n}) => {\n  _s();\n\n  const router = useRouter();\n  const recall = useHelper();\n  const mutate = useMutate();\n  const {\n    user,\n    folder\n  } = useSelector(state => ({\n    user: state.user,\n    folder: state.root.folder,\n    search: state.root.search\n  }));\n  const dispatch = useDispatch();\n  const onAdd = useCallback(project => recall(onProjectAdd, {\n    id: project.id,\n    folders: user === null || user === void 0 ? void 0 : user.folders,\n    mutations: {\n      addProject: queries.ADD_USER_PROJECT,\n      createFolder: queries.ADD_USER_FOLDER\n    },\n    callback: item => {\n      const result = { ...item,\n        projects: [...item.projects, project.id]\n      };\n      dispatch(setUserFolder(result));\n    }\n  })(), [user]);\n  const onRemove = useCallback(project => recall(onProjectRemove, {\n    id: project.id,\n    folder,\n    mutation: queries.REMOVE_USER_PROJECT\n  })(), [user]);\n  const scaffold = useMemo(() => ({\n    title: store.scaffold.title,\n    background: store.scaffold.background.path,\n    primary: store.scaffold.primary,\n    residues: store.scaffold.residues,\n    onLink: (project, owned) => {\n      var _user$folders;\n\n      return recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item === project.id)))),\n        liked: !!(project.rating || []).find(item => item.email === user.email),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          },\n          callback: item => {\n            const result = { ...item,\n              projects: [...item.projects, project.id]\n            };\n            dispatch(setUserFolder(result));\n          }\n        }),\n        owned\n      })();\n    },\n    onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n      id: project.id\n    }, response => dispatch(updateUser(response.data.likeProject)))()),\n    onAdd: user.email && (project => recall(onProjectAdd, {\n      id: project.id,\n      folders: user === null || user === void 0 ? void 0 : user.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      },\n      callback: item => {\n        const result = { ...item,\n          projects: [...item.projects, project.id]\n        };\n        dispatch(setUserFolder(result));\n      }\n    })()),\n    onSearch: value => router.push({\n      pathname: router.pathname,\n      query: {\n        search: value\n      }\n    }, undefined, {\n      shallow: true\n    }),\n    onAboutMore: project => recall(onUserAboutMore, {\n      user: project\n    }),\n    onCompanyLink: project => {\n      var _project$company;\n\n      return recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user\n      })();\n    },\n    onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n      screenshots: [project.preview, ...project.screenshots],\n      key\n    })()\n  }), [user, store, recall, mutate, dispatch]);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    store: store,\n    getType: 'getProjects',\n    getQuery: queries.GET_PROJECTS,\n    scaffold: scaffold,\n    emptyMessage: 'Проектов нет',\n    startOffsett: START_OFFSET,\n    variables: {\n      status: 'PUBLISHED'\n    },\n    render: document => {\n      var _user$folders2, _document$company;\n\n      return /*#__PURE__*/React.createElement(ProjectCard, {\n        project: document,\n        added: !!(user !== null && user !== void 0 && (_user$folders2 = user.folders) !== null && _user$folders2 !== void 0 && _user$folders2.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item === item.id)))),\n        liked: !!(document.rating || []).find(item => item.email === user.email),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: document.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && (() => onAdd(document)),\n        onRemove: user.email && (() => onRemove(document)),\n        onAboutMore: recall(onUserAboutMore, {\n          user: document\n        }),\n        onCompanyLink: recall(onUserLink, {\n          id: (_document$company = document.company) === null || _document$company === void 0 ? void 0 : _document$company.email,\n          auth: user === null || user === void 0 ? void 0 : user.email,\n          recipient: document.author,\n          query: queries.GET_USER_CHATS,\n          mutation: queries.SEND_MESSAGE\n        }),\n        onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n          screenshots: [document.preview, ...document.screenshots],\n          key\n        })(),\n        withSocials: true\n      });\n    },\n    onLink: project => {\n      var _user$projects;\n\n      const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n      recall(onProjectLink, getProjectLinkProps(project.id, user, owned, dispatch, mutate, recall, item => {\n        const result = { ...item,\n          projects: [...item.projects, project.id]\n        };\n        dispatch(setUserFolder(result));\n      }))();\n    },\n    aside: /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), /*#__PURE__*/React.createElement(UserList, {\n      variables: {\n        offset: 0,\n        limit: 1\n      }\n    }), /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(ArticleList, {\n      variables: {\n        offset: 0,\n        limit: 1\n      }\n    }))\n  });\n};\n\n_s(Home, \"jCE3OQ9wiwZvPmHS7REH45v9Pxk=\", false, function () {\n  return [useRouter, useHelper, useMutate, useSelector, useDispatch];\n});\n\n_c2 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Aside\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useCallback","useMemo","useRouter","styled","useSelector","useDispatch","Title","ArticleList","UserList","useHelper","useMutate","ContentLayout","setUserFolder","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onProjectRemove","onUserAboutMore","onUserLink","queries","ProjectCard","getProjectLinkProps","TITLE","START_OFFSET","LIMIT","Aside","aside","Home","store","router","recall","mutate","user","folder","state","root","search","dispatch","onAdd","project","id","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","callback","item","result","projects","onRemove","mutation","REMOVE_USER_PROJECT","scaffold","title","background","path","primary","residues","onLink","owned","auth","email","added","find","liked","rating","onLike","LIKE_PROJECT","response","data","likeProject","onSearch","value","push","pathname","query","undefined","shallow","onAboutMore","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","GET_PROJECTS","status","document","recipient","author","GET_USER_CHATS","SEND_MESSAGE","_","candidate","offset","limit"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Title from '../atomic-ui/components/Title'\n\nimport ArticleList from '../components/ArticleList'\nimport UserList from '../components/UserList'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport ContentLayout from '../layouts/content'\nimport { setUserFolder, updateUser } from '../store/actions/user'\nimport {\n  onProjectLink,\n  onProjectAdd,\n  onProjectScreenshot,\n  onProjectRemove\n} from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user'\nimport queries from '../graphql/queries'\nimport { initializeApollo } from '../apollo'\nimport ProjectCard from '../components/ProjectCard'\nimport { getProjectLinkProps } from '../hooks/useEntityQuery'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Home = ({ store }) => {\n  const router = useRouter()\n  const recall = useHelper()\n  const mutate = useMutate()\n  const { user, folder } = useSelector((state) => ({\n    user: state.user,\n    folder: state.root.folder,\n    search: state.root.search\n  }))\n  const dispatch = useDispatch()\n\n  const onAdd = useCallback(\n    (project) =>\n      recall(onProjectAdd, {\n        id: project.id,\n        folders: user?.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        },\n        callback: (item) => {\n          const result = { ...item, projects: [...item.projects, project.id] }\n          dispatch(setUserFolder(result))\n        }\n      })(),\n    [user]\n  )\n\n  const onRemove = useCallback(\n    (project) =>\n      recall(onProjectRemove, {\n        id: project.id,\n        folder,\n        mutation: queries.REMOVE_USER_PROJECT\n      })(),\n    [user]\n  )\n\n  const scaffold = useMemo(\n    () => ({\n      title: store.scaffold.title,\n      background: store.scaffold.background.path,\n      primary: store.scaffold.primary,\n      residues: store.scaffold.residues,\n      onLink: (project, owned) =>\n        recall(onProjectLink, {\n          id: project.id,\n          auth: user?.email,\n          added: !!user?.folders?.find(\n            (folder) => !!folder?.projects.find((item) => item === project.id)\n          ),\n          liked: !!(project.rating || []).find((item) => item.email === user.email),\n          onLike:\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            ),\n          onAdd:\n            user.email &&\n            recall(onProjectAdd, {\n              id: project.id,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              },\n              callback: (item) => {\n                const result = { ...item, projects: [...item.projects, project.id] }\n                dispatch(setUserFolder(result))\n              }\n            }),\n          owned\n        })(),\n      onLike:\n        user.email &&\n        ((project) =>\n          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n            dispatch(updateUser(response.data.likeProject))\n          )()),\n      onAdd:\n        user.email &&\n        ((project) =>\n          recall(onProjectAdd, {\n            id: project.id,\n            folders: user?.folders,\n            mutations: {\n              addProject: queries.ADD_USER_PROJECT,\n              createFolder: queries.ADD_USER_FOLDER\n            },\n            callback: (item) => {\n              const result = { ...item, projects: [...item.projects, project.id] }\n              dispatch(setUserFolder(result))\n            }\n          })()),\n      onSearch: (value) =>\n        router.push(\n          {\n            pathname: router.pathname,\n            query: {\n              search: value\n            }\n          },\n          undefined,\n          { shallow: true }\n        ),\n      onAboutMore: (project) => recall(onUserAboutMore, { user: project }),\n      onCompanyLink: (project) => recall(onUserLink, { id: project.company?.email, auth: user })(),\n      onScreenshotClick: (project, key) =>\n        recall(onProjectScreenshot, {\n          screenshots: [project.preview, ...project.screenshots],\n          key\n        })()\n    }),\n    [user, store, recall, mutate, dispatch]\n  )\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      store={store}\n      getType={'getProjects'}\n      getQuery={queries.GET_PROJECTS}\n      scaffold={scaffold}\n      emptyMessage={'Проектов нет'}\n      startOffsett={START_OFFSET}\n      variables={{ status: 'PUBLISHED' }}\n      render={(document) => (\n        <ProjectCard\n          project={document}\n          added={\n            !!user?.folders?.find((folder) => !!folder?.projects.find((item) => item === item.id))\n          }\n          liked={!!(document.rating || []).find((item) => item.email === user.email)}\n          onLike={\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: document.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            )\n          }\n          onAdd={user.email && (() => onAdd(document))}\n          onRemove={user.email && (() => onRemove(document))}\n          onAboutMore={recall(onUserAboutMore, { user: document })}\n          onCompanyLink={recall(onUserLink, {\n            id: document.company?.email,\n            auth: user?.email,\n            recipient: document.author,\n            query: queries.GET_USER_CHATS,\n            mutation: queries.SEND_MESSAGE\n          })}\n          onScreenshotClick={(_, key) =>\n            recall(onProjectScreenshot, {\n              screenshots: [document.preview, ...document.screenshots],\n              key\n            })()\n          }\n          withSocials\n        />\n      )}\n      onLink={(project) => {\n        const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n        recall(\n          onProjectLink,\n          getProjectLinkProps(project.id, user, owned, dispatch, mutate, recall, (item) => {\n            const result = { ...item, projects: [...item.projects, project.id] }\n            dispatch(setUserFolder(result))\n          })\n        )()\n      }}\n      aside={\n        <Aside>\n          <Title tag={'h4'}>Авторы</Title>\n          <UserList variables={{ offset: 0, limit: 1 }} />\n\n          <Title tag={'h4'}>Новости</Title>\n          <ArticleList variables={{ offset: 0, limit: 1 }} />\n        </Aside>\n      }\n    />\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let scaffold = null\n\n  try {\n    const response = await client.query({ query: queries.GET_META_SCAFFOLD })\n\n    if (response && response.data) {\n      scaffold = response.data.getDashboardSettings?.scaffold\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        scaffold\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}