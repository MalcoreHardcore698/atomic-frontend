{"ast":null,"code":"var _jsxFileName = \"/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Table/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Icon from '../Icon';\nimport Button from '../Button';\nimport Switch from '../Switch';\nimport Difinition from '../Difinition';\nimport Checkbox from '../Checkbox';\nimport Tooltip, { Wrap as TooltipWrap } from '../Tooltip';\nimport Popper from '../Popper';\nexport const Wrap = styled(Column)``;\nexport const Manage = styled(Row)`\n  display: grid;\n  grid-template-columns: 36px 1fr 70px;\n`;\nexport const Headers = styled(Switch)`\n  ${({\n  width\n}) => width && css`\n      span {\n        width: ${width};\n      }\n    `}\n\n  ${({\n  first,\n  width\n}) => first && width && css`\n      span:first-child {\n        width: calc(${width} + 45px);\n      }\n    `}\n`;\nexport const Header = styled(Row)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  color: #959595;\n\n  &:last-child {\n    justify-content: flex-end;\n  }\n`;\nexport const Track = styled(Row)`\n  transition: opacity 150ms ease;\n\n  ${({\n  checked\n}) => checked && css`\n      opacity: 0.45;\n    `}\n`;\nexport const Content = styled(Row)`\n  padding: 5px 15px;\n  width: calc(100% - 85px);\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n    `}\n\n  & > label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: calc(var(--input-height-m) - 15px);\n    margin-left: 5px;\n\n    & > span {\n      margin: 0;\n    }\n  }\n`;\nexport const Container = styled(Row)`\n  width: 100%;\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n    `}\n`;\nexport const Actions = styled(Column)`\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  padding: 5px;\n  grid-gap: 5px;\n\n  button {\n    width: 100%;\n    flex-grow: 1;\n  }\n\n  ${TooltipWrap} {\n    width: 100%;\n  }\n\n  ${({\n  horizontal\n}) => horizontal && css`\n      flex-direction: row;\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`;\nexport const FieldsPopper = styled(Popper)`\n  display: flex;\n  align-items: center;\n\n  & > div {\n    display: flex;\n  }\n`;\nexport const Cell = styled(Difinition)`\n  align-items: center;\n  flex-grow: 1;\n\n  width: ${({\n  width\n}) => width};\n  overflow: hidden;\n\n  & > div {\n    width: 100%;\n  }\n\n  h4 {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-bold);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\nexport const HeaderList = styled(Column)`\n  border: 1px solid var(--surface-border);\n  background: var(--surface-background);\n  box-shadow: var(--surface-shadow);\n  border-radius: var(--surface-border-radius);\n  padding: 10px;\n  grid-gap: 10px;\n`;\nexport const CheckboxTooltip = styled(Tooltip)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nexport const getIsAdmin = document => {\n  var _document$name;\n\n  return ((_document$name = document.name) === null || _document$name === void 0 ? void 0 : _document$name.toUpperCase()) === 'ADMIN';\n};\nexport const Table = ({\n  data,\n  template,\n  className,\n  style,\n  appearance,\n  onClick,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const {\n    0: isAllChecked,\n    1: setIsAllChecked\n  } = useState(false);\n  const {\n    0: documents,\n    1: setDocuments\n  } = useState((data || []).map(item => _objectSpread(_objectSpread({}, item), {}, {\n    id: item.id || v4(),\n    checked: false\n  })));\n  const buttonDeleteDisabled = useMemo(() => !documents.find(item => item.checked), [documents]);\n  const defaultWidth = `${Math.floor(100 / template.length)}%`;\n  const headers = useMemo(() => (template || []).map(item => ({\n    value: v4(),\n    label: item.header,\n    tooltip: item.tooltip || `Сортировка по «${item.header}»`,\n    visible: !item.hidden\n  })), []);\n\n  const handleChecked = document => {\n    setDocuments(prev => {\n      const isExists = item => item.id === document.id;\n\n      const candidate = prev.find(isExists);\n\n      if (candidate) {\n        return prev.map(item => isExists(item) ? _objectSpread(_objectSpread({}, document), {}, {\n          checked: !item.checked\n        }) : _objectSpread(_objectSpread({}, item), {}, {\n          checked: isAllChecked || item.checked\n        }));\n      } else {\n        return [...prev, _objectSpread(_objectSpread({}, document), {}, {\n          checked: true\n        })];\n      }\n    });\n    setIsAllChecked(false);\n  };\n\n  const handleAllChecked = () => {\n    const value = !isAllChecked;\n    setDocuments(prev => prev.map(item => _objectSpread(_objectSpread({}, item), {}, {\n      checked: !getIsAdmin(item) ? value : false\n    })));\n    setIsAllChecked(value);\n  };\n\n  useEffect(() => {\n    const countChecked = documents.reduce((acc, curr) => acc + (curr.checked ? 1 : 0), 0);\n\n    if (documents.length > 0 && countChecked === documents.length) {\n      setIsAllChecked(true);\n    }\n  }, [documents]);\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, __jsx(Manage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, __jsx(CheckboxTooltip, {\n    text: 'Отметить все',\n    self: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, onChecked && __jsx(Checkbox, {\n    size: 's',\n    checked: isAllChecked,\n    onChange: handleAllChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  })), __jsx(Headers, {\n    defaultValue: headers[0],\n    options: headers.filter(h => h.visible),\n    first: onChecked,\n    stretch: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }), __jsx(Actions, {\n    appearance: appearance,\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, __jsx(Tooltip, {\n    text: 'Удаление выделенного',\n    place: 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    appearance: buttonDeleteDisabled ? 'ghost' : 'red',\n    disabled: buttonDeleteDisabled,\n    onClick: () => onDelete(documents.filter(document => document.checked)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: buttonDeleteDisabled ? 'var(--ghost-color-text)' : 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }))), __jsx(FieldsPopper, {\n    place: 'left',\n    offset: {\n      bottom: 80\n    },\n    body: __jsx(HeaderList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }, headers.map((header, index) => __jsx(Checkbox, {\n      key: index,\n      size: 's',\n      label: header.label,\n      checked: header.visible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }))),\n    appearance: 'clear',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, __jsx(Tooltip, {\n    text: 'Отображение полей',\n    place: 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    icon: 'show',\n    size: 'xs',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  })))))), documents.map((document, index) => __jsx(Track, {\n    key: index,\n    checked: document.checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, __jsx(Content, {\n    appearance: appearance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, __jsx(CheckboxTooltip, {\n    text: 'Отметить документ',\n    self: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }\n  }, onChecked && __jsx(Checkbox, {\n    size: 's',\n    checked: !getIsAdmin(document) && (isAllChecked || document.checked),\n    onChange: !getIsAdmin(document) && (() => handleChecked(document)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  })), __jsx(Container, {\n    onClick: () => onClick(document),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, template.map((cell, index) => headers[index].visible ? /*#__PURE__*/React.cloneElement(cell.content(document), {\n    key: index,\n    label: cell.header,\n    width: (cell === null || cell === void 0 ? void 0 : cell.width) || defaultWidth\n  }) : null))), (onEdit || onDelete) && __jsx(Actions, {\n    appearance: appearance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, onEdit && __jsx(Tooltip, {\n    text: 'Редактирование',\n    place: 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    disabled: getIsAdmin(document) || document.checked,\n    onClick: () => onEdit(document),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white',\n    fill: getIsAdmin(document) || document.checked ? 'var(--ghost-color-text)' : 'var(--default-color-accent)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  }))), onDelete && __jsx(Tooltip, {\n    text: 'Удаление',\n    place: 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    size: 'xs',\n    kind: 'icon',\n    appearance: 'red',\n    disabled: getIsAdmin(document) || document.checked,\n    onClick: () => onDelete(document),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white',\n    fill: getIsAdmin(document) || document.checked ? 'var(--ghost-color-text)' : 'var(--default-color-red)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  })))))));\n};\nTable.defaultProps = {\n  appearance: 'default'\n};\nexport default Table;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Table/index.js"],"names":["React","useState","useEffect","useMemo","styled","css","v4","Row","Column","Icon","Button","Switch","Difinition","Checkbox","Tooltip","Wrap","TooltipWrap","Popper","Manage","Headers","width","first","Header","Track","checked","Content","appearance","Container","onClick","Actions","horizontal","FieldsPopper","Cell","HeaderList","CheckboxTooltip","getIsAdmin","document","name","toUpperCase","Table","data","template","className","style","onChecked","onDelete","onEdit","isAllChecked","setIsAllChecked","documents","setDocuments","map","item","id","buttonDeleteDisabled","find","defaultWidth","Math","floor","length","headers","value","label","header","tooltip","visible","hidden","handleChecked","prev","isExists","candidate","handleAllChecked","countChecked","reduce","acc","curr","filter","h","bottom","index","cell","cloneElement","content","key","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,IAAkBC,IAAI,IAAIC,WAA1B,QAA6C,YAA7C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMF,IAAI,GAAGX,MAAM,CAACI,MAAD,CAAS,EAA5B;AAEP,OAAO,MAAMU,MAAM,GAAGd,MAAM,CAACG,GAAD,CAAM;AAClC;AACA;AACA,CAHO;AAKP,OAAO,MAAMY,OAAO,GAAGf,MAAM,CAACO,MAAD,CAAS;AACtC,IAAI,CAAC;AAAES,EAAAA;AAAF,CAAD,KACAA,KAAK,IACLf,GAAI;AACR;AACA,iBAAiBe,KAAM;AACvB;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEC,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KACAC,KAAK,IACLD,KADA,IAEAf,GAAI;AACR;AACA,sBAAsBe,KAAM;AAC5B;AACA,KAAM;AACN,CAjBO;AAmBP,OAAO,MAAME,MAAM,GAAGlB,MAAM,CAACG,GAAD,CAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMgB,KAAK,GAAGnB,MAAM,CAACG,GAAD,CAAM;AACjC;AACA;AACA,IAAI,CAAC;AAAEiB,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPnB,GAAI;AACR;AACA,KAAM;AACN,CARO;AAUP,OAAO,MAAMoB,OAAO,GAAGrB,MAAM,CAACG,GAAD,CAAM;AACnC;AACA;AACA;AACA,IAAI,CAAC;AAAEmB,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACArB,GAAI;AACR;AACA;AACA;AACA;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACArB,GAAI;AACR;AACA;AACA;AACA;AACA,KAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjCO;AAmCP,OAAO,MAAMsB,SAAS,GAAGvB,MAAM,CAACG,GAAD,CAAM;AACrC;AACA;AACA,IAAI,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPvB,GAAI;AACR;AACA,KAAM;AACN,CARO;AAUP,OAAO,MAAMwB,OAAO,GAAGzB,MAAM,CAACI,MAAD,CAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIQ,WAAY;AAChB;AACA;AACA;AACA,IAAI,CAAC;AAAEc,EAAAA;AAAF,CAAD,KACAA,UAAU,IACVzB,GAAI;AACR;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACArB,GAAI;AACR;AACA;AACA;AACA;AACA,KAAM;AACN;AACA,IAAI,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACArB,GAAI;AACR;AACA;AACA;AACA;AACA;AACA,KAAM;AACN,CAxCO;AA0CP,OAAO,MAAM0B,YAAY,GAAG3B,MAAM,CAACa,MAAD,CAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AASP,OAAO,MAAMe,IAAI,GAAG5B,MAAM,CAACQ,UAAD,CAAa;AACvC;AACA;AACA;AACA,WAAW,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP,OAAO,MAAMa,UAAU,GAAG7B,MAAM,CAACI,MAAD,CAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,CAPO;AA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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Icon from '../Icon'\nimport Button from '../Button'\nimport Switch from '../Switch'\nimport Difinition from '../Difinition'\nimport Checkbox from '../Checkbox'\nimport Tooltip, { Wrap as TooltipWrap } from '../Tooltip'\nimport Popper from '../Popper'\n\nexport const Wrap = styled(Column)``\n\nexport const Manage = styled(Row)`\n  display: grid;\n  grid-template-columns: 36px 1fr 70px;\n`\n\nexport const Headers = styled(Switch)`\n  ${({ width }) =>\n    width &&\n    css`\n      span {\n        width: ${width};\n      }\n    `}\n\n  ${({ first, width }) =>\n    first &&\n    width &&\n    css`\n      span:first-child {\n        width: calc(${width} + 45px);\n      }\n    `}\n`\n\nexport const Header = styled(Row)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  color: #959595;\n\n  &:last-child {\n    justify-content: flex-end;\n  }\n`\n\nexport const Track = styled(Row)`\n  transition: opacity 150ms ease;\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      opacity: 0.45;\n    `}\n`\n\nexport const Content = styled(Row)`\n  padding: 5px 15px;\n  width: calc(100% - 85px);\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n    `}\n\n  & > label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: calc(var(--input-height-m) - 15px);\n    margin-left: 5px;\n\n    & > span {\n      margin: 0;\n    }\n  }\n`\n\nexport const Container = styled(Row)`\n  width: 100%;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n    `}\n`\n\nexport const Actions = styled(Column)`\n  justify-content: center;\n  align-items: center;\n  width: 70px;\n  padding: 5px;\n  grid-gap: 5px;\n\n  button {\n    width: 100%;\n    flex-grow: 1;\n  }\n\n  ${TooltipWrap} {\n    width: 100%;\n  }\n\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      flex-direction: row;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`\n\nexport const FieldsPopper = styled(Popper)`\n  display: flex;\n  align-items: center;\n\n  & > div {\n    display: flex;\n  }\n`\n\nexport const Cell = styled(Difinition)`\n  align-items: center;\n  flex-grow: 1;\n\n  width: ${({ width }) => width};\n  overflow: hidden;\n\n  & > div {\n    width: 100%;\n  }\n\n  h4 {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-bold);\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport const HeaderList = styled(Column)`\n  border: 1px solid var(--surface-border);\n  background: var(--surface-background);\n  box-shadow: var(--surface-shadow);\n  border-radius: var(--surface-border-radius);\n  padding: 10px;\n  grid-gap: 10px;\n`\n\nexport const CheckboxTooltip = styled(Tooltip)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`\n\nexport const getIsAdmin = (document) => document.name?.toUpperCase() === 'ADMIN'\n\nexport const Table = ({\n  data,\n  template,\n  className,\n  style,\n  appearance,\n  onClick,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const [isAllChecked, setIsAllChecked] = useState(false)\n  const [documents, setDocuments] = useState(\n    (data || []).map((item) => ({\n      ...item,\n      id: item.id || v4(),\n      checked: false\n    }))\n  )\n  const buttonDeleteDisabled = useMemo(() => !documents.find((item) => item.checked), [documents])\n  const defaultWidth = `${Math.floor(100 / template.length)}%`\n\n  const headers = useMemo(\n    () =>\n      (template || []).map((item) => ({\n        value: v4(),\n        label: item.header,\n        tooltip: item.tooltip || `Сортировка по «${item.header}»`,\n        visible: !item.hidden\n      })),\n    []\n  )\n\n  const handleChecked = (document) => {\n    setDocuments((prev) => {\n      const isExists = (item) => item.id === document.id\n      const candidate = prev.find(isExists)\n      if (candidate) {\n        return prev.map((item) =>\n          isExists(item)\n            ? {\n                ...document,\n                checked: !item.checked\n              }\n            : {\n                ...item,\n                checked: isAllChecked || item.checked\n              }\n        )\n      } else {\n        return [...prev, { ...document, checked: true }]\n      }\n    })\n    setIsAllChecked(false)\n  }\n\n  const handleAllChecked = () => {\n    const value = !isAllChecked\n    setDocuments((prev) =>\n      prev.map((item) => ({\n        ...item,\n        checked: !getIsAdmin(item) ? value : false\n      }))\n    )\n    setIsAllChecked(value)\n  }\n\n  useEffect(() => {\n    const countChecked = documents.reduce((acc, curr) => acc + (curr.checked ? 1 : 0), 0)\n    if (documents.length > 0 && countChecked === documents.length) {\n      setIsAllChecked(true)\n    }\n  }, [documents])\n\n  return (\n    <Wrap className={className} style={style}>\n      <Manage>\n        <CheckboxTooltip text={'Отметить все'} self>\n          {onChecked && <Checkbox size={'s'} checked={isAllChecked} onChange={handleAllChecked} />}\n        </CheckboxTooltip>\n\n        <Headers\n          defaultValue={headers[0]}\n          options={headers.filter((h) => h.visible)}\n          first={onChecked}\n          stretch\n        />\n\n        <Actions appearance={appearance} horizontal>\n          <Tooltip text={'Удаление выделенного'} place={'left'}>\n            <Button\n              size={'xs'}\n              kind={'icon'}\n              appearance={buttonDeleteDisabled ? 'ghost' : 'red'}\n              disabled={buttonDeleteDisabled}\n              onClick={() => onDelete(documents.filter((document) => document.checked))}>\n              <Icon\n                icon={'delete'}\n                size={'xs'}\n                stroke={buttonDeleteDisabled ? 'var(--ghost-color-text)' : 'white'}\n              />\n            </Button>\n          </Tooltip>\n\n          <FieldsPopper\n            place={'left'}\n            offset={{ bottom: 80 }}\n            body={\n              <HeaderList>\n                {headers.map((header, index) => (\n                  <Checkbox key={index} size={'s'} label={header.label} checked={header.visible} />\n                ))}\n              </HeaderList>\n            }\n            appearance={'clear'}>\n            <Tooltip text={'Отображение полей'} place={'left'}>\n              <Button size={'xs'} kind={'icon'}>\n                <Icon icon={'show'} size={'xs'} stroke={'white'} />\n              </Button>\n            </Tooltip>\n          </FieldsPopper>\n        </Actions>\n      </Manage>\n\n      {documents.map((document, index) => (\n        <Track key={index} checked={document.checked}>\n          <Content appearance={appearance}>\n            <CheckboxTooltip text={'Отметить документ'} self>\n              {onChecked && (\n                <Checkbox\n                  size={'s'}\n                  checked={!getIsAdmin(document) && (isAllChecked || document.checked)}\n                  onChange={!getIsAdmin(document) && (() => handleChecked(document))}\n                />\n              )}\n            </CheckboxTooltip>\n\n            <Container onClick={() => onClick(document)}>\n              {template.map((cell, index) =>\n                headers[index].visible\n                  ? React.cloneElement(cell.content(document), {\n                      key: index,\n                      label: cell.header,\n                      width: cell?.width || defaultWidth\n                    })\n                  : null\n              )}\n            </Container>\n          </Content>\n\n          {(onEdit || onDelete) && (\n            <Actions appearance={appearance}>\n              {onEdit && (\n                <Tooltip text={'Редактирование'} place={'left'}>\n                  <Button\n                    size={'xs'}\n                    kind={'icon'}\n                    disabled={getIsAdmin(document) || document.checked}\n                    onClick={() => onEdit(document)}>\n                    <Icon\n                      icon={'edit'}\n                      size={'xs'}\n                      stroke={'white'}\n                      fill={\n                        getIsAdmin(document) || document.checked\n                          ? 'var(--ghost-color-text)'\n                          : 'var(--default-color-accent)'\n                      }\n                    />\n                  </Button>\n                </Tooltip>\n              )}\n              {onDelete && (\n                <Tooltip text={'Удаление'} place={'left'}>\n                  <Button\n                    size={'xs'}\n                    kind={'icon'}\n                    appearance={'red'}\n                    disabled={getIsAdmin(document) || document.checked}\n                    onClick={() => onDelete(document)}>\n                    <Icon\n                      icon={'delete'}\n                      size={'xs'}\n                      stroke={'white'}\n                      fill={\n                        getIsAdmin(document) || document.checked\n                          ? 'var(--ghost-color-text)'\n                          : 'var(--default-color-red)'\n                      }\n                    />\n                  </Button>\n                </Tooltip>\n              )}\n            </Actions>\n          )}\n        </Track>\n      ))}\n    </Wrap>\n  )\n}\n\nTable.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}