{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { v4 } from 'uuid';\nimport C from '../types/snacks';\nvar LIMIT = 10;\nvar initialState = [];\nexport var snackReducer = function snackReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case C.SET_ITEM:\n      return [].concat(_toConsumableArray(state), [_objectSpread({\n        id: v4()\n      }, action.payload.item)]).slice(0, LIMIT);\n\n    case C.REMOVE_ITEM:\n      return _toConsumableArray(state.filter(function (item) {\n        return item.id !== action.payload.id;\n      }));\n\n    case C.CLEAR_ITEMS:\n      return [];\n\n    default:\n      return state;\n  }\n};\nexport default snackReducer;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/reducers/snacks.js"],"names":["v4","C","LIMIT","initialState","snackReducer","state","action","type","SET_ITEM","id","payload","item","slice","REMOVE_ITEM","filter","CLEAR_ITEMS"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,EAAT,QAAmB,MAAnB;AAEA,OAAOC,CAAP,MAAc,iBAAd;AAEA,IAAMC,KAAK,GAAG,EAAd;AACA,IAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,CAAC,CAACO,QAAP;AACE,aAAO,6BACFH,KADE;AAGHI,QAAAA,EAAE,EAAET,EAAE;AAHH,SAIAM,MAAM,CAACI,OAAP,CAAeC,IAJf,IAMLC,KANK,CAMC,CAND,EAMIV,KANJ,CAAP;;AAOF,SAAKD,CAAC,CAACY,WAAP;AACE,gCAAWR,KAAK,CAACS,MAAN,CAAa,UAACH,IAAD;AAAA,eAAUA,IAAI,CAACF,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAArC;AAAA,OAAb,CAAX;;AACF,SAAKR,CAAC,CAACc,WAAP;AACE,aAAO,EAAP;;AACF;AACE,aAAOV,KAAP;AAdJ;AAgBD,CAjBM;AAmBP,eAAeD,YAAf","sourcesContent":["import { v4 } from 'uuid'\n\nimport C from '../types/snacks'\n\nconst LIMIT = 10\nconst initialState = []\n\nexport const snackReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case C.SET_ITEM:\n      return [\n        ...state,\n        {\n          id: v4(),\n          ...action.payload.item\n        }\n      ].slice(0, LIMIT)\n    case C.REMOVE_ITEM:\n      return [...state.filter((item) => item.id !== action.payload.id)]\n    case C.CLEAR_ITEMS:\n      return []\n    default:\n      return state\n  }\n}\n\nexport default snackReducer\n"]},"metadata":{},"sourceType":"module"}