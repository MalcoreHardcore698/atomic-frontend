{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Icon from '../Icon';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Search__Wrap\",\n  componentId: \"n9mi6m-0\"\n})([\"width:100%;\"]);\nexport const Search = React.forwardRef(({\n  className,\n  defaultValue,\n  onSubmit,\n  onClick,\n  ...props\n}, ref) => {\n  const [value, setValue] = useState(defaultValue || '');\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    type: 'text',\n    placeholder: 'Поиск'\n  }, props, {\n    ref: ref,\n    readOnly: !!onClick,\n    defaultValue: defaultValue,\n    onClick: onClick && (() => onClick()),\n    onChange: e => !onClick && setValue(e.target.value),\n    onKeyDown: e => !onClick && e.key === 'Enter' && onSubmit(value)\n  })), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onClick: () => onClick ? onClick : onSubmit(value)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'search',\n    stroke: 'white'\n  })));\n});\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}