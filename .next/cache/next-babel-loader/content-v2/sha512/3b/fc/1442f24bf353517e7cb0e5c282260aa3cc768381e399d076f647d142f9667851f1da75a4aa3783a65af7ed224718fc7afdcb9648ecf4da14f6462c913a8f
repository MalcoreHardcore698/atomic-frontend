{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Notice\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Button from '../Button';\nimport Title from '../Title';\nimport Icon from '../Icon';\nimport Text from '../Text';\nimport Meta from '../Meta';\nexport const Wrap = styled(Row)`\n  align-items: center;\n  transition: opacity 150ms ease;\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const CircleIcon = styled(Icon)`\n  width: var(--input-height-m);\n  height: var(--input-height-m);\n  min-width: var(--input-height-m);\n  min-height: var(--input-height-m);\n  background: var(--default-color-accent);\n  border-radius: 50%;\n`;\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  grid-gap: 0;\n`;\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  h4 {\n    font-size: var(--font-size-l);\n  }\n`;\nexport const Body = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  @media only screen and (max-width: 480px) {\n    justify-content: flex-start;\n    flex-wrap: wrap;\n  }\n`;\nexport const Actions = styled(Row)`\n  grid-gap: 10px;\n`;\nexport const Notice = ({\n  img,\n  icon,\n  title,\n  message,\n  date,\n  onClick,\n  onApply,\n  onReject\n}) => __jsx(Wrap, {\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }\n}, img && !icon && __jsx(Avatar, {\n  src: img,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 22\n  }\n}), !img && icon && __jsx(CircleIcon, {\n  icon: icon,\n  stroke: 'white',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 22\n  }\n}), __jsx(Content, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}, __jsx(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }\n}, __jsx(Title, {\n  tag: 'h4',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }\n}, title), __jsx(Meta, {\n  date: date,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }\n})), __jsx(Body, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }\n}, __jsx(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }\n}, message), (onApply || onReject) && __jsx(Actions, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 11\n  }\n}, onApply && __jsx(Button, {\n  type: 'button',\n  size: 's',\n  onClick: onApply,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 15\n  }\n}, \"\\u041F\\u0440\\u0438\\u043D\\u044F\\u0442\\u044C\"), onReject && __jsx(Button, {\n  type: 'button',\n  appearance: 'red',\n  size: 's',\n  onClick: onReject,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 15\n  }\n}, \"\\u041E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0438\\u0442\\u044C\")))));\nexport default Notice;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Notice/index.js"],"names":["React","styled","css","Row","Column","Avatar","Button","Title","Icon","Text","Meta","Wrap","onClick","CircleIcon","Content","Header","Body","Actions","Notice","img","icon","title","message","date","onApply","onReject"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Avatar from '../Avatar'\nimport Button from '../Button'\nimport Title from '../Title'\nimport Icon from '../Icon'\nimport Text from '../Text'\nimport Meta from '../Meta'\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const CircleIcon = styled(Icon)`\n  width: var(--input-height-m);\n  height: var(--input-height-m);\n  min-width: var(--input-height-m);\n  min-height: var(--input-height-m);\n  background: var(--default-color-accent);\n  border-radius: 50%;\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  grid-gap: 0;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  h4 {\n    font-size: var(--font-size-l);\n  }\n`\n\nexport const Body = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  @media only screen and (max-width: 480px) {\n    justify-content: flex-start;\n    flex-wrap: wrap;\n  }\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 10px;\n`\n\nexport const Notice = ({ img, icon, title, message, date, onClick, onApply, onReject }) => (\n  <Wrap onClick={onClick}>\n    {img && !icon && <Avatar src={img} />}\n    {!img && icon && <CircleIcon icon={icon} stroke={'white'} />}\n\n    <Content>\n      <Header>\n        <Title tag={'h4'}>{title}</Title>\n        <Meta date={date} />\n      </Header>\n\n      <Body>\n        <Text>{message}</Text>\n        {(onApply || onReject) && (\n          <Actions>\n            {onApply && (\n              <Button type={'button'} size={'s'} onClick={onApply}>\n                Принять\n              </Button>\n            )}\n            {onReject && (\n              <Button type={'button'} appearance={'red'} size={'s'} onClick={onReject}>\n                Отклонить\n              </Button>\n            )}\n          </Actions>\n        )}\n      </Body>\n    </Content>\n  </Wrap>\n)\n\nexport default Notice\n"]},"metadata":{},"sourceType":"module"}