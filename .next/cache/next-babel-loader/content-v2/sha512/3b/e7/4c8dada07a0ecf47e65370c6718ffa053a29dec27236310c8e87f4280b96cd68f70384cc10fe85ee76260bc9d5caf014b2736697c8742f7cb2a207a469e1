{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport HTMLView from '../HTMLView';\nimport Comments from '../Comments';\nimport Processed from '../Processed';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ArticleView__Wrap\",\n  componentId: \"sc-12lysue-0\"\n})([\"flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ArticleView__Poster\",\n  componentId: \"sc-12lysue-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);@media only screen and (max-width:480px){height:256px;}\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"ArticleView__Content\",\n  componentId: \"sc-12lysue-2\"\n})([\"grid-gap:0;\"]);\nexport const View = ({\n  article,\n  appearance,\n  className,\n  style,\n  onLink,\n  onCommentLink,\n  onCommentReply\n}) => {\n  var _data$getArticle, _data$getArticle2, _data$getArticle2$pre, _data$getArticle3, _data$getArticle4, _data$getArticle4$cat, _data$getArticle5, _data$getArticle6, _data$getArticle7;\n\n  const [comments, setComments] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_ARTICLE, {\n    variables: {\n      id: article\n    }\n  });\n  const {\n    data: dataComments,\n    loading: loadingComments,\n    error: errorComments\n  } = useQuery(queries.GET_COMMENTS, {\n    variables: {\n      id: article\n    }\n  });\n  const [sendComment, {\n    data: dataSendComment,\n    loading: loadingSendComment,\n    error: errorSendComment\n  }] = useMutation(queries.SEND_COMMENT);\n  const [likeComment] = useMutation(queries.LIKE_COMMENT);\n  useEffect(() => {\n    if (!loadingComments && dataComments) {\n      setComments(dataComments.getComments);\n    }\n  }, [dataComments, loadingComments]);\n  useEffect(() => {\n    if (!loadingSendComment && dataSendComment) {\n      setComments(dataSendComment.sendComment);\n    }\n  }, [dataSendComment, loadingSendComment]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getArticle,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о статье',\n    emptyMessage: 'Кажется такой статьи не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, (data === null || data === void 0 ? void 0 : (_data$getArticle = data.getArticle) === null || _data$getArticle === void 0 ? void 0 : _data$getArticle.preview) && /*#__PURE__*/React.createElement(Poster, {\n    src: data === null || data === void 0 ? void 0 : (_data$getArticle2 = data.getArticle) === null || _data$getArticle2 === void 0 ? void 0 : (_data$getArticle2$pre = _data$getArticle2.preview) === null || _data$getArticle2$pre === void 0 ? void 0 : _data$getArticle2$pre.path\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    date: data === null || data === void 0 ? void 0 : (_data$getArticle3 = data.getArticle) === null || _data$getArticle3 === void 0 ? void 0 : _data$getArticle3.createdAt,\n    category: data === null || data === void 0 ? void 0 : (_data$getArticle4 = data.getArticle) === null || _data$getArticle4 === void 0 ? void 0 : (_data$getArticle4$cat = _data$getArticle4.category) === null || _data$getArticle4$cat === void 0 ? void 0 : _data$getArticle4$cat.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    onClick: onLink,\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$getArticle5 = data.getArticle) === null || _data$getArticle5 === void 0 ? void 0 : _data$getArticle5.title), (data === null || data === void 0 ? void 0 : (_data$getArticle6 = data.getArticle) === null || _data$getArticle6 === void 0 ? void 0 : _data$getArticle6.body) && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data === null || data === void 0 ? void 0 : (_data$getArticle7 = data.getArticle) === null || _data$getArticle7 === void 0 ? void 0 : _data$getArticle7.body\n  })), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Comments, {\n    comments: comments,\n    appearance: 'ghost',\n    error: errorComments || errorSendComment,\n    loading: loadingComments || loadingSendComment,\n    onLink: onCommentLink,\n    onReply: onCommentReply,\n    onLike: (id, liked) => likeComment({\n      variables: {\n        comment: id,\n        liked\n      }\n    }),\n    onSubmit: value => sendComment({\n      variables: {\n        article: data.getArticle.id,\n        text: value\n      }\n    })\n  }))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ArticleView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","useMutation","Column","Title","Image","Meta","Divider","HTMLView","Comments","Processed","queries","Wrap","appearance","Poster","Content","View","article","className","style","onLink","onCommentLink","onCommentReply","comments","setComments","data","loading","error","GET_ARTICLE","variables","id","dataComments","loadingComments","errorComments","GET_COMMENTS","sendComment","dataSendComment","loadingSendComment","errorSendComment","SEND_COMMENT","likeComment","LIKE_COMMENT","getComments","getArticle","preview","path","createdAt","category","name","marginTop","marginBottom","title","body","liked","comment","value","text","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\n\nimport HTMLView from '../HTMLView'\nimport Comments from '../Comments'\nimport Processed from '../Processed'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  width: 100%;\n  height: 512px;\n  border-radius: var(--surface-border-radius);\n\n  @media only screen and (max-width: 480px) {\n    height: 256px;\n  }\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n`\n\nexport const View = ({\n  article,\n  appearance,\n  className,\n  style,\n  onLink,\n  onCommentLink,\n  onCommentReply\n}) => {\n  const [comments, setComments] = useState([])\n\n  const { data, loading, error } = useQuery(queries.GET_ARTICLE, {\n    variables: {\n      id: article\n    }\n  })\n\n  const { data: dataComments, loading: loadingComments, error: errorComments } = useQuery(\n    queries.GET_COMMENTS,\n    {\n      variables: {\n        id: article\n      }\n    }\n  )\n\n  const [\n    sendComment,\n    { data: dataSendComment, loading: loadingSendComment, error: errorSendComment }\n  ] = useMutation(queries.SEND_COMMENT)\n\n  const [likeComment] = useMutation(queries.LIKE_COMMENT)\n\n  useEffect(() => {\n    if (!loadingComments && dataComments) {\n      setComments(dataComments.getComments)\n    }\n  }, [dataComments, loadingComments])\n\n  useEffect(() => {\n    if (!loadingSendComment && dataSendComment) {\n      setComments(dataSendComment.sendComment)\n    }\n  }, [dataSendComment, loadingSendComment])\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      <Processed\n        data={data?.getArticle}\n        loading={loading}\n        error={error}\n        errorMessage={'Упс! Не удалось загрузить информацию о статье'}\n        emptyMessage={'Кажется такой статьи не существует'}>\n        <React.Fragment>\n          {data?.getArticle?.preview && <Poster src={data?.getArticle?.preview?.path} />}\n\n          <Content>\n            <Meta date={data?.getArticle?.createdAt} category={data?.getArticle?.category?.name} />\n            <Title tag={'h3'} onClick={onLink} style={{ marginTop: -5, marginBottom: 5 }}>\n              {data?.getArticle?.title}\n            </Title>\n\n            {data?.getArticle?.body && <HTMLView content={data?.getArticle?.body} />}\n          </Content>\n\n          <Divider clear />\n\n          <Title tag={'h4'}>Комментарии</Title>\n          <Comments\n            comments={comments}\n            appearance={'ghost'}\n            error={errorComments || errorSendComment}\n            loading={loadingComments || loadingSendComment}\n            onLink={onCommentLink}\n            onReply={onCommentReply}\n            onLike={(id, liked) =>\n              likeComment({\n                variables: { comment: id, liked }\n              })\n            }\n            onSubmit={(value) =>\n              sendComment({\n                variables: {\n                  article: data.getArticle.id,\n                  text: value\n                }\n              })\n            }\n          />\n        </React.Fragment>\n      </Processed>\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}