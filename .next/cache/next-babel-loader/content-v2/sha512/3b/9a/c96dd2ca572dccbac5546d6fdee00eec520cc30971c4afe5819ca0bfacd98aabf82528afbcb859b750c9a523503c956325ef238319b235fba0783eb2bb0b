{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable */\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './reducers';\nlet store;\n\nfunction initStore(preloadedState = {}) {\n  return createStore(reducers, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport const initializeStore = preloadedState => {\n  var _store2;\n\n  let _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState);\n\n  if (preloadedState && store) {\n    _store = initStore({ ...store.getState(),\n      ...preloadedState\n    });\n    store = undefined;\n  }\n\n  if (false) return _store;\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  _s();\n\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/store/index.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","reducers","store","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore","initialState"],"mappings":";;AAAA;AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAIC,KAAJ;;AAEA,SAASC,SAAT,CAAmBC,cAAc,GAAG,EAApC,EAAwC;AACtC,SAAON,WAAW,CAACG,QAAD,EAAWG,cAAX,EAA2BJ,mBAAmB,CAACD,eAAe,EAAhB,CAA9C,CAAlB;AACD;;AAED,OAAO,MAAMM,eAAe,GAAID,cAAD,IAAoB;AAAA;;AACjD,MAAIE,MAAM,cAAGJ,KAAH,6CAAYC,SAAS,CAACC,cAAD,CAA/B;;AAEA,MAAIA,cAAc,IAAIF,KAAtB,EAA6B;AAC3BI,IAAAA,MAAM,GAAGH,SAAS,CAAC,EACjB,GAAGD,KAAK,CAACK,QAAN,EADc;AAEjB,SAAGH;AAFc,KAAD,CAAlB;AAIAF,IAAAA,KAAK,GAAGM,SAAR;AACD;;AAED,aAAmC,OAAOF,MAAP;AACnC,MAAI,CAACJ,KAAL,EAAYA,KAAK,GAAGI,MAAR;AAEZ,SAAOA,MAAP;AACD,CAfM;AAiBP,OAAO,SAASG,QAAT,CAAkBC,YAAlB,EAAgC;AAAA;;AACrC,QAAMR,KAAK,GAAGL,OAAO,CAAC,MAAMQ,eAAe,CAACK,YAAD,CAAtB,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOR,KAAP;AACD;;GAHeO,Q","sourcesContent":["/* eslint-disable */\nimport { useMemo } from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './reducers'\n\nlet store\n\nfunction initStore(preloadedState = {}) {\n  return createStore(reducers, preloadedState, composeWithDevTools(applyMiddleware()))\n}\n\nexport const initializeStore = (preloadedState) => {\n  let _store = store ?? initStore(preloadedState)\n\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState\n    })\n    store = undefined\n  }\n\n  if (typeof window === 'undefined') return _store\n  if (!store) store = _store\n\n  return _store\n}\n\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState])\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}