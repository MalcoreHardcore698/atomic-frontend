{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { getLabelCategory } from '../atomic-ui/utils/functions';\nimport ContentLayout from '../layouts/content';\nimport ProjectList from '../components/ProjectList';\nimport { FixedLoader, GridAside as Container } from '../components/Styled';\nimport queries from '../graphql/queries';\nconst TITLE = 'Проекты';\nconst START_OFFSET = 6;\n\nconst Projects = () => {\n  var _router$query2;\n\n  const router = useRouter();\n  const [load, {\n    data,\n    loading\n  }] = useLazyQuery(queries.GET_META_PROJECTS);\n  useEffect(() => {\n    var _router$query;\n\n    const category = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.c;\n\n    if (category) {\n      load({\n        variables: {\n          offset: 0,\n          limit: START_OFFSET,\n          status: 'PUBLISHED',\n          category\n        }\n      });\n    }\n  }, [router]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(FixedLoader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    filters: [{\n      type: 'DATEPICKER'\n    }, {\n      type: 'SELECT',\n      options: data === null || data === void 0 ? void 0 : data.getCategories.map(category => ({\n        value: category.id,\n        label: getLabelCategory(category.name)\n      }))\n    }],\n    options: [{\n      label: 'Компания',\n      value: 'company'\n    }, {\n      label: 'Участники',\n      value: 'members'\n    }, {\n      label: 'Дата публикации',\n      value: 'createdAt'\n    }],\n    query: queries.GET_PROJECTS,\n    variables: {\n      category: (_router$query2 = router.query) === null || _router$query2 === void 0 ? void 0 : _router$query2.c,\n      status: 'PUBLISHED'\n    },\n    store: {\n      documents: data === null || data === void 0 ? void 0 : data.getProjects\n    }\n  }, ({\n    documents\n  }) => /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(ProjectList, {\n    initialList: documents,\n    layout: true\n  })));\n};\n\nexport default Projects;","map":null,"metadata":{},"sourceType":"module"}