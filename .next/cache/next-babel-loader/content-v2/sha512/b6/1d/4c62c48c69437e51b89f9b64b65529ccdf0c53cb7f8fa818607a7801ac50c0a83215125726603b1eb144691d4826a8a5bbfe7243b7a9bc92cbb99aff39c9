{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Snack\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 50%;\\n  border: none;\\n\\n  &:hover {\\n    background: white;\\n    border: none;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      background: \", \";\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  justify-content: space-between;\\n  width: 320px;\\n  cursor: pointer;\\n  background: white;\\n  border: var(--surface-border);\\n  border-radius: var(--surface-border-radius);\\n  box-shadow: var(--surface-shadow);\\n  padding: var(--default-gap) calc(var(--default-gap) + 5px);\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\\n  &:hover {\\n    opacity: 0.85;\\n  }\\n\\n  \", \" {\\n    color: white;\\n  }\\n\\n  &.fade-enter {\\n    opacity: 0;\\n  }\\n\\n  &.fade-enter-active {\\n    opacity: 1;\\n    transition: opacity 100ms, blur 100ms;\\n  }\\n\\n  &.fade-exit {\\n    opacity: 1;\\n  }\\n\\n  &.fade-exit-active {\\n    opacity: 0;\\n    transition: opacity 100ms, blur 100ms;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Transition from '../Transition';\nimport Text, { Wrap as WrapText } from '../Text';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nvar getInfo = function getInfo(type, tag) {\n  if (type === 'success') {\n    if (tag === 'color') return 'green';\n    if (tag === 'icon') return 'check';\n    return 'var(--default-color-green)';\n  }\n\n  if (type === 'warning') {\n    if (tag === 'color') return 'orange';\n    if (tag === 'icon') return 'danger';\n    return 'var(--default-color-orange)';\n  }\n\n  if (tag === 'color') return 'red';\n  if (tag === 'icon') return 'danger';\n  return 'var(--default-color-red)';\n};\n\nexport var Wrap = styled(Row)(_templateObject(), function (_ref) {\n  var type = _ref.type;\n  return type && css(_templateObject2(), getInfo(type));\n}, WrapText);\n_c = Wrap;\nexport var MarkButton = styled(Button)(_templateObject3());\n_c2 = MarkButton;\nexport var Snack = function Snack(_ref2) {\n  var type = _ref2.type,\n      message = _ref2.message,\n      style = _ref2.style,\n      className = _ref2.className,\n      onRemove = _ref2.onRemove;\n  return __jsx(Transition, {\n    in: true,\n    appear: true,\n    animation: 'fade',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, __jsx(Wrap, {\n    type: type,\n    className: className,\n    style: style,\n    onClick: onRemove,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, message), __jsx(MarkButton, {\n    kind: 'icon',\n    size: 'xs',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    icon: getInfo(type, 'icon'),\n    stroke: getInfo(type),\n    size: 'xs',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }))));\n};\n_c3 = Snack;\nexport default Snack;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"MarkButton\");\n$RefreshReg$(_c3, \"Snack\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Snack/index.js"],"names":["React","styled","css","Row","Transition","Text","Wrap","WrapText","Button","Icon","getInfo","type","tag","MarkButton","Snack","message","style","className","onRemove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,IAAeC,IAAI,IAAIC,QAAvB,QAAuC,SAAvC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,GAAP,EAAe;AAC7B,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAIC,GAAG,KAAK,OAAZ,EAAqB,OAAO,OAAP;AACrB,QAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,OAAP;AACpB,WAAO,4BAAP;AACD;;AACD,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAIC,GAAG,KAAK,OAAZ,EAAqB,OAAO,QAAP;AACrB,QAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,QAAP;AACpB,WAAO,6BAAP;AACD;;AACD,MAAIA,GAAG,KAAK,OAAZ,EAAqB,OAAO,KAAP;AACrB,MAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,QAAP;AACpB,SAAO,0BAAP;AACD,CAdD;;AAgBA,OAAO,IAAMN,IAAI,GAAGL,MAAM,CAACE,GAAD,CAAT,oBAYb;AAAA,MAAGQ,IAAH,QAAGA,IAAH;AAAA,SACAA,IAAI,IACJT,GADI,qBAEYQ,OAAO,CAACC,IAAD,CAFnB,CADJ;AAAA,CAZa,EAsBbJ,QAtBa,CAAV;KAAMD,I;AA6Cb,OAAO,IAAMO,UAAU,GAAGZ,MAAM,CAACO,MAAD,CAAT,oBAAhB;MAAMK,U;AAWb,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGH,IAAH,SAAGA,IAAH;AAAA,MAASI,OAAT,SAASA,OAAT;AAAA,MAAkBC,KAAlB,SAAkBA,KAAlB;AAAA,MAAyBC,SAAzB,SAAyBA,SAAzB;AAAA,MAAoCC,QAApC,SAAoCA,QAApC;AAAA,SACnB,MAAC,UAAD;AAAY,IAAA,EAAE,MAAd;AAAe,IAAA,MAAM,MAArB;AAAsB,IAAA,SAAS,EAAE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,IAAZ;AAAkB,IAAA,SAAS,EAAEM,SAA7B;AAAwC,IAAA,KAAK,EAAED,KAA/C;AAAsD,IAAA,OAAO,EAAEE,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,OAAP,CADF,EAEE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAE,MAAlB;AAA0B,IAAA,IAAI,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,OAAO,CAACC,IAAD,EAAO,MAAP,CAAnB;AAAmC,IAAA,MAAM,EAAED,OAAO,CAACC,IAAD,CAAlD;AAA0D,IAAA,IAAI,EAAE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADmB;AAAA,CAAd;MAAMG,K;AAWb,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Transition from '../Transition'\nimport Text, { Wrap as WrapText } from '../Text'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nconst getInfo = (type, tag) => {\n  if (type === 'success') {\n    if (tag === 'color') return 'green'\n    if (tag === 'icon') return 'check'\n    return 'var(--default-color-green)'\n  }\n  if (type === 'warning') {\n    if (tag === 'color') return 'orange'\n    if (tag === 'icon') return 'danger'\n    return 'var(--default-color-orange)'\n  }\n  if (tag === 'color') return 'red'\n  if (tag === 'icon') return 'danger'\n  return 'var(--default-color-red)'\n}\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  width: 320px;\n  cursor: pointer;\n  background: white;\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--surface-shadow);\n  padding: var(--default-gap) calc(var(--default-gap) + 5px);\n  transition: opacity 150ms ease;\n\n  ${({ type }) =>\n    type &&\n    css`\n      background: ${getInfo(type)};\n    `}\n\n  &:hover {\n    opacity: 0.85;\n  }\n\n  ${WrapText} {\n    color: white;\n  }\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const MarkButton = styled(Button)`\n  background: white;\n  border-radius: 50%;\n  border: none;\n\n  &:hover {\n    background: white;\n    border: none;\n  }\n`\n\nexport const Snack = ({ type, message, style, className, onRemove }) => (\n  <Transition in appear animation={'fade'}>\n    <Wrap type={type} className={className} style={style} onClick={onRemove}>\n      <Text>{message}</Text>\n      <MarkButton kind={'icon'} size={'xs'}>\n        <Icon icon={getInfo(type, 'icon')} stroke={getInfo(type)} size={'xs'} />\n      </MarkButton>\n    </Wrap>\n  </Transition>\n)\n\nexport default Snack\n"]},"metadata":{},"sourceType":"module"}