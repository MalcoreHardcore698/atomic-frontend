{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Title from '../../atomic-ui/components/Title';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nimport Processed from '../../components/Processed';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"RoleView__Wrap\",\n  componentId: \"sc-3s69fr-0\"\n})([\"grid-gap:var(--default-gap);height:max-content;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Permissions = styled(Row).withConfig({\n  displayName: \"RoleView__Permissions\",\n  componentId: \"sc-3s69fr-1\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\nexport const View = ({\n  role,\n  appearance,\n  className,\n  style\n}) => {\n  var _data$getRole, _data$getRole2, _data$getRole3, _data$getRole3$permis, _data$getRole4, _data$getRole4$permis;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_ROLE, {\n    variables: {\n      id: role\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getRole,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о роли',\n    emptyMessage: 'Кажется такой роли не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 0\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    date: data === null || data === void 0 ? void 0 : (_data$getRole = data.getRole) === null || _data$getRole === void 0 ? void 0 : _data$getRole.createdAt\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, getLabelRole(data === null || data === void 0 ? void 0 : (_data$getRole2 = data.getRole) === null || _data$getRole2 === void 0 ? void 0 : _data$getRole2.name))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data !== null && data !== void 0 && data.getRole && (data === null || data === void 0 ? void 0 : (_data$getRole3 = data.getRole) === null || _data$getRole3 === void 0 ? void 0 : (_data$getRole3$permis = _data$getRole3.permissions) === null || _data$getRole3$permis === void 0 ? void 0 : _data$getRole3$permis.length) > 0 ? /*#__PURE__*/React.createElement(Permissions, null, data === null || data === void 0 ? void 0 : (_data$getRole4 = data.getRole) === null || _data$getRole4 === void 0 ? void 0 : (_data$getRole4$permis = _data$getRole4.permissions) === null || _data$getRole4$permis === void 0 ? void 0 : _data$getRole4$permis.map(permission => /*#__PURE__*/React.createElement(Chip, {\n    key: v4(),\n    color: 'ghost',\n    appearance: 'outlined'\n  }, getLabelPermission(permission)))) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/RoleView/index.js"],"names":["React","styled","css","useQuery","v4","Row","Column","Meta","Divider","Chip","Alert","Title","getLabelRole","getLabelPermission","Processed","queries","Wrap","appearance","Permissions","View","role","className","style","data","loading","error","GET_ROLE","variables","id","getRole","gridGap","createdAt","name","permissions","length","map","permission","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { v4 } from 'uuid'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Chip from '../../atomic-ui/components/Chip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Title from '../../atomic-ui/components/Title'\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions'\n\nimport Processed from '../../components/Processed'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: var(--default-gap);\n  height: max-content;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Permissions = styled(Row)`\n  flex-wrap: wrap;\n  grid-gap: 10px;\n`\n\nexport const View = ({ role, appearance, className, style }) => {\n  const { data, loading, error } = useQuery(queries.GET_ROLE, {\n    variables: {\n      id: role\n    }\n  })\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      <Processed\n        data={data?.getRole}\n        loading={loading}\n        error={error}\n        errorMessage={'Упс! Не удалось загрузить информацию о роли'}\n        emptyMessage={'Кажется такой роли не существует'}>\n        <React.Fragment>\n          <Column style={{ gridGap: 0 }}>\n            <Meta date={data?.getRole?.createdAt} />\n\n            <Title tag={'h4'}>{getLabelRole(data?.getRole?.name)}</Title>\n          </Column>\n\n          <Divider clear />\n\n          {data?.getRole && data?.getRole?.permissions?.length > 0 ? (\n            <Permissions>\n              {data?.getRole?.permissions?.map((permission) => (\n                <Chip key={v4()} color={'ghost'} appearance={'outlined'}>\n                  {getLabelPermission(permission)}\n                </Chip>\n              ))}\n            </Permissions>\n          ) : (\n            <Alert>Привелегии отсутствует</Alert>\n          )}\n        </React.Fragment>\n      </Processed>\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}