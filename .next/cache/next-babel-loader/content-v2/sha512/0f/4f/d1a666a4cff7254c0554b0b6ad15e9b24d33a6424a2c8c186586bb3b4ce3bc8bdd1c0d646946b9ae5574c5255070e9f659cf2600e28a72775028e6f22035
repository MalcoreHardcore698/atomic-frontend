{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Icon from '../Icon';\nimport Chip from '../Chip';\nimport Rating from '../Rating';\nimport Tooltip from '../Tooltip';\nimport DateText from '../DateText';\nimport ShareInSocial from '../ShareInSocial';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Meta__Wrap\",\n  componentId: \"sc-1kgu6x4-0\"\n})([\"grid-gap:var(--default-gap);flex-wrap:wrap;\"]);\nexport const DateRow = styled(Row).withConfig({\n  displayName: \"Meta__DateRow\",\n  componentId: \"sc-1kgu6x4-1\"\n})([\"position:relative;top:-2px;align-items:center;grid-gap:var(--gap-xs);color:var(--ghost-color-text);\"]);\nexport const DateIcon = styled(Icon).withConfig({\n  displayName: \"Meta__DateIcon\",\n  componentId: \"sc-1kgu6x4-2\"\n})([\"margin-left:-4px;\"]);\nexport const Category = styled(Chip).withConfig({\n  displayName: \"Meta__Category\",\n  componentId: \"sc-1kgu6x4-3\"\n})([\"\", \"\"], ({\n  short\n}) => short && css([\"display:-webkit-box;-webkit-line-clamp:1;-webkit-box-orient:vertical;text-overflow:ellipsis;overflow:hidden;line-height:1.75;width:auto;\"]));\nexport const Assessment = styled.div.withConfig({\n  displayName: \"Meta__Assessment\",\n  componentId: \"sc-1kgu6x4-4\"\n})([\"display:flex;justify-content:flex-end;align-items:flex-start;flex-grow:100;\"]);\nexport const Meta = ({\n  date,\n  short,\n  rating,\n  category,\n  shareUrl,\n  shareTitle,\n  onChangeRating,\n  onClickByCategory\n}) => /*#__PURE__*/React.createElement(Wrap, null, date && /*#__PURE__*/React.createElement(DateRow, null, /*#__PURE__*/React.createElement(DateIcon, {\n  icon: 'calendar',\n  size: 'xs',\n  stroke: 'var(--ghost-color-text)'\n}), /*#__PURE__*/React.createElement(DateText, {\n  text: date,\n  options: {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }\n})), category && /*#__PURE__*/React.createElement(Tooltip, {\n  place: 'top',\n  text: category\n}, /*#__PURE__*/React.createElement(Category, {\n  size: 'xs',\n  color: 'ghost',\n  appearance: 'outlined',\n  short: short && category.length > 25,\n  onClick: onClickByCategory\n}, category)), shareTitle && /*#__PURE__*/React.createElement(ShareInSocial, {\n  title: shareTitle,\n  url: shareUrl\n}), (rating || rating === 0) && /*#__PURE__*/React.createElement(Assessment, null, /*#__PURE__*/React.createElement(Rating, {\n  defaultValue: rating,\n  onChange: onChangeRating,\n  size: 'xs',\n  readOnly: true\n})));\nexport default Meta;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/atomic-ui/components/Meta/index.js"],"names":["React","styled","css","Row","Icon","Chip","Rating","Tooltip","DateText","ShareInSocial","Wrap","DateRow","DateIcon","Category","short","Assessment","div","Meta","date","rating","category","shareUrl","shareTitle","onChangeRating","onClickByCategory","year","month","day","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAO,MAAMC,IAAI,GAAGT,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,mDAAV;AAKP,OAAO,MAAMQ,OAAO,GAAGV,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,2GAAb;AAQP,OAAO,MAAMS,QAAQ,GAAGX,MAAM,CAACG,IAAD,CAAT;AAAA;AAAA;AAAA,yBAAd;AAIP,OAAO,MAAMS,QAAQ,GAAGZ,MAAM,CAACI,IAAD,CAAT;AAAA;AAAA;AAAA,aACjB,CAAC;AAAES,EAAAA;AAAF,CAAD,KACAA,KAAK,IACLZ,GADK,8IAFY,CAAd;AAcP,OAAO,MAAMa,UAAU,GAAGd,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,mFAAhB;AAOP,OAAO,MAAMC,IAAI,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBJ,EAAAA,KAFmB;AAGnBK,EAAAA,MAHmB;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA,QALmB;AAMnBC,EAAAA,UANmB;AAOnBC,EAAAA,cAPmB;AAQnBC,EAAAA;AARmB,CAAD,kBAUlB,oBAAC,IAAD,QACGN,IAAI,iBACH,oBAAC,OAAD,qBACE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAE,UAAhB;AAA4B,EAAA,IAAI,EAAE,IAAlC;AAAwC,EAAA,MAAM,EAAE;AAAhD,EADF,eAEE,oBAAC,QAAD;AACE,EAAA,IAAI,EAAEA,IADR;AAEE,EAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EAAE,SADC;AAEPC,IAAAA,KAAK,EAAE,SAFA;AAGPC,IAAAA,GAAG,EAAE;AAHE;AAFX,EAFF,CAFJ,EAeGP,QAAQ,iBACP,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAE,KAAhB;AAAuB,EAAA,IAAI,EAAEA;AAA7B,gBACE,oBAAC,QAAD;AACE,EAAA,IAAI,EAAE,IADR;AAEE,EAAA,KAAK,EAAE,OAFT;AAGE,EAAA,UAAU,EAAE,UAHd;AAIE,EAAA,KAAK,EAAEN,KAAK,IAAIM,QAAQ,CAACQ,MAAT,GAAkB,EAJpC;AAKE,EAAA,OAAO,EAAEJ;AALX,GAMGJ,QANH,CADF,CAhBJ,EA4BGE,UAAU,iBACT,oBAAC,aAAD;AACE,EAAA,KAAK,EAAEA,UADT;AAEE,EAAA,GAAG,EAAED;AAFP,EA7BJ,EAmCG,CAACF,MAAM,IAAIA,MAAM,KAAK,CAAtB,kBACC,oBAAC,UAAD,qBACE,oBAAC,MAAD;AAAQ,EAAA,YAAY,EAAEA,MAAtB;AAA8B,EAAA,QAAQ,EAAEI,cAAxC;AAAwD,EAAA,IAAI,EAAE,IAA9D;AAAoE,EAAA,QAAQ;AAA5E,EADF,CApCJ,CAVK;AAqDP,eAAeN,IAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Icon from '../Icon'\nimport Chip from '../Chip'\nimport Rating from '../Rating'\nimport Tooltip from '../Tooltip'\nimport DateText from '../DateText'\nimport ShareInSocial from '../ShareInSocial'\n\nexport const Wrap = styled(Row)`\n  grid-gap: var(--default-gap);\n  flex-wrap: wrap;\n`\n\nexport const DateRow = styled(Row)`\n  position: relative;\n  top: -2px;\n  align-items: center;\n  grid-gap: var(--gap-xs);\n  color: var(--ghost-color-text);\n`\n\nexport const DateIcon = styled(Icon)`\n  margin-left: -4px;\n`\n\nexport const Category = styled(Chip)`\n  ${({ short }) =>\n    short &&\n    css`\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      line-height: 1.75;\n      width: auto;\n    `}\n`\n\nexport const Assessment = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n  flex-grow: 100;\n`\n\nexport const Meta = ({\n  date,\n  short,\n  rating,\n  category,\n  shareUrl,\n  shareTitle,\n  onChangeRating,\n  onClickByCategory\n}) => (\n  <Wrap>\n    {date && (\n      <DateRow>\n        <DateIcon icon={'calendar'} size={'xs'} stroke={'var(--ghost-color-text)'} />\n        <DateText\n          text={date}\n          options={{\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit'\n          }}\n        />\n      </DateRow>\n    )}\n\n    {category && (\n      <Tooltip place={'top'} text={category}>\n        <Category\n          size={'xs'}\n          color={'ghost'}\n          appearance={'outlined'}\n          short={short && category.length > 25}\n          onClick={onClickByCategory}>\n          {category}\n        </Category>\n      </Tooltip>\n    )}\n\n    {shareTitle && (\n      <ShareInSocial\n        title={shareTitle}\n        url={shareUrl}\n      />\n    )}\n\n    {(rating || rating === 0) && (\n      <Assessment>\n        <Rating defaultValue={rating} onChange={onChangeRating} size={'xs'} readOnly />\n      </Assessment>\n    )}\n  </Wrap>\n)\n\nexport default Meta\n"]},"metadata":{},"sourceType":"module"}