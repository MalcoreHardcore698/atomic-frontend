{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Row from '../../../atomic-ui/components/Row';\nimport List from '../../List';\nimport Organizer from '../../Organizer';\nimport ProjectSuit from '../../ProjectSuit';\nimport { useProject } from '../../../hooks/useProject';\nimport { INITIAL_DISPLAY_METHOD } from '../../../layouts/content';\nimport queries from '../../../graphql/queries';\nconst Wrap = styled(Row).withConfig({\n  displayName: \"Feed__Wrap\",\n  componentId: \"wt5as6-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\nexport const Feed = () => {\n  var _folder$projects;\n\n  const methods = useProject();\n  const folder = useSelector(state => state.root.folder);\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Organizer, null), /*#__PURE__*/React.createElement(List, {\n    type: 'getProjectsByIds',\n    emptyMessage: 'Проектов нет',\n    query: queries.GET_PROJECTS_BY_IDS,\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    variables: {\n      projects: (_folder$projects = folder === null || folder === void 0 ? void 0 : folder.projects) !== null && _folder$projects !== void 0 ? _folder$projects : []\n    },\n    component: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document,\n      layout: 'row',\n      canRemove: true\n    })),\n    withoutMore: true\n  }));\n};\nexport default Feed;","map":null,"metadata":{},"sourceType":"module"}