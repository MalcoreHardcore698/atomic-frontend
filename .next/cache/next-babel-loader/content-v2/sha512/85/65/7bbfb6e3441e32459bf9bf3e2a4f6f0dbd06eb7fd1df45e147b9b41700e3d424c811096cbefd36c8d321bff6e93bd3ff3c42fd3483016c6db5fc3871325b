{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { v4 } from 'uuid';\nimport Column from '../atomic-ui/components/Column';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Select from '../atomic-ui/components/Select';\nimport DefaultLayout from '../layouts/default';\nimport DashboardLayout from './dashboard';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport HandleBar from '../components/HandleBar';\nimport { LowerLoader } from '../components/Styled';\nconst Wrap = styled(Column).withConfig({\n  displayName: \"content__Wrap\",\n  componentId: \"sc-1afm75p-0\"\n})([\"margin-top:120px;margin-bottom:80px;\", \" @media only screen and (max-width:480px){margin-top:0;}\"], ({\n  clear\n}) => clear && css([\"margin:0;\"]));\n\nconst ContentLayout = ({\n  title,\n  store,\n  query,\n  handle,\n  filters,\n  options,\n  research,\n  scaffold,\n  dashboard,\n  variables = {},\n  limit = 6,\n  startOffset = 6,\n  initialize,\n  children\n}) => {\n  const router = useRouter();\n  const Layout = dashboard ? DashboardLayout : DefaultLayout;\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [search, setSearch] = useState(null);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [offset, setOffset] = useState(startOffset + 1);\n  const [documents, setDocuments] = useState((store === null || store === void 0 ? void 0 : store.documents) || []);\n  const [isEnd, setIsEnd] = useState(false);\n  const pageStart = useMemo(() => {\n    var _router$query;\n\n    return Number((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.page) || 1;\n  }, [router]);\n  const [loadDocumentsBySearch, {\n    data: dataBySearch,\n    loading: loadingBySearch,\n    refetch: refetchBySearch\n  }] = useLazyQuery(query);\n  const [loadDocuments, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(query);\n\n  const getFilters = () => {\n    return filters.map(filter => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return /*#__PURE__*/React.createElement(DatePicker, {\n            key: v4(),\n            value: date,\n            placeholder: filter.placeholder || 'Дата публикации',\n            onChange: onChangeDate,\n            withNavigate: true\n          });\n\n        case 'SELECT':\n          return /*#__PURE__*/React.createElement(Select, {\n            key: v4(),\n            options: filter.options,\n            placeholder: filter.placeholder || 'Раздел',\n            selected: select,\n            onChange: item => onChangeSelect(item)\n          });\n\n        default:\n          return null;\n      }\n    });\n  };\n\n  const onSearch = value => {\n    setDocuments([]);\n\n    if (value) {\n      setSearch(value);\n      loadDocumentsBySearch({\n        variables: { ...variables,\n          search: value,\n          offset: 0,\n          limit: startOffset * pageStart\n        }\n      });\n    } else {\n      const result = { ...variables,\n        offset: 0,\n        limit\n      };\n      setSearch(null);\n      if (refetch) refetch(result);else loadDocuments({\n        variables: result\n      });\n    }\n\n    setOffset(0);\n  };\n\n  const loadMore = async page => {\n    const updateOffset = () => setOffset(limit * page + startOffset + 1);\n\n    const result = { ...variables,\n      offset,\n      limit\n    };\n    if (isEnd) return null;\n\n    if (search) {\n      await refetchBySearch(variables);\n    } else {\n      if (refetch) {\n        await refetch(result);\n        updateOffset();\n      } else {\n        await loadDocuments({\n          variables: result\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (initialize) loadDocuments({\n      variables: {\n        offset,\n        limit\n      }\n    });\n  }, [initialize]);\n  useEffect(() => {\n    if (research) onSearch(research);\n  }, [research]);\n  useEffect(() => {\n    const common = !search && !loading && data;\n    const search = search && !loadingBySearch && dataBySearch;\n    const result = common || search;\n\n    if ((result === null || result === void 0 ? void 0 : result.length) > 0 && !isEnd) {\n      setDocuments(prev => [...prev, ...result[Object.keys(result)[0]]]);\n    } else {\n      setIsEnd(true);\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch, isEnd, setIsEnd]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: title,\n    scaffold: scaffold\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    clear: scaffold || dashboard\n  }, !scaffold && !dashboard && /*#__PURE__*/React.createElement(SearchBar, {\n    onChangeFilter: () => setVisibleFilter(!visibleFilter),\n    onSubmit: onSearch\n  }), dashboard && handle && /*#__PURE__*/React.createElement(HandleBar, {\n    title: title,\n    icon: handle.icon,\n    buttonCreateText: handle.buttonCreateText,\n    onCreate: handle.onCreate,\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: handle.onChangeDisplayMethod\n  }), (filters || options) && /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: getFilters(),\n    options: options\n  }), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: pageStart || 0,\n    loadMore: loadMore,\n    hasMore: !isEnd,\n    loader: /*#__PURE__*/React.createElement(LowerLoader, {\n      key: 'loader'\n    }, /*#__PURE__*/React.createElement(Spinner, null))\n  }, typeof children === 'function' ? React.createElement(children, {\n    documents\n  }) : children)));\n};\n\nexport default ContentLayout;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/layouts/content.js"],"names":["React","useState","useEffect","useMemo","useRouter","styled","css","useLazyQuery","InfiniteScroll","v4","Column","DatePicker","Spinner","Select","DefaultLayout","DashboardLayout","FilterBar","SearchBar","HandleBar","LowerLoader","Wrap","clear","ContentLayout","title","store","query","handle","filters","options","research","scaffold","dashboard","variables","limit","startOffset","initialize","children","router","Layout","date","onChangeDate","select","onChangeSelect","search","setSearch","visibleFilter","setVisibleFilter","offset","setOffset","documents","setDocuments","isEnd","setIsEnd","pageStart","Number","page","loadDocumentsBySearch","data","dataBySearch","loading","loadingBySearch","refetch","refetchBySearch","loadDocuments","getFilters","map","filter","type","placeholder","item","onSearch","value","result","loadMore","updateOffset","common","length","prev","Object","keys","icon","buttonCreateText","onCreate","onChangeDisplayMethod","createElement"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport { v4 } from 'uuid'\n\nimport Column from '../atomic-ui/components/Column'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Select from '../atomic-ui/components/Select'\n\nimport DefaultLayout from '../layouts/default'\nimport DashboardLayout from './dashboard'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport HandleBar from '../components/HandleBar'\nimport { LowerLoader } from '../components/Styled'\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  ${({ clear }) =>\n    clear &&\n    css`\n      margin: 0;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst ContentLayout = ({\n  title,\n  store,\n  query,\n  handle,\n  filters,\n  options,\n  research,\n  scaffold,\n  dashboard,\n  variables = {},\n  limit = 6,\n  startOffset = 6,\n  initialize,\n  children\n}) => {\n  const router = useRouter()\n  const Layout = dashboard ? DashboardLayout : DefaultLayout\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [search, setSearch] = useState(null)\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const [offset, setOffset] = useState(startOffset + 1)\n  const [documents, setDocuments] = useState(store?.documents || [])\n  const [isEnd, setIsEnd] = useState(false)\n  const pageStart = useMemo(() => Number(router.query?.page) || 1, [router])\n\n  const [\n    loadDocumentsBySearch,\n    { data: dataBySearch, loading: loadingBySearch, refetch: refetchBySearch }\n  ] = useLazyQuery(query)\n\n  const [loadDocuments, { data, loading, refetch }] = useLazyQuery(query)\n\n  const getFilters = () => {\n    return filters.map((filter) => {\n      switch (filter.type) {\n        case 'DATEPICKER':\n          return (\n            <DatePicker\n              key={v4()}\n              value={date}\n              placeholder={filter.placeholder || 'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />\n          )\n        case 'SELECT':\n          return (\n            <Select\n              key={v4()}\n              options={filter.options}\n              placeholder={filter.placeholder || 'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          )\n        default:\n          return null\n      }\n    })\n  }\n\n  const onSearch = (value) => {\n    setDocuments([])\n    if (value) {\n      setSearch(value)\n      loadDocumentsBySearch({\n        variables: { ...variables, search: value, offset: 0, limit: startOffset * pageStart }\n      })\n    } else {\n      const result = { ...variables, offset: 0, limit }\n\n      setSearch(null)\n\n      if (refetch) refetch(result)\n      else loadDocuments({ variables: result })\n    }\n    setOffset(0)\n  }\n\n  const loadMore = async (page) => {\n    const updateOffset = () => setOffset(limit * page + startOffset + 1)\n\n    const result = { ...variables, offset, limit }\n    if (isEnd) return null\n\n    if (search) {\n      await refetchBySearch(variables)\n    } else {\n      if (refetch) {\n        await refetch(result)\n        updateOffset()\n      } else {\n        await loadDocuments({ variables: result })\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (initialize) loadDocuments({ variables: { offset, limit } })\n  }, [initialize])\n\n  useEffect(() => {\n    if (research) onSearch(research)\n  }, [research])\n\n  useEffect(() => {\n    const common = !search && !loading && data\n    const search = search && !loadingBySearch && dataBySearch\n    const result = common || search\n    if (result?.length > 0 && !isEnd) {\n      setDocuments((prev) => [...prev, ...result[Object.keys(result)[0]]])\n    } else {\n      setIsEnd(true)\n    }\n  }, [search, loading, loadingBySearch, data, dataBySearch, isEnd, setIsEnd])\n\n  return (\n    <Layout title={title} scaffold={scaffold}>\n      <Wrap clear={scaffold || dashboard}>\n        {!scaffold && !dashboard && (\n          <SearchBar onChangeFilter={() => setVisibleFilter(!visibleFilter)} onSubmit={onSearch} />\n        )}\n\n        {dashboard && handle && (\n          <HandleBar\n            title={title}\n            icon={handle.icon}\n            buttonCreateText={handle.buttonCreateText}\n            onCreate={handle.onCreate}\n            onChangeVisibleFilter={() => setVisibleFilter(!visibleFilter)}\n            onChangeDisplayMethod={handle.onChangeDisplayMethod}\n          />\n        )}\n\n        {(filters || options) && (\n          <FilterBar isOpen={visibleFilter} filters={getFilters()} options={options} />\n        )}\n\n        <InfiniteScroll\n          pageStart={pageStart || 0}\n          loadMore={loadMore}\n          hasMore={!isEnd}\n          loader={\n            <LowerLoader key={'loader'}>\n              <Spinner />\n            </LowerLoader>\n          }>\n          {typeof children === 'function' ? React.createElement(children, { documents }) : children}\n        </InfiniteScroll>\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport default ContentLayout\n"]},"metadata":{},"sourceType":"module"}