{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport ProjectCard, { Media } from '../../components/ProjectCard';\nimport Search from '../../components/SearchBar';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Scaffold__Wrap\",\n  componentId: \"sc-11xb1f4-0\"\n})([\"position:relative;align-items:center;width:100%;padding:95px var(--main-offset-l);&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-11);width:100%;height:100%;background:rgba(0,0,0,0.15);}@media only screen and (max-width:996px){padding:45px var(--main-offset-m);}@media only screen and (max-width:768px){padding:45px var(--main-offset-s);}@media only screen and (max-width:480px){padding:45px var(--main-offset-xs);}\"]);\n_c = Wrap;\nexport const Background = styled.img.withConfig({\n  displayName: \"Scaffold__Background\",\n  componentId: \"sc-11xb1f4-1\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);width:100%;height:100%;object-fit:cover;\"]);\n_c2 = Background;\nexport const Header = styled(Column).withConfig({\n  displayName: \"Scaffold__Header\",\n  componentId: \"sc-11xb1f4-2\"\n})([\"padding:0 var(--main-offset-l);margin-bottom:30px;@media only screen and (max-width:996px){padding:0 var(--main-offset-m);}@media only screen and (max-width:768px){padding:0 var(--main-offset-s);}@media only screen and (max-width:480px){padding:0 var(--main-offset-xs);}\"]);\n_c3 = Header;\nexport const Container = styled(Column).withConfig({\n  displayName: \"Scaffold__Container\",\n  componentId: \"sc-11xb1f4-3\"\n})([\"position:relative;z-index:var(--z-12);justify-content:center;align-items:center;flex-grow:1;width:100%;height:100%;\"]);\n_c4 = Container;\nexport const MainTitle = styled(Title).withConfig({\n  displayName: \"Scaffold__MainTitle\",\n  componentId: \"sc-11xb1f4-4\"\n})([\"text-align:center;color:white;@media only screen and (max-width:768px){font-size:26px;line-height:1.25;margin-bottom:15px;}@media only screen and (max-width:768px){font-size:22px;}\"]);\n_c5 = MainTitle;\nexport const Projects = styled.div.withConfig({\n  displayName: \"Scaffold__Projects\",\n  componentId: \"sc-11xb1f4-5\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(256px,1fr));grid-gap:var(--default-gap);@media only screen and (max-width:1280px){display:flex;flex-direction:column;}\"]);\n_c6 = Projects;\nexport const PrimaryProject = styled(ProjectCard).withConfig({\n  displayName: \"Scaffold__PrimaryProject\",\n  componentId: \"sc-11xb1f4-6\"\n})([\"flex-grow:1;height:100%;flex-basis:50%;img{height:100%;}@media only screen and (max-width:768px){\", \"{img{height:256px;flex-basis:auto;}}}\"], Media);\n_c7 = PrimaryProject;\nexport const Residues = styled(Column).withConfig({\n  displayName: \"Scaffold__Residues\",\n  componentId: \"sc-11xb1f4-7\"\n})([\"flex-grow:1;@media only screen and (max-width:1280px){flex-direction:row;grid-gap:var(--default-gap);width:100%;}@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);width:100%;}\"]);\n_c8 = Residues;\nexport const Residue = styled(ProjectCard).withConfig({\n  displayName: \"Scaffold__Residue\",\n  componentId: \"sc-11xb1f4-8\"\n})([\"flex-grow:1;@media only screen and (max-width:1280px){width:100%;}\"]);\n_c9 = Residue;\nexport const detectOwnedProject = (projects, project) => projects === null || projects === void 0 ? void 0 : projects.find(candidate => candidate.id === project.id);\nexport const Scaffold = ({\n  user,\n  title,\n  image,\n  background,\n  primary,\n  residue,\n  className,\n  style,\n  onLike,\n  onLink,\n  onAdd,\n  onCompanyLink,\n  onScreenshotClick\n}) => {\n  const getProjectProps = (project, layout) => ({\n    image,\n    project,\n    layout,\n    slicedFactor: 5,\n    owned: detectOwnedProject(user === null || user === void 0 ? void 0 : user.projects, project),\n    added: !!(user !== null && user !== void 0 && user.folders.find(folder => {\n      var _folder$projects;\n\n      return !!(folder !== null && folder !== void 0 && (_folder$projects = folder.projects) !== null && _folder$projects !== void 0 && _folder$projects.find(item => item.id === project.id));\n    })),\n    liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n    onLike: onLike && (() => onLike(project)),\n    onAdd: onAdd && (() => onAdd(project)),\n    onLink: () => onLink(project, detectOwnedProject(user === null || user === void 0 ? void 0 : user.projects, project)),\n    onCompanyLink: () => onCompanyLink(project),\n    onScreenshotClick: (_, key) => onScreenshotClick(project, key)\n  });\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(Background, {\n    src: background,\n    alt: 'Background'\n  }), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, title && /*#__PURE__*/React.createElement(MainTitle, null, title), /*#__PURE__*/React.createElement(Search, null)), (primary || residue && residue.length > 0) && /*#__PURE__*/React.createElement(Projects, null, primary && /*#__PURE__*/React.createElement(PrimaryProject, getProjectProps(primary, 'column')), residue && residue.length > 0 && /*#__PURE__*/React.createElement(Residues, null, residue.slice(0, 2).map((project, index) => /*#__PURE__*/React.createElement(Residue, _extends({\n    key: index\n  }, getProjectProps(project))))))));\n};\n_c10 = Scaffold;\nexport default Scaffold;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Container\");\n$RefreshReg$(_c5, \"MainTitle\");\n$RefreshReg$(_c6, \"Projects\");\n$RefreshReg$(_c7, \"PrimaryProject\");\n$RefreshReg$(_c8, \"Residues\");\n$RefreshReg$(_c9, \"Residue\");\n$RefreshReg$(_c10, \"Scaffold\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Scaffold/index.js"],"names":["React","styled","Column","Title","ProjectCard","Media","Search","Wrap","Background","img","Header","Container","MainTitle","Projects","div","PrimaryProject","Residues","Residue","detectOwnedProject","projects","project","find","candidate","id","Scaffold","user","title","image","background","primary","residue","className","style","onLike","onLink","onAdd","onCompanyLink","onScreenshotClick","getProjectProps","layout","slicedFactor","owned","added","folders","folder","item","liked","likedProjects","_","key","length","slice","map","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\n\nimport ProjectCard, { Media } from '../../components/ProjectCard'\nimport Search from '../../components/SearchBar'\n\nexport const Wrap = styled(Column)`\n  position: relative;\n  align-items: center;\n  width: 100%;\n  padding: 95px var(--main-offset-l);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: var(--z-11);\n\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.15);\n  }\n\n  @media only screen and (max-width: 996px) {\n    padding: 45px var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 45px var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 45px var(--main-offset-xs);\n  }\n`\n\nexport const Background = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: var(--z-10);\n\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\nexport const Header = styled(Column)`\n  padding: 0 var(--main-offset-l);\n  margin-bottom: 30px;\n\n  @media only screen and (max-width: 996px) {\n    padding: 0 var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0 var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 0 var(--main-offset-xs);\n  }\n`\n\nexport const Container = styled(Column)`\n  position: relative;\n  z-index: var(--z-12);\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  width: 100%;\n  height: 100%;\n`\n\nexport const MainTitle = styled(Title)`\n  text-align: center;\n  color: white;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 26px;\n    line-height: 1.25;\n    margin-bottom: 15px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    font-size: 22px;\n  }\n`\n\nexport const Projects = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nexport const PrimaryProject = styled(ProjectCard)`\n  flex-grow: 1;\n  height: 100%;\n  flex-basis: 50%;\n\n  img {\n    height: 100%;\n  }\n\n  @media only screen and (max-width: 768px) {\n    ${Media} {\n      img {\n        height: 256px;\n        flex-basis: auto;\n      }\n    }\n  }\n`\n\nexport const Residues = styled(Column)`\n  flex-grow: 1;\n\n  @media only screen and (max-width: 1280px) {\n    flex-direction: row;\n    grid-gap: var(--default-gap);\n    width: 100%;\n  }\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n    width: 100%;\n  }\n`\n\nexport const Residue = styled(ProjectCard)`\n  flex-grow: 1;\n\n  @media only screen and (max-width: 1280px) {\n    width: 100%;\n  }\n`\n\nexport const detectOwnedProject = (projects, project) =>\n  projects?.find((candidate) => candidate.id === project.id)\n\nexport const Scaffold = ({\n  user,\n  title,\n  image,\n  background,\n  primary,\n  residue,\n  className,\n  style,\n  onLike,\n  onLink,\n  onAdd,\n  onCompanyLink,\n  onScreenshotClick\n}) => {\n  const getProjectProps = (project, layout) => ({\n    image,\n    project,\n    layout,\n    slicedFactor: 5,\n    owned: detectOwnedProject(user?.projects, project),\n    added: !!user?.folders.find(\n      (folder) => !!folder?.projects?.find((item) => item.id === project.id)\n    ),\n    liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n    onLike: onLike && (() => onLike(project)),\n    onAdd: onAdd && (() => onAdd(project)),\n    onLink: () => onLink(project, detectOwnedProject(user?.projects, project)),\n    onCompanyLink: () => onCompanyLink(project),\n    onScreenshotClick: (_, key) => onScreenshotClick(project, key)\n  })\n\n  return (\n    <Wrap className={className} style={style}>\n      <Background src={background} alt={'Background'} />\n\n      <Container>\n        <Header>\n          {title && <MainTitle>{title}</MainTitle>}\n          <Search />\n        </Header>\n\n        {(primary || (residue && residue.length > 0)) && (\n          <Projects>\n            {primary && <PrimaryProject {...getProjectProps(primary, 'column')} />}\n            {residue && residue.length > 0 && (\n              <Residues>\n                {residue.slice(0, 2).map((project, index) => (\n                  <Residue key={index} {...getProjectProps(project)} />\n                ))}\n              </Residues>\n            )}\n          </Projects>\n        )}\n      </Container>\n    </Wrap>\n  )\n}\n\nexport default Scaffold\n"]},"metadata":{},"sourceType":"module"}