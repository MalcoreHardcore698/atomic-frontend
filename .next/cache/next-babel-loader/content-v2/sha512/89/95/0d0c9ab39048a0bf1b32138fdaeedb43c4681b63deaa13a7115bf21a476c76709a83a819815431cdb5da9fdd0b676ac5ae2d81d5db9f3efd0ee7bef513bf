{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nexport const clearProperties = css([\"color:black;background:none;border:none;height:auto;padding:0;&:hover{background:none;border:none;color:var(--default-color-accent);}\"]);\nexport const Wrap = styled.button.withConfig({\n  displayName: \"Button__Wrap\",\n  componentId: \"sc-187wlp-0\"\n})([\"font-family:var(--default-font-family);font-size:0.875rem;color:black;border:var(--surface-border);border-radius:var(--surface-border-radius);background:none;margin:0;padding:var(--input-offset-\", \");width:auto;height:var(--input-height-\", \");transition:all 150ms ease;\", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], ({\n  size\n}) => size, ({\n  size\n}) => size, ({\n  kind,\n  size\n}) => kind === 'icon' && css([\"padding:0;width:var(--input-height-\", \");min-width:var(--input-height-\", \");\"], size, size), ({\n  appearance\n}) => appearance === 'default' && css([\"color:white;background:var(--default-color-accent);border:1px solid var(--default-color-accent);&:hover{background:var(--default-color-accent__hover);border:1px solid var(--default-color-accent__hover);}\", \"\"], ({\n  revert\n}) => revert && css([\"color:var(--default-color-accent);background:var(--default-color-accent-dim);border:1px solid var(--default-color-accent-dim);&:hover{background:var(--default-color-accent-dim__hover);border:1px solid var(--default-color-accent-dim__hover);}\"])), ({\n  appearance\n}) => appearance === 'green' && css([\"color:white;background:var(--default-color-green);border:1px solid var(--default-color-green) &:hover{background:var(--default-color-green__hover);border:1px solid var(--default-color-green__hover);}\", \"\"], ({\n  revert\n}) => revert && css([\"color:var(--default-color-green);background:var(--default-color-green-dim);border:1px solid var(--default-color-green-dim);&:hover{background:var(--default-color-green-dim__hover);border:1px solid var(--default-color-green-dim__hover);}\"])), ({\n  appearance\n}) => appearance === 'red' && css([\"color:white;background:var(--default-color-red);border:1px solid var(--default-color-red) &:hover{background:var(--default-color-red__hover);border:1px solid var(--default-color-red__hover);}\", \"\"], ({\n  revert\n}) => revert && css([\"color:var(--default-color-red);background:var(--default-color-red-dim);border:1px solid var(--default-color-red-dim);&:hover{background:var(--default-color-red-dim__hover);border:1px solid var(--default-color-red-dim__hover);}\"])), ({\n  appearance\n}) => appearance === 'ghost' && css([\"color:var(--ghost-color-text);background:var(--ghost-color-background);border:1px solid var(--ghost-color-background);&:hover{opacity:0.75;}\"]), ({\n  appearance\n}) => appearance === 'outlined' && css([\"color:gray;border:1px solid rgba(0,0,0,15%);&:hover{color:var(--default-color-accent);border:1px solid var(--default-color-accent);}\"]), ({\n  appearance\n}) => appearance === 'clear' && clearProperties, ({\n  appearance\n}) => appearance === 'link' && css([\"\", \" color:var(--default-color-accent);text-align:left;padding:0;\"], clearProperties), ({\n  disabled\n}) => disabled && css([\"color:var(--ghost-color-text);background:var(--ghost-color-background);border:1px solid var(--ghost-color-background);cursor:default;&:hover{background:var(--ghost-color-background);border:1px solid var(--ghost-color-background);opacity:1;}\"]));\n_c = Wrap;\nexport const Button = ({\n  children,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, props, children);\n_c2 = Button;\nButton.defaultProps = {\n  appearance: 'default',\n  kind: 'default',\n  size: 'm'\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Button/index.js"],"names":["React","styled","css","clearProperties","Wrap","button","size","kind","appearance","revert","disabled","Button","children","props","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,eAAe,GAAGD,GAAH,2IAArB;AAcP,OAAO,MAAME,IAAI,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,kUAUe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAV7B,EAYc,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAZ5B,EAgBb,CAAC;AAAEC,EAAAA,IAAF;AAAQD,EAAAA;AAAR,CAAD,KACAC,IAAI,KAAK,MAAT,IACAL,GADA,mFAG8BI,IAH9B,EAIkCA,IAJlC,CAjBa,EAwBb,CAAC;AAAEE,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACAN,GADA,sNAWI,CAAC;AAAEO,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNP,GADM,uPAZV,CAzBa,EAkDb,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAN,GADA,kNAWI,CAAC;AAAEO,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNP,GADM,kPAZV,CAnDa,EA4Eb,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,KAAf,IACAN,GADA,0MAWI,CAAC;AAAEO,EAAAA;AAAF,CAAD,KACAA,MAAM,IACNP,GADM,wOAZV,CA7Ea,EAsGb,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAN,GADA,kJAvGa,EAkHb,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,UAAf,IACAN,GADA,0IAnHa,EA8Hb,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAoBA,UAAU,KAAK,OAAf,IAA0BL,eA9HjC,EAgIb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,MAAf,IACAN,GADA,wEAEIC,eAFJ,CAjIa,EAyIb,CAAC;AAAEO,EAAAA;AAAF,CAAD,KACAA,QAAQ,IACRR,GADQ,sPA1IK,CAAV;KAAME,I;AAyJb,OAAO,MAAMO,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,kBAA4B,oBAAC,IAAD,EAAUA,KAAV,EAAkBD,QAAlB,CAA3C;MAAMD,M;AAEbA,MAAM,CAACG,YAAP,GAAsB;AACpBN,EAAAA,UAAU,EAAE,SADQ;AAEpBD,EAAAA,IAAI,EAAE,SAFc;AAGpBD,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAMA,eAAeK,MAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const clearProperties = css`\n  color: black;\n  background: none;\n  border: none;\n  height: auto;\n  padding: 0;\n\n  &:hover {\n    background: none;\n    border: none;\n    color: var(--default-color-accent);\n  }\n`\n\nexport const Wrap = styled.button`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: none;\n\n  margin: 0;\n  padding: var(--input-offset-${({ size }) => size});\n  width: auto;\n  height: var(--input-height-${({ size }) => size});\n\n  transition: all 150ms ease;\n\n  ${({ kind, size }) =>\n    kind === 'icon' &&\n    css`\n      padding: 0;\n      width: var(--input-height-${size});\n      min-width: var(--input-height-${size});\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      color: white;\n      background: var(--default-color-accent);\n      border: 1px solid var(--default-color-accent);\n\n      &:hover {\n        background: var(--default-color-accent__hover);\n        border: 1px solid var(--default-color-accent__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-accent);\n          background: var(--default-color-accent-dim);\n          border: 1px solid var(--default-color-accent-dim);\n\n          &:hover {\n            background: var(--default-color-accent-dim__hover);\n            border: 1px solid var(--default-color-accent-dim__hover);\n          }\n        `}\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'green' &&\n    css`\n      color: white;\n      background: var(--default-color-green);\n      border: 1px solid var(--default-color-green)\n\n      &:hover {\n        background: var(--default-color-green__hover);\n        border: 1px solid var(--default-color-green__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-green);\n          background: var(--default-color-green-dim);\n          border: 1px solid var(--default-color-green-dim);\n\n          &:hover {\n            background: var(--default-color-green-dim__hover);\n            border: 1px solid var(--default-color-green-dim__hover);\n          }\n        `}\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'red' &&\n    css`\n      color: white;\n      background: var(--default-color-red);\n      border: 1px solid var(--default-color-red)\n\n      &:hover {\n        background: var(--default-color-red__hover);\n        border: 1px solid var(--default-color-red__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-red);\n          background: var(--default-color-red-dim);\n          border: 1px solid var(--default-color-red-dim);\n\n          &:hover {\n            background: var(--default-color-red-dim__hover);\n            border: 1px solid var(--default-color-red-dim__hover);\n          }\n        `}\n    `}\n    \n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n\n      &:hover {\n        opacity: 0.75;\n      }\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'outlined' &&\n    css`\n      color: gray;\n      border: 1px solid rgba(0, 0, 0, 15%);\n\n      &:hover {\n        color: var(--default-color-accent);\n        border: 1px solid var(--default-color-accent);\n      }\n    `}\n\n  ${({ appearance }) => appearance === 'clear' && clearProperties}\n\n  ${({ appearance }) =>\n    appearance === 'link' &&\n    css`\n      ${clearProperties}\n      color: var(--default-color-accent);\n      text-align: left;\n      padding: 0;\n    `}\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n      cursor: default;\n\n      &:hover {\n        background: var(--ghost-color-background);\n        border: 1px solid var(--ghost-color-background);\n        opacity: 1;\n      }\n    `}\n`\n\nexport const Button = ({ children, ...props }) => <Wrap {...props}>{children}</Wrap>\n\nButton.defaultProps = {\n  appearance: 'default',\n  kind: 'default',\n  size: 'm'\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}