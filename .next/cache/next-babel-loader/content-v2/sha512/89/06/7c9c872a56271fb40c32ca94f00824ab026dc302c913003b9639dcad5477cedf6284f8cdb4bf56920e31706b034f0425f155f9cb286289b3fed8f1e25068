{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Column from '../atomic-ui/components/Column';\nimport DashboardLayout from './dashboard';\nimport DefaultLayout from '../layouts/default';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport HandleBar from '../components/HandleBar';\nimport { Card } from './dashboard/content';\nimport List from '../components/List';\nexport const INITIAL_DISPLAY_METHOD = 'grid';\nconst Wrap = styled(Column).withConfig({\n  displayName: \"content__Wrap\",\n  componentId: \"sc-1afm75p-0\"\n})([\"margin-top:120px;margin-bottom:80px;\", \" @media only screen and (max-width:480px){margin-top:0;}\"], ({\n  clear\n}) => clear && css([\"margin:0;\"]));\n_c = Wrap;\nconst Container = styled.div.withConfig({\n  displayName: \"content__Container\",\n  componentId: \"sc-1afm75p-1\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;\", \" @media only screen and (max-width:1196px){grid-template-columns:1fr;}\"], ({\n  stretch\n}) => stretch && css([\"grid-template-columns:1fr;\"]));\n_c2 = Container;\nconst ContentFilters = memo(_c3 = _s(({\n  filterConfig\n}) => {\n  _s();\n\n  const visibleFilters = useSelector(state => state.root.visibleFilters);\n  return /*#__PURE__*/React.createElement(FilterBar, _extends({}, filterConfig || {}, {\n    isOpen: visibleFilters\n  }));\n}, \"FR8hNfkb4rjjbl5Jo20+4tTNKW0=\", false, function () {\n  return [useSelector];\n}));\n_c4 = ContentFilters;\nconst ContentCard = memo(_c5 = ({\n  item,\n  render,\n  onLink\n}) => /*#__PURE__*/React.createElement(Card, {\n  item: item,\n  component: render(item),\n  onLink: onLink && (item => onLink(item)),\n  withoutChecked: true\n}));\n_c6 = ContentCard;\nconst ContentContainer = memo(_c7 = _s2(({\n  limit,\n  aside,\n  render,\n  getType,\n  getQuery,\n  variables,\n  emptyMessage,\n  startOffset,\n  onLink\n}) => {\n  _s2();\n\n  const search = useSelector(state => state.root.search);\n  return /*#__PURE__*/React.createElement(Container, {\n    stretch: search && !aside || !aside\n  }, /*#__PURE__*/React.createElement(List, {\n    limit: limit,\n    type: getType,\n    query: getQuery,\n    variables: variables,\n    startOffset: startOffset,\n    emptyMessage: emptyMessage,\n    component: item => /*#__PURE__*/React.createElement(ContentCard, {\n      item: item,\n      render: render,\n      onLink: onLink\n    }),\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    onClick: onLink && (item => onLink(item))\n  }), aside);\n}, \"QVWJpjPD7ypYcjDSL6S9xEthZgg=\", false, function () {\n  return [useSelector];\n}));\n_c8 = ContentContainer;\n\nconst ContentLayout = ({\n  limit,\n  title,\n  aside,\n  store,\n  handle,\n  render,\n  getType,\n  getQuery,\n  dashboard,\n  variables,\n  filterConfig,\n  emptyMessage,\n  startOffset,\n  onLink\n}) => {\n  const Layout = dashboard ? DashboardLayout : DefaultLayout;\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: title,\n    scaffold: store === null || store === void 0 ? void 0 : store.scaffold\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    clear: (store === null || store === void 0 ? void 0 : store.scaffold) || dashboard\n  }, !(store !== null && store !== void 0 && store.scaffold) && !dashboard && /*#__PURE__*/React.createElement(SearchBar, null), dashboard && handle && /*#__PURE__*/React.createElement(HandleBar, {\n    title: title,\n    icon: handle.icon,\n    onCreate: handle.onCreate,\n    buttonCreateText: handle.buttonCreateText,\n    onChangeDisplayMethod: handle.onChangeDisplayMethod\n  }), /*#__PURE__*/React.createElement(ContentFilters, {\n    filterConfig: filterConfig\n  }), /*#__PURE__*/React.createElement(ContentContainer, {\n    limit: limit,\n    aside: aside,\n    render: render,\n    getType: getType,\n    getQuery: getQuery,\n    variables: variables,\n    emptyMessage: emptyMessage,\n    startOffset: startOffset,\n    onLink: onLink\n  })));\n};\n\n_c9 = ContentLayout;\nexport default ContentLayout;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ContentFilters$memo\");\n$RefreshReg$(_c4, \"ContentFilters\");\n$RefreshReg$(_c5, \"ContentCard$memo\");\n$RefreshReg$(_c6, \"ContentCard\");\n$RefreshReg$(_c7, \"ContentContainer$memo\");\n$RefreshReg$(_c8, \"ContentContainer\");\n$RefreshReg$(_c9, \"ContentLayout\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/layouts/content.js"],"names":["React","memo","useSelector","styled","css","Column","DashboardLayout","DefaultLayout","FilterBar","SearchBar","HandleBar","Card","List","INITIAL_DISPLAY_METHOD","Wrap","clear","Container","div","stretch","ContentFilters","filterConfig","visibleFilters","state","root","ContentCard","item","render","onLink","ContentContainer","limit","aside","getType","getQuery","variables","emptyMessage","startOffset","search","ContentLayout","title","store","handle","dashboard","Layout","scaffold","icon","onCreate","buttonCreateText","onChangeDisplayMethod"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport Column from '../atomic-ui/components/Column'\n\nimport DashboardLayout from './dashboard'\nimport DefaultLayout from '../layouts/default'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport HandleBar from '../components/HandleBar'\nimport { Card } from './dashboard/content'\nimport List from '../components/List'\n\nexport const INITIAL_DISPLAY_METHOD = 'grid'\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  ${({ clear }) =>\n    clear &&\n    css`\n      margin: 0;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  ${({ stretch }) =>\n    stretch &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ContentFilters = memo(({ filterConfig }) => {\n  const visibleFilters = useSelector((state) => state.root.visibleFilters)\n\n  return <FilterBar {...(filterConfig || {})} isOpen={visibleFilters} />\n})\n\nconst ContentCard = memo(({ item, render, onLink }) => (\n  <Card\n    item={item}\n    component={render(item)}\n    onLink={onLink && ((item) => onLink(item))}\n    withoutChecked\n  />\n))\n\nconst ContentContainer = memo(\n  ({ limit, aside, render, getType, getQuery, variables, emptyMessage, startOffset, onLink }) => {\n    const search = useSelector((state) => state.root.search)\n\n    return (\n      <Container stretch={(search && !aside) || !aside}>\n        <List\n          limit={limit}\n          type={getType}\n          query={getQuery}\n          variables={variables}\n          startOffset={startOffset}\n          emptyMessage={emptyMessage}\n          component={(item) => <ContentCard item={item} render={render} onLink={onLink} />}\n          initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n          onClick={onLink && ((item) => onLink(item))}\n        />\n        {aside}\n      </Container>\n    )\n  }\n)\n\nconst ContentLayout = ({\n  limit,\n  title,\n  aside,\n  store,\n  handle,\n  render,\n  getType,\n  getQuery,\n  dashboard,\n  variables,\n  filterConfig,\n  emptyMessage,\n  startOffset,\n  onLink\n}) => {\n  const Layout = dashboard ? DashboardLayout : DefaultLayout\n\n  return (\n    <Layout title={title} scaffold={store?.scaffold}>\n      <Wrap clear={store?.scaffold || dashboard}>\n        {!store?.scaffold && !dashboard && <SearchBar />}\n\n        {dashboard && handle && (\n          <HandleBar\n            title={title}\n            icon={handle.icon}\n            onCreate={handle.onCreate}\n            buttonCreateText={handle.buttonCreateText}\n            onChangeDisplayMethod={handle.onChangeDisplayMethod}\n          />\n        )}\n\n        <ContentFilters filterConfig={filterConfig} />\n\n        <ContentContainer\n          limit={limit}\n          aside={aside}\n          render={render}\n          getType={getType}\n          getQuery={getQuery}\n          variables={variables}\n          emptyMessage={emptyMessage}\n          startOffset={startOffset}\n          onLink={onLink}\n        />\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport default ContentLayout\n"]},"metadata":{},"sourceType":"module"}