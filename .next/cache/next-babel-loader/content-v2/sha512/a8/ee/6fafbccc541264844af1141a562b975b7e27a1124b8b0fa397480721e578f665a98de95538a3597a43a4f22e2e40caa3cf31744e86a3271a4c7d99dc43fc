{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Notice from '../../atomic-ui/components/Notice';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Notifications__Wrap\",\n  componentId: \"sc-1luuv3g-0\"\n})([\"\"]);\n_c = Wrap;\nexport const Notifications = ({\n  notifications,\n  appearance\n}) => /*#__PURE__*/React.createElement(Wrap, null, notifications && notifications.length > 0 ? notifications.map(notification => {\n  var _notification$author;\n\n  return /*#__PURE__*/React.createElement(Notice, _extends({\n    key: notification.id\n  }, notification.author ? {\n    img: (_notification$author = notification.author) === null || _notification$author === void 0 ? void 0 : _notification$author.avatar.path\n  } : {\n    icon: 'infoCircle'\n  }, {\n    title: notification.title,\n    message: notification.message,\n    date: notification.createdAt,\n    appearance: appearance\n  }));\n}) : /*#__PURE__*/React.createElement(Alert, {\n  style: {\n    textAlign: 'center'\n  },\n  width: '100%'\n}, \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442\"));\n_c2 = Notifications;\nNotifications.defaultProps = {\n  appearance: 'default'\n};\nexport default Notifications;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Notifications\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Notifications/index.js"],"names":["React","styled","Column","Alert","Notice","Wrap","Notifications","notifications","appearance","length","map","notification","id","author","img","avatar","path","icon","title","message","createdAt","textAlign","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGJ,MAAM,CAACC,MAAD,CAAT;AAAA;AAAA;AAAA,QAAV;KAAMG,I;AAEb,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,kBAC3B,oBAAC,IAAD,QACGD,aAAa,IAAIA,aAAa,CAACE,MAAd,GAAuB,CAAxC,GACCF,aAAa,CAACG,GAAd,CAAmBC,YAAD;AAAA;;AAAA,sBAChB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,YAAY,CAACC;AADpB,KAEOD,YAAY,CAACE,MAAb,GACD;AACEC,IAAAA,GAAG,0BAAEH,YAAY,CAACE,MAAf,yDAAE,qBAAqBE,MAArB,CAA4BC;AADnC,GADC,GAID;AACEC,IAAAA,IAAI,EAAE;AADR,GANN;AASE,IAAA,KAAK,EAAEN,YAAY,CAACO,KATtB;AAUE,IAAA,OAAO,EAAEP,YAAY,CAACQ,OAVxB;AAWE,IAAA,IAAI,EAAER,YAAY,CAACS,SAXrB;AAYE,IAAA,UAAU,EAAEZ;AAZd,KADgB;AAAA,CAAlB,CADD,gBAkBC,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAE;AAAEa,IAAAA,SAAS,EAAE;AAAb,GAAd;AAAuC,EAAA,KAAK,EAAE;AAA9C,2FAnBJ,CADK;MAAMf,a;AA2BbA,aAAa,CAACgB,YAAd,GAA6B;AAC3Bd,EAAAA,UAAU,EAAE;AADe,CAA7B;AAIA,eAAeF,aAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Notice from '../../atomic-ui/components/Notice'\n\nexport const Wrap = styled(Column)``\n\nexport const Notifications = ({ notifications, appearance }) => (\n  <Wrap>\n    {notifications && notifications.length > 0 ? (\n      notifications.map((notification) => (\n        <Notice\n          key={notification.id}\n          {...(notification.author\n            ? {\n                img: notification.author?.avatar.path\n              }\n            : {\n                icon: 'infoCircle'\n              })}\n          title={notification.title}\n          message={notification.message}\n          date={notification.createdAt}\n          appearance={appearance}\n        />\n      ))\n    ) : (\n      <Alert style={{ textAlign: 'center' }} width={'100%'}>\n        Уведомлений нет\n      </Alert>\n    )}\n  </Wrap>\n)\n\nNotifications.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Notifications\n"]},"metadata":{},"sourceType":"module"}