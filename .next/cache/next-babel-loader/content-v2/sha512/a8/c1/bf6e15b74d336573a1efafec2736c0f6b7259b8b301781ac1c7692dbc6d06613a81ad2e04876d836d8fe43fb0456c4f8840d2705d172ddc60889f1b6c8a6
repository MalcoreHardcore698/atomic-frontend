{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { v4 } from 'uuid';\nimport Avatar from '../../atomic-ui/components/Avatar';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Button from '../../atomic-ui/components/Button';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Popper, { Wrap as WrapPopper } from '../../atomic-ui/components/Popper';\nimport Badge from '../../atomic-ui/components/Badge';\nimport Menu from '../../atomic-ui/components/Menu';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"AppBar__Wrap\",\n  componentId: \"vyjcbk-0\"\n})([\"position:fixed;top:0;left:0;z-index:var(--z-13);display:grid;grid-template-columns:128px 1fr 80px;grid-gap:calc(var(--default-gap) + 25px);align-content:center;margin:0;padding:0 var(--main-offset-l);width:100%;height:72px;min-height:72px;background:var(--surface-background);border:var(--surface-border);box-shadow:var(--surface-shadow);@media only screen and (max-width:996px){padding:0 var(--main-offset-m);}@media only screen and (max-width:768px){display:flex;align-items:center;grid-gap:var(--default-gap);padding:0 var(--main-offset-s);}@media only screen and (max-width:480px){padding:0 var(--main-offset-xs);}\"]);\nexport const IconButton = styled(Button).withConfig({\n  displayName: \"AppBar__IconButton\",\n  componentId: \"vyjcbk-1\"\n})([\"position:relative;\"]);\nexport const MenuButton = styled(Button).withConfig({\n  displayName: \"AppBar__MenuButton\",\n  componentId: \"vyjcbk-2\"\n})([\"display:none;@media only screen and (max-width:768px){display:flex;}\"]);\nexport const HomeLinkContainer = styled.div.withConfig({\n  displayName: \"AppBar__HomeLinkContainer\",\n  componentId: \"vyjcbk-3\"\n})([\"position:relative;top:6px;\"]);\nexport const BrandLogo = styled.img.withConfig({\n  displayName: \"AppBar__BrandLogo\",\n  componentId: \"vyjcbk-4\"\n})([\"object-fit:contain;width:100%;height:100%;transform:scale(1.25);@media only screen and (max-width:786px){display:none;}\"]);\nexport const Navigation = styled.div.withConfig({\n  displayName: \"AppBar__Navigation\",\n  componentId: \"vyjcbk-5\"\n})([\"position:relative;display:flex;grid-gap:calc(var(--default-gap) + 15px);align-items:center;@media only screen and (max-width:768px){display:none;}\"]);\nexport const Counter = styled(Badge).withConfig({\n  displayName: \"AppBar__Counter\",\n  componentId: \"vyjcbk-6\"\n})([\"position:absolute;top:-5px;right:-8px;color:var(--default-color-accent);background:var(--default-color-accent-dim);border:none;&:hover{border:none;}\"]);\nexport const Label = styled.span.withConfig({\n  displayName: \"AppBar__Label\",\n  componentId: \"vyjcbk-7\"\n})([\"font-size:var(--font-size-m);font-weight:var(--font-weight-regular);\", \"\"], ({\n  link\n}) => link && css([\"display:inline-flex;border-radius:25rem;padding:5px 15px;background:transparent;color:black;cursor:pointer;transition:all 150ms ease;&:hover{opacity:0.65;}\", \"\"], ({\n  active\n}) => active && css([\"background:var(--default-color-accent-dim);color:var(--default-color-accent-link);&:hover{opacity:1;}\"])));\nexport const Actions = styled.div.withConfig({\n  displayName: \"AppBar__Actions\",\n  componentId: \"vyjcbk-8\"\n})([\"display:flex;grid-gap:var(--default-gap);align-items:center;justify-self:end;@media only screen and (max-width:768px){width:100%;justify-content:flex-end;\", \"{flex-grow:initial;}}\"], WrapPopper);\nexport const App = ({\n  user,\n  logotype,\n  links,\n  link: Link,\n  style,\n  className,\n  onMenu,\n  onHelp,\n  onChat,\n  onProfile,\n  onSettings,\n  onNotification,\n  onLogout,\n  onLogin\n}) => {\n  var _user$avatar;\n\n  const root = useSelector(state => state.root);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(MenuButton, {\n    appearance: 'clear',\n    kind: 'icon',\n    onClick: onMenu\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'menu'\n  })), logotype && /*#__PURE__*/React.createElement(HomeLinkContainer, null, /*#__PURE__*/React.createElement(Link, {\n    href: '/'\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    text: root.settings.meta.description,\n    offset: {\n      bottom: 10\n    },\n    place: 'bottom',\n    maxWidth: 256,\n    multiline: true\n  }, /*#__PURE__*/React.createElement(BrandLogo, {\n    src: logotype,\n    alt: 'Logotype'\n  })))), links && links.length > 0 && /*#__PURE__*/React.createElement(Navigation, null, links.map(link => link.props.sublinks ? /*#__PURE__*/React.createElement(Popper, {\n    key: v4(),\n    place: 'bottom',\n    width: '265px',\n    offset: {\n      top: 5,\n      right: 85\n    },\n    body: /*#__PURE__*/React.createElement(Menu, {\n      key: 'slinks',\n      listStyle: {\n        padding: 'var(--default-gap)'\n      },\n      links: link.props.sublinks.map(slink => ({\n        text: slink.label,\n        active: slink.props.active,\n        onClick: slink.props.onClick\n      }))\n    }),\n    appearance: 'clear'\n  }, /*#__PURE__*/React.createElement(Label, {\n    active: link.active,\n    link: true\n  }, link.label)) : /*#__PURE__*/React.createElement(Link, _extends({\n    key: v4()\n  }, link.props), /*#__PURE__*/React.createElement(Label, null, link.label)))), /*#__PURE__*/React.createElement(Actions, null, user ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    type: 'button',\n    kind: 'icon',\n    size: 'xs',\n    onClick: onNotification\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: 'xs',\n    icon: 'notification',\n    stroke: 'white'\n  }), user.countOfNewNotifications && /*#__PURE__*/React.createElement(Counter, {\n    count: user.countOfNewNotifications,\n    appearance: 'outlined'\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    type: 'button',\n    kind: 'icon',\n    size: 'xs',\n    onClick: onChat\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: 'xs',\n    icon: 'chat',\n    stroke: 'white'\n  }), user.countOfNewMessages && /*#__PURE__*/React.createElement(Counter, {\n    count: user.countOfNewMessages,\n    appearance: 'outlined'\n  })), /*#__PURE__*/React.createElement(Popper, {\n    place: 'bottom',\n    width: '265px',\n    offset: {\n      top: 5,\n      left: 100\n    },\n    body: /*#__PURE__*/React.createElement(Menu, {\n      key: 'menu',\n      header: {\n        title: 'Аккаунт',\n        link: {\n          text: 'Управление',\n          onClick: onSettings\n        }\n      },\n      links: [{\n        text: 'Личный кабинет',\n        onClick: onProfile\n      }, {\n        text: 'Настройки профиля',\n        onClick: onSettings\n      }, {\n        text: 'Получить помощь',\n        onClick: onHelp\n      }, {\n        text: 'Выход',\n        onClick: onLogout\n      }]\n    }),\n    appearance: 'clear'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    appearance: 'clear'\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: ((_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) || '/images/avatar-default.png',\n    alt: 'Avatar'\n  })))) : /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    onClick: onLogin\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n};\nApp.defaultProps = {\n  link: ({\n    children,\n    ...props\n  }) => /*#__PURE__*/React.createElement(\"a\", _extends({}, props, {\n    href: '/#'\n  }), children)\n};\nexport default App;","map":null,"metadata":{},"sourceType":"module"}