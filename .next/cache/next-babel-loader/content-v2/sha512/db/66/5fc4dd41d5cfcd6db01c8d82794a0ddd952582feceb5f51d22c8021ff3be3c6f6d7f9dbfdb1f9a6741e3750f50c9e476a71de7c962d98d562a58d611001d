{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { b64EncodeUnicode, getLabelRole } from '../../atomic-ui/utils/functions';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Members__Wrap\",\n  componentId: \"sc-2k8qnt-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Members = ({\n  user,\n  style,\n  appearance,\n  className,\n  onMemberLink\n}) => {\n  const router = useRouter();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user\n    }\n  });\n\n  const handleUserClick = async email => {\n    await router.push({\n      pathname: router.pathname,\n      query: {\n        user: b64EncodeUnicode(email)\n      }\n    }, undefined, {\n      shallow: true\n    });\n    if (onMemberLink) onMemberLink(email);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    percentage: 'minmax(320px, 1fr)'\n  }, data.getUserMembers.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: getLabelRole(member.about),\n      text: member.name,\n      onLink: () => handleUserClick(member.email),\n      stretch: true\n    });\n  }))) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\\u0445\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nMembers.defaultProps = {\n  appearance: 'default'\n};\nexport default Members;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Members/index.js"],"names":["React","useRouter","styled","css","useQuery","Column","Grid","Difinition","Alert","Spinner","b64EncodeUnicode","getLabelRole","Loader","queries","Wrap","appearance","Members","user","style","className","onMemberLink","router","data","loading","error","GET_USER_MEMBERS","variables","email","handleUserClick","push","pathname","query","undefined","shallow","getUserMembers","map","member","avatar","path","about","name","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport { b64EncodeUnicode, getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Members = ({ user, style, appearance, className, onMemberLink }) => {\n  const router = useRouter()\n  const { data, loading, error } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user\n    }\n  })\n\n  const handleUserClick = async (email) => {\n    await router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          user: b64EncodeUnicode(email)\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n    if (onMemberLink) onMemberLink(email)\n  }\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && data ? (\n        <React.Fragment>\n          <Grid percentage={'minmax(320px, 1fr)'}>\n            {data.getUserMembers.map((member) => (\n              <Difinition\n                key={member.email}\n                img={member.avatar?.path || '/images/avatar-default.png'}\n                label={getLabelRole(member.about)}\n                text={member.name}\n                onLink={() => handleUserClick(member.email)}\n                stretch\n              />\n            ))}\n          </Grid>\n        </React.Fragment>\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о участниках\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nMembers.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Members\n"]},"metadata":{},"sourceType":"module"}