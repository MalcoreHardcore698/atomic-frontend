{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useMemo } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 } from 'uuid';\nimport Image from '../atomic-ui/components/Image';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { useMutate } from '../hooks/useMutate';\nimport { useHelper } from '../hooks/useHelper';\nimport MainLayout from './main';\nimport Scaffold from '../components/Scaffold';\nimport AppBar from '../components/AppBar';\nimport Footer from '../components/Footer';\nimport { Loader, FixedLoader } from '../components/Styled';\nimport { setLogout } from '../store/actions/user';\nimport { setDrawer } from '../store/actions/drawer';\nimport { onMenu, onHelp, onNotification, onChat } from '../store/helpers';\nimport { onUserClientEdit } from '../store/helpers/user';\nimport queries from '../graphql/queries';\nimport { supportLinks, socials, contacts } from '../__mock__';\nconst Wrap = styled.div.withConfig({\n  displayName: \"default__Wrap\",\n  componentId: \"sc-2byuzg-0\"\n})([\"position:relative;top:-20px;display:flex;flex-direction:column;justify-content:space-between;height:100vh;z-index:2;\"]);\nconst Background = styled(Image).withConfig({\n  displayName: \"default__Background\",\n  componentId: \"sc-2byuzg-1\"\n})([\"position:absolute;top:0;left:0;width:100%;height:auto;object-fit:contain;z-index:1;\"]);\nconst Main = styled.main.withConfig({\n  displayName: \"default__Main\",\n  componentId: \"sc-2byuzg-2\"\n})([\"padding:50px var(--main-offset-l);flex-grow:100;@media only screen and (max-width:996px){padding:25px var(--main-offset-m);}@media only screen and (max-width:768px){padding:25px var(--main-offset-s);}@media only screen and (max-width:480px){padding:25px var(--main-offset-xs);}\"]);\nconst Anchor = styled.a.withConfig({\n  displayName: \"default__Anchor\",\n  componentId: \"sc-2byuzg-3\"\n})([\"border-radius:25rem;padding:5px 15px;background:transparent;color:black;transition:all 150ms ease;\", \" \", \"\"], ({\n  link\n}) => link && css([\"&:hover{opacity:0.65;}\"]), ({\n  active,\n  link\n}) => active && link && css([\"background:var(--default-color-accent-dim);color:var(--default-color-accent-link);&:hover{opacity:1;}\"]));\nexport const DefaultLayout = ({\n  children,\n  title = 'Атомик',\n  loading,\n  scaffold,\n  background\n}) => {\n  var _root$settings$genera;\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const router = useRouter();\n  const {\n    data: dataCategories,\n    loading: loadingCategories\n  } = useQuery(queries.GET_CATEGORIES);\n  const {\n    root,\n    user\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const categories = useMemo(() => (dataCategories === null || dataCategories === void 0 ? void 0 : dataCategories.getCategories) || [], [dataCategories]);\n  const isProjects = router.pathname.includes('projects');\n  const categoryId = router.query.category;\n\n  if (loadingCategories) {\n    return /*#__PURE__*/React.createElement(FixedLoader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(MainLayout, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"next,javascript,nextjs,react\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"atomic project description\"\n  }), /*#__PURE__*/React.createElement(\"title\", null, title)), /*#__PURE__*/React.createElement(Background, {\n    src: background,\n    alt: 'Background'\n  }), /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(AppBar, {\n    user: user.authenticated ? user : null,\n    logotype: (_root$settings$genera = root.settings.general.logotype) === null || _root$settings$genera === void 0 ? void 0 : _root$settings$genera.path,\n    link: ({\n      children,\n      href,\n      ...props\n    }) => /*#__PURE__*/React.createElement(Link, _extends({}, props, {\n      href: href\n    }), /*#__PURE__*/React.createElement(Anchor, {\n      active: router.pathname === href,\n      link: children.type.target === 'span'\n    }, children)),\n    links: [{\n      label: 'Проекты',\n      props: {\n        sublinks: categories.filter(category => category.type === 'DIVISION').map(category => ({\n          label: category.name,\n          props: {\n            active: categoryId === category.id,\n            onClick: () => router.push(`/projects?c=${category.id}`)\n          }\n        }))\n      },\n      active: isProjects\n    }, {\n      label: 'Авторы',\n      props: {\n        href: '/creators'\n      }\n    }, {\n      label: 'Новости',\n      props: {\n        href: '/articles'\n      }\n    }, {\n      label: 'О ресурсе',\n      props: {\n        href: '/about'\n      }\n    }],\n    onMenu: recall(onMenu, {\n      links: [{\n        text: 'Проекты',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/projects');\n        }\n      }, {\n        text: 'Авторы',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/creators');\n        }\n      }, {\n        text: 'Новости',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/articles');\n        }\n      }, {\n        text: 'О ресурсе',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/about');\n        }\n      }]\n    }),\n    onHelp: recall(onHelp, {\n      mutation: queries.CREATE_USER_TICKET\n    }),\n    onChat: recall(onChat, {\n      sender: user,\n      queries: {\n        userChats: queries.GET_USER_CHATS,\n        chat: queries.GET_CHAT\n      },\n      mutations: {\n        addUserChat: queries.ADD_USER_CHAT,\n        sendMessage: queries.SEND_MESSAGE\n      }\n    }),\n    onSettings: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      mutations: {\n        update: queries.UPDATE_CLIENT_USER,\n        del: queries.DELETE_USER,\n        changePassword: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onNotification: recall(onNotification, {\n      notifications: user.notifications\n    }),\n    onProfile: () => router.push('/profile'),\n    onLogin: () => router.push('/auth'),\n    onLogout: mutate(queries.LOGOUT, {}, () => dispatch(setLogout()))\n  }), scaffold && /*#__PURE__*/React.createElement(Scaffold, _extends({\n    user: user\n  }, scaffold)), /*#__PURE__*/React.createElement(Main, {\n    id: 'main'\n  }, loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : children), /*#__PURE__*/React.createElement(Footer, {\n    contacts: contacts,\n    socials: socials,\n    catalog: {\n      title: 'Каталог',\n      links: categories.filter(category => category.type === 'DIVISION').map(link => /*#__PURE__*/React.createElement(Link, {\n        key: v4(),\n        href: `/projects?category=${link.id}`\n      }, /*#__PURE__*/React.createElement(\"a\", null, link.name)))\n    },\n    support: {\n      title: 'О компании',\n      links: supportLinks.map(link => /*#__PURE__*/React.createElement(Link, {\n        key: v4(),\n        href: link.path\n      }, /*#__PURE__*/React.createElement(\"a\", null, link.label)))\n    }\n  })));\n};\nexport default DefaultLayout;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/layouts/default.js"],"names":["React","useMemo","Head","Link","useRouter","styled","css","useQuery","useSelector","useDispatch","v4","Image","Spinner","useMutate","useHelper","MainLayout","Scaffold","AppBar","Footer","Loader","FixedLoader","setLogout","setDrawer","onMenu","onHelp","onNotification","onChat","onUserClientEdit","queries","supportLinks","socials","contacts","Wrap","div","Background","Main","main","Anchor","a","link","active","DefaultLayout","children","title","loading","scaffold","background","recall","mutate","router","data","dataCategories","loadingCategories","GET_CATEGORIES","root","user","state","dispatch","categories","getCategories","isProjects","pathname","includes","categoryId","query","category","authenticated","settings","general","logotype","path","href","props","type","target","label","sublinks","filter","map","name","id","onClick","push","links","text","mutation","CREATE_USER_TICKET","sender","userChats","GET_USER_CHATS","chat","GET_CHAT","mutations","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","email","update","UPDATE_CLIENT_USER","del","DELETE_USER","changePassword","notifications","LOGOUT"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport Image from '../atomic-ui/components/Image'\nimport Spinner from '../atomic-ui/components/Spinner'\n\nimport { useMutate } from '../hooks/useMutate'\nimport { useHelper } from '../hooks/useHelper'\nimport MainLayout from './main'\nimport Scaffold from '../components/Scaffold'\nimport AppBar from '../components/AppBar'\nimport Footer from '../components/Footer'\nimport { Loader, FixedLoader } from '../components/Styled'\nimport { setLogout } from '../store/actions/user'\nimport { setDrawer } from '../store/actions/drawer'\nimport { onMenu, onHelp, onNotification, onChat } from '../store/helpers'\nimport { onUserClientEdit } from '../store/helpers/user'\nimport queries from '../graphql/queries'\nimport { supportLinks, socials, contacts } from '../__mock__'\n\nconst Wrap = styled.div`\n  position: relative;\n  top: -20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n  z-index: 2;\n`\n\nconst Background = styled(Image)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: auto;\n  object-fit: contain;\n  z-index: 1;\n`\n\nconst Main = styled.main`\n  padding: 50px var(--main-offset-l);\n  flex-grow: 100;\n\n  @media only screen and (max-width: 996px) {\n    padding: 25px var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 25px var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 25px var(--main-offset-xs);\n  }\n`\n\nconst Anchor = styled.a`\n  border-radius: 25rem;\n  padding: 5px 15px;\n  background: transparent;\n  color: black;\n  transition: all 150ms ease;\n\n  ${({ link }) =>\n    link &&\n    css`\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n\n  ${({ active, link }) =>\n    active &&\n    link &&\n    css`\n      background: var(--default-color-accent-dim);\n      color: var(--default-color-accent-link);\n\n      &:hover {\n        opacity: 1;\n      }\n    `}\n`\n\nexport const DefaultLayout = ({ children, title = 'Атомик', loading, scaffold, background }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const router = useRouter()\n  const { data: dataCategories, loading: loadingCategories } = useQuery(queries.GET_CATEGORIES)\n  const { root, user } = useSelector((state) => state)\n  const dispatch = useDispatch()\n  const categories = useMemo(() => dataCategories?.getCategories || [], [dataCategories])\n\n  const isProjects = router.pathname.includes('projects')\n  const categoryId = router.query.category\n\n  if (loadingCategories) {\n    return (\n      <FixedLoader>\n        <Spinner />\n      </FixedLoader>\n    )\n  }\n\n  return (\n    <MainLayout>\n      <Head>\n        <meta name=\"keywords\" content=\"next,javascript,nextjs,react\" />\n        <meta name=\"description\" content=\"atomic project description\" />\n        <title>{title}</title>\n      </Head>\n\n      <Background src={background} alt={'Background'} />\n\n      <Wrap>\n        <AppBar\n          user={user.authenticated ? user : null}\n          logotype={root.settings.general.logotype?.path}\n          link={({ children, href, ...props }) => (\n            <Link {...props} href={href}>\n              <Anchor active={router.pathname === href} link={children.type.target === 'span'}>\n                {children}\n              </Anchor>\n            </Link>\n          )}\n          links={[\n            {\n              label: 'Проекты',\n              props: {\n                sublinks: categories\n                  .filter((category) => category.type === 'DIVISION')\n                  .map((category) => ({\n                    label: category.name,\n                    props: {\n                      active: categoryId === category.id,\n                      onClick: () => router.push(`/projects?c=${category.id}`)\n                    }\n                  }))\n              },\n              active: isProjects\n            },\n            { label: 'Авторы', props: { href: '/creators' } },\n            { label: 'Новости', props: { href: '/articles' } },\n            { label: 'О ресурсе', props: { href: '/about' } }\n          ]}\n          onMenu={recall(onMenu, {\n            links: [\n              {\n                text: 'Проекты',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/projects')\n                }\n              },\n              {\n                text: 'Авторы',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/creators')\n                }\n              },\n              {\n                text: 'Новости',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/articles')\n                }\n              },\n              {\n                text: 'О ресурсе',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/about')\n                }\n              }\n            ]\n          })}\n          onHelp={recall(onHelp, {\n            mutation: queries.CREATE_USER_TICKET\n          })}\n          onChat={recall(onChat, {\n            sender: user,\n            queries: {\n              userChats: queries.GET_USER_CHATS,\n              chat: queries.GET_CHAT\n            },\n            mutations: {\n              addUserChat: queries.ADD_USER_CHAT,\n              sendMessage: queries.SEND_MESSAGE\n            }\n          })}\n          onSettings={recall(onUserClientEdit, {\n            user: user?.email,\n            mutations: {\n              update: queries.UPDATE_CLIENT_USER,\n              del: queries.DELETE_USER,\n              changePassword: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onNotification={recall(onNotification, { notifications: user.notifications })}\n          onProfile={() => router.push('/profile')}\n          onLogin={() => router.push('/auth')}\n          onLogout={mutate(queries.LOGOUT, {}, () => dispatch(setLogout()))}\n        />\n\n        {scaffold && <Scaffold user={user} {...scaffold} />}\n\n        <Main id={'main'}>\n          {loading ? (\n            <Loader>\n              <Spinner />\n            </Loader>\n          ) : (\n            children\n          )}\n        </Main>\n\n        <Footer\n          contacts={contacts}\n          socials={socials}\n          catalog={{\n            title: 'Каталог',\n            links: categories\n              .filter((category) => category.type === 'DIVISION')\n              .map((link) => (\n                <Link key={v4()} href={`/projects?category=${link.id}`}>\n                  <a>{link.name}</a>\n                </Link>\n              ))\n          }}\n          support={{\n            title: 'О компании',\n            links: supportLinks.map((link) => (\n              <Link key={v4()} href={link.path}>\n                <a>{link.label}</a>\n              </Link>\n            ))\n          }}\n        />\n      </Wrap>\n    </MainLayout>\n  )\n}\n\nexport default DefaultLayout\n"]},"metadata":{},"sourceType":"module"}