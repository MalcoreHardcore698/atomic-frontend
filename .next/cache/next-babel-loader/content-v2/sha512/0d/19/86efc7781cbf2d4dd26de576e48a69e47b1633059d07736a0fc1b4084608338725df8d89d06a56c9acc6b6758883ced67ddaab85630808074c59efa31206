{"ast":null,"code":"import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport DefaultLayout from '../layouts/default';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { onUserResetPassword } from '../store/helpers/user';\nimport { setStepper } from '../store/actions/stepper';\nimport { useHelper } from '../hooks/useHelper';\nimport queries from '../graphql/queries';\nconst TITLE = 'Сброс пароля';\nconst Wrap = styled.div.withConfig({\n  displayName: \"reset-password__Wrap\",\n  componentId: \"x81915-0\"\n})([\"display:grid;grid-template-columns:380px;justify-content:center;align-content:center;margin:120px 0;@media only screen and (max-width:480px){grid-template-columns:100%;margin:25px 0;}\"]);\nconst Loader = styled.div.withConfig({\n  displayName: \"reset-password__Loader\",\n  componentId: \"x81915-1\"\n})([\"position:fixed;top:0;left:0;display:flex;justify-content:center;align-items:center;width:100%;height:100%;\"]);\nexport const Support = () => {\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    user,\n    stepper\n  } = useSelector(state => ({\n    user: state.user,\n    stepper: state.stepper\n  }));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!(stepper !== null && stepper !== void 0 && stepper.content)) {\n      recall(onUserResetPassword, {\n        withoutBack: true,\n        mutations: {\n          forgotPassword: queries.RESET,\n          checkResetToken: queries.CHECK_RESET_TOKEN\n        }\n      })();\n    }\n  }, [stepper]);\n  useEffect(() => {\n    if (stepper && user && !user.authenticated) {\n      router.push({\n        pathname: '/auth',\n        query: router.query\n      });\n    }\n  }, [user, stepper]);\n  useEffect(() => {\n    return () => dispatch(setStepper(null));\n  }, [dispatch, setStepper]);\n\n  if (!stepper) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    key: stepper.name\n  }, stepper.content));\n};\nexport default Support;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/reset-password.js"],"names":["React","useEffect","styled","useSelector","useDispatch","useRouter","DefaultLayout","Spinner","onUserResetPassword","setStepper","useHelper","queries","TITLE","Wrap","div","Loader","Support","recall","router","user","stepper","state","dispatch","content","withoutBack","mutations","forgotPassword","RESET","checkResetToken","CHECK_RESET_TOKEN","authenticated","push","pathname","query","name"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,cAAd;AAEA,MAAMC,IAAI,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,+LAAV;AAaA,MAAMC,MAAM,GAAGb,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,kHAAZ;AAaA,OAAO,MAAME,OAAO,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,MAAM,GAAGb,SAAS,EAAxB;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBjB,WAAW,CAAEkB,KAAD,KAAY;AAChDF,IAAAA,IAAI,EAAEE,KAAK,CAACF,IADoC;AAEhDC,IAAAA,OAAO,EAAEC,KAAK,CAACD;AAFiC,GAAZ,CAAD,CAArC;AAIA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAACmB,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEG,OAAV,CAAJ,EAAuB;AACrBN,MAAAA,MAAM,CAACT,mBAAD,EAAsB;AAC1BgB,QAAAA,WAAW,EAAE,IADa;AAE1BC,QAAAA,SAAS,EAAE;AACTC,UAAAA,cAAc,EAAEf,OAAO,CAACgB,KADf;AAETC,UAAAA,eAAe,EAAEjB,OAAO,CAACkB;AAFhB;AAFe,OAAtB,CAAN;AAOD;AACF,GAVQ,EAUN,CAACT,OAAD,CAVM,CAAT;AAYAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,OAAO,IAAID,IAAX,IAAmB,CAACA,IAAI,CAACW,aAA7B,EAA4C;AAC1CZ,MAAAA,MAAM,CAACa,IAAP,CAAY;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAEf,MAAM,CAACe;AAAnC,OAAZ;AACD;AACF,GAJQ,EAIN,CAACd,IAAD,EAAOC,OAAP,CAJM,CAAT;AAMAnB,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAMqB,QAAQ,CAACb,UAAU,CAAC,IAAD,CAAX,CAArB;AACD,GAFQ,EAEN,CAACa,QAAD,EAAWb,UAAX,CAFM,CAAT;;AAIA,MAAI,CAACW,OAAL,EAAc;AACZ,wBACE,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CADF;AAKD;;AAED,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAER;AAAtB,kBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEQ,OAAO,CAACc;AAAnB,KAA0Bd,OAAO,CAACG,OAAlC,CADF,CADF;AAKD,CA5CM;AA8CP,eAAeP,OAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouter } from 'next/router'\n\nimport DefaultLayout from '../layouts/default'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport { onUserResetPassword } from '../store/helpers/user'\nimport { setStepper } from '../store/actions/stepper'\nimport { useHelper } from '../hooks/useHelper'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Сброс пароля'\n\nconst Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 380px;\n  justify-content: center;\n  align-content: center;\n  margin: 120px 0;\n\n  @media only screen and (max-width: 480px) {\n    grid-template-columns: 100%;\n    margin: 25px 0;\n  }\n`\n\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n`\n\nexport const Support = () => {\n  const recall = useHelper()\n  const router = useRouter()\n  const { user, stepper } = useSelector((state) => ({\n    user: state.user,\n    stepper: state.stepper\n  }))\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!stepper?.content) {\n      recall(onUserResetPassword, {\n        withoutBack: true,\n        mutations: {\n          forgotPassword: queries.RESET,\n          checkResetToken: queries.CHECK_RESET_TOKEN\n        }\n      })()\n    }\n  }, [stepper])\n\n  useEffect(() => {\n    if (stepper && user && !user.authenticated) {\n      router.push({ pathname: '/auth', query: router.query })\n    }\n  }, [user, stepper])\n\n  useEffect(() => {\n    return () => dispatch(setStepper(null))\n  }, [dispatch, setStepper])\n\n  if (!stepper) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={TITLE}>\n      <Wrap key={stepper.name}>{stepper.content}</Wrap>\n    </DefaultLayout>\n  )\n}\n\nexport default Support\n"]},"metadata":{},"sourceType":"module"}