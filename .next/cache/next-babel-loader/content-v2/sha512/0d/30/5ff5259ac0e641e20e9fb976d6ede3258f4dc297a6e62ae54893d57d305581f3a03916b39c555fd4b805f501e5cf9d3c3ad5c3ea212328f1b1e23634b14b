{"ast":null,"code":"import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport GlobalSearch from '../../atomic-ui/components/GlobalSearch';\nimport { Card } from '../../layouts/dashboard/content';\nimport { setModal } from '../../store/actions/modal';\nexport const Query = memo(({\n  data,\n  loading,\n  search,\n  entity,\n  entities,\n  onChange,\n  onSubmit\n}) => {\n  const dispatch = useDispatch();\n\n  const hideModal = () => dispatch(setModal(null));\n\n  return /*#__PURE__*/React.createElement(GlobalSearch, {\n    search: search,\n    loading: loading,\n    initialEntity: entity,\n    result: search && data && entity && data[entity === null || entity === void 0 ? void 0 : entity.value],\n    entities: (entities || []).map(elem => ({ ...elem,\n      render: item => /*#__PURE__*/React.createElement(Card, {\n        key: item.id || item.email,\n        item: item,\n        appearance: 'clear',\n        component: elem.render(item),\n        onLink: hideModal,\n        onEdit: hideModal,\n        onDelete: hideModal,\n        withoutChecked: true\n      })\n    })),\n    onSubmit: onSubmit,\n    onChange: onChange\n  });\n});\nexport const QuerySearch = memo(({\n  search,\n  entity,\n  entities,\n  setSearch,\n  onHide,\n  onChange\n}) => {\n  const initialResult = [null, {\n    data: null,\n    loading: false,\n    refetch: null\n  }];\n  const [load, {\n    data,\n    loading,\n    refetch\n  }] = entity ? useLazyQuery(entity.query) : initialResult;\n\n  const onSubmit = value => {\n    const variables = {\n      search: value\n    };\n    if (setSearch) setSearch(value);\n\n    if (value) {\n      if (refetch) {\n        refetch(variables);\n      }\n\n      if (load) {\n        load({\n          variables\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Query, {\n    data: data,\n    entity: entity,\n    search: search,\n    loading: loading,\n    entities: entities,\n    onHide: onHide,\n    onChange: onChange,\n    onSubmit: onSubmit\n  });\n});\nexport default QuerySearch;","map":null,"metadata":{},"sourceType":"module"}