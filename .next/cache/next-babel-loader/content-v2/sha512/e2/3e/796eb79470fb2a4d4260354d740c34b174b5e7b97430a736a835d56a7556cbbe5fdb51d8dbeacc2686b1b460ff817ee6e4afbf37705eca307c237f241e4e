{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport DateText from '../../atomic-ui/components/DateText';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Column from '../../atomic-ui/components/Column';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Alert from '../../atomic-ui/components/Alert';\nimport { Loader } from '../Styled';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"TicketChat__Wrap\",\n  componentId: \"sc-3e5jur-0\"\n})([\"width:100%;flex-grow:1;\"]);\nexport var Header = styled(Row).withConfig({\n  displayName: \"TicketChat__Header\",\n  componentId: \"sc-3e5jur-1\"\n})([\"justify-content:space-between;width:100%;\"]);\nexport var Messages = styled(Column).withConfig({\n  displayName: \"TicketChat__Messages\",\n  componentId: \"sc-3e5jur-2\"\n})([\"position:relative;background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);padding-top:55px;flex-grow:1;\"]);\nexport var Meta = styled(Row).withConfig({\n  displayName: \"TicketChat__Meta\",\n  componentId: \"sc-3e5jur-3\"\n})([\"position:absolute;top:0;left:0;width:100%;justify-content:space-between;padding:8px var(--default-gap);border-radius:var(--surface-border-radius) var(--surface-border-radius) 0 0;background:var(--ghost-color-background);time{font-size:var(--font-size-m);font-weight:var(--font-weight-regular);color:var(--default-color-text);}\"]);\nexport var AuthAlert = styled(Alert).withConfig({\n  displayName: \"TicketChat__AuthAlert\",\n  componentId: \"sc-3e5jur-4\"\n})([\"width:100%;text-align:center;\"]);\nexport var Empty = styled(Text).withConfig({\n  displayName: \"TicketChat__Empty\",\n  componentId: \"sc-3e5jur-5\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;flex-grow:1;\"]);\nexport var TicketChat = function TicketChat(_ref) {\n  var _ticket$counsellor, _ticket$author, _ticket$messages, _ticket$counsellor3, _ticket$counsellor4;\n\n  var auth = _ref.auth,\n      ticket = _ref.ticket,\n      loading = _ref.loading,\n      _onLink = _ref.onLink,\n      onFinish = _ref.onFinish,\n      onAttach = _ref.onAttach,\n      onSubmit = _ref.onSubmit,\n      props = _objectWithoutProperties(_ref, [\"auth\", \"ticket\", \"loading\", \"onLink\", \"onFinish\", \"onAttach\", \"onSubmit\"]);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var messageRef = useRef(null);\n  var isAccess = (ticket === null || ticket === void 0 ? void 0 : (_ticket$counsellor = ticket.counsellor) === null || _ticket$counsellor === void 0 ? void 0 : _ticket$counsellor.email) === auth;\n  return /*#__PURE__*/React.createElement(Wrap, props, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n    label: 'Автор обращения',\n    text: ticket !== null && ticket !== void 0 && (_ticket$author = ticket.author) !== null && _ticket$author !== void 0 && _ticket$author.name && !loading ? ticket.author.name : '-'\n  }), /*#__PURE__*/React.createElement(Row, null, (ticket === null || ticket === void 0 ? void 0 : ticket.status) !== 'CLOSED' && /*#__PURE__*/React.createElement(Button, {\n    onClick: onFinish,\n    disabled: !isAccess || loading || !ticket\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\"))), /*#__PURE__*/React.createElement(Messages, null, /*#__PURE__*/React.createElement(Meta, null, /*#__PURE__*/React.createElement(Text, null, \"\\u0422\\u0435\\u043C\\u0430: \", ticket !== null && ticket !== void 0 && ticket.title && !loading ? ticket.title : '-'), ticket !== null && ticket !== void 0 && ticket.createdAt && !loading ? /*#__PURE__*/React.createElement(DateText, {\n    text: ticket.createdAt,\n    options: {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }\n  }) : /*#__PURE__*/React.createElement(Text, null, \"-\")), !loading && (ticket === null || ticket === void 0 ? void 0 : (_ticket$messages = ticket.messages) === null || _ticket$messages === void 0 ? void 0 : _ticket$messages.length) > 0 ? ((ticket === null || ticket === void 0 ? void 0 : ticket.messages) || []).map(function (message) {\n    var _message$user, _message$user$avatar, _message$user2, _ticket$counsellor2, _message$user3;\n\n    return /*#__PURE__*/React.createElement(Message, {\n      key: message.id,\n      avatar: (_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$avatar = _message$user.avatar) === null || _message$user$avatar === void 0 ? void 0 : _message$user$avatar.path,\n      side: ((_message$user2 = message.user) === null || _message$user2 === void 0 ? void 0 : _message$user2.email) === ((_ticket$counsellor2 = ticket.counsellor) === null || _ticket$counsellor2 === void 0 ? void 0 : _ticket$counsellor2.email) ? 'owner' : 'observer',\n      name: (_message$user3 = message.user) === null || _message$user3 === void 0 ? void 0 : _message$user3.name,\n      text: message.text,\n      time: message.createdAt !== message.updatedAt ? message.updatedAt : message.createdAt,\n      tails: {\n        default: '/parts/tail.svg',\n        owner: '/parts/tail-owner.svg'\n      },\n      onLink: function onLink() {\n        return _onLink(message.user);\n      }\n    });\n  }) : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : !ticket ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\")), isAccess ? /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !ticket,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    ref: messageRef,\n    placeholder: 'Отправьте сообщенение...',\n    disabled: loading || !ticket,\n    appearance: 'ghost',\n    onChange: function onChange(e) {\n      var _e$target;\n\n      return setMessage((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '');\n    },\n    onKeyDown: function onKeyDown(e) {\n      // Pressed ENTER\n      if (e.keyCode === 13) {\n        onSubmit(message);\n        messageRef.current.value = '';\n      }\n    },\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !ticket,\n    onClick: function onClick() {\n      onSubmit(message);\n      messageRef.current.value = '';\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))) : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(AuthAlert, null, \"\\u0414\\u043B\\u044F \\u043E\\u0442\\u0432\\u0435\\u0442\\u0430 \\u043D\\u0430 \\u044D\\u0442\\u043E \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435, \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0443\\u0439\\u0442\\u0435\\u0441\\u044C \\u043F\\u043E\\u0434 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u043C \", ticket === null || ticket === void 0 ? void 0 : (_ticket$counsellor3 = ticket.counsellor) === null || _ticket$counsellor3 === void 0 ? void 0 : _ticket$counsellor3.name, \" (\", ticket === null || ticket === void 0 ? void 0 : (_ticket$counsellor4 = ticket.counsellor) === null || _ticket$counsellor4 === void 0 ? void 0 : _ticket$counsellor4.email, \")\"));\n};\nexport default TicketChat;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketChat/index.js"],"names":["React","useState","useRef","styled","Row","Difinition","Button","Icon","Text","DateText","Message","Input","Column","Spinner","Alert","Loader","Wrap","Header","Messages","Meta","AuthAlert","Empty","TicketChat","auth","ticket","loading","onLink","onFinish","onAttach","onSubmit","props","message","setMessage","messageRef","isAccess","counsellor","email","author","name","status","title","createdAt","day","month","year","messages","length","map","id","user","avatar","path","text","updatedAt","default","owner","width","textAlign","e","target","value","keyCode","current"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport DateText from '../../atomic-ui/components/DateText'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport Column from '../../atomic-ui/components/Column'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Alert from '../../atomic-ui/components/Alert'\n\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n  flex-grow: 1;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const Messages = styled(Column)`\n  position: relative;\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  padding-top: 55px;\n  flex-grow: 1;\n`\n\nexport const Meta = styled(Row)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  justify-content: space-between;\n  padding: 8px var(--default-gap);\n  border-radius: var(--surface-border-radius) var(--surface-border-radius) 0 0;\n  background: var(--ghost-color-background);\n\n  time {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-regular);\n    color: var(--default-color-text);\n  }\n`\n\nexport const AuthAlert = styled(Alert)`\n  width: 100%;\n  text-align: center;\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n`\n\nexport const TicketChat = ({\n  auth,\n  ticket,\n  loading,\n  onLink,\n  onFinish,\n  // onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [message, setMessage] = useState('')\n  const messageRef = useRef(null)\n  const isAccess = ticket?.counsellor?.email === auth\n\n  return (\n    <Wrap {...props}>\n      <Header>\n        <Difinition\n          label={'Автор обращения'}\n          text={ticket?.author?.name && !loading ? ticket.author.name : '-'}\n        />\n\n        <Row>\n          {ticket?.status !== 'CLOSED' && (\n            <Button onClick={onFinish} disabled={!isAccess || loading || !ticket}>\n              Закрыть обращение\n            </Button>\n          )}\n          {/*<Button*/}\n          {/*  onClick={onReport}*/}\n          {/*  kind={'icon'}*/}\n          {/*  appearance={'red'}*/}\n          {/*  disabled={!isAccess || loading || !ticket}>*/}\n          {/*  <Icon icon={'flag'} stroke={'white'} />*/}\n          {/*</Button>*/}\n        </Row>\n      </Header>\n\n      <Messages>\n        <Meta>\n          <Text>Тема: {ticket?.title && !loading ? ticket.title : '-'}</Text>\n          {ticket?.createdAt && !loading ? (\n            <DateText\n              text={ticket.createdAt}\n              options={{\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric'\n              }}\n            />\n          ) : (\n            <Text>-</Text>\n          )}\n        </Meta>\n\n        {!loading && ticket?.messages?.length > 0 ? (\n          (ticket?.messages || []).map((message) => (\n            <Message\n              key={message.id}\n              avatar={message.user?.avatar?.path}\n              side={message.user?.email === ticket.counsellor?.email ? 'owner' : 'observer'}\n              name={message.user?.name}\n              text={message.text}\n              time={message.createdAt !== message.updatedAt ? message.updatedAt : message.createdAt}\n              tails={{\n                default: '/parts/tail.svg',\n                owner: '/parts/tail-owner.svg'\n              }}\n              onLink={() => onLink(message.user)}\n            />\n          ))\n        ) : loading ? (\n          <Loader>\n            <Spinner />\n          </Loader>\n        ) : !ticket ? (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Empty>Выберите обращение</Empty>\n        )}\n      </Messages>\n\n      {isAccess ? (\n        <Row>\n          <Button kind={'icon'} disabled={loading || !ticket} onSubmit={onAttach}>\n            <Icon icon={'attach'} stroke={'white'} />\n          </Button>\n          <Input\n            ref={messageRef}\n            placeholder={'Отправьте сообщенение...'}\n            disabled={loading || !ticket}\n            appearance={'ghost'}\n            onChange={(e) => setMessage(e?.target?.value || '')}\n            onKeyDown={(e) => {\n              // Pressed ENTER\n              if (e.keyCode === 13) {\n                onSubmit(message)\n                messageRef.current.value = ''\n              }\n            }}\n            tabIndex={-1}\n          />\n          <Button\n            kind={'icon'}\n            disabled={loading || !ticket}\n            onClick={() => {\n              onSubmit(message)\n              messageRef.current.value = ''\n            }}>\n            <Icon icon={'send'} stroke={'white'} />\n          </Button>\n        </Row>\n      ) : loading ? (\n        <Loader>\n          <Spinner />\n        </Loader>\n      ) : (\n        <AuthAlert>\n          Для ответа на это обращение, авторизуйтесь под пользователем {ticket?.counsellor?.name} (\n          {ticket?.counsellor?.email})\n        </AuthAlert>\n      )}\n    </Wrap>\n  )\n}\n\nexport default TicketChat\n"]},"metadata":{},"sourceType":"module"}