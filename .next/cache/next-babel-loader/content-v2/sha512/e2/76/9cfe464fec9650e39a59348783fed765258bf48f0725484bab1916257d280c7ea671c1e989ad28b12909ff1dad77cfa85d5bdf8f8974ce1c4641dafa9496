{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Title from '../atomic-ui/components/Title';\nimport ContentLayout from '../layouts/content';\nimport UserList from '../components/UserList';\nimport ArticleList from '../components/ArticleList';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { useProject } from '../hooks/useProject';\nimport { COMMON_START_OFFSET, INDEX_LOAD_LIMIT } from '../constants';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst ASIDE_PROPS = {\n  limit: 3,\n  startOffset: COMMON_START_OFFSET,\n  gridOptions: {\n    length: 'auto-fit',\n    percentage: '1fr'\n  }\n};\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n\nconst Document = ({\n  document\n}) => {\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n    project: document\n  }));\n};\n\nconst HomeAside = () => /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), /*#__PURE__*/React.createElement(UserList, ASIDE_PROPS), /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(ArticleList, _extends({}, ASIDE_PROPS, {\n  variables: {\n    status: ['PUBLISHED']\n  },\n  layout: 'column'\n})));\n\nconst Home = ({\n  store\n}) => /*#__PURE__*/React.createElement(ContentLayout, {\n  title: TITLE,\n  store: store,\n  getType: 'getProjects',\n  limit: INDEX_LOAD_LIMIT,\n  emptyMessage: 'Проектов нет',\n  getQuery: queries.GET_PROJECTS,\n  startOffset: COMMON_START_OFFSET,\n  variables: {\n    status: 'PUBLISHED'\n  },\n  render: document => /*#__PURE__*/React.createElement(Document, {\n    document: document\n  }),\n  aside: /*#__PURE__*/React.createElement(HomeAside, null)\n});\n\nexport var __N_SSP = true;\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}