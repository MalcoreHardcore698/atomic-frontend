{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Icon from '../Icon';\nexport const Wrap = styled(Row)`\n  width: 100%;\n`;\nexport const Search = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    defaultValue,\n    onSubmit,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"defaultValue\", \"onSubmit\", \"onClick\"]);\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue || '');\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue]);\n  return __jsx(Wrap, {\n    className: className\n  }, __jsx(Input, _extends({\n    type: 'text',\n    placeholder: 'Поиск'\n  }, props, {\n    ref: ref,\n    readOnly: !!onClick,\n    defaultValue: defaultValue,\n    onClick: onClick && (() => onClick()),\n    onChange: e => !onClick && setValue(e.target.value),\n    onKeyDown: e => !onClick && e.key === 'Enter' && onSubmit(value)\n  })), __jsx(Button, {\n    kind: 'icon',\n    onClick: () => onClick ? onClick : onSubmit(value)\n  }, __jsx(Icon, {\n    icon: 'search',\n    stroke: 'white'\n  })));\n});\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}