{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport CategoryForm from '../../components/FormCategory';\nimport DeleteForm from '../../components/FormDelete';\nimport CategoryView from '../../components/CategoryView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nexport function onCategoryLink(dispatch, props) {\n  var id = props.id;\n  dispatch(setDrawer({\n    icon: 'folder',\n    title: 'Категория',\n    content: /*#__PURE__*/React.createElement(CategoryView, {\n      category: id,\n      appearance: 'clear'\n    })\n  }));\n}\nexport function onCategoryCreate(dispatch, props) {\n  var types = props.types,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'folder',\n    title: 'Создание категории',\n    content: /*#__PURE__*/React.createElement(CategoryForm, {\n      mutation: mutation,\n      categoryTypes: types,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(form, action) {\n          var categories;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return action({\n                    variables: {\n                      input: {\n                        name: form.name,\n                        type: form.type.value,\n                        description: form.description\n                      }\n                    }\n                  });\n\n                case 3:\n                  categories = _context.sent;\n                  dispatch(setDocuments(categories.data.createCategory));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Категория успешно создана'\n                  }));\n                  _context.next = 13;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось создать категорию'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onCategoryEdit(dispatch, props) {\n  var category = props.category,\n      types = props.types,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'folder',\n    title: 'Редактирование категории',\n    content: /*#__PURE__*/React.createElement(CategoryForm, {\n      category: category,\n      mutation: mutation,\n      categoryTypes: types,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(form, action) {\n          var categories;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return action({\n                    variables: {\n                      id: category.id,\n                      input: {\n                        name: form.name,\n                        type: form.type.value,\n                        description: form.description\n                      }\n                    }\n                  });\n\n                case 3:\n                  categories = _context2.sent;\n                  dispatch(setDocuments(categories.data.updateCategory));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Категория успешно отредактирована'\n                  }));\n                  _context2.next = 13;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось отредактировать категорию'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 9]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onCategoryDelete(dispatch, props) {\n  var id = props.id,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление категории',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: function onCancel() {\n        return dispatch(setDrawer(null));\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_, action) {\n          var categories;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return action({\n                    variables: {\n                      id: id\n                    }\n                  });\n\n                case 3:\n                  categories = _context3.sent;\n                  dispatch(setDocuments(categories.data.deleteCategory));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Категория успешно удалена'\n                  }));\n                  _context3.next = 11;\n                  break;\n\n                case 8:\n                  _context3.prev = 8;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось удалить категорию'\n                  }));\n\n                case 11:\n                  _context3.prev = 11;\n                  dispatch(setDrawer(null));\n                  return _context3.finish(11);\n\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 8, 11, 14]]);\n        }));\n\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, /*#__PURE__*/React.createElement(CategoryView, {\n      category: id,\n      appearance: 'clear'\n    }))\n  }));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/category.js"],"names":["React","CategoryForm","DeleteForm","CategoryView","setDocuments","setDrawer","setItem","onCategoryLink","dispatch","props","id","icon","title","content","onCategoryCreate","types","mutation","form","action","variables","input","name","type","value","description","categories","data","createCategory","message","onCategoryEdit","category","updateCategory","onCategoryDelete","color","_","deleteCategory"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport CategoryForm from '../../components/FormCategory'\nimport DeleteForm from '../../components/FormDelete'\nimport CategoryView from '../../components/CategoryView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\n\nexport function onCategoryLink(dispatch, props) {\n  const { id } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'folder',\n      title: 'Категория',\n      content: <CategoryView category={id} appearance={'clear'} />\n    })\n  )\n}\n\nexport function onCategoryCreate(dispatch, props) {\n  const { types, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'folder',\n      title: 'Создание категории',\n      content: (\n        <CategoryForm\n          mutation={mutation}\n          categoryTypes={types}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const categories = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    type: form.type.value,\n                    description: form.description\n                  }\n                }\n              })\n              dispatch(setDocuments(categories.data.createCategory))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Категория успешно создана'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать категорию'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onCategoryEdit(dispatch, props) {\n  const { category, types, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'folder',\n      title: 'Редактирование категории',\n      content: (\n        <CategoryForm\n          category={category}\n          mutation={mutation}\n          categoryTypes={types}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const categories = await action({\n                variables: {\n                  id: category.id,\n                  input: {\n                    name: form.name,\n                    type: form.type.value,\n                    description: form.description\n                  }\n                }\n              })\n              dispatch(setDocuments(categories.data.updateCategory))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Категория успешно отредактирована'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать категорию'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onCategoryDelete(dispatch, props) {\n  const { id, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление категории',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const categories = await action({\n                variables: { id }\n              })\n              dispatch(setDocuments(categories.data.deleteCategory))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Категория успешно удалена'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить категорию'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <CategoryView category={id} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}