{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo } from 'react';\nimport List from '../List';\nimport ArticleSuit from '../ArticleSuit';\nimport { useArticle } from '../../hooks/useArticle';\nimport { INITIAL_DISPLAY_METHOD } from '../../layouts/content';\nimport { COMMON_LOAD_LIMIT, COMMON_START_OFFSET } from '../../constants';\nimport queries from '../../graphql/queries';\nconst Document = memo(_c = _s(({\n  layout,\n  document,\n  withStatus\n}) => {\n  _s();\n\n  const methods = useArticle();\n  return /*#__PURE__*/React.createElement(ArticleSuit, _extends({}, methods, {\n    article: document,\n    layout: layout,\n    withStatus: withStatus\n  }));\n}, \"MiBlNblRnzuguk4+UKXiWt9Whmw=\", false, function () {\n  return [useArticle];\n}));\n_c2 = Document;\nexport const ArticleList = memo(_c3 = ({\n  limit,\n  layout,\n  variables,\n  startOffset,\n  gridOptions,\n  emptyMessage,\n  initialDisplayMethod,\n  withoutSearch,\n  withStatus\n}) => /*#__PURE__*/React.createElement(List, {\n  type: 'getArticles',\n  variables: variables,\n  gridOptions: gridOptions,\n  emptyMessage: emptyMessage,\n  query: queries.GET_ARTICLES,\n  withoutSearch: withoutSearch,\n  limit: limit !== null && limit !== void 0 ? limit : COMMON_LOAD_LIMIT,\n  startOffset: startOffset !== null && startOffset !== void 0 ? startOffset : COMMON_START_OFFSET,\n  initialDisplayMethod: initialDisplayMethod !== null && initialDisplayMethod !== void 0 ? initialDisplayMethod : INITIAL_DISPLAY_METHOD,\n  component: document => /*#__PURE__*/React.createElement(Document, {\n    layout: layout,\n    document: document,\n    withStatus: withStatus\n  })\n}));\n_c4 = ArticleList;\nArticleList.defaultProps = {\n  emptyMessage: 'Статей нет',\n  layout: 'row'\n};\nexport default ArticleList;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Document$memo\");\n$RefreshReg$(_c2, \"Document\");\n$RefreshReg$(_c3, \"ArticleList$memo\");\n$RefreshReg$(_c4, \"ArticleList\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/ArticleList/index.js"],"names":["React","memo","List","ArticleSuit","useArticle","INITIAL_DISPLAY_METHOD","COMMON_LOAD_LIMIT","COMMON_START_OFFSET","queries","Document","layout","document","withStatus","methods","ArticleList","limit","variables","startOffset","gridOptions","emptyMessage","initialDisplayMethod","withoutSearch","GET_ARTICLES","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,iBAAvD;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,QAAQ,GAAGR,IAAI,SAAC,CAAC;AAAES,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AAAA;;AAC1D,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,sBAAO,oBAAC,WAAD,eAAiBS,OAAjB;AAA0B,IAAA,OAAO,EAAEF,QAAnC;AAA6C,IAAA,MAAM,EAAED,MAArD;AAA6D,IAAA,UAAU,EAAEE;AAAzE,KAAP;AACD,CAHoB;AAAA,UACHR,UADG;AAAA,GAArB;MAAMK,Q;AAKN,OAAO,MAAMK,WAAW,GAAGb,IAAI,OAC7B,CAAC;AACCc,EAAAA,KADD;AAECL,EAAAA,MAFD;AAGCM,EAAAA,SAHD;AAICC,EAAAA,WAJD;AAKCC,EAAAA,WALD;AAMCC,EAAAA,YAND;AAOCC,EAAAA,oBAPD;AAQCC,EAAAA,aARD;AASCT,EAAAA;AATD,CAAD,kBAWE,oBAAC,IAAD;AACE,EAAA,IAAI,EAAE,aADR;AAEE,EAAA,SAAS,EAAEI,SAFb;AAGE,EAAA,WAAW,EAAEE,WAHf;AAIE,EAAA,YAAY,EAAEC,YAJhB;AAKE,EAAA,KAAK,EAAEX,OAAO,CAACc,YALjB;AAME,EAAA,aAAa,EAAED,aANjB;AAOE,EAAA,KAAK,EAAEN,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWT,iBAPlB;AAQE,EAAA,WAAW,EAAEW,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiBV,mBAR9B;AASE,EAAA,oBAAoB,EAAEa,oBAAF,aAAEA,oBAAF,cAAEA,oBAAF,GAA0Bf,sBAThD;AAUE,EAAA,SAAS,EAAGM,QAAD,iBACT,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAED,MAAlB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,UAAU,EAAEC;AAA1D;AAXJ,EAZ2B,CAAxB;MAAME,W;AA6BbA,WAAW,CAACS,YAAZ,GAA2B;AACzBJ,EAAAA,YAAY,EAAE,YADW;AAEzBT,EAAAA,MAAM,EAAE;AAFiB,CAA3B;AAKA,eAAeI,WAAf","sourcesContent":["import React, { memo } from 'react'\n\nimport List from '../List'\nimport ArticleSuit from '../ArticleSuit'\nimport { useArticle } from '../../hooks/useArticle'\nimport { INITIAL_DISPLAY_METHOD } from '../../layouts/content'\nimport { COMMON_LOAD_LIMIT, COMMON_START_OFFSET } from '../../constants'\nimport queries from '../../graphql/queries'\n\nconst Document = memo(({ layout, document, withStatus }) => {\n  const methods = useArticle()\n  return <ArticleSuit {...methods} article={document} layout={layout} withStatus={withStatus} />\n})\n\nexport const ArticleList = memo(\n  ({\n    limit,\n    layout,\n    variables,\n    startOffset,\n    gridOptions,\n    emptyMessage,\n    initialDisplayMethod,\n    withoutSearch,\n    withStatus\n  }) => (\n    <List\n      type={'getArticles'}\n      variables={variables}\n      gridOptions={gridOptions}\n      emptyMessage={emptyMessage}\n      query={queries.GET_ARTICLES}\n      withoutSearch={withoutSearch}\n      limit={limit ?? COMMON_LOAD_LIMIT}\n      startOffset={startOffset ?? COMMON_START_OFFSET}\n      initialDisplayMethod={initialDisplayMethod ?? INITIAL_DISPLAY_METHOD}\n      component={(document) => (\n        <Document layout={layout} document={document} withStatus={withStatus} />\n      )}\n    />\n  )\n)\n\nArticleList.defaultProps = {\n  emptyMessage: 'Статей нет',\n  layout: 'row'\n}\n\nexport default ArticleList\n"]},"metadata":{},"sourceType":"module"}