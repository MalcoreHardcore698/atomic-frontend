{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport ContentLayout from '../layouts/content';\nimport UserCard from '../components/UserCard';\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user';\nimport { useHelper } from '../hooks/useHelper';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nconst TITLE = 'Авторы';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\n\nconst Creators = () => {\n  _s();\n\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    getType: 'getUsers',\n    getQuery: queries.GET_USERS,\n    emptyMessage: 'Пользователей нет',\n    startOffsett: START_OFFSET,\n    variables: {\n      role: 'USER'\n    },\n    render: document => {\n      var _document$company;\n\n      const owned = document.name === (user === null || user === void 0 ? void 0 : user.name);\n      return /*#__PURE__*/React.createElement(UserCard, {\n        user: document,\n        owned: owned,\n        onChat: user.email && recall(onChat, {\n          sender: user === null || user === void 0 ? void 0 : user.email,\n          recipient: document.email,\n          queries: {\n            userChats: queries.GET_USER_CHATS,\n            chat: queries.GET_CHAT\n          },\n          mutations: {\n            addUserChat: queries.ADD_USER_CHAT,\n            sendMessage: queries.SEND_MESSAGE\n          }\n        }),\n        onLink: recall(onUserLink, {\n          id: document.email,\n          auth: user === null || user === void 0 ? void 0 : user.email,\n          owned,\n          queries: {\n            userChats: queries.GET_USER_CHATS,\n            chat: queries.GET_CHAT\n          },\n          mutations: {\n            addUserChat: queries.ADD_USER_CHAT,\n            sendMessage: queries.SEND_MESSAGE\n          }\n        }),\n        onAboutMore: recall(onUserAboutMore, {\n          user: document\n        }),\n        onMembers: recall(onUserMembers, {\n          id: document === null || document === void 0 ? void 0 : document.email,\n          auth: user === null || user === void 0 ? void 0 : user.email\n        }),\n        onCompanyLink: recall(onUserLink, {\n          id: (_document$company = document.company) === null || _document$company === void 0 ? void 0 : _document$company.email,\n          auth: user === null || user === void 0 ? void 0 : user.email,\n          queries: {\n            userChats: queries.GET_USER_CHATS,\n            chat: queries.GET_CHAT\n          },\n          mutations: {\n            addUserChat: queries.ADD_USER_CHAT,\n            sendMessage: queries.SEND_MESSAGE\n          }\n        })\n      });\n    }\n  });\n};\n\n_s(Creators, \"PSDtHiZ3h8PkCz2LC45oShJ9Xms=\", false, function () {\n  return [useHelper, useSelector];\n});\n\n_c = Creators;\nexport default Creators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Creators\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/creators.js"],"names":["React","useSelector","ContentLayout","UserCard","onUserAboutMore","onUserLink","onUserMembers","useHelper","onChat","queries","TITLE","START_OFFSET","LIMIT","Creators","recall","user","state","GET_USERS","role","document","owned","name","email","sender","recipient","userChats","GET_USER_CHATS","chat","GET_CHAT","mutations","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","id","auth","company"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,aAAtC,QAA2D,uBAA3D;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,QAAd;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,KAAK,GAAG,CAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEL,KADT;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,OAAO,EAAE,UAHX;AAIE,IAAA,QAAQ,EAAEH,OAAO,CAACQ,SAJpB;AAKE,IAAA,YAAY,EAAE,mBALhB;AAME,IAAA,YAAY,EAAEN,YANhB;AAOE,IAAA,SAAS,EAAE;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAPb;AAQE,IAAA,MAAM,EAAGC,QAAD,IAAc;AAAA;;AACpB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,MAAkBN,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEM,IAAxB,CAAd;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEF,QADR;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,MAAM,EACJL,IAAI,CAACO,KAAL,IACAR,MAAM,CAACN,MAAD,EAAS;AACbe,UAAAA,MAAM,EAAER,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,KADD;AAEbE,UAAAA,SAAS,EAAEL,QAAQ,CAACG,KAFP;AAGbb,UAAAA,OAAO,EAAE;AACPgB,YAAAA,SAAS,EAAEhB,OAAO,CAACiB,cADZ;AAEPC,YAAAA,IAAI,EAAElB,OAAO,CAACmB;AAFP,WAHI;AAObC,UAAAA,SAAS,EAAE;AACTC,YAAAA,WAAW,EAAErB,OAAO,CAACsB,aADZ;AAETC,YAAAA,WAAW,EAAEvB,OAAO,CAACwB;AAFZ;AAPE,SAAT,CALV;AAkBE,QAAA,MAAM,EAAEnB,MAAM,CAACT,UAAD,EAAa;AACzB6B,UAAAA,EAAE,EAAEf,QAAQ,CAACG,KADY;AAEzBa,UAAAA,IAAI,EAAEpB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,KAFa;AAGzBF,UAAAA,KAHyB;AAIzBX,UAAAA,OAAO,EAAE;AACPgB,YAAAA,SAAS,EAAEhB,OAAO,CAACiB,cADZ;AAEPC,YAAAA,IAAI,EAAElB,OAAO,CAACmB;AAFP,WAJgB;AAQzBC,UAAAA,SAAS,EAAE;AACTC,YAAAA,WAAW,EAAErB,OAAO,CAACsB,aADZ;AAETC,YAAAA,WAAW,EAAEvB,OAAO,CAACwB;AAFZ;AARc,SAAb,CAlBhB;AA+BE,QAAA,WAAW,EAAEnB,MAAM,CAACV,eAAD,EAAkB;AAAEW,UAAAA,IAAI,EAAEI;AAAR,SAAlB,CA/BrB;AAgCE,QAAA,SAAS,EAAEL,MAAM,CAACR,aAAD,EAAgB;AAAE4B,UAAAA,EAAE,EAAEf,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG,KAAhB;AAAuBa,UAAAA,IAAI,EAAEpB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO;AAAnC,SAAhB,CAhCnB;AAiCE,QAAA,aAAa,EAAER,MAAM,CAACT,UAAD,EAAa;AAChC6B,UAAAA,EAAE,uBAAEf,QAAQ,CAACiB,OAAX,sDAAE,kBAAkBd,KADU;AAEhCa,UAAAA,IAAI,EAAEpB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,KAFoB;AAGhCb,UAAAA,OAAO,EAAE;AACPgB,YAAAA,SAAS,EAAEhB,OAAO,CAACiB,cADZ;AAEPC,YAAAA,IAAI,EAAElB,OAAO,CAACmB;AAFP,WAHuB;AAOhCC,UAAAA,SAAS,EAAE;AACTC,YAAAA,WAAW,EAAErB,OAAO,CAACsB,aADZ;AAETC,YAAAA,WAAW,EAAEvB,OAAO,CAACwB;AAFZ;AAPqB,SAAb;AAjCvB,QADF;AAgDD;AA1DH,IADF;AA8DD,CAlED;;GAAMpB,Q;UACWN,S,EACFN,W;;;KAFTY,Q;AAoEN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ContentLayout from '../layouts/content'\nimport UserCard from '../components/UserCard'\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user'\nimport { useHelper } from '../hooks/useHelper'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Авторы'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst Creators = () => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.user)\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      getType={'getUsers'}\n      getQuery={queries.GET_USERS}\n      emptyMessage={'Пользователей нет'}\n      startOffsett={START_OFFSET}\n      variables={{ role: 'USER' }}\n      render={(document) => {\n        const owned = document.name === user?.name\n        return (\n          <UserCard\n            user={document}\n            owned={owned}\n            onChat={\n              user.email &&\n              recall(onChat, {\n                sender: user?.email,\n                recipient: document.email,\n                queries: {\n                  userChats: queries.GET_USER_CHATS,\n                  chat: queries.GET_CHAT\n                },\n                mutations: {\n                  addUserChat: queries.ADD_USER_CHAT,\n                  sendMessage: queries.SEND_MESSAGE\n                }\n              })\n            }\n            onLink={recall(onUserLink, {\n              id: document.email,\n              auth: user?.email,\n              owned,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })}\n            onAboutMore={recall(onUserAboutMore, { user: document })}\n            onMembers={recall(onUserMembers, { id: document?.email, auth: user?.email })}\n            onCompanyLink={recall(onUserLink, {\n              id: document.company?.email,\n              auth: user?.email,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default Creators\n"]},"metadata":{},"sourceType":"module"}