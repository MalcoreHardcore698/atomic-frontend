{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Container from '../../atomic-ui/components/Container';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Form from '../Form';\nexport var Email = styled(Text).withConfig({\n  displayName: \"FormLogin__Email\",\n  componentId: \"ph30l6-0\"\n})([\"font-size:var(--font-size-m);font-weight:var(--font-weight-regular);color:var(--ghost-color-text);text-align:center;\"]);\nexport var Login = function Login(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? true : _ref$title,\n      email = _ref.email,\n      mutation = _ref.mutation,\n      appearance = _ref.appearance,\n      className = _ref.className,\n      onBack = _ref.onBack,\n      onForgot = _ref.onForgot,\n      onSubmit = _ref.onSubmit;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, function (_ref2) {\n    var register = _ref2.register,\n        errors = _ref2.errors,\n        loading = _ref2.loading;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, title && /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Title, {\n      style: {\n        textAlign: 'center'\n      },\n      tag: 'h4'\n    }, \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"), /*#__PURE__*/React.createElement(Email, null, \"(\", email, \")\")), /*#__PURE__*/React.createElement(Column, null, errors && errors.password && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u043E \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043D\\u0435 \\u0443\\u043A\\u0430\\u0437\\u0430\\u043D\\u043E \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'password',\n      name: 'password',\n      ref: register({\n        required: true\n      }),\n      placeholder: 'Введите пароль',\n      appearance: 'ghost',\n      disabled: loading\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: 'button',\n      appearance: 'link',\n      loading: loading.toString(),\n      onClick: onForgot\n    }, \"\\u0417\\u0430\\u0431\\u044B\\u043B\\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C?\")), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'button',\n      disabled: loading,\n      onClick: onBack\n    }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      disabled: loading,\n      type: 'submit'\n    }, \"\\u0414\\u0430\\u043B\\u0435\\u0435\")));\n  });\n};\nLogin.defaultProps = {\n  email: 'admin@example.com'\n};\nexport default Login;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormLogin/index.js"],"names":["React","styled","Container","Row","Column","Title","Text","Input","Button","Alert","Form","Email","Login","title","email","mutation","appearance","className","onBack","onForgot","onSubmit","register","errors","loading","textAlign","password","width","required","toString","flexGrow","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Container from '../../atomic-ui/components/Container'\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Alert from '../../atomic-ui/components/Alert'\n\nimport Form from '../Form'\n\nexport const Email = styled(Text)`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n  color: var(--ghost-color-text);\n  text-align: center;\n`\n\nexport const Login = ({\n  title = true,\n  email,\n  mutation,\n  appearance,\n  className,\n  onBack,\n  onForgot,\n  onSubmit\n}) => (\n  <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n    {({ register, errors, loading }) => (\n      <React.Fragment>\n        {title && (\n          <Container>\n            <Title style={{ textAlign: 'center' }} tag={'h4'}>\n              Добро пожаловать!\n            </Title>\n            <Email>({email})</Email>\n          </Container>\n        )}\n\n        <Column>\n          {errors && errors.password && (\n            <Alert style={{ width: '100%' }} appearance={'error'}>\n              Неверно указано или не указано пароль\n            </Alert>\n          )}\n          <Input\n            type={'password'}\n            name={'password'}\n            ref={register({ required: true })}\n            placeholder={'Введите пароль'}\n            appearance={'ghost'}\n            disabled={loading}\n          />\n          <Button\n            type={'button'}\n            appearance={'link'}\n            loading={loading.toString()}\n            onClick={onForgot}>\n            Забыли пароль?\n          </Button>\n        </Column>\n\n        <Row>\n          <Button style={{ flexGrow: 1 }} type={'button'} disabled={loading} onClick={onBack}>\n            Назад\n          </Button>\n          <Button style={{ flexGrow: 1 }} disabled={loading} type={'submit'}>\n            Далее\n          </Button>\n        </Row>\n      </React.Fragment>\n    )}\n  </Form>\n)\n\nLogin.defaultProps = {\n  email: 'admin@example.com'\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}