{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport HTMLView from '../HTMLView';\nimport Comments from '../Comments';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ArticleView__Wrap\",\n  componentId: \"sc-12lysue-0\"\n})([\"flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ArticleView__Poster\",\n  componentId: \"sc-12lysue-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);@media only screen and (max-width:480px){height:256px;}\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"ArticleView__Content\",\n  componentId: \"sc-12lysue-2\"\n})([\"grid-gap:0;\"]);\nexport const View = ({\n  article,\n  appearance,\n  className,\n  style,\n  onLink,\n  onCommentLink,\n  onCommentReply,\n  onCommentLike,\n  onCommentSend\n}) => {\n  var _data$getArticle$cate;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_ARTICLE, {\n    variables: {\n      id: article\n    }\n  });\n  const [loadComments, {\n    dataComments,\n    loadingComments,\n    errorComments\n  }] = useLazyQuery(queries.GET_COMMENTS, {\n    variables: {\n      id: article\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data ? /*#__PURE__*/React.createElement(React.Fragment, null, data.getArticle.preview && /*#__PURE__*/React.createElement(Poster, {\n    src: data.getArticle.preview.path\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    date: data.getArticle.createdAt,\n    category: (_data$getArticle$cate = data.getArticle.category) === null || _data$getArticle$cate === void 0 ? void 0 : _data$getArticle$cate.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    onClick: onLink,\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data.getArticle.title), data.getArticle.body && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data.getArticle.body\n  })), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Comments, {\n    comments: dataComments,\n    appearance: 'ghost',\n    errorComments: errorComments,\n    loadingComments: loadingComments,\n    onLoad: loadComments,\n    onLink: onCommentLink,\n    onReply: onCommentReply,\n    onLike: onCommentLike,\n    onSubmit: onCommentSend\n  })) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0441\\u0442\\u0430\\u0442\\u044C\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}