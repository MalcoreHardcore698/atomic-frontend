{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Dropzone\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport imageCompression from 'browser-image-compression';\nimport { useDropzone } from 'react-dropzone';\nimport { v4 } from 'uuid';\nimport Image from '../Image';\nimport Text from '../Text';\nimport Grid from '../Grid';\nimport Tooltip from '../Tooltip';\nimport Icon from '../Icon';\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  grid-gap: 10px;\n\n  width: 100%;\n  height: 256px;\n  min-height: 256px;\n`;\nexport const InfoTooltip = styled(Tooltip)`\n  position: absolute;\n  right: var(--default-gap);\n  bottom: var(--default-gap);\n  z-index: var(--z-15);\n`;\nexport const InfoIcon = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n  z-index: var(--z-12);\n\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-s);\n  font-family: var(--font-family);\n  color: var(--input-placeholder-color);\n\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  border: 2px dashed var(--input-placeholder-color);\n  outline: none;\n  overflow: hidden;\n  flex-grow: 1;\n\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${({\n  error\n}) => error && css`\n      color: var(--default-color-red);\n      border: 2px dashed var(--default-color-red);\n    `}\n\n  &:hover {\n    color: var(--default-color-accent);\n    border: 2px dashed var(--default-color-accent);\n\n    ${({\n  error\n}) => error && css`\n        color: var(--default-color-red);\n        border: 2px dashed var(--default-color-red);\n      `}\n  }\n`;\nexport const Area = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\nexport const PreviewList = styled(Grid)`\n  img {\n    height: 128px;\n  }\n`;\nexport const Preview = styled(Image)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n`;\nexport const Placeholder = styled(Text)`\n  color: inherit;\n  padding: var(--default-gap);\n  text-align: center;\n`;\nexport function getFile(file) {\n  var _file$type;\n\n  return {\n    file,\n    id: v4(),\n    blob: ((_file$type = file.type) === null || _file$type === void 0 ? void 0 : _file$type.includes('image')) && URL.createObjectURL(file)\n  };\n}\nexport async function compressedUpload(file, maxSizeMB = 1, maxWidthOrHeight = 1366) {\n  try {\n    return await imageCompression(file, {\n      maxSizeMB,\n      maxWidthOrHeight,\n      useWebWorker: true\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport const Dropzone = ({\n  style,\n  accept,\n  className,\n  defaultValue,\n  placeholder,\n  tooltip,\n  multiple,\n  maxFiles,\n  onChange\n}) => {\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const onDrop = useCallback(async droppedFiles => {\n    setError(false);\n\n    if (droppedFiles.length > maxFiles || droppedFiles.length === 0) {\n      setError(true);\n      return false;\n    }\n\n    const candidate = multiple ? [] : await compressedUpload(droppedFiles[0]);\n\n    if (multiple) {\n      for (let file of droppedFiles) {\n        var _file$type2;\n\n        let compressedFile;\n        let miniature;\n\n        if ((_file$type2 = file.type) !== null && _file$type2 !== void 0 && _file$type2.includes('image')) {\n          compressedFile = await compressedUpload(file);\n          miniature = await compressedUpload(file, .25);\n        } else {\n          compressedFile = file;\n        }\n\n        if (compressedFile) candidate.push(_objectSpread(_objectSpread({}, getFile(compressedFile)), {}, {\n          size: file.size\n        }));\n      }\n    }\n\n    const result = candidate.length > 1 ? candidate : _objectSpread(_objectSpread({}, getFile(candidate)), {}, {\n      size: droppedFiles[0].size\n    });\n    setImages(result);\n\n    if (onChange) {\n      onChange(result);\n    }\n  }, [setImages]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple,\n    accept\n  });\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, tooltip && __jsx(InfoTooltip, {\n    text: tooltip,\n    maxWidth: 215,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(InfoIcon, {\n    size: 's',\n    icon: 'infoCircle',\n    stroke: (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) > 0 ? 'white' : 'var(--default-color-accent)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), __jsx(Container, _extends({\n    className: 'dropzone-container'\n  }, getRootProps(), {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", _extends({\n    accept: accept\n  }, getInputProps(), {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  })), __jsx(Area, {\n    className: 'dropzone-area',\n    active: isDragActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, !defaultValue && images.length === 0 && __jsx(Placeholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, error ? `Файлов не может быть больше ${maxFiles} или равно нулю` : placeholder), multiple && (Array.isArray(images) && images.length > 1 || Array.isArray(defaultValue) && (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.length) > 1) && __jsx(PreviewList, {\n    percentage: 'minmax(196px, 1fr)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, (defaultValue || images).map(file => __jsx(Preview, {\n    key: v4(),\n    src: (file === null || file === void 0 ? void 0 : file.blob) || file,\n    alt: file.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }))), !multiple && (!Array.isArray(images) || defaultValue) && __jsx(Preview, {\n    src: images.blob || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.path) || (defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.blob),\n    alt: defaultValue === null || defaultValue === void 0 ? void 0 : defaultValue.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }))));\n};\nDropzone.defaultProps = {\n  maxFiles: 1,\n  multiple: false\n};\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Dropzone/index.js"],"names":["React","useState","useCallback","styled","css","imageCompression","useDropzone","v4","Image","Text","Grid","Tooltip","Icon","Wrap","div","InfoTooltip","InfoIcon","Container","error","Area","PreviewList","Preview","Placeholder","getFile","file","id","blob","type","includes","URL","createObjectURL","compressedUpload","maxSizeMB","maxWidthOrHeight","useWebWorker","console","log","Dropzone","style","accept","className","defaultValue","placeholder","tooltip","multiple","maxFiles","onChange","setError","images","setImages","onDrop","droppedFiles","length","candidate","compressedFile","miniature","push","size","result","getRootProps","getInputProps","isDragActive","Array","isArray","map","path","name","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled, { css } from 'styled-components'\nimport imageCompression from 'browser-image-compression'\nimport { useDropzone } from 'react-dropzone'\nimport { v4 } from 'uuid'\n\nimport Image from '../Image'\nimport Text from '../Text'\nimport Grid from '../Grid'\nimport Tooltip from '../Tooltip'\nimport Icon from '../Icon'\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  grid-gap: 10px;\n\n  width: 100%;\n  height: 256px;\n  min-height: 256px;\n`\n\nexport const InfoTooltip = styled(Tooltip)`\n  position: absolute;\n  right: var(--default-gap);\n  bottom: var(--default-gap);\n  z-index: var(--z-15);\n`\n\nexport const InfoIcon = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: relative;\n  z-index: var(--z-12);\n\n  font-weight: var(--font-weight-medium);\n  font-size: var(--font-size-s);\n  font-family: var(--font-family);\n  color: var(--input-placeholder-color);\n\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  border: 2px dashed var(--input-placeholder-color);\n  outline: none;\n  overflow: hidden;\n  flex-grow: 1;\n\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${({ error }) =>\n  error &&\n  css`\n      color: var(--default-color-red);\n      border: 2px dashed var(--default-color-red);\n    `}\n\n  &:hover {\n    color: var(--default-color-accent);\n    border: 2px dashed var(--default-color-accent);\n\n    ${({ error }) =>\n  error &&\n  css`\n        color: var(--default-color-red);\n        border: 2px dashed var(--default-color-red);\n      `}\n  }\n`\n\nexport const Area = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`\n\nexport const PreviewList = styled(Grid)`\n  img {\n    height: 128px;\n  }\n`\n\nexport const Preview = styled(Image)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Placeholder = styled(Text)`\n  color: inherit;\n  padding: var(--default-gap);\n  text-align: center;\n`\n\nexport function getFile(file) {\n  return { file, id: v4(), blob: file.type?.includes('image') && URL.createObjectURL(file) }\n}\n\nexport async function compressedUpload(file, maxSizeMB = 1, maxWidthOrHeight = 1366) {\n  try {\n    return await imageCompression(file, {\n      maxSizeMB,\n      maxWidthOrHeight,\n      useWebWorker: true\n    })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const Dropzone = ({\n  style,\n  accept,\n  className,\n  defaultValue,\n  placeholder,\n  tooltip,\n  multiple,\n  maxFiles,\n  onChange\n}) => {\n  const [error, setError] = useState(false)\n  const [images, setImages] = useState([])\n\n  const onDrop = useCallback(\n    async (droppedFiles) => {\n      setError(false)\n\n      if (droppedFiles.length > maxFiles || droppedFiles.length === 0) {\n        setError(true)\n        return false\n      }\n\n      const candidate = multiple ? [] : await compressedUpload(droppedFiles[0])\n\n      if (multiple) {\n        for (let file of droppedFiles) {\n          let compressedFile\n          let miniature\n\n          if (file.type?.includes('image')) {\n            compressedFile = await compressedUpload(file)\n            miniature = await compressedUpload(file, .25, )\n          } else {\n            compressedFile = file\n          }\n\n          if (compressedFile)\n            candidate.push({\n              ...getFile(compressedFile),\n              size: file.size\n            })\n        }\n      }\n\n      const result =\n        candidate.length > 1\n          ? candidate\n          : {\n            ...getFile(candidate),\n            size: droppedFiles[0].size\n          }\n\n      setImages(result)\n      if (onChange) {\n        onChange(result)\n      }\n    },\n    [setImages]\n  )\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    multiple,\n    accept\n  })\n\n  return (\n    <Wrap className={className} style={style}>\n      {tooltip && (\n        <InfoTooltip text={tooltip} maxWidth={215}>\n          <InfoIcon\n            size={'s'}\n            icon={'infoCircle'}\n            stroke={defaultValue?.length > 0 ? 'white' : 'var(--default-color-accent)'}\n          />\n        </InfoTooltip>\n      )}\n\n      <Container className={'dropzone-container'} {...getRootProps()} error={error}>\n        <input accept={accept} {...getInputProps()} hidden />\n        <Area className={'dropzone-area'} active={isDragActive}>\n          {!defaultValue && images.length === 0 && (\n            <Placeholder>\n              {error ? `Файлов не может быть больше ${maxFiles} или равно нулю` : placeholder}\n            </Placeholder>\n          )}\n\n          {multiple &&\n          ((Array.isArray(images) && images.length > 1) ||\n            (Array.isArray(defaultValue) && defaultValue?.length > 1)) && (\n            <PreviewList percentage={'minmax(196px, 1fr)'}>\n              {(defaultValue || images).map((file) => (\n                <Preview key={v4()} src={file?.blob || file} alt={file.id} />\n              ))}\n            </PreviewList>\n          )}\n\n          {!multiple && (!Array.isArray(images) || defaultValue) && (\n            <Preview\n              src={images.blob || defaultValue?.path || defaultValue?.blob}\n              alt={defaultValue?.name}\n            />\n          )}\n        </Area>\n      </Container>\n    </Wrap>\n  )\n}\n\nDropzone.defaultProps = {\n  maxFiles: 1,\n  multiple: false\n}\n\nexport default Dropzone\n"]},"metadata":{},"sourceType":"module"}