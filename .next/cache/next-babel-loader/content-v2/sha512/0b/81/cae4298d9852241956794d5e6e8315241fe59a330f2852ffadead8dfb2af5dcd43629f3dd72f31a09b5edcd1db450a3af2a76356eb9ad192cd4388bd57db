{"ast":null,"code":"import React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Alert from '../atomic-ui/components/Alert';\nimport Title from '../atomic-ui/components/Title';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport ContentLayout from '../layouts/content';\nimport ProjectCard from '../components/ProjectCard';\nimport ArticleCard from '../components/ArticleCard';\nimport UserCard from '../components/UserCard';\nimport LazyLoad from '../components/LazyLoad';\nimport FadeLoad from '../components/FadeLoad';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 13;\nconst LIMIT = 5;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;@media only screen and (max-width:1196px){grid-template-columns:1fr;}\"]);\nconst Projects = styled.aside.withConfig({\n  displayName: \"pages__Projects\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-2\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n\nconst Home = () => {\n  var _store;\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState(null);\n  const scaffold = useMemo(() => ({\n    title: 'Создавай школу будущего с нами',\n    background: '/images/main-background.png',\n    primary: store.projects.length > 0 && store.projects[0],\n    residue: store.projects.length > 4 && store.projects.slice(1, 3),\n    onLink: (project, owned) => recall(onProjectLink, {\n      id: project.id,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      project,\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      owned\n    })(),\n    onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n      id: project.id\n    }, response => dispatch(updateUser(response.data.likeProject)))()),\n    onAdd: user.email && (project => recall(onProjectAdd, {\n      id: project.id,\n      project,\n      folders: user === null || user === void 0 ? void 0 : user.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      }\n    })()),\n    onSearch: value => setSearch(value),\n    onAboutMore: project => recall(onUserAboutMore, {\n      user: project\n    }),\n    onCompanyLink: project => {\n      var _project$company;\n\n      return recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user\n      })();\n    },\n    onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n      screenshots: [project.preview, ...project.screenshots],\n      key\n    })()\n  }), [store]);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    research: search,\n    scaffold: scaffold,\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS,\n    variables: {\n      status: 'PUBLISHED'\n    },\n    store: {\n      documents: (_store = store) === null || _store === void 0 ? void 0 : _store.projects\n    }\n  }, ({\n    documents\n  }) => /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Projects, null, documents.map(project => {\n    var _user$projects, _user$folders, _project$company2;\n\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: project.id\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      owned: owned,\n      added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item.id === project.id)))),\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      }),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: project\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_project$company2 = project.company) === null || _project$company2 === void 0 ? void 0 : _project$company2.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        recipient: project.author,\n        query: queries.GET_USER_CHATS,\n        mutation: queries.SEND_MESSAGE\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    })));\n  })), /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), users.length > 0 ? users.slice(0, 3).map(author => {\n    var _author$company;\n\n    const owned = author.name === (user === null || user === void 0 ? void 0 : user.name);\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: author.email\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(UserCard, {\n      user: author,\n      owned: owned,\n      onChat: user.email && recall(onChat, {\n        email: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onLink: recall(onUserLink, {\n        id: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: author\n      }),\n      onMembers: recall(onUserMembers, {\n        id: author === null || author === void 0 ? void 0 : author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_author$company = author.company) === null || _author$company === void 0 ? void 0 : _author$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      })\n    })));\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), articles.length > 0 ? articles.slice(0, 2).map(article => {\n    var _user$articles;\n\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: article.id\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ArticleCard, {\n      layout: 'column',\n      article: article,\n      owned: user === null || user === void 0 ? void 0 : (_user$articles = user.articles) === null || _user$articles === void 0 ? void 0 : _user$articles.find(candidate => candidate.id === article.id),\n      onLink: recall(onArticleLink, {\n        id: article.id,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      })\n    })));\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useMemo","useState","styled","useSelector","useDispatch","Alert","Title","useHelper","useMutate","ContentLayout","ProjectCard","ArticleCard","UserCard","LazyLoad","FadeLoad","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserAboutMore","onUserLink","onUserMembers","onArticleLink","onChat","queries","TITLE","START_OFFSET","LIMIT","Container","div","Projects","aside","Aside","Home","recall","mutate","user","state","dispatch","search","setSearch","scaffold","title","background","primary","store","projects","length","residue","slice","onLink","project","owned","id","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","onSearch","value","onAboutMore","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","GET_PROJECTS","status","documents","map","candidate","folder","recipient","author","query","GET_USER_CHATS","mutation","SEND_MESSAGE","_","users","name","userChats","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","width","textAlign","articles","article"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Alert from '../atomic-ui/components/Alert'\nimport Title from '../atomic-ui/components/Title'\n\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport ContentLayout from '../layouts/content'\nimport ProjectCard from '../components/ProjectCard'\nimport ArticleCard from '../components/ArticleCard'\nimport UserCard from '../components/UserCard'\nimport LazyLoad from '../components/LazyLoad'\nimport FadeLoad from '../components/FadeLoad'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 13\nconst LIMIT = 5\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Projects = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Home = () => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const [search, setSearch] = useState(null)\n\n  const scaffold = useMemo(\n    () => ({\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: store.projects.length > 0 && store.projects[0],\n      residue: store.projects.length > 4 && store.projects.slice(1, 3),\n      onLink: (project, owned) =>\n        recall(onProjectLink, {\n          id: project.id,\n          auth: user?.email,\n          project,\n          liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n          onLike:\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            ),\n          onAdd:\n            user.email &&\n            recall(onProjectAdd, {\n              id: project.id,\n              project,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              }\n            }),\n          owned\n        })(),\n      onLike:\n        user.email &&\n        ((project) =>\n          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n            dispatch(updateUser(response.data.likeProject))\n          )()),\n      onAdd:\n        user.email &&\n        ((project) =>\n          recall(onProjectAdd, {\n            id: project.id,\n            project,\n            folders: user?.folders,\n            mutations: {\n              addProject: queries.ADD_USER_PROJECT,\n              createFolder: queries.ADD_USER_FOLDER\n            }\n          })()),\n      onSearch: (value) => setSearch(value),\n      onAboutMore: (project) => recall(onUserAboutMore, { user: project }),\n      onCompanyLink: (project) => recall(onUserLink, { id: project.company?.email, auth: user })(),\n      onScreenshotClick: (project, key) =>\n        recall(onProjectScreenshot, {\n          screenshots: [project.preview, ...project.screenshots],\n          key\n        })()\n    }),\n    [store]\n  )\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      research={search}\n      scaffold={scaffold}\n      startOffset={START_OFFSET}\n      query={queries.GET_PROJECTS}\n      variables={{ status: 'PUBLISHED' }}\n      store={{ documents: store?.projects }}>\n      {({ documents }) => (\n        <Container>\n          <Projects>\n            {documents.map((project) => {\n              const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n\n              return (\n                <FadeLoad key={project.id}>\n                  <LazyLoad>\n                    <ProjectCard\n                      project={project}\n                      owned={owned}\n                      added={\n                        !!user?.folders?.find(\n                          (folder) => !!folder?.projects.find((item) => item.id === project.id)\n                        )\n                      }\n                      liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n                      onLink={recall(onProjectLink, {\n                        id: project.id,\n                        auth: user?.email,\n                        liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n                        onLike:\n                          user.email &&\n                          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                            dispatch(updateUser(response.data.likeProject))\n                          ),\n                        onAdd:\n                          user.email &&\n                          recall(onProjectAdd, {\n                            id: project.id,\n                            project,\n                            folders: user?.folders,\n                            mutations: {\n                              addProject: queries.ADD_USER_PROJECT,\n                              createFolder: queries.ADD_USER_FOLDER\n                            }\n                          }),\n                        owned\n                      })}\n                      onLike={\n                        user.email &&\n                        mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                          dispatch(updateUser(response.data.likeProject))\n                        )\n                      }\n                      onAdd={\n                        user.email &&\n                        recall(onProjectAdd, {\n                          id: project.id,\n                          project,\n                          folders: user?.folders,\n                          mutations: {\n                            addProject: queries.ADD_USER_PROJECT,\n                            createFolder: queries.ADD_USER_FOLDER\n                          }\n                        })\n                      }\n                      onAboutMore={recall(onUserAboutMore, { user: project })}\n                      onCompanyLink={recall(onUserLink, {\n                        id: project.company?.email,\n                        auth: user?.email,\n                        recipient: project.author,\n                        query: queries.GET_USER_CHATS,\n                        mutation: queries.SEND_MESSAGE\n                      })}\n                      onScreenshotClick={(_, key) =>\n                        recall(onProjectScreenshot, {\n                          screenshots: [project.preview, ...project.screenshots],\n                          key\n                        })()\n                      }\n                    />\n                  </LazyLoad>\n                </FadeLoad>\n              )\n            })}\n          </Projects>\n\n          <Aside>\n            <Title tag={'h4'}>Авторы</Title>\n            {users.length > 0 ? (\n              users.slice(0, 3).map((author) => {\n                const owned = author.name === user?.name\n\n                return (\n                  <FadeLoad key={author.email}>\n                    <LazyLoad>\n                      <UserCard\n                        user={author}\n                        owned={owned}\n                        onChat={\n                          user.email &&\n                          recall(onChat, {\n                            email: author.email,\n                            auth: user?.email,\n                            queries: {\n                              userChats: queries.GET_USER_CHATS,\n                              chat: queries.GET_CHAT\n                            },\n                            mutations: {\n                              addUserChat: queries.ADD_USER_CHAT,\n                              sendMessage: queries.SEND_MESSAGE\n                            }\n                          })\n                        }\n                        onLink={recall(onUserLink, {\n                          id: author.email,\n                          auth: user?.email,\n                          owned,\n                          queries: {\n                            userChats: queries.GET_USER_CHATS,\n                            chat: queries.GET_CHAT\n                          },\n                          mutations: {\n                            addUserChat: queries.ADD_USER_CHAT,\n                            sendMessage: queries.SEND_MESSAGE\n                          }\n                        })}\n                        onAboutMore={recall(onUserAboutMore, { user: author })}\n                        onMembers={recall(onUserMembers, { id: author?.email, auth: user?.email })}\n                        onCompanyLink={recall(onUserLink, {\n                          id: author.company?.email,\n                          auth: user?.email,\n                          queries: {\n                            userChats: queries.GET_USER_CHATS,\n                            chat: queries.GET_CHAT\n                          },\n                          mutations: {\n                            addUserChat: queries.ADD_USER_CHAT,\n                            sendMessage: queries.SEND_MESSAGE\n                          }\n                        })}\n                      />\n                    </LazyLoad>\n                  </FadeLoad>\n                )\n              })\n            ) : (\n              <Alert style={{ width: '100%', textAlign: 'center' }}>Авторов нет</Alert>\n            )}\n\n            <Title tag={'h4'}>Новости</Title>\n            {articles.length > 0 ? (\n              articles.slice(0, 2).map((article) => (\n                <FadeLoad key={article.id}>\n                  <LazyLoad>\n                    <ArticleCard\n                      layout={'column'}\n                      article={article}\n                      owned={user?.articles?.find((candidate) => candidate.id === article.id)}\n                      onLink={recall(onArticleLink, { id: article.id, auth: user?.email })}\n                    />\n                  </LazyLoad>\n                </FadeLoad>\n              ))\n            ) : (\n              <Alert style={{ width: '100%', textAlign: 'center' }}>Новостей нет</Alert>\n            )}\n          </Aside>\n        </Container>\n      )}\n    </ContentLayout>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}