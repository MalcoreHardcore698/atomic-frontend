{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport ContentLayout from '../layouts/content';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { useProject } from '../hooks/useProject';\nimport queries from '../graphql/queries';\nconst TITLE = 'Проекты';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\n\nconst Projects = () => {\n  var _router$query;\n\n  const router = useRouter();\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    getType: 'getProjects',\n    getQuery: queries.GET_PROJECTS,\n    emptyMessage: 'Проектов нет',\n    startOffsett: START_OFFSET,\n    variables: {\n      category: (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.c,\n      status: 'PUBLISHED'\n    },\n    render: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document\n    }))\n  });\n};\n\nexport default Projects;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/projects.js"],"names":["React","useRouter","ContentLayout","ProjectSuit","useProject","queries","TITLE","START_OFFSET","LIMIT","Projects","router","methods","GET_PROJECTS","category","query","c","status","document"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,SAAd;AACA,MAAMC,YAAY,GAAG,CAArB;AACA,MAAMC,KAAK,GAAG,CAAd;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,OAAO,GAAGP,UAAU,EAA1B;AAEA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,OAAO,EAAE,aAHX;AAIE,IAAA,QAAQ,EAAEH,OAAO,CAACO,YAJpB;AAKE,IAAA,YAAY,EAAE,cALhB;AAME,IAAA,YAAY,EAAEL,YANhB;AAOE,IAAA,SAAS,EAAE;AAAEM,MAAAA,QAAQ,mBAAEH,MAAM,CAACI,KAAT,kDAAE,cAAcC,CAA1B;AAA6BC,MAAAA,MAAM,EAAE;AAArC,KAPb;AAQE,IAAA,MAAM,EAAGC,QAAD,iBAAc,oBAAC,WAAD,eAAiBN,OAAjB;AAA0B,MAAA,OAAO,EAAEM;AAAnC;AARxB,IADF;AAYD,CAhBD;;AAkBA,eAAeR,QAAf","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\n\nimport ContentLayout from '../layouts/content'\nimport ProjectSuit from '../components/ProjectSuit'\nimport { useProject } from '../hooks/useProject'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Проекты'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst Projects = () => {\n  const router = useRouter()\n  const methods = useProject()\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      getType={'getProjects'}\n      getQuery={queries.GET_PROJECTS}\n      emptyMessage={'Проектов нет'}\n      startOffsett={START_OFFSET}\n      variables={{ category: router.query?.c, status: 'PUBLISHED' }}\n      render={(document) => <ProjectSuit {...methods} project={document} />}\n    />\n  )\n}\n\nexport default Projects\n"]},"metadata":{},"sourceType":"module"}