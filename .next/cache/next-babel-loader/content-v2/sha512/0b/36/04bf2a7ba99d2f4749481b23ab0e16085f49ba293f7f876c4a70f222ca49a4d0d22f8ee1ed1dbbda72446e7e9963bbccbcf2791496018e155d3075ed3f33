{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport YouTube from 'react-youtube';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions';\nimport HTMLView from '../HTMLView';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ProjectView__Wrap\",\n  componentId: \"sc-1fg5jgh-0\"\n})([\"\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Container = styled(Row).withConfig({\n  displayName: \"ProjectView__Container\",\n  componentId: \"sc-1fg5jgh-1\"\n})([\"@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\nexport const Media = styled(Column).withConfig({\n  displayName: \"ProjectView__Media\",\n  componentId: \"sc-1fg5jgh-2\"\n})([\"grid-gap:5px;flex-basis:35%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"ProjectView__Content\",\n  componentId: \"sc-1fg5jgh-3\"\n})([\"justify-content:space-between;flex-basis:65%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport const Screenshots = styled(Row).withConfig({\n  displayName: \"ProjectView__Screenshots\",\n  componentId: \"sc-1fg5jgh-4\"\n})([\"justify-content:space-between;grid-gap:5px;\"]);\nexport const Screenshot = styled.div.withConfig({\n  displayName: \"ProjectView__Screenshot\",\n  componentId: \"sc-1fg5jgh-5\"\n})([\"position:relative;z-index:var(--z-12);width:auto;height:var(--input-height-s);min-width:var(--input-height-s);min-height:var(--input-height-s);border-radius:var(--surface-border-radius);overflow:hidden;transition:opacity 150ms ease;\", \" img{width:100%;height:100%;object-fit:cover;}\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\nexport const ScreenshotsCounter = styled(Text).withConfig({\n  displayName: \"ProjectView__ScreenshotsCounter\",\n  componentId: \"sc-1fg5jgh-6\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;span{position:relative;z-index:var(--z-12);color:white;}&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;background:var(--default-color-accent);border-radius:var(--surface-border-radius);opacity:0.65;}\"]);\nexport const CentralAlert = styled(Alert).withConfig({\n  displayName: \"ProjectView__CentralAlert\",\n  componentId: \"sc-1fg5jgh-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;text-align:center;\"]);\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ProjectView__Poster\",\n  componentId: \"sc-1fg5jgh-8\"\n})([\"object-fit:cover;border-radius:var(--surface-border-radius);flex-grow:1;transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\nexport const Difinitions = styled(Row).withConfig({\n  displayName: \"ProjectView__Difinitions\",\n  componentId: \"sc-1fg5jgh-9\"\n})([\"flex-grow:100;justify-content:space-between;grid-gap:var(--default-gap);@media only screen and (max-width:480px){flex-direction:column;}\"]);\nexport const Presentation = styled(YouTube).withConfig({\n  displayName: \"ProjectView__Presentation\",\n  componentId: \"sc-1fg5jgh-10\"\n})([\"display:flex;flex-grow:1;width:100%;border-radius:var(--surface-border-radius);overflow:hidden;iframe{width:100%;}\"]);\nexport const Actions = styled(Row).withConfig({\n  displayName: \"ProjectView__Actions\",\n  componentId: \"sc-1fg5jgh-11\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\nexport const Files = styled(Grid).withConfig({\n  displayName: \"ProjectView__Files\",\n  componentId: \"sc-1fg5jgh-12\"\n})([\"\"]);\nexport const Members = styled(Grid).withConfig({\n  displayName: \"ProjectView__Members\",\n  componentId: \"sc-1fg5jgh-13\"\n})([\"\"]);\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  var _data$getProject$scre, _data$getProject$cate, _data$getProject$comp, _data$getProject$comp2, _data$getProject$comp3, _data$getProject$memb, _data$getProject$memb2, _data$getProject$file;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  });\n  const [isLiked, setLike] = useState(liked);\n  const [screenshots, setScreenshots] = useState([]);\n  const [residue, setResidue] = useState(0);\n  const [videoId, setVideoId] = useState(null);\n\n  const onClickLike = () => {\n    if (onLike) onLike();\n    setLike(!isLiked);\n  };\n\n  useEffect(() => {\n    if (!loading && data) {\n      var _url$searchParams;\n\n      const response = data.getProject;\n      const images = [response.preview, ...response.screenshots];\n      const slicedImages = images.slice(0, slicedFactor);\n      const url = response.presentation && new URL(response.presentation);\n      setResidue((images.length || slicedFactor) - slicedFactor);\n      setVideoId(url === null || url === void 0 ? void 0 : (_url$searchParams = url.searchParams) === null || _url$searchParams === void 0 ? void 0 : _url$searchParams.get('v'));\n      setScreenshots(slicedImages);\n    }\n  }, [loading, data, slicedFactor]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Media, null, data.getProject.preview ? /*#__PURE__*/React.createElement(Poster, {\n    src: data.getProject.preview.path,\n    onClick: () => onScreenshotClick && onScreenshotClick(data.getProject.preview, data.getProject.preview.id, [data.getProject.preview, ...data.getProject.screenshots])\n  }) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041F\\u0440\\u0435\\u0432\\u044C\\u044E \\u043D\\u0435\\u0442\"), data.getProject.screenshots && ((_data$getProject$scre = data.getProject.screenshots) === null || _data$getProject$scre === void 0 ? void 0 : _data$getProject$scre.length) > 0 && /*#__PURE__*/React.createElement(Screenshots, null, screenshots.map((screenshot, index) => /*#__PURE__*/React.createElement(Screenshot, {\n    key: screenshot.id,\n    onClick: () => onScreenshotClick && onScreenshotClick(screenshot, screenshot.id, [data.getProject.preview, ...data.getProject.screenshots])\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: screenshot.path,\n    alt: screenshot.name\n  }), index === (screenshots === null || screenshots === void 0 ? void 0 : screenshots.length) - 1 && residue > 0 && /*#__PURE__*/React.createElement(ScreenshotsCounter, null, /*#__PURE__*/React.createElement(\"span\", null, \"+\", residue)))))), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Meta, {\n    category: (_data$getProject$cate = data.getProject.category) === null || _data$getProject$cate === void 0 ? void 0 : _data$getProject$cate.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data.getProject.title), /*#__PURE__*/React.createElement(Text, null, data.getProject.description)), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Difinitions, null, /*#__PURE__*/React.createElement(Difinition, _extends({}, data.getProject.company ? {\n    img: (_data$getProject$comp = data.getProject.company) === null || _data$getProject$comp === void 0 ? void 0 : (_data$getProject$comp2 = _data$getProject$comp.avatar) === null || _data$getProject$comp2 === void 0 ? void 0 : _data$getProject$comp2.path\n  } : {\n    icon: 'work'\n  }, {\n    label: 'Компания',\n    text: ((_data$getProject$comp3 = data.getProject.company) === null || _data$getProject$comp3 === void 0 ? void 0 : _data$getProject$comp3.name) || '-',\n    onLink: () => {\n      var _data$getProject$comp4;\n\n      return onCompanyLink((_data$getProject$comp4 = data.getProject.company) === null || _data$getProject$comp4 === void 0 ? void 0 : _data$getProject$comp4.email);\n    }\n  })), !owned && (onLike || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onLike && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Мне нравится'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickLike,\n    revert: !isLiked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'heart',\n    stroke: isLiked ? 'white' : 'var(--default-color-accent)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Добавить проект к себе'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onAdd,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'var(--default-color-accent)'\n  })))))))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.body && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data.getProject.body\n  }), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.presentation && videoId && /*#__PURE__*/React.createElement(Presentation, {\n    videoId: videoId\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), data.getProject.members && ((_data$getProject$memb = data.getProject.members) === null || _data$getProject$memb === void 0 ? void 0 : _data$getProject$memb.length) > 0 && /*#__PURE__*/React.createElement(Members, {\n    percentage: 'minmax(320px, 1fr)'\n  }, data.getProject.members.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: getLabelRole(member.account),\n      text: member.name,\n      onLink: () => onMemberLink && onMemberLink(member.email)\n    });\n  })), (!data.getProject.members || ((_data$getProject$memb2 = data.getProject.members) === null || _data$getProject$memb2 === void 0 ? void 0 : _data$getProject$memb2.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u044B\"), data.getProject.files && data.getProject.files.length > 0 && /*#__PURE__*/React.createElement(Files, {\n    percentage: 'minmax(256px, 1fr)'\n  }, data.getProject.files.map(file => /*#__PURE__*/React.createElement(Difinition, {\n    key: file.id,\n    icon: 'paper',\n    label: file.filename,\n    text: getFileSize(file.size),\n    onLink: () => onFileLink && onFileLink(file)\n  }))), (!data.getProject.files || ((_data$getProject$file = data.getProject.files) === null || _data$getProject$file === void 0 ? void 0 : _data$getProject$file.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u043E\\u0432 \\u043D\\u0435\\u0442\")) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}