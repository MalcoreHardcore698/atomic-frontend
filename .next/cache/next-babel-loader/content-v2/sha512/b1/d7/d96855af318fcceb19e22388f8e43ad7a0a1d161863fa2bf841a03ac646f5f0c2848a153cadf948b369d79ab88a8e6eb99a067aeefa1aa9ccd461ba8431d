{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Row from '../../atomic-ui/components/Row';\nimport Avatar, { Wrap as WrapAvatar } from '../../atomic-ui/components/Avatar';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Badge from '../../atomic-ui/components/Badge';\nimport { getLabelRole } from '../../atomic-ui/utils/functions';\nconst defaultColor = 'rgba(255, 255, 255, 25%)';\nconst activeColor = 'var(--default-color-accent)';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"SideBar__Wrap\",\n  componentId: \"sc-158a552-0\"\n})([\"--padding-offset:15px;display:flex;flex-direction:column;width:240px;height:100vh;background:var(--admin-color-accent);color:white;overflow:hidden;overflow-y:auto;@media only screen and (max-width:996px){width:62px;}\"]);\n_c = Wrap;\nexport const Profile = styled(Row).withConfig({\n  displayName: \"SideBar__Profile\",\n  componentId: \"sc-158a552-1\"\n})([\"padding:var(--default-gap) var(--default-gap) 5px var(--default-gap);@media only screen and (max-width:996px){padding:var(--default-gap) var(--default-gap) 0 var(--default-gap);\", \"{max-width:var(--input-height-s);max-height:var(--input-height-s);min-width:var(--input-height-s);min-height:var(--input-height-s);width:var(--input-height-s);height:var(--input-height-s);}}\"], WrapAvatar);\n_c2 = Profile;\nexport const Info = styled(Column).withConfig({\n  displayName: \"SideBar__Info\",\n  componentId: \"sc-158a552-2\"\n})([\"grid-gap:0;\"]);\n_c3 = Info;\nexport const Name = styled(Title).withConfig({\n  displayName: \"SideBar__Name\",\n  componentId: \"sc-158a552-3\"\n})([\"font-size:var(--font-h4);font-weight:var(--font-weight-medium);\"]);\n_c4 = Name;\nexport const Role = styled(Text).withConfig({\n  displayName: \"SideBar__Role\",\n  componentId: \"sc-158a552-4\"\n})([\"color:\", \";\"], defaultColor);\n_c5 = Role;\nexport const Strip = styled.div.withConfig({\n  displayName: \"SideBar__Strip\",\n  componentId: \"sc-158a552-5\"\n})([\"display:flex;justify-content:space-between;align-items:center;padding:5px var(--default-gap);a{position:relative;padding:0 15px;transition:background 150ms ease;&.active,&:hover{background:#10151c;}}@media only screen and (max-width:480px){padding:5px 0;}\"]);\n_c6 = Strip;\nexport const Label = styled(Row).withConfig({\n  displayName: \"SideBar__Label\",\n  componentId: \"sc-158a552-6\"\n})([\"align-items:center;\"]);\n_c7 = Label;\nexport const LabelIcon = styled(Icon).withConfig({\n  displayName: \"SideBar__LabelIcon\",\n  componentId: \"sc-158a552-7\"\n})([\"width:var(--input-height-s);height:var(--input-height-s);background:var(--admin-color-accent-dim);border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:white;\"]));\n_c8 = LabelIcon;\nexport const LabelText = styled(Text).withConfig({\n  displayName: \"SideBar__LabelText\",\n  componentId: \"sc-158a552-8\"\n})([\"color:\", \";font-weight:var(--font-weight-medium);\", \"\"], defaultColor, ({\n  active\n}) => active && css([\"color:white;\"]));\n_c9 = LabelText;\nexport const LinkStrip = ({\n  active,\n  icon,\n  text,\n  count\n}) => /*#__PURE__*/React.createElement(Strip, null, /*#__PURE__*/React.createElement(Label, null, /*#__PURE__*/React.createElement(LabelIcon, {\n  icon: icon,\n  size: 'xs',\n  stroke: active ? activeColor : defaultColor,\n  active: active\n}), /*#__PURE__*/React.createElement(LabelText, {\n  active: active\n}, text)), count && /*#__PURE__*/React.createElement(Badge, {\n  count: count,\n  size: 'xs',\n  style: !active ? {\n    background: defaultColor,\n    borderColor: 'transparent',\n    color: 'var(--admin-color-accent)'\n  } : {}\n}));\n_c10 = LinkStrip;\nexport const Side = ({\n  user,\n  link: Link,\n  links,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, props, /*#__PURE__*/React.createElement(Profile, null, /*#__PURE__*/React.createElement(Avatar, {\n  src: user.avatar,\n  alt: 'Avatar',\n  size: 'm'\n}), /*#__PURE__*/React.createElement(Info, null, /*#__PURE__*/React.createElement(Name, null, user.name), /*#__PURE__*/React.createElement(Role, null, getLabelRole(user.role)))), /*#__PURE__*/React.createElement(Divider, {\n  style: {\n    background: 'var(--admin-color-accent-dim)',\n    margin: '10px 0'\n  }\n}), links && links.length > 0 && links.map((link, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n  key: index\n}, link.divide && /*#__PURE__*/React.createElement(Divider, {\n  style: {\n    background: 'var(--admin-color-accent-dim)',\n    margin: '10px 0'\n  }\n}), /*#__PURE__*/React.createElement(Link, {\n  href: link.path\n}, link.component))));\n_c11 = Side;\nSide.defaultProps = {\n  link: ({\n    children,\n    ...props\n  }) => /*#__PURE__*/React.createElement(\"a\", props, children)\n};\nexport default Side;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Profile\");\n$RefreshReg$(_c3, \"Info\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"Role\");\n$RefreshReg$(_c6, \"Strip\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"LabelIcon\");\n$RefreshReg$(_c9, \"LabelText\");\n$RefreshReg$(_c10, \"LinkStrip\");\n$RefreshReg$(_c11, \"Side\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/SideBar/index.js"],"names":["React","styled","css","Column","Row","Avatar","Wrap","WrapAvatar","Divider","Title","Text","Icon","Badge","getLabelRole","defaultColor","activeColor","Profile","Info","Name","Role","Strip","div","Label","LabelIcon","active","LabelText","LinkStrip","icon","text","count","background","borderColor","color","Side","user","link","Link","links","props","avatar","name","role","margin","length","map","index","divide","path","component","defaultProps","children"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Row from '../../atomic-ui/components/Row'\nimport Avatar, { Wrap as WrapAvatar } from '../../atomic-ui/components/Avatar'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Badge from '../../atomic-ui/components/Badge'\nimport { getLabelRole } from '../../atomic-ui/utils/functions'\n\nconst defaultColor = 'rgba(255, 255, 255, 25%)'\nconst activeColor = 'var(--default-color-accent)'\n\nexport const Wrap = styled(Row)`\n  --padding-offset: 15px;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 240px;\n  height: 100vh;\n\n  background: var(--admin-color-accent);\n  color: white;\n\n  overflow: hidden;\n  overflow-y: auto;\n\n  @media only screen and (max-width: 996px) {\n    width: 62px;\n  }\n`\n\nexport const Profile = styled(Row)`\n  padding: var(--default-gap) var(--default-gap) 5px var(--default-gap);\n\n  @media only screen and (max-width: 996px) {\n    padding: var(--default-gap) var(--default-gap) 0 var(--default-gap);\n\n    ${WrapAvatar} {\n      max-width: var(--input-height-s);\n      max-height: var(--input-height-s);\n      min-width: var(--input-height-s);\n      min-height: var(--input-height-s);\n      width: var(--input-height-s);\n      height: var(--input-height-s);\n    }\n  }\n`\n\nexport const Info = styled(Column)`\n  grid-gap: 0;\n`\n\nexport const Name = styled(Title)`\n  font-size: var(--font-h4);\n  font-weight: var(--font-weight-medium);\n`\n\nexport const Role = styled(Text)`\n  color: ${defaultColor};\n`\n\nexport const Strip = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px var(--default-gap);\n\n  a {\n    position: relative;\n    padding: 0 15px;\n    transition: background 150ms ease;\n\n    &.active,\n    &:hover {\n      background: #10151c;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 5px 0;\n  }\n`\n\nexport const Label = styled(Row)`\n  align-items: center;\n`\n\nexport const LabelIcon = styled(Icon)`\n  width: var(--input-height-s);\n  height: var(--input-height-s);\n  background: var(--admin-color-accent-dim);\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: white;\n    `}\n`\n\nexport const LabelText = styled(Text)`\n  color: ${defaultColor};\n  font-weight: var(--font-weight-medium);\n\n  ${({ active }) =>\n    active &&\n    css`\n      color: white;\n    `}\n`\n\nexport const LinkStrip = ({ active, icon, text, count }) => (\n  <Strip>\n    <Label>\n      <LabelIcon\n        icon={icon}\n        size={'xs'}\n        stroke={active ? activeColor : defaultColor}\n        active={active}\n      />\n      <LabelText active={active}>{text}</LabelText>\n    </Label>\n    {count && (\n      <Badge\n        count={count}\n        size={'xs'}\n        style={\n          !active\n            ? {\n                background: defaultColor,\n                borderColor: 'transparent',\n                color: 'var(--admin-color-accent)'\n              }\n            : {}\n        }\n      />\n    )}\n  </Strip>\n)\n\nexport const Side = ({ user, link: Link, links, ...props }) => (\n  <Wrap {...props}>\n    <Profile>\n      <Avatar src={user.avatar} alt={'Avatar'} size={'m'} />\n      <Info>\n        <Name>{user.name}</Name>\n        <Role>{getLabelRole(user.role)}</Role>\n      </Info>\n    </Profile>\n\n    <Divider style={{ background: 'var(--admin-color-accent-dim)', margin: '10px 0' }} />\n\n    {links &&\n      links.length > 0 &&\n      links.map((link, index) => (\n        <React.Fragment key={index}>\n          {link.divide && (\n            <Divider style={{ background: 'var(--admin-color-accent-dim)', margin: '10px 0' }} />\n          )}\n          <Link href={link.path}>{link.component}</Link>\n        </React.Fragment>\n      ))}\n  </Wrap>\n)\n\nSide.defaultProps = {\n  link: ({ children, ...props }) => <a {...props}>{children}</a>\n}\n\nexport default Side\n"]},"metadata":{},"sourceType":"module"}