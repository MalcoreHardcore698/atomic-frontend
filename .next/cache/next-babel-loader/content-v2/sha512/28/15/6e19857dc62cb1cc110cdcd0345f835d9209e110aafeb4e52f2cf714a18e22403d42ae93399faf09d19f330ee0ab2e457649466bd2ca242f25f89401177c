{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo } from 'react';\nimport List from '../List';\nimport ProjectSuit from '../ProjectSuit';\nimport { useProject } from '../../hooks/useProject';\nimport { INITIAL_DISPLAY_METHOD } from '../../layouts/content';\nimport { COMMON_LOAD_LIMIT, COMMON_START_OFFSET } from '../../constants';\nimport queries from '../../graphql/queries';\nconst Document = memo(({\n  layout,\n  preview,\n  document,\n  withStatus\n}) => {\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n    layout: layout,\n    project: document,\n    preview: preview,\n    withStatus: withStatus\n  }));\n});\nexport const ProjectList = memo(({\n  limit,\n  layout,\n  preview,\n  variables,\n  startOffset,\n  emptyMessage,\n  initialDisplayMethod,\n  withoutMore,\n  withStatus\n}) => /*#__PURE__*/React.createElement(List, {\n  type: 'getProjects',\n  variables: variables,\n  emptyMessage: emptyMessage,\n  query: queries.GET_PROJECTS,\n  limit: limit !== null && limit !== void 0 ? limit : COMMON_LOAD_LIMIT,\n  startOffset: startOffset !== null && startOffset !== void 0 ? startOffset : COMMON_START_OFFSET,\n  initialDisplayMethod: initialDisplayMethod !== null && initialDisplayMethod !== void 0 ? initialDisplayMethod : INITIAL_DISPLAY_METHOD,\n  component: document => /*#__PURE__*/React.createElement(Document, {\n    layout: layout,\n    document: document,\n    preview: preview,\n    withStatus: withStatus\n  }),\n  withoutMore: withoutMore\n}));\nProjectList.defaultProps = {\n  emptyMessage: 'Проектов нет'\n};\nexport default ProjectList;","map":null,"metadata":{},"sourceType":"module"}