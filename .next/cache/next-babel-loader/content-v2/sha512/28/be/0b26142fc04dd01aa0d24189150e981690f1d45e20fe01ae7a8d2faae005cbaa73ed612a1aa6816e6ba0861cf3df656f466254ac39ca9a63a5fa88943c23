{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useMemo } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 } from 'uuid';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { useMutate } from '../hooks/useMutate';\nimport { useHelper } from '../hooks/useHelper';\nimport MainLayout from './main';\nimport Scaffold from '../components/Scaffold';\nimport AppBar from '../components/AppBar';\nimport Footer from '../components/Footer';\nimport { setLogout } from '../store/actions/user';\nimport { setDrawer } from '../store/actions/drawer';\nimport { onMenu, onNotification } from '../store/helpers';\nimport { onUserClientEdit } from '../store/helpers/user';\nimport { supportLinks, socials, contacts } from '../__mock__';\nimport queries from '../graphql/queries';\nconst Wrap = styled.div.withConfig({\n  displayName: \"default__Wrap\",\n  componentId: \"sc-2byuzg-0\"\n})([\"height:100vh;display:flex;flex-direction:column;justify-content:space-between;\"]);\n_c = Wrap;\nconst Main = styled.main.withConfig({\n  displayName: \"default__Main\",\n  componentId: \"sc-2byuzg-1\"\n})([\"padding:50px var(--main-offset-l);flex-grow:100;@media only screen and (max-width:996px){padding:25px var(--main-offset-m);}@media only screen and (max-width:768px){padding:25px var(--main-offset-s);}@media only screen and (max-width:480px){padding:25px var(--main-offset-xs);}\"]);\n_c2 = Main;\nconst Anchor = styled.a.withConfig({\n  displayName: \"default__Anchor\",\n  componentId: \"sc-2byuzg-2\"\n})([\"border-radius:25rem;padding:5px 15px;background:transparent;color:black;transition:all 150ms ease;\", \" \", \"\"], ({\n  link\n}) => link && css([\"&:hover{opacity:0.65;}\"]), ({\n  active,\n  link\n}) => active && link && css([\"background:var(--default-color-accent-dim);color:var(--default-color-accent-link);&:hover{opacity:1;}\"]));\n_c3 = Anchor;\nconst Loader = styled.div.withConfig({\n  displayName: \"default__Loader\",\n  componentId: \"sc-2byuzg-3\"\n})([\"position:fixed;top:0;left:0;display:flex;justify-content:center;align-items:center;width:100%;height:100%;\"]);\n_c4 = Loader;\nexport const DefaultLayout = ({\n  children,\n  title = 'Атомик',\n  scaffold\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const router = useRouter();\n  const {\n    data,\n    loading\n  } = useQuery(queries.GET_CATEGORIES);\n  const {\n    user\n  } = useSelector(state => ({\n    user: state.user\n  }));\n  const dispatch = useDispatch();\n  const categories = useMemo(() => (data === null || data === void 0 ? void 0 : data.getCategories) || [], [data]);\n  const isProjects = router.pathname.includes('projects');\n  const categoryId = router.query.category;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(MainLayout, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"next,javascript,nextjs,react\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"atomic project description\"\n  }), /*#__PURE__*/React.createElement(\"title\", null, title)), /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(AppBar, {\n    user: user.authenticated ? user : null,\n    logotype: '/images/logo.png',\n    link: ({\n      children,\n      href,\n      ...props\n    }) => /*#__PURE__*/React.createElement(Link, _extends({}, props, {\n      href: href\n    }), /*#__PURE__*/React.createElement(Anchor, {\n      active: router.pathname === href,\n      link: children.type.target === 'span'\n    }, children)),\n    links: [{\n      label: 'Проекты',\n      props: {\n        sublinks: categories.filter(category => category.type === 'DIVISION').map(category => ({\n          label: category.name,\n          props: {\n            active: categoryId === category.id,\n            onClick: () => router.push(`/projects?category=${category.id}`)\n          }\n        }))\n      },\n      active: isProjects\n    }, {\n      label: 'Авторы',\n      props: {\n        href: '/creators'\n      }\n    }, {\n      label: 'Новости',\n      props: {\n        href: '/articles'\n      }\n    }, {\n      label: 'О ресурсе',\n      props: {\n        href: '/about'\n      }\n    }],\n    onMenu: recall(onMenu, {\n      links: [{\n        text: 'Проекты',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/projects');\n        }\n      }, {\n        text: 'Авторы',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/creators');\n        }\n      }, {\n        text: 'Новости',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/articles');\n        }\n      }, {\n        text: 'О ресурсе',\n        onClick: () => {\n          dispatch(setDrawer(null));\n          router.push('/about');\n        }\n      }]\n    }),\n    onSettings: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      mutations: {\n        update: queries.UPDATE_CLIENT_USER,\n        del: queries.DELETE_USER,\n        changePassword: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onNotification: recall(onNotification, {\n      notifications: user.notifications\n    }),\n    onProfile: () => router.push('/profile'),\n    onLogin: () => router.push('/auth'),\n    onLogout: mutate(queries.LOGOUT, {}, () => dispatch(setLogout()))\n  }), scaffold && /*#__PURE__*/React.createElement(Scaffold, {\n    user: user,\n    image: scaffold.image,\n    title: scaffold.title,\n    background: scaffold.background,\n    primary: scaffold.primary,\n    secondary: scaffold.secondary,\n    residue: scaffold.residue,\n    onLike: scaffold.onLike,\n    onAdd: scaffold.onAdd,\n    onLink: scaffold.onLink,\n    onCompanyLink: scaffold.onCompanyLink,\n    onScreenshotClick: scaffold.onScreenshotClick\n  }), /*#__PURE__*/React.createElement(Main, null, children), /*#__PURE__*/React.createElement(Footer, {\n    contacts: contacts,\n    socials: socials,\n    catalog: {\n      title: 'Каталог',\n      links: categories.filter(category => category.type === 'DIVISION').map(link => /*#__PURE__*/React.createElement(Link, {\n        key: v4(),\n        href: `/projects?category=${link.id}`\n      }, /*#__PURE__*/React.createElement(\"a\", null, link.name)))\n    },\n    support: {\n      title: 'О компании',\n      links: supportLinks.map(link => /*#__PURE__*/React.createElement(Link, {\n        key: v4(),\n        href: link.path\n      }, /*#__PURE__*/React.createElement(\"a\", null, link.label)))\n    }\n  })));\n};\n\n_s(DefaultLayout, \"GGUhLwl63h3LD67/JOIDDvWRVZM=\", false, function () {\n  return [useHelper, useMutate, useRouter, useQuery, useSelector, useDispatch];\n});\n\n_c5 = DefaultLayout;\nexport default DefaultLayout;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Anchor\");\n$RefreshReg$(_c4, \"Loader\");\n$RefreshReg$(_c5, \"DefaultLayout\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/layouts/default.js"],"names":["React","useMemo","Head","Link","useRouter","styled","css","useQuery","useSelector","useDispatch","v4","Spinner","useMutate","useHelper","MainLayout","Scaffold","AppBar","Footer","setLogout","setDrawer","onMenu","onNotification","onUserClientEdit","supportLinks","socials","contacts","queries","Wrap","div","Main","main","Anchor","a","link","active","Loader","DefaultLayout","children","title","scaffold","recall","mutate","router","data","loading","GET_CATEGORIES","user","state","dispatch","categories","getCategories","isProjects","pathname","includes","categoryId","query","category","authenticated","href","props","type","target","label","sublinks","filter","map","name","id","onClick","push","links","text","email","mutations","update","UPDATE_CLIENT_USER","del","DELETE_USER","changePassword","notifications","LOGOUT","image","background","primary","secondary","residue","onLike","onAdd","onLink","onCompanyLink","onScreenshotClick","path"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport Head from 'next/head'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport Spinner from '../atomic-ui/components/Spinner'\n\nimport { useMutate } from '../hooks/useMutate'\nimport { useHelper } from '../hooks/useHelper'\nimport MainLayout from './main'\nimport Scaffold from '../components/Scaffold'\nimport AppBar from '../components/AppBar'\nimport Footer from '../components/Footer'\nimport { setLogout } from '../store/actions/user'\nimport { setDrawer } from '../store/actions/drawer'\nimport { onMenu, onNotification } from '../store/helpers'\nimport { onUserClientEdit } from '../store/helpers/user'\nimport { supportLinks, socials, contacts } from '../__mock__'\nimport queries from '../graphql/queries'\n\nconst Wrap = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Main = styled.main`\n  padding: 50px var(--main-offset-l);\n  flex-grow: 100;\n\n  @media only screen and (max-width: 996px) {\n    padding: 25px var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 25px var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 25px var(--main-offset-xs);\n  }\n`\n\nconst Anchor = styled.a`\n  border-radius: 25rem;\n  padding: 5px 15px;\n  background: transparent;\n  color: black;\n  transition: all 150ms ease;\n\n  ${({ link }) =>\n    link &&\n    css`\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n\n  ${({ active, link }) =>\n    active &&\n    link &&\n    css`\n      background: var(--default-color-accent-dim);\n      color: var(--default-color-accent-link);\n\n      &:hover {\n        opacity: 1;\n      }\n    `}\n`\n\nconst Loader = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n`\n\nexport const DefaultLayout = ({ children, title = 'Атомик', scaffold }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const router = useRouter()\n  const { data, loading } = useQuery(queries.GET_CATEGORIES)\n  const { user } = useSelector((state) => ({\n    user: state.user\n  }))\n  const dispatch = useDispatch()\n  const categories = useMemo(() => data?.getCategories || [], [data])\n\n  const isProjects = router.pathname.includes('projects')\n  const categoryId = router.query.category\n\n  if (loading) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <MainLayout>\n      <Head>\n        <meta name=\"keywords\" content=\"next,javascript,nextjs,react\" />\n        <meta name=\"description\" content=\"atomic project description\" />\n        <title>{title}</title>\n      </Head>\n\n      <Wrap>\n        <AppBar\n          user={user.authenticated ? user : null}\n          logotype={'/images/logo.png'}\n          link={({ children, href, ...props }) => (\n            <Link {...props} href={href}>\n              <Anchor active={router.pathname === href} link={children.type.target === 'span'}>\n                {children}\n              </Anchor>\n            </Link>\n          )}\n          links={[\n            {\n              label: 'Проекты',\n              props: {\n                sublinks: categories\n                  .filter((category) => category.type === 'DIVISION')\n                  .map((category) => ({\n                    label: category.name,\n                    props: {\n                      active: categoryId === category.id,\n                      onClick: () => router.push(`/projects?category=${category.id}`)\n                    }\n                  }))\n              },\n              active: isProjects\n            },\n            { label: 'Авторы', props: { href: '/creators' } },\n            { label: 'Новости', props: { href: '/articles' } },\n            { label: 'О ресурсе', props: { href: '/about' } }\n          ]}\n          onMenu={recall(onMenu, {\n            links: [\n              {\n                text: 'Проекты',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/projects')\n                }\n              },\n              {\n                text: 'Авторы',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/creators')\n                }\n              },\n              {\n                text: 'Новости',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/articles')\n                }\n              },\n              {\n                text: 'О ресурсе',\n                onClick: () => {\n                  dispatch(setDrawer(null))\n                  router.push('/about')\n                }\n              }\n            ]\n          })}\n          onSettings={recall(onUserClientEdit, {\n            user: user?.email,\n            mutations: {\n              update: queries.UPDATE_CLIENT_USER,\n              del: queries.DELETE_USER,\n              changePassword: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onNotification={recall(onNotification, { notifications: user.notifications })}\n          onProfile={() => router.push('/profile')}\n          onLogin={() => router.push('/auth')}\n          onLogout={mutate(queries.LOGOUT, {}, () => dispatch(setLogout()))}\n        />\n\n        {scaffold && (\n          <Scaffold\n            user={user}\n            image={scaffold.image}\n            title={scaffold.title}\n            background={scaffold.background}\n            primary={scaffold.primary}\n            secondary={scaffold.secondary}\n            residue={scaffold.residue}\n            onLike={scaffold.onLike}\n            onAdd={scaffold.onAdd}\n            onLink={scaffold.onLink}\n            onCompanyLink={scaffold.onCompanyLink}\n            onScreenshotClick={scaffold.onScreenshotClick}\n          />\n        )}\n\n        <Main>{children}</Main>\n\n        <Footer\n          contacts={contacts}\n          socials={socials}\n          catalog={{\n            title: 'Каталог',\n            links: categories\n              .filter((category) => category.type === 'DIVISION')\n              .map((link) => (\n                <Link key={v4()} href={`/projects?category=${link.id}`}>\n                  <a>{link.name}</a>\n                </Link>\n              ))\n          }}\n          support={{\n            title: 'О компании',\n            links: supportLinks.map((link) => (\n              <Link key={v4()} href={link.path}>\n                <a>{link.label}</a>\n              </Link>\n            ))\n          }}\n        />\n      </Wrap>\n    </MainLayout>\n  )\n}\n\nexport default DefaultLayout\n"]},"metadata":{},"sourceType":"module"}