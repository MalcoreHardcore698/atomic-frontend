{"ast":null,"code":"import React, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Comment from '../../atomic-ui/components/Comment';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Comments__Wrap\",\n  componentId: \"sc-6rcmxi-0\"\n})([\"flex-grow:1;\"]);\nexport const CentralAlert = styled(Alert).withConfig({\n  displayName: \"Comments__CentralAlert\",\n  componentId: \"sc-6rcmxi-1\"\n})([\"display:flex;justify-content:center;align-items:center;text-align:center;width:100%;flex-grow:1;\"]);\nexport const Comments = ({\n  comments,\n  loading,\n  appearance,\n  onLink,\n  onReply,\n  onLike,\n  onAttach,\n  onSubmit\n}) => {\n  const [message, setMessage] = useState('');\n  const messageRef = useRef(null);\n  return /*#__PURE__*/React.createElement(Wrap, null, comments && comments.length > 0 ? comments.map(comment => /*#__PURE__*/React.createElement(Comment, {\n    key: comment.id,\n    user: comment.user,\n    message: comment.message,\n    likes: comment.likes,\n    time: comment.time,\n    onLink: onLink,\n    onReply: onReply,\n    onLike: onLike\n  })) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C\"), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !comments,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: 'text',\n    ref: messageRef,\n    placeholder: 'Отправьте комментарий...',\n    disabled: loading && !comments,\n    appearance: appearance,\n    onChange: e => {\n      var _e$target;\n\n      return setMessage((e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '');\n    },\n    onKeyDown: e => {\n      // Pressed ENTER\n      if (e.keyCode === 13) {\n        onSubmit(message);\n        messageRef.current.value = '';\n      }\n    },\n    tabIndex: -1\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onClick: () => {\n      onSubmit(message);\n      messageRef.current.value = '';\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\nComments.defaultProps = {\n  appearance: 'default'\n};\nexport default Comments;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Comments/index.js"],"names":["React","useRef","useState","styled","Row","Column","Comment","Alert","Input","Button","Icon","Wrap","CentralAlert","Comments","comments","loading","appearance","onLink","onReply","onLike","onAttach","onSubmit","message","setMessage","messageRef","length","map","comment","id","user","likes","time","e","target","value","keyCode","current","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGR,MAAM,CAACE,MAAD,CAAT;AAAA;AAAA;AAAA,oBAAV;AAIP,OAAO,MAAMO,YAAY,GAAGT,MAAM,CAACI,KAAD,CAAT;AAAA;AAAA;AAAA,wGAAlB;AASP,OAAO,MAAMM,QAAQ,GAAG,CAAC;AACvBC,EAAAA,QADuB;AAEvBC,EAAAA,OAFuB;AAGvBC,EAAAA,UAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA,OALuB;AAMvBC,EAAAA,MANuB;AAOvBC,EAAAA,QAPuB;AAQvBC,EAAAA;AARuB,CAAD,KASlB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMsB,UAAU,GAAGvB,MAAM,CAAC,IAAD,CAAzB;AAEA,sBACE,oBAAC,IAAD,QACGa,QAAQ,IAAIA,QAAQ,CAACW,MAAT,GAAkB,CAA9B,GACCX,QAAQ,CAACY,GAAT,CAAcC,OAAD,iBACX,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,IAAA,IAAI,EAAED,OAAO,CAACE,IAFhB;AAGE,IAAA,OAAO,EAAEF,OAAO,CAACL,OAHnB;AAIE,IAAA,KAAK,EAAEK,OAAO,CAACG,KAJjB;AAKE,IAAA,IAAI,EAAEH,OAAO,CAACI,IALhB;AAME,IAAA,MAAM,EAAEd,MANV;AAOE,IAAA,OAAO,EAAEC,OAPX;AAQE,IAAA,MAAM,EAAEC;AARV,IADF,CADD,gBAcC,oBAAC,YAAD,qNAfJ,eAkBE,oBAAC,GAAD,qBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,MAAd;AAAsB,IAAA,QAAQ,EAAEJ,OAAO,IAAI,CAACD,QAA5C;AAAsD,IAAA,QAAQ,EAAEM;AAAhE,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,QAAZ;AAAsB,IAAA,MAAM,EAAE;AAA9B,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,GAAG,EAAEI,UAFP;AAGE,IAAA,WAAW,EAAE,0BAHf;AAIE,IAAA,QAAQ,EAAET,OAAO,IAAI,CAACD,QAJxB;AAKE,IAAA,UAAU,EAAEE,UALd;AAME,IAAA,QAAQ,EAAGgB,CAAD;AAAA;;AAAA,aAAOT,UAAU,CAAC,CAAAS,CAAC,SAAD,IAAAA,CAAC,WAAD,yBAAAA,CAAC,CAAEC,MAAH,wDAAWC,KAAX,KAAoB,EAArB,CAAjB;AAAA,KANZ;AAOE,IAAA,SAAS,EAAGF,CAAD,IAAO;AAChB;AACA,UAAIA,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AACpBd,QAAAA,QAAQ,CAACC,OAAD,CAAR;AACAE,QAAAA,UAAU,CAACY,OAAX,CAAmBF,KAAnB,GAA2B,EAA3B;AACD;AACF,KAbH;AAcE,IAAA,QAAQ,EAAE,CAAC;AAdb,IAJF,eAoBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,QAAQ,CAACC,OAAD,CAAR;AACAE,MAAAA,UAAU,CAACY,OAAX,CAAmBF,KAAnB,GAA2B,EAA3B;AACD;AALH,kBAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,MAAZ;AAAoB,IAAA,MAAM,EAAE;AAA5B,IANF,CApBF,CAlBF,CADF;AAkDD,CA/DM;AAiEPrB,QAAQ,CAACwB,YAAT,GAAwB;AACtBrB,EAAAA,UAAU,EAAE;AADU,CAAxB;AAIA,eAAeH,QAAf","sourcesContent":["import React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Comment from '../../atomic-ui/components/Comment'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\n\nexport const Wrap = styled(Column)`\n  flex-grow: 1;\n`\n\nexport const CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  flex-grow: 1;\n`\n\nexport const Comments = ({\n  comments,\n  loading,\n  appearance,\n  onLink,\n  onReply,\n  onLike,\n  onAttach,\n  onSubmit\n}) => {\n  const [message, setMessage] = useState('')\n  const messageRef = useRef(null)\n\n  return (\n    <Wrap>\n      {comments && comments.length > 0 ? (\n        comments.map((comment) => (\n          <Comment\n            key={comment.id}\n            user={comment.user}\n            message={comment.message}\n            likes={comment.likes}\n            time={comment.time}\n            onLink={onLink}\n            onReply={onReply}\n            onLike={onLike}\n          />\n        ))\n      ) : (\n        <CentralAlert>Вы можете оставить комментарий первым</CentralAlert>\n      )}\n\n      <Row>\n        <Button kind={'icon'} disabled={loading || !comments} onSubmit={onAttach}>\n          <Icon icon={'attach'} stroke={'white'} />\n        </Button>\n        <Input\n          name={'text'}\n          ref={messageRef}\n          placeholder={'Отправьте комментарий...'}\n          disabled={loading && !comments}\n          appearance={appearance}\n          onChange={(e) => setMessage(e?.target?.value || '')}\n          onKeyDown={(e) => {\n            // Pressed ENTER\n            if (e.keyCode === 13) {\n              onSubmit(message)\n              messageRef.current.value = ''\n            }\n          }}\n          tabIndex={-1}\n        />\n        <Button\n          kind={'icon'}\n          onClick={() => {\n            onSubmit(message)\n            messageRef.current.value = ''\n          }}>\n          <Icon icon={'send'} stroke={'white'} />\n        </Button>\n      </Row>\n    </Wrap>\n  )\n}\n\nComments.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}