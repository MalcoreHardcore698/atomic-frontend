{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  grid-gap: 20px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\nimport { getDaysInMonth, isWeekDay, parseDate } from '../../assets/scripts/date';\nimport DateMonth from '../DateMonth';\nimport Divider from '../Divider';\nimport Input from '../Input';\nexport var Wrap = styled.div(_templateObject());\nvar defaultYear = new Date().getFullYear();\nexport var DateSheet = function DateSheet(_ref) {\n  var lang = _ref.lang,\n      value = _ref.value,\n      style = _ref.style,\n      sheets = _ref.sheets,\n      className = _ref.className,\n      canEditYear = _ref.canEditYear,\n      withMarkers = _ref.withMarkers,\n      withNavigate = _ref.withNavigate,\n      withYearDisplay = _ref.withYearDisplay,\n      onCompare = _ref.onCompare,\n      onChange = _ref.onChange;\n  var date = parseDate(value);\n\n  var _useState = useState([]),\n      months = _useState[0],\n      setMonths = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      filterDate = _useState2[0],\n      setFilterDate = _useState2[1];\n\n  useEffect(function () {\n    setMonths(new Array(sheets || 1).fill(null).map(function (_, index) {\n      var startDate = new Date(filterDate);\n      var current = new Date(startDate.getFullYear(), startDate.getMonth() + index);\n      var month = current.getMonth();\n      var label = current.toLocaleString(lang, {\n        month: 'long'\n      });\n      return {\n        label: label,\n        days: getDaysInMonth(current.getFullYear(), month)\n      };\n    }));\n  }, [filterDate, sheets, lang]);\n  return __jsx(Wrap, {\n    className: className,\n    style: style\n  }, canEditYear && __jsx(Input, {\n    type: 'number',\n    name: 'year',\n    defaultValue: date && date.getFullYear() || defaultYear,\n    onChange: function onChange(e) {\n      return setFilterDate(new Date(e.target.value, filterDate.getMonth(), filterDate.getDate()));\n    },\n    horizontalAlignment: 'center',\n    placeholder: defaultYear,\n    appearance: 'ghost',\n    min: 1920,\n    max: 2100,\n    required: true\n  }), canEditYear && __jsx(Divider, {\n    clear: true\n  }), months.map(function (month) {\n    return __jsx(DateMonth, {\n      key: v4(),\n      value: date,\n      lang: lang,\n      month: month,\n      filterDate: filterDate,\n      setFilterDate: setFilterDate,\n      withNavigate: !!withNavigate,\n      withMarkers: withMarkers !== null && withMarkers !== void 0 ? withMarkers : true,\n      withYearDisplay: withYearDisplay !== null && withYearDisplay !== void 0 ? withYearDisplay : months.length === 1,\n      onCompare: onCompare || isWeekDay,\n      onChange: onChange\n    });\n  }));\n};\nexport default DateSheet;","map":null,"metadata":{},"sourceType":"module"}