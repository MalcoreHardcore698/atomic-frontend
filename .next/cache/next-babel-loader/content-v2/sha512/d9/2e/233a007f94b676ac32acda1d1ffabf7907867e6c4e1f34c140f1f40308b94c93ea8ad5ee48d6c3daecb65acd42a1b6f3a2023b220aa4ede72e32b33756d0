{"ast":null,"code":"export function hasAccess(user, permission) {\n  var _user$role;\n\n  return ((user === null || user === void 0 ? void 0 : (_user$role = user.role) === null || _user$role === void 0 ? void 0 : _user$role.permissions) || []).includes(permission);\n}\nexport function createSelectOption(option) {\n  return {\n    value: option,\n    label: option\n  };\n}\nexport function createSelectOptions(options) {\n  return options.map(option => createSelectOption(option));\n}\nexport const getLabelStatus = status => {\n  switch (status) {\n    case 'PUBLISHED':\n      return 'Опубликовано';\n\n    case 'MODERATION':\n      return 'На модерации';\n\n    default:\n      return status;\n  }\n};\nexport const getLabelRole = role => {\n  switch (role) {\n    case 'ADMIN':\n      return 'Админ';\n\n    case 'USER':\n      return 'Пользователь';\n\n    case 'MODERATOR':\n      return 'Модератор';\n\n    case 'OFICIAL':\n      return 'Оф. лицо';\n\n    case 'ENTITY':\n      return 'Юр. лицо';\n\n    case 'INDIVIDUAL':\n      return 'Физ. лицо';\n\n    case 'RESPONSIBLE ADMIN':\n      return 'Отвественный админ';\n\n    case 'RESPONSIBLE USER':\n      return 'Отвественный пользователь';\n\n    case 'RESPONSIBLE MODERATOR':\n      return 'Отвественный модератор';\n\n    case 'RESPONSIBLE OFICIAL':\n      return 'Отвественное оф. лицо';\n\n    case 'RESPONSIBLE ENTITY':\n      return 'Отвественное юр. лицо';\n\n    case 'RESPONSIBLE INDIVIDUAL':\n      return 'Отвественное физ. лицо';\n\n    default:\n      return role;\n  }\n};\nexport const getLabelCategory = category => {\n  switch (category) {\n    case 'TICKET':\n      return 'Тема обращения';\n\n    case 'DIVISION':\n      return 'Раздел проектов/статей';\n\n    default:\n      return category;\n  }\n};\nexport const getLabelPermission = permission => {\n  switch (permission) {\n    case 'ACCESS_CLIENT':\n      return 'Доступ к сайту';\n\n    case 'ACCESS_DASHBOARD':\n      return 'Доступ к административной панели';\n\n    case 'VIEW_USER':\n      return 'Просмотр пользователя';\n\n    case 'VIEW_CATEGORY':\n      return 'Просмотр категории';\n\n    case 'VIEW_ARTICLE':\n      return 'Просмотр статьи';\n\n    case 'VIEW_PROJECT':\n      return 'Просмотр проекта';\n\n    case 'VIEW_TICKET':\n      return 'Просмотр обращения';\n\n    case 'VIEW_ROLE':\n      return 'Просмотр роли';\n\n    case 'ADD_USER':\n      return 'Создание пользователя';\n\n    case 'ADD_CATEGORY':\n      return 'Создание категории';\n\n    case 'ADD_ARTICLE':\n      return 'Создание статьи';\n\n    case 'ADD_PROJECT':\n      return 'Создание проекта';\n\n    case 'EDIT_USER':\n      return 'Редактирвоание пользователя';\n\n    case 'EDIT_CATEGORY':\n      return 'Редактирование категории';\n\n    case 'EDIT_ARTICLE':\n      return 'Редактирвоание статьи';\n\n    case 'EDIT_PROJECT':\n      return 'Редактирвоание проекта';\n\n    case 'DELETE_USER':\n      return 'Удаление пользователя';\n\n    case 'DELETE_CATEGORY':\n      return 'Удаление категории';\n\n    case 'DELETE_ARTICLE':\n      return 'Удаление статьи';\n\n    case 'DELETE_PROJECT':\n      return 'Удаление проекта';\n\n    case 'COMMENT_ARTICLE':\n      return 'Комментирование статьи';\n\n    case 'COMMENT_PROJECT':\n      return 'Комментирование проекта';\n\n    case 'PURPOSE_PROJECT':\n      return 'Предложение проекта';\n\n    case 'PURPOSE_ARTICLE':\n      return 'Предложение статьи';\n\n    case 'CHATTING':\n      return 'Общение';\n\n    default:\n      return 'Не определено';\n  }\n};\nexport const getFileSize = size => {\n  if (!size) return 'Неизвестно';\n  const limit = 1024;\n  const bytes = Number(size);\n  const kilobytes = bytes / limit;\n  const megabytes = kilobytes / limit;\n  const gigabytes = megabytes / limit;\n  if (Math.trunc(gigabytes) > 0) return `${Math.round(gigabytes)} ГБ`;\n  if (Math.trunc(megabytes) > 0) return `${Math.round(megabytes)} МБ`;\n  if (Math.trunc(kilobytes) > 0) return `${Math.round(kilobytes)} КБ`;\n  return `${bytes} байт`;\n};\nexport const b64EncodeUnicode = str => {\n  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {\n    return String.fromCharCode('0x' + p1);\n  }));\n};\nexport const b64DecodeUnicode = str => {\n  return decodeURIComponent(atob(str).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n};","map":null,"metadata":{},"sourceType":"module"}