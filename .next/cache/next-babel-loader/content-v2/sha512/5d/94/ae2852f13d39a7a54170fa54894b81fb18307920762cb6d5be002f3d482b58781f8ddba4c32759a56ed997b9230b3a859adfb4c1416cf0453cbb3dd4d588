{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Search from '../../atomic-ui/components/Search';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Wrap as WrapForm } from '../Form';\nimport ChatForm from '../FormChat';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Messenger__Wrap\",\n  componentId: \"sc-1hnkbvn-0\"\n})([\"height:100%;flex-grow:1;\", \"{width:100%;padding:0;}@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], WrapForm, ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const ChatsSearch = styled(Search).withConfig({\n  displayName: \"Messenger__ChatsSearch\",\n  componentId: \"sc-1hnkbvn-1\"\n})([\"margin-bottom:10px;\"]);\nexport const Chats = styled(Column).withConfig({\n  displayName: \"Messenger__Chats\",\n  componentId: \"sc-1hnkbvn-2\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\nexport const Chat = styled(Member).withConfig({\n  displayName: \"Messenger__Chat\",\n  componentId: \"sc-1hnkbvn-3\"\n})([\"margin:0;padding:10px 0;border-radius:var(--surface-border-radius);transition:all 150ms ease;\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);padding:10px;\"]));\nexport const getUnreadedMessages = (messages, sender) => (messages || []).reduce((acc, item) => acc + (item.type === 'UNREADED' && item.user.email !== sender.email ? 1 : 0), 0);\nexport const getLastMessage = (messages, sender) => {\n  var _message$user;\n\n  const list = messages || [];\n  const message = list[list.length - 1];\n  return `${((_message$user = message.user) === null || _message$user === void 0 ? void 0 : _message$user.email) === sender.email ? 'Вы: ' : ''}${message.text}`;\n};\nexport const Messenger = ({\n  appearance,\n  recipient,\n  sender,\n  onSubmit,\n  onMemberLink,\n  ...props\n}) => {\n  const [currentChat, setCurrentChat] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [chats, setChats] = useState([]);\n  const [getChat, {\n    data: chat,\n    loading: loadingChat,\n    refetch: refetchChat\n  }] = useLazyQuery(queries.GET_CHAT);\n  const [getTicket, {\n    data: ticket,\n    loading: loadingTicket,\n    refetch: refetchTicket\n  }] = useLazyQuery(queries.GET_TICKET);\n  const {\n    data: userChats,\n    loading: loadingUserChats,\n    refetch: getUserChats\n  } = useQuery(queries.GET_USER_CHATS);\n  const {\n    data: userTickets,\n    loading: loadingUserTickets,\n    refetch: getUserTickets\n  } = useQuery(queries.GET_USER_TICKETS);\n  const [addUserChat] = useMutation(queries.ADD_USER_CHAT);\n  useEffect(() => {\n    if (recipient) {\n      addUserChat({\n        variables: {\n          recipient: recipient.email\n        }\n      }).then(() => {\n        getUserChats().then();\n        getUserTickets().then();\n      });\n    }\n  }, [recipient, addUserChat]);\n  useEffect(() => {\n    if (recipient && !currentChat && !loadingUserChats && userChats && userChats.getUserChats) {\n      var _userChats$getUserCha;\n\n      getChat({\n        variables: {\n          id: (_userChats$getUserCha = userChats.getUserChats.find(userChat => userChat.chat.members.find(member => member.name === recipient.name))) === null || _userChats$getUserCha === void 0 ? void 0 : _userChats$getUserCha.chat.id\n        }\n      });\n    }\n  }, [recipient, userChats, loadingUserChats]);\n  useEffect(() => {\n    if (!loadingChat && chat && chat.getChat) {\n      setCurrentChat(chat.getChat);\n    }\n  }, [chat, loadingChat]);\n  useEffect(() => {\n    if (!loadingTicket && ticket && ticket.getTicket) {\n      setCurrentChat(ticket.getTicket);\n    }\n  }, [ticket, loadingTicket]);\n  useEffect(() => {\n    if (!loadingUserChats && userChats.getUserChats) {\n      setChats(prev => [...prev, ...userChats.getUserChats]);\n    }\n  }, [userChats, loadingUserChats]);\n  useEffect(() => {\n    if (!loadingUserTickets && userTickets.getUserTickets) {\n      setChats(prev => [...prev, ...userTickets.getUserTickets]);\n    }\n  }, [userTickets, loadingUserTickets]);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Chats, null, /*#__PURE__*/React.createElement(ChatsSearch, {\n    appearance: 'ghost'\n  }), loadingUserChats && !userChats && /*#__PURE__*/React.createElement(Spinner, null), chats.length > 0 ? chats.map(chat => {\n    var _chat$chat, _chat$chat2, _chat$counsellor, _chat$chat3, _chat$chat3$members$f, _chat$counsellor2, _chat$counsellor2$ava, _chat$chat4, _chat$chat4$messages, _chat$chat5, _chat$chat5$messages, _chat$chat6, _chat$chat7, _chat$chat9;\n\n    return /*#__PURE__*/React.createElement(Chat, {\n      key: ((_chat$chat = chat.chat) === null || _chat$chat === void 0 ? void 0 : _chat$chat.id) || chat.id,\n      name: ((_chat$chat2 = chat.chat) === null || _chat$chat2 === void 0 ? void 0 : _chat$chat2.members.filter(member => member.name !== sender.name)[0].name) || ((_chat$counsellor = chat.counsellor) === null || _chat$counsellor === void 0 ? void 0 : _chat$counsellor.name),\n      avatar: ((_chat$chat3 = chat.chat) === null || _chat$chat3 === void 0 ? void 0 : (_chat$chat3$members$f = _chat$chat3.members.filter(member => member.name !== sender.name)[0].avatar) === null || _chat$chat3$members$f === void 0 ? void 0 : _chat$chat3$members$f.path) || ((_chat$counsellor2 = chat.counsellor) === null || _chat$counsellor2 === void 0 ? void 0 : (_chat$counsellor2$ava = _chat$counsellor2.avatar) === null || _chat$counsellor2$ava === void 0 ? void 0 : _chat$counsellor2$ava.path) || '/images/avatar-default.png',\n      budge: ((_chat$chat4 = chat.chat) === null || _chat$chat4 === void 0 ? void 0 : (_chat$chat4$messages = _chat$chat4.messages[((_chat$chat5 = chat.chat) === null || _chat$chat5 === void 0 ? void 0 : (_chat$chat5$messages = _chat$chat5.messages) === null || _chat$chat5$messages === void 0 ? void 0 : _chat$chat5$messages.length) - 1]) === null || _chat$chat4$messages === void 0 ? void 0 : _chat$chat4$messages.user.name) !== sender.name && getUnreadedMessages((_chat$chat6 = chat.chat) === null || _chat$chat6 === void 0 ? void 0 : _chat$chat6.messages, sender) || getUnreadedMessages(chat.messages, sender) || null,\n      position: getLastMessage((_chat$chat7 = chat.chat) === null || _chat$chat7 === void 0 ? void 0 : _chat$chat7.messages, sender) || getLastMessage(chat.messages, sender) || null,\n      onClick: async () => {\n        var _chat$chat8;\n\n        setLoading(true);\n        await (chat.chat ? refetchChat || getChat : refetchTicket || getTicket)({\n          id: (_chat$chat8 = chat.chat) === null || _chat$chat8 === void 0 ? void 0 : _chat$chat8.id\n        });\n        setCurrentChat(chat === null || chat === void 0 ? void 0 : chat.chat);\n        setLoading(false);\n      },\n      active: currentChat && currentChat.id === ((_chat$chat9 = chat.chat) === null || _chat$chat9 === void 0 ? void 0 : _chat$chat9.id)\n    });\n  }) : loadingUserChats || loadingUserTickets ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      marginTop: 15\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0442\\u044B \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\")), /*#__PURE__*/React.createElement(ChatForm, {\n    mutation: queries.SEND_MESSAGE,\n    messages: currentChat && currentChat.messages.map(message => ({ ...message,\n      side: sender.name === message.user.name ? 'owner' : 'observer'\n    })),\n    appearance: 'ghost',\n    loading: loading || loadingChat || loadingUserChats,\n    onLink: onMemberLink,\n    onSubmit: async (form, action) => {\n      await onSubmit(form, action, currentChat.members.find(member => sender.name !== member.name));\n      await refetchChat({\n        id: currentChat.id\n      });\n    }\n  }));\n};\nMessenger.defaultProps = {\n  appearance: 'default'\n};\nexport default Messenger;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Messenger/index.js"],"names":["React","useEffect","useState","styled","css","useQuery","useLazyQuery","useMutation","Row","Column","Member","Alert","Search","Spinner","Wrap","WrapForm","ChatForm","Loader","queries","appearance","ChatsSearch","Chats","Chat","active","getUnreadedMessages","messages","sender","reduce","acc","item","type","user","email","getLastMessage","list","message","length","text","Messenger","recipient","onSubmit","onMemberLink","props","currentChat","setCurrentChat","loading","setLoading","chats","setChats","getChat","data","chat","loadingChat","refetch","refetchChat","GET_CHAT","getTicket","ticket","loadingTicket","refetchTicket","GET_TICKET","userChats","loadingUserChats","getUserChats","GET_USER_CHATS","userTickets","loadingUserTickets","getUserTickets","GET_USER_TICKETS","addUserChat","ADD_USER_CHAT","variables","then","id","find","userChat","members","member","name","prev","map","filter","counsellor","avatar","path","marginTop","SEND_MESSAGE","side","form","action","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Search from '../../atomic-ui/components/Search'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport { Wrap as WrapForm } from '../Form'\nimport ChatForm from '../FormChat'\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  ${WrapForm} {\n    width: 100%;\n    padding: 0;\n  }\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const ChatsSearch = styled(Search)`\n  margin-bottom: 10px;\n`\n\nexport const Chats = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Chat = styled(Member)`\n  margin: 0;\n  padding: 10px 0;\n  border-radius: var(--surface-border-radius);\n  transition: all 150ms ease;\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n      padding: 10px;\n    `}\n`\n\nexport const getUnreadedMessages = (messages, sender) =>\n  (messages || []).reduce(\n    (acc, item) => acc + (item.type === 'UNREADED' && item.user.email !== sender.email ? 1 : 0),\n    0\n  )\n\nexport const getLastMessage = (messages, sender) => {\n  const list = messages || []\n  const message = list[list.length - 1]\n  return `${message.user?.email === sender.email ? 'Вы: ' : ''}${message.text}`\n}\n\nexport const Messenger = ({ appearance, recipient, sender, onSubmit, onMemberLink, ...props }) => {\n  const [currentChat, setCurrentChat] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [chats, setChats] = useState([])\n\n  const [getChat, { data: chat, loading: loadingChat, refetch: refetchChat }] = useLazyQuery(\n    queries.GET_CHAT\n  )\n  const [\n    getTicket,\n    { data: ticket, loading: loadingTicket, refetch: refetchTicket }\n  ] = useLazyQuery(queries.GET_TICKET)\n\n  const { data: userChats, loading: loadingUserChats, refetch: getUserChats } = useQuery(\n    queries.GET_USER_CHATS\n  )\n\n  const { data: userTickets, loading: loadingUserTickets, refetch: getUserTickets } = useQuery(\n    queries.GET_USER_TICKETS\n  )\n\n  const [addUserChat] = useMutation(queries.ADD_USER_CHAT)\n\n  useEffect(() => {\n    if (recipient) {\n      addUserChat({\n        variables: { recipient: recipient.email }\n      }).then(() => {\n        getUserChats().then()\n        getUserTickets().then()\n      })\n    }\n  }, [recipient, addUserChat])\n\n  useEffect(() => {\n    if (recipient && !currentChat && !loadingUserChats && userChats && userChats.getUserChats) {\n      getChat({\n        variables: {\n          id: userChats.getUserChats.find((userChat) =>\n            userChat.chat.members.find((member) => member.name === recipient.name)\n          )?.chat.id\n        }\n      })\n    }\n  }, [recipient, userChats, loadingUserChats])\n\n  useEffect(() => {\n    if (!loadingChat && chat && chat.getChat) {\n      setCurrentChat(chat.getChat)\n    }\n  }, [chat, loadingChat])\n\n  useEffect(() => {\n    if (!loadingTicket && ticket && ticket.getTicket) {\n      setCurrentChat(ticket.getTicket)\n    }\n  }, [ticket, loadingTicket])\n\n  useEffect(() => {\n    if (!loadingUserChats && userChats.getUserChats) {\n      setChats((prev) => [...prev, ...userChats.getUserChats])\n    }\n  }, [userChats, loadingUserChats])\n\n  useEffect(() => {\n    if (!loadingUserTickets && userTickets.getUserTickets) {\n      setChats((prev) => [...prev, ...userTickets.getUserTickets])\n    }\n  }, [userTickets, loadingUserTickets])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Chats>\n        <ChatsSearch appearance={'ghost'} />\n        {loadingUserChats && !userChats && <Spinner />}\n        {chats.length > 0 ? (\n          chats.map((chat) => (\n            <Chat\n              key={chat.chat?.id || chat.id}\n              name={\n                chat.chat?.members.filter((member) => member.name !== sender.name)[0].name ||\n                chat.counsellor?.name\n              }\n              avatar={\n                chat.chat?.members.filter((member) => member.name !== sender.name)[0].avatar\n                  ?.path ||\n                chat.counsellor?.avatar?.path ||\n                '/images/avatar-default.png'\n              }\n              budge={\n                (chat.chat?.messages[chat.chat?.messages?.length - 1]?.user.name !== sender.name &&\n                  getUnreadedMessages(chat.chat?.messages, sender)) ||\n                getUnreadedMessages(chat.messages, sender) ||\n                null\n              }\n              position={\n                getLastMessage(chat.chat?.messages, sender) ||\n                getLastMessage(chat.messages, sender) ||\n                null\n              }\n              onClick={async () => {\n                setLoading(true)\n                await (chat.chat ? refetchChat || getChat : refetchTicket || getTicket)({\n                  id: chat.chat?.id\n                })\n                setCurrentChat(chat?.chat)\n                setLoading(false)\n              }}\n              active={currentChat && currentChat.id === chat.chat?.id}\n            />\n          ))\n        ) : loadingUserChats || loadingUserTickets ? (\n          <Loader>\n            <Spinner />\n          </Loader>\n        ) : (\n          <Alert style={{ marginTop: 15 }}>Активные чаты отсутствуют</Alert>\n        )}\n      </Chats>\n      <ChatForm\n        mutation={queries.SEND_MESSAGE}\n        messages={\n          currentChat &&\n          currentChat.messages.map((message) => ({\n            ...message,\n            side: sender.name === message.user.name ? 'owner' : 'observer'\n          }))\n        }\n        appearance={'ghost'}\n        loading={loading || loadingChat || loadingUserChats}\n        onLink={onMemberLink}\n        onSubmit={async (form, action) => {\n          await onSubmit(\n            form,\n            action,\n            currentChat.members.find((member) => sender.name !== member.name)\n          )\n          await refetchChat({ id: currentChat.id })\n        }}\n      />\n    </Wrap>\n  )\n}\n\nMessenger.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Messenger\n"]},"metadata":{},"sourceType":"module"}