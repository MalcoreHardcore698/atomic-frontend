{"ast":null,"code":"import React from 'react';\nimport Column from '../../atomic-ui/components/Column';\nimport Text from '../../atomic-ui/components/Text';\nimport UserForm from '../../components/FormUser';\nimport CheckinForm from '../../components/FormCheckin';\nimport LoginForm from '../../components/FormLogin';\nimport RegisterForm from '../../components/FormRegister';\nimport ForgotEmailForm from '../../components/FormForgotEmail';\nimport ForgotPasswordForm from '../../components/FormForgotPassword';\nimport { CheckTokenAndChangePassword } from '../../components/FormCheckTokenAndChangePassword';\nimport AddUserFolderForm from '../../components/FormAddUserFolder';\nimport ResetPassword from '../../components/FormResetPassword';\nimport SureDeleteForm from '../../components/FormSureDelete';\nimport DeleteForm from '../../components/FormDelete';\nimport UserCard from '../../components/UserCard';\nimport UserView from '../../components/UserView';\nimport Members from '../../components/Members';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from './project';\nimport { setUser, updateUser, setUserFolders } from '../actions/user';\nimport { setDocuments } from '../actions/documents';\nimport { setStepper } from '../actions/stepper';\nimport { setDrawer } from '../actions/drawer';\nimport { setModal } from '../actions/modal';\nimport { setItem } from '../actions/snacks';\nimport { onChat } from '.';\nexport function onCheckResetToken(dispatch, props) {\n  const {\n    email,\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'checkResetToken',\n    content: /*#__PURE__*/React.createElement(CheckTokenAndChangePassword, {\n      email: email,\n      mutations: mutations,\n      onSubmit: async (form, action) => {\n        const result = await action({\n          variables: {\n            email: email,\n            token: form.token,\n            password: form.password\n          }\n        });\n\n        if (result.data.checkTokenAndResetPassword.email !== '') {\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пароль успешно сброшен'\n          }));\n          setTimeout(() => {\n            onUserCheckin(dispatch, {\n              mutations\n            });\n          }, 200);\n        } else {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не верный код проверки или ошибка сервера'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserResetPassword(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'resetPassword',\n    content: /*#__PURE__*/React.createElement(ResetPassword, {\n      mutations: mutations,\n      onBack: () => onUserCheckin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              email: form.email\n            }\n          });\n\n          if (response) {\n            onCheckResetToken(dispatch, {\n              email: form.email,\n              mutations\n            });\n          }\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось сбросить пароль'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserCheckin(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'checkin',\n    content: /*#__PURE__*/React.createElement(CheckinForm, {\n      mutations: mutations,\n      onCreate: () => onUserRegister(dispatch, props),\n      onForgot: () => onUserResetPassword(dispatch, props),\n      onGoogleError: () => {},\n      onFacebookError: () => {},\n      onGoogleFinally: user => dispatch(setUser(user)),\n      onFacebookFinally: user => dispatch(setUser(user)),\n      onGoogleSubmit: async (response, action) => {\n        const {\n          accessToken\n        } = response;\n        await action({\n          variables: {\n            accessToken\n          }\n        });\n      },\n      onFacebookSubmit: async (response, action) => {\n        const {\n          accessToken\n        } = response;\n        await action({\n          variables: {\n            accessToken\n          }\n        });\n      },\n      onSubmit: async (form, action) => {\n        try {\n          var _response$data;\n\n          const response = await action({\n            variables: {\n              login: form.login\n            }\n          });\n\n          if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.checkin) {\n            dispatch(updateUser({\n              login: form.login\n            }));\n            onUserLogin(dispatch, {\n              login: form.login,\n              mutations\n            });\n          }\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось пройти проверку'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserLogin(dispatch, props) {\n  const {\n    login,\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'login',\n    content: /*#__PURE__*/React.createElement(LoginForm, {\n      email: login,\n      mutation: mutations.login,\n      onBack: () => onUserCheckin(dispatch, {\n        mutations\n      }),\n      onForgot: () => onUserForgotPassword(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              login,\n              password: form.password\n            }\n          });\n          const user = response.data.login;\n          dispatch(setUser(user));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось авторизоваться'\n          }));\n        } finally {\n          dispatch(setStepper(null));\n        }\n      }\n    })\n  }));\n}\nexport function onUserRegister(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'register',\n    content: /*#__PURE__*/React.createElement(RegisterForm, {\n      mutation: mutations.register,\n      onLogin: () => onUserCheckin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              input: {\n                name: form.name,\n                account: (form === null || form === void 0 ? void 0 : form.account.value) || 'INDIVIDUAL',\n                email: form.email,\n                phone: form.phone,\n                password: form.password,\n                confirmPassword: form.confirmPassword\n              }\n            }\n          });\n          const user = response.data.register;\n          dispatch(setUser({ ...user,\n            register: true\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось зарегистрировать пользователя'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserForgotEmail(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'forgotEmail',\n    content: /*#__PURE__*/React.createElement(ForgotEmailForm, {\n      mutation: mutations.forgotEmail,\n      onBack: () => onUserLogin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          await action(form);\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось восстановить эл. почту'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserForgotPassword(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'forgotPassword',\n    content: /*#__PURE__*/React.createElement(ForgotPasswordForm, {\n      mutation: mutations.forgotPassword,\n      onBack: () => onUserLogin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          await action(form);\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось восстановить пароль'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserChangePassword(dispatch, props) {\n  const {\n    user,\n    mutations\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    home: true,\n    title: 'Сброс пароля',\n    component: ({\n      jump\n    }) => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(ResetPassword, {\n      title: false,\n      appearance: 'clear',\n      mutations: mutations,\n      onBack: () => dispatch(setModal(null)),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              email: user\n            }\n          });\n          if (response) jump('/reset');\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось сбросить пароль'\n          }));\n        }\n      },\n      onlyButton: true\n    }))\n  }, {\n    path: '/reset',\n    title: 'Новый пароль',\n    component: ({\n      close\n    }) => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(CheckTokenAndChangePassword, {\n      title: false,\n      email: user,\n      appearance: 'clear',\n      mutations: mutations,\n      onSubmit: async (form, action) => {\n        const result = await action({\n          variables: {\n            email: user,\n            token: form.token,\n            password: form.password\n          }\n        });\n\n        if (result.data.checkTokenAndResetPassword.email !== '') {\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пароль успешно сброшен'\n          }));\n          setTimeout(() => close(), 200);\n        } else {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не верный код проверки или ошибка сервера'\n          }));\n        }\n      }\n    }))\n  }]));\n}\nexport function onUserLink(dispatch, props) {\n  const {\n    id,\n    auth,\n    owned\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Пользователь',\n    content: /*#__PURE__*/React.createElement(UserView, {\n      user: id,\n      owned: owned,\n      appearance: 'clear',\n      onChat: id !== auth && (() => onChat(dispatch, props)),\n      onMembers: () => onUserMembers(dispatch, {\n        id,\n        auth\n      }),\n      onAboutMore: user => onUserAboutMore(dispatch, {\n        user\n      }),\n      onCompanyLink: company => onUserLink(dispatch, {\n        id: company.email,\n        auth\n      }),\n      onProjectLink: project => onProjectLink(dispatch, {\n        id: project.id,\n        project,\n        auth,\n        owned\n      }),\n      onProjectAdd: id !== auth && (project => onProjectAdd(dispatch, {\n        id: project.id,\n        project\n      })),\n      onProjectCompanyLink: company => auth !== company && onUserLink(dispatch, {\n        id: company.email,\n        auth,\n        owned\n      }),\n      onProjectScreenshotClick: (_, key, screenshots) => onProjectScreenshot(dispatch, {\n        screenshots,\n        key\n      })\n    })\n  }));\n}\nexport function onUserCreate(dispatch, props) {\n  const {\n    roles,\n    canEditRole,\n    mutation,\n    onAfter\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Создание пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      roles: roles,\n      mutation: mutation,\n      appearance: 'clear',\n      canEditRole: canEditRole,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$company, _form$account, _form$avatar, _form$avatar2, _form$avatar2$file, _form$gender, _form$role;\n\n          const users = await action({\n            variables: {\n              input: {\n                name: form.name,\n                email: form.email,\n                phone: form.phone,\n                password: form.password,\n                company: (_form$company = form.company) === null || _form$company === void 0 ? void 0 : _form$company.value,\n                account: (_form$account = form.account) === null || _form$account === void 0 ? void 0 : _form$account.value,\n                avatar: (_form$avatar = form.avatar) === null || _form$avatar === void 0 ? void 0 : _form$avatar.file,\n                avatarSize: (_form$avatar2 = form.avatar) === null || _form$avatar2 === void 0 ? void 0 : (_form$avatar2$file = _form$avatar2.file) === null || _form$avatar2$file === void 0 ? void 0 : _form$avatar2$file.size,\n                about: form.about,\n                gender: (_form$gender = form.gender) === null || _form$gender === void 0 ? void 0 : _form$gender.value,\n                dateOfBirth: form.dateOfBirth,\n                role: (_form$role = form.role) === null || _form$role === void 0 ? void 0 : _form$role.value\n              }\n            }\n          });\n          dispatch(setDocuments(users.data.createUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно создан'\n          }));\n          if (onAfter) onAfter();\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    })\n  }));\n}\nexport function onUserClientEdit(dispatch, props) {\n  const {\n    user,\n    mutations,\n    onAfter\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Редактирование пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      user: user,\n      mutation: mutations.update,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$account2, _form$avatar3, _form$avatar4, _form$avatar4$file, _form$company2, _form$gender2, _form$role2;\n\n          const result = await action({\n            variables: {\n              input: {\n                name: form === null || form === void 0 ? void 0 : form.name,\n                account: form === null || form === void 0 ? void 0 : (_form$account2 = form.account) === null || _form$account2 === void 0 ? void 0 : _form$account2.value,\n                avatar: form === null || form === void 0 ? void 0 : (_form$avatar3 = form.avatar) === null || _form$avatar3 === void 0 ? void 0 : _form$avatar3.file,\n                avatarSize: form === null || form === void 0 ? void 0 : (_form$avatar4 = form.avatar) === null || _form$avatar4 === void 0 ? void 0 : (_form$avatar4$file = _form$avatar4.file) === null || _form$avatar4$file === void 0 ? void 0 : _form$avatar4$file.size,\n                company: form === null || form === void 0 ? void 0 : (_form$company2 = form.company) === null || _form$company2 === void 0 ? void 0 : _form$company2.value,\n                about: form === null || form === void 0 ? void 0 : form.about,\n                gender: form === null || form === void 0 ? void 0 : (_form$gender2 = form.gender) === null || _form$gender2 === void 0 ? void 0 : _form$gender2.value,\n                phone: form === null || form === void 0 ? void 0 : form.phone,\n                email: form === null || form === void 0 ? void 0 : form.email,\n                dateOfBirth: form === null || form === void 0 ? void 0 : form.dateOfBirth,\n                role: form === null || form === void 0 ? void 0 : (_form$role2 = form.role) === null || _form$role2 === void 0 ? void 0 : _form$role2.value\n              }\n            }\n          });\n          dispatch(updateUser(result.data.updateClientUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Данные успешно отредактированы'\n          }));\n          if (onAfter) onAfter();\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать данные'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      },\n      onDelete: () => onUserDelete(dispatch, {\n        id: user,\n        mutation: mutations.del\n      }),\n      onChangePassword: () => onUserChangePassword(dispatch, props)\n    })\n  }));\n}\nexport function onUserEdit(dispatch, props) {\n  const {\n    user,\n    roles,\n    canEditAccount,\n    canEditRole,\n    mutations,\n    onAfter\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Редактирование пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      user: user,\n      roles: roles,\n      mutation: mutations.update,\n      appearance: 'clear',\n      canEditAccount: canEditAccount,\n      canEditRole: canEditRole,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$account3, _form$avatar5, _form$avatar6, _form$avatar6$file, _form$company3, _form$gender3, _form$role3;\n\n          const users = await action({\n            variables: {\n              email: user,\n              input: {\n                name: form.name,\n                account: (_form$account3 = form.account) === null || _form$account3 === void 0 ? void 0 : _form$account3.value,\n                avatar: (_form$avatar5 = form.avatar) === null || _form$avatar5 === void 0 ? void 0 : _form$avatar5.file,\n                avatarSize: (_form$avatar6 = form.avatar) === null || _form$avatar6 === void 0 ? void 0 : (_form$avatar6$file = _form$avatar6.file) === null || _form$avatar6$file === void 0 ? void 0 : _form$avatar6$file.size,\n                company: (_form$company3 = form.company) === null || _form$company3 === void 0 ? void 0 : _form$company3.value,\n                about: form.about,\n                gender: (_form$gender3 = form.gender) === null || _form$gender3 === void 0 ? void 0 : _form$gender3.value,\n                phone: form.phone,\n                email: form.email,\n                dateOfBirth: form.dateOfBirth,\n                role: (_form$role3 = form.role) === null || _form$role3 === void 0 ? void 0 : _form$role3.value\n              }\n            }\n          });\n          dispatch(setDocuments(users.data.updateUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно отредактирован'\n          }));\n          if (onAfter) onAfter();\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      },\n      onDelete: () => onUserDelete(dispatch, {\n        id: user,\n        mutation: mutations.del\n      }),\n      onChangePassword: () => onUserChangePassword(dispatch, props)\n    })\n  }));\n}\nexport function onUserMembers(dispatch, props) {\n  const {\n    id,\n    auth\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Участники компании',\n    content: /*#__PURE__*/React.createElement(Members, {\n      user: id,\n      appearance: 'clear',\n      onMemberLink: member => onUserLink(dispatch, {\n        id: member,\n        auth\n      })\n    })\n  }));\n}\nexport function onUserDelete(dispatch, props) {\n  const {\n    id,\n    user,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление пользователя',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const users = await action({\n            variables: {\n              email: id\n            }\n          });\n          dispatch(setDocuments(users.data.deleteUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно удален'\n          }));\n        } catch (err) {\n          console.log(err);\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(UserCard, {\n      user: user,\n      appearance: 'clear'\n    }))\n  }));\n}\nexport function onUserAboutMore(dispatch, props) {\n  const {\n    user\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: user.about ? 'О себе' : 'Описание',\n    component: () => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(Text, null, user.about || user.description))\n  }]));\n}\nexport function onUserFolderAdd(dispatch, props) {\n  const {\n    mutation,\n    onCancel,\n    callback\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Создание папки',\n    component: () => /*#__PURE__*/React.createElement(AddUserFolderForm, {\n      title: false,\n      mutation: mutation,\n      onCancel: () => onCancel ? onCancel() : dispatch(setModal(null)),\n      onSubmit: async (form, action) => {\n        if (action) {\n          const response = await action({\n            variables: {\n              name: form.name\n            }\n          });\n          const folders = response.data.addUserFolder;\n          dispatch(setUserFolders(folders));\n          dispatch(setModal(null));\n          if (callback) callback(folders);\n        }\n      }\n    })\n  }]));\n}\nexport function onUserFolderDelete(dispatch, props) {\n  const {\n    id,\n    mutation,\n    callback\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Удаление папки',\n    component: () => /*#__PURE__*/React.createElement(SureDeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      text: 'Вы действительно хотите удалить папку?',\n      onCancel: () => dispatch(setModal(null)),\n      onSubmit: async (_, action) => {\n        if (action) {\n          const response = await action({\n            variables: {\n              id\n            }\n          });\n          dispatch(setUserFolders(response.data.deleteUserFolder));\n          dispatch(setModal(null));\n          if (callback) callback();\n        }\n      }\n    })\n  }]));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/user.js"],"names":["React","Column","Text","UserForm","CheckinForm","LoginForm","RegisterForm","ForgotEmailForm","ForgotPasswordForm","CheckTokenAndChangePassword","AddUserFolderForm","ResetPassword","SureDeleteForm","DeleteForm","UserCard","UserView","Members","onProjectLink","onProjectAdd","onProjectScreenshot","setUser","updateUser","setUserFolders","setDocuments","setStepper","setDrawer","setModal","setItem","onChat","onCheckResetToken","dispatch","props","email","mutations","name","content","form","action","result","variables","token","password","data","checkTokenAndResetPassword","type","message","setTimeout","onUserCheckin","onUserResetPassword","response","err","onUserRegister","user","accessToken","login","checkin","onUserLogin","onUserForgotPassword","register","input","account","value","phone","confirmPassword","onUserForgotEmail","forgotEmail","forgotPassword","onUserChangePassword","path","home","title","component","jump","padding","close","onUserLink","id","auth","owned","icon","onUserMembers","onUserAboutMore","company","project","_","key","screenshots","onUserCreate","roles","canEditRole","mutation","onAfter","users","avatar","file","avatarSize","size","about","gender","dateOfBirth","role","createUser","onUserClientEdit","update","updateClientUser","onUserDelete","del","onUserEdit","canEditAccount","member","color","deleteUser","console","log","description","onUserFolderAdd","onCancel","callback","folders","addUserFolder","onUserFolderDelete","deleteUserFolder"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Text from '../../atomic-ui/components/Text'\n\nimport UserForm from '../../components/FormUser'\nimport CheckinForm from '../../components/FormCheckin'\nimport LoginForm from '../../components/FormLogin'\nimport RegisterForm from '../../components/FormRegister'\nimport ForgotEmailForm from '../../components/FormForgotEmail'\nimport ForgotPasswordForm from '../../components/FormForgotPassword'\nimport { CheckTokenAndChangePassword } from '../../components/FormCheckTokenAndChangePassword'\nimport AddUserFolderForm from '../../components/FormAddUserFolder'\nimport ResetPassword from '../../components/FormResetPassword'\nimport SureDeleteForm from '../../components/FormSureDelete'\nimport DeleteForm from '../../components/FormDelete'\nimport UserCard from '../../components/UserCard'\nimport UserView from '../../components/UserView'\nimport Members from '../../components/Members'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from './project'\nimport { setUser, updateUser, setUserFolders } from '../actions/user'\nimport { setDocuments } from '../actions/documents'\nimport { setStepper } from '../actions/stepper'\nimport { setDrawer } from '../actions/drawer'\nimport { setModal } from '../actions/modal'\nimport { setItem } from '../actions/snacks'\nimport { onChat } from '.'\n\nexport function onCheckResetToken(dispatch, props) {\n  const { email, mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'checkResetToken',\n      content: (\n        <CheckTokenAndChangePassword\n          email={email}\n          mutations={mutations}\n          onSubmit={async (form, action) => {\n            const result = await action({\n              variables: {\n                email: email,\n                token: form.token,\n                password: form.password\n              }\n            })\n            if (result.data.checkTokenAndResetPassword.email !== '') {\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пароль успешно сброшен'\n                })\n              )\n              setTimeout(() => {\n                onUserCheckin(dispatch, { mutations })\n              }, 200)\n            } else {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не верный код проверки или ошибка сервера'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserResetPassword(dispatch, props) {\n  const { mutations } = props\n  dispatch(\n    setStepper({\n      name: 'resetPassword',\n      content: (\n        <ResetPassword\n          mutations={mutations}\n          onBack={() => onUserCheckin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  email: form.email\n                }\n              })\n\n              if (response) {\n                onCheckResetToken(dispatch, { email: form.email, mutations })\n              }\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось сбросить пароль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserCheckin(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'checkin',\n      content: (\n        <CheckinForm\n          mutations={mutations}\n          onCreate={() => onUserRegister(dispatch, props)}\n          onForgot={() => onUserResetPassword(dispatch, props)}\n          onGoogleError={() => {}}\n          onFacebookError={() => {}}\n          onGoogleFinally={(user) => dispatch(setUser(user))}\n          onFacebookFinally={(user) => dispatch(setUser(user))}\n          onGoogleSubmit={async (response, action) => {\n            const { accessToken } = response\n            await action({ variables: { accessToken } })\n          }}\n          onFacebookSubmit={async (response, action) => {\n            const { accessToken } = response\n            await action({ variables: { accessToken } })\n          }}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  login: form.login\n                }\n              })\n\n              if (response.data?.checkin) {\n                dispatch(updateUser({ login: form.login }))\n                onUserLogin(dispatch, {\n                  login: form.login,\n                  mutations\n                })\n              }\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось пройти проверку'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserLogin(dispatch, props) {\n  const { login, mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'login',\n      content: (\n        <LoginForm\n          email={login}\n          mutation={mutations.login}\n          onBack={() => onUserCheckin(dispatch, { mutations })}\n          onForgot={() => onUserForgotPassword(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  login,\n                  password: form.password\n                }\n              })\n\n              const user = response.data.login\n              dispatch(setUser(user))\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось авторизоваться'\n                })\n              )\n            } finally {\n              dispatch(setStepper(null))\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserRegister(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'register',\n      content: (\n        <RegisterForm\n          mutation={mutations.register}\n          onLogin={() => onUserCheckin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    account: form?.account.value || 'INDIVIDUAL',\n                    email: form.email,\n                    phone: form.phone,\n                    password: form.password,\n                    confirmPassword: form.confirmPassword\n                  }\n                }\n              })\n\n              const user = response.data.register\n              dispatch(setUser({ ...user, register: true }))\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось зарегистрировать пользователя'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserForgotEmail(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'forgotEmail',\n      content: (\n        <ForgotEmailForm\n          mutation={mutations.forgotEmail}\n          onBack={() => onUserLogin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              await action(form)\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось восстановить эл. почту'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserForgotPassword(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'forgotPassword',\n      content: (\n        <ForgotPasswordForm\n          mutation={mutations.forgotPassword}\n          onBack={() => onUserLogin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              await action(form)\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось восстановить пароль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserChangePassword(dispatch, props) {\n  const { user, mutations } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        home: true,\n        title: 'Сброс пароля',\n        component: ({ jump }) => (\n          <Column style={{ padding: '15px' }}>\n            <ResetPassword\n              title={false}\n              appearance={'clear'}\n              mutations={mutations}\n              onBack={() => dispatch(setModal(null))}\n              onSubmit={async (form, action) => {\n                try {\n                  const response = await action({\n                    variables: {\n                      email: user\n                    }\n                  })\n\n                  if (response) jump('/reset')\n                } catch (err) {\n                  dispatch(\n                    setItem({\n                      type: 'error',\n                      message: 'Не удалось сбросить пароль'\n                    })\n                  )\n                }\n              }}\n              onlyButton\n            />\n          </Column>\n        )\n      },\n      {\n        path: '/reset',\n        title: 'Новый пароль',\n        component: ({ close }) => (\n          <Column style={{ padding: '15px' }}>\n            <CheckTokenAndChangePassword\n              title={false}\n              email={user}\n              appearance={'clear'}\n              mutations={mutations}\n              onSubmit={async (form, action) => {\n                const result = await action({\n                  variables: {\n                    email: user,\n                    token: form.token,\n                    password: form.password\n                  }\n                })\n                if (result.data.checkTokenAndResetPassword.email !== '') {\n                  dispatch(\n                    setItem({\n                      type: 'success',\n                      message: 'Пароль успешно сброшен'\n                    })\n                  )\n                  setTimeout(() => close(), 200)\n                } else {\n                  dispatch(\n                    setItem({\n                      type: 'error',\n                      message: 'Не верный код проверки или ошибка сервера'\n                    })\n                  )\n                }\n              }}\n            />\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserLink(dispatch, props) {\n  const { id, auth, owned } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Пользователь',\n      content: (\n        <UserView\n          user={id}\n          owned={owned}\n          appearance={'clear'}\n          onChat={id !== auth && (() => onChat(dispatch, props))}\n          onMembers={() => onUserMembers(dispatch, { id, auth })}\n          onAboutMore={(user) => onUserAboutMore(dispatch, { user })}\n          onCompanyLink={(company) => onUserLink(dispatch, { id: company.email, auth })}\n          onProjectLink={(project) =>\n            onProjectLink(dispatch, { id: project.id, project, auth, owned })\n          }\n          onProjectAdd={\n            id !== auth && ((project) => onProjectAdd(dispatch, { id: project.id, project }))\n          }\n          onProjectCompanyLink={(company) =>\n            auth !== company && onUserLink(dispatch, { id: company.email, auth, owned })\n          }\n          onProjectScreenshotClick={(_, key, screenshots) =>\n            onProjectScreenshot(dispatch, {\n              screenshots,\n              key\n            })\n          }\n        />\n      )\n    })\n  )\n}\n\nexport function onUserCreate(dispatch, props) {\n  const { roles, canEditRole, mutation, onAfter } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Создание пользователя',\n      content: (\n        <UserForm\n          roles={roles}\n          mutation={mutation}\n          appearance={'clear'}\n          canEditRole={canEditRole}\n          onSubmit={async (form, action) => {\n            try {\n              const users = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    email: form.email,\n                    phone: form.phone,\n                    password: form.password,\n                    company: form.company?.value,\n                    account: form.account?.value,\n                    avatar: form.avatar?.file,\n                    avatarSize: form.avatar?.file?.size,\n                    about: form.about,\n                    gender: form.gender?.value,\n                    dateOfBirth: form.dateOfBirth,\n                    role: form.role?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(users.data.createUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно создан'\n                })\n              )\n              if (onAfter) onAfter()\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserClientEdit(dispatch, props) {\n  const { user, mutations, onAfter } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Редактирование пользователя',\n      content: (\n        <UserForm\n          user={user}\n          mutation={mutations.update}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const result = await action({\n                variables: {\n                  input: {\n                    name: form?.name,\n                    account: form?.account?.value,\n                    avatar: form?.avatar?.file,\n                    avatarSize: form?.avatar?.file?.size,\n                    company: form?.company?.value,\n                    about: form?.about,\n                    gender: form?.gender?.value,\n                    phone: form?.phone,\n                    email: form?.email,\n                    dateOfBirth: form?.dateOfBirth,\n                    role: form?.role?.value\n                  }\n                }\n              })\n\n              dispatch(updateUser(result.data.updateClientUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Данные успешно отредактированы'\n                })\n              )\n              if (onAfter) onAfter()\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать данные'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n          onDelete={() =>\n            onUserDelete(dispatch, {\n              id: user,\n              mutation: mutations.del\n            })\n          }\n          onChangePassword={() => onUserChangePassword(dispatch, props)}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserEdit(dispatch, props) {\n  const { user, roles, canEditAccount, canEditRole, mutations, onAfter } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Редактирование пользователя',\n      content: (\n        <UserForm\n          user={user}\n          roles={roles}\n          mutation={mutations.update}\n          appearance={'clear'}\n          canEditAccount={canEditAccount}\n          canEditRole={canEditRole}\n          onSubmit={async (form, action) => {\n            try {\n              const users = await action({\n                variables: {\n                  email: user,\n                  input: {\n                    name: form.name,\n                    account: form.account?.value,\n                    avatar: form.avatar?.file,\n                    avatarSize: form.avatar?.file?.size,\n                    company: form.company?.value,\n                    about: form.about,\n                    gender: form.gender?.value,\n                    phone: form.phone,\n                    email: form.email,\n                    dateOfBirth: form.dateOfBirth,\n                    role: form.role?.value\n                  }\n                }\n              })\n\n              dispatch(setDocuments(users.data.updateUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно отредактирован'\n                })\n              )\n              if (onAfter) onAfter()\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n          onDelete={() =>\n            onUserDelete(dispatch, {\n              id: user,\n              mutation: mutations.del\n            })\n          }\n          onChangePassword={() => onUserChangePassword(dispatch, props)}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserMembers(dispatch, props) {\n  const { id, auth } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Участники компании',\n      content: (\n        <Members\n          user={id}\n          appearance={'clear'}\n          onMemberLink={(member) => onUserLink(dispatch, { id: member, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserDelete(dispatch, props) {\n  const { id, user, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление пользователя',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const users = await action({\n                variables: { email: id }\n              })\n              dispatch(setDocuments(users.data.deleteUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно удален'\n                })\n              )\n            } catch (err) {\n              console.log(err)\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <UserCard user={user} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n\nexport function onUserAboutMore(dispatch, props) {\n  const { user } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: user.about ? 'О себе' : 'Описание',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            <Text>{user.about || user.description}</Text>\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserFolderAdd(dispatch, props) {\n  const { mutation, onCancel, callback } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Создание папки',\n        component: () => (\n          <AddUserFolderForm\n            title={false}\n            mutation={mutation}\n            onCancel={() => (onCancel ? onCancel() : dispatch(setModal(null)))}\n            onSubmit={async (form, action) => {\n              if (action) {\n                const response = await action({\n                  variables: {\n                    name: form.name\n                  }\n                })\n\n                const folders = response.data.addUserFolder\n                dispatch(setUserFolders(folders))\n                dispatch(setModal(null))\n                if (callback) callback(folders)\n              }\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserFolderDelete(dispatch, props) {\n  const { id, mutation, callback } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Удаление папки',\n        component: () => (\n          <SureDeleteForm\n            mutation={mutation}\n            appearance={'clear'}\n            text={'Вы действительно хотите удалить папку?'}\n            onCancel={() => dispatch(setModal(null))}\n            onSubmit={async (_, action) => {\n              if (action) {\n                const response = await action({\n                  variables: { id }\n                })\n                dispatch(setUserFolders(response.data.deleteUserFolder))\n                dispatch(setModal(null))\n                if (callback) callback()\n              }\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n"]},"metadata":{},"sourceType":"module"}