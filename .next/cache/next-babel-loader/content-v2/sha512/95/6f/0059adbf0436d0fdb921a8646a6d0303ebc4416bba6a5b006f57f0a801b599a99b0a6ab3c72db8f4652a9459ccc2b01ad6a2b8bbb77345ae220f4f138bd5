{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport TicketForm from '../FormTicket';\nimport Search from '../SearchBar';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"TicketView__Wrap\",\n  componentId: \"sc-1wxiq0b-0\"\n})([\"height:100%;flex-grow:1;@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const Tickets = styled(Column).withConfig({\n  displayName: \"TicketView__Tickets\",\n  componentId: \"sc-1wxiq0b-1\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\n_c2 = Tickets;\nexport const Ticket = styled(Member).withConfig({\n  displayName: \"TicketView__Ticket\",\n  componentId: \"sc-1wxiq0b-2\"\n})([\"margin:10px 0 0 0;padding:10px;border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);\"]));\n_c3 = Ticket;\nexport const LIMIT_TICKETS = 36;\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  _s();\n\n  const [currentTicket, setCurrentTicket] = useState(null); // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n\n  const [offsetTickets, setOffsetTickets] = useState(0);\n  const [tickets, setTickets] = useState([]);\n  const {\n    data,\n    loading\n  } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    }\n  });\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets // fetchMore: updateTickets\n\n  } = useQuery(queries.GET_TICKETS, {\n    variables: {\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    }\n  });\n  useEffect(() => {\n    if (!loading && data) {\n      setCurrentTicket(data.getTicket);\n    }\n  }, [data, loading]);\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets(prev => [...prev, ...dataTickets.getTickets]);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Tickets, null, /*#__PURE__*/React.createElement(Search, {\n    appearance: 'ghost'\n  }), !loadingTickets ? tickets.map(ticket => /*#__PURE__*/React.createElement(Ticket, {\n    key: ticket.id,\n    name: ticket.title,\n    budge: ticket.messages.reduce((acc, item) => acc + (item.unreaded ? 1 : 0), 0),\n    position: ticket.token,\n    onClick: () => setCurrentTicket(ticket),\n    active: currentTicket && currentTicket.id === ticket.id\n  })) : errorTickets ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      marginTop: 15,\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(TicketForm, {\n    ticket: currentTicket,\n    appearance: 'ghost',\n    onFinish: onFinish,\n    onReport: onReport,\n    onLink: onMemberLink,\n    onAttach: onAttach,\n    onSubmit: onSubmit\n  }));\n};\n\n_s(View, \"uOM18OHxmAjqFyV9HDap187nV0s=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c4 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Tickets\");\n$RefreshReg$(_c3, \"Ticket\");\n$RefreshReg$(_c4, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","Row","Column","Member","Alert","Spinner","TicketForm","Search","queries","Loader","Wrap","appearance","Tickets","Ticket","active","LIMIT_TICKETS","View","ticket","onMemberLink","onFinish","onReport","onAttach","onSubmit","props","currentTicket","setCurrentTicket","offsetTickets","setOffsetTickets","tickets","setTickets","data","loading","GET_TICKET","variables","id","dataTickets","loadingTickets","error","errorTickets","GET_TICKETS","offset","limit","getTicket","prev","getTickets","map","title","messages","reduce","acc","item","unreaded","token","marginTop","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport TicketForm from '../FormTicket'\nimport Search from '../SearchBar'\nimport queries from '../../graphql/queries'\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Tickets = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Ticket = styled(Member)`\n  margin: 10px 0 0 0;\n  padding: 10px;\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n    `}\n`\n\nexport const LIMIT_TICKETS = 36\n\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null)\n  // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n  const [offsetTickets, setOffsetTickets] = useState(0)\n  const [tickets, setTickets] = useState([])\n\n  const { data, loading } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    }\n  })\n\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets\n    // fetchMore: updateTickets\n  } = useQuery(queries.GET_TICKETS, {\n    variables: {\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    }\n  })\n\n  useEffect(() => {\n    if (!loading && data) {\n      setCurrentTicket(data.getTicket)\n    }\n  }, [data, loading])\n\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets((prev) => [...prev, ...dataTickets.getTickets])\n    }\n  }, [])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Tickets>\n        <Search appearance={'ghost'} />\n        {!loadingTickets ? (\n          tickets.map((ticket) => (\n            <Ticket\n              key={ticket.id}\n              name={ticket.title}\n              budge={ticket.messages.reduce((acc, item) => acc + (item.unreaded ? 1 : 0), 0)}\n              position={ticket.token}\n              onClick={() => setCurrentTicket(ticket)}\n              active={currentTicket && currentTicket.id === ticket.id}\n            />\n          ))\n        ) : errorTickets ? (\n          <Alert appearance={'error'} style={{ marginTop: 15, width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )}\n      </Tickets>\n      <TicketForm\n        ticket={currentTicket}\n        appearance={'ghost'}\n        onFinish={onFinish}\n        onReport={onReport}\n        onLink={onMemberLink}\n        onAttach={onAttach}\n        onSubmit={onSubmit}\n      />\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}