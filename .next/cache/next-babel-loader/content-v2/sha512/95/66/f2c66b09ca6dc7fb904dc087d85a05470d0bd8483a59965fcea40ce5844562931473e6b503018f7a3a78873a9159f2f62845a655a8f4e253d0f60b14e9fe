{"ast":null,"code":"import React from 'react';\nimport YouTube from 'react-youtube';\nimport Vimeo from 'react-vimeo';\nexport const parseUrl = url => {\n  if (url instanceof URL) {\n    const href = url.href;\n\n    if (href.includes('youtube')) {\n      const videoId = new URLSearchParams(url.search).get('v');\n      return {\n        type: 'youtube',\n        videoId\n      };\n    }\n\n    if (href.includes('vimeo')) {\n      const regExpVimeo = /https:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/;\n      const matchVimeo = url.href.match(regExpVimeo);\n      return {\n        type: 'vimeo',\n        videoId: matchVimeo[2]\n      };\n    }\n  }\n\n  return false;\n};\nexport const VideoPresentation = ({\n  type,\n  videoId\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", null, type === 'youtube' ? /*#__PURE__*/React.createElement(YouTube, {\n    videoId: videoId\n  }) : /*#__PURE__*/React.createElement(Vimeo, {\n    videoId: videoId,\n    autoplay: true\n  }));\n};\nexport default VideoPresentation;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/VideoPresentation/index.js"],"names":["React","YouTube","Vimeo","parseUrl","url","URL","href","includes","videoId","URLSearchParams","search","get","type","regExpVimeo","matchVimeo","match","VideoPresentation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC/B,MAAIA,GAAG,YAAYC,GAAnB,EAAwB;AACtB,UAAMC,IAAI,GAAGF,GAAG,CAACE,IAAjB;;AACA,QAAIA,IAAI,CAACC,QAAL,CAAc,SAAd,CAAJ,EAA8B;AAC5B,YAAMC,OAAO,GAAG,IAAIC,eAAJ,CAAoBL,GAAG,CAACM,MAAxB,EAAgCC,GAAhC,CAAoC,GAApC,CAAhB;AACA,aAAO;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBJ,QAAAA;AAAnB,OAAP;AACD;;AACD,QAAIF,IAAI,CAACC,QAAL,CAAc,OAAd,CAAJ,EAA4B;AAC1B,YAAMM,WAAW,GAAG,0CAApB;AACA,YAAMC,UAAU,GAAGV,GAAG,CAACE,IAAJ,CAASS,KAAT,CAAeF,WAAf,CAAnB;AACA,aAAO;AAAED,QAAAA,IAAI,EAAE,OAAR;AAAiBJ,QAAAA,OAAO,EAAEM,UAAU,CAAC,CAAD;AAApC,OAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,CAdM;AAgBP,OAAO,MAAME,iBAAiB,GAAG,CAAC;AAAEJ,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAD,KAAuB;AACtD,sBACE,iCACGI,IAAI,KAAK,SAAT,gBACC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEJ;AAAlB,IADD,gBAGC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,QAAQ,EAAE;AAAnC,IAJJ,CADF;AASD,CAVM;AAYP,eAAeQ,iBAAf","sourcesContent":["import React from 'react'\nimport YouTube from 'react-youtube'\nimport Vimeo from 'react-vimeo'\n\nexport const parseUrl = (url) => {\n  if (url instanceof URL) {\n    const href = url.href\n    if (href.includes('youtube')) {\n      const videoId = new URLSearchParams(url.search).get('v')\n      return { type: 'youtube', videoId }\n    }\n    if (href.includes('vimeo')) {\n      const regExpVimeo = /https:\\/\\/(www\\.)?vimeo.com\\/(\\d+)($|\\/)/\n      const matchVimeo = url.href.match(regExpVimeo)\n      return { type: 'vimeo', videoId: matchVimeo[2] }\n    }\n  }\n  return false\n}\n\nexport const VideoPresentation = ({ type, videoId }) => {\n  return (\n    <div>\n      {type === 'youtube' ? (\n        <YouTube videoId={videoId}></YouTube>\n      ) : (\n        <Vimeo videoId={videoId} autoplay={true} />\n      )}\n    </div>\n  )\n}\n\nexport default VideoPresentation\n"]},"metadata":{},"sourceType":"module"}