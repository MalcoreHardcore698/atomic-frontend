{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport TicketForm from '../FormTicket';\nimport Search from '../SearchBar';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"TicketView__Wrap\",\n  componentId: \"sc-1wxiq0b-0\"\n})([\"height:100%;flex-grow:1;@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Tickets = styled(Column).withConfig({\n  displayName: \"TicketView__Tickets\",\n  componentId: \"sc-1wxiq0b-1\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\nexport const Ticket = styled(Member).withConfig({\n  displayName: \"TicketView__Ticket\",\n  componentId: \"sc-1wxiq0b-2\"\n})([\"margin:10px 0 0 0;padding:10px;border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);\"]));\nexport const View = ({\n  tickets,\n  appearance,\n  onMemberLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Tickets, null, /*#__PURE__*/React.createElement(Search, {\n    appearance: 'ghost'\n  }), (tickets === null || tickets === void 0 ? void 0 : tickets.length) > 0 ? tickets.map(ticket => /*#__PURE__*/React.createElement(Ticket, {\n    key: ticket.id,\n    name: ticket.title,\n    budge: ticket.messages.reduce((acc, item) => acc + (item.unreaded ? 1 : 0), 0),\n    position: ticket.token,\n    onClick: () => setCurrentTicket(ticket),\n    active: currentTicket && currentTicket.id === ticket.id\n  })) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      marginTop: 15\n    },\n    appearance: 'warning'\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u044F \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\")), /*#__PURE__*/React.createElement(TicketForm, {\n    ticket: currentTicket,\n    appearance: 'ghost',\n    onFinish: onFinish,\n    onReport: onReport,\n    onLink: onMemberLink,\n    onAttach: onAttach,\n    onSubmit: onSubmit\n  }));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketView/index.js"],"names":["React","useState","styled","css","Row","Column","Member","Alert","TicketForm","Search","Wrap","appearance","Tickets","Ticket","active","View","tickets","onMemberLink","onFinish","onReport","onAttach","onSubmit","props","currentTicket","setCurrentTicket","length","map","ticket","id","title","messages","reduce","acc","item","unreaded","token","marginTop","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\n\nimport TicketForm from '../FormTicket'\nimport Search from '../SearchBar'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Tickets = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Ticket = styled(Member)`\n  margin: 10px 0 0 0;\n  padding: 10px;\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n    `}\n`\n\nexport const View = ({\n  tickets,\n  appearance,\n  onMemberLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null)\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Tickets>\n        <Search appearance={'ghost'} />\n        {tickets?.length > 0 ? (\n          tickets.map((ticket) => (\n            <Ticket\n              key={ticket.id}\n              name={ticket.title}\n              budge={ticket.messages.reduce((acc, item) => acc + (item.unreaded ? 1 : 0), 0)}\n              position={ticket.token}\n              onClick={() => setCurrentTicket(ticket)}\n              active={currentTicket && currentTicket.id === ticket.id}\n            />\n          ))\n        ) : (\n          <Alert style={{ marginTop: 15 }} appearance={'warning'}>\n            Активные обращения отсутствуют\n          </Alert>\n        )}\n      </Tickets>\n      <TicketForm\n        ticket={currentTicket}\n        appearance={'ghost'}\n        onFinish={onFinish}\n        onReport={onReport}\n        onLink={onMemberLink}\n        onAttach={onAttach}\n        onSubmit={onSubmit}\n      />\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}