{"ast":null,"code":"import React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Container from '../../atomic-ui/components/Container';\nimport CommonSearch from '../../atomic-ui/components/Search';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Column from '../../atomic-ui/components/Column';\nimport Button from '../../atomic-ui/components/Button';\nimport Image from '../../atomic-ui/components/Image';\nimport Text from '../../atomic-ui/components/Text';\nimport Icon from '../../atomic-ui/components/Icon';\nimport MainLayout from '../main';\nimport { useHelper } from '../../hooks/useHelper';\nimport { FixedLoader } from '../../components/Styled';\nimport BaseSideBar from '../../components/SideBar';\nimport Search from '../../components/Search';\nimport { onMenu } from '../../store/helpers';\nimport { setModal } from '../../store/actions/modal';\nimport { setUser } from '../../store/actions/user';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nimport getLinks from './links';\nconst Main = styled.main.withConfig({\n  displayName: \"dashboard__Main\",\n  componentId: \"sc-9r28sr-0\"\n})([\"display:flex;grid-gap:var(--default-gap);width:100%;\"]);\nconst Header = styled.header.withConfig({\n  displayName: \"dashboard__Header\",\n  componentId: \"sc-9r28sr-1\"\n})([\"position:fixed;top:0;left:0;z-index:var(--z-15);display:flex;grid-gap:var(--default-gap);background:var(--surface-background);border:var(--surface-border);box-shadow:var(--surface-shadow);padding:var(--default-gap);width:100%;flex-grow:100;\"]);\nconst SideBar = styled(BaseSideBar).withConfig({\n  displayName: \"dashboard__SideBar\",\n  componentId: \"sc-9r28sr-2\"\n})([\"position:fixed;top:70px;left:0;height:calc(100vh - 70px);z-index:var(--z-12);@media only screen and (max-width:480px){display:none;}\"]);\nconst MenuButton = styled(Button).withConfig({\n  displayName: \"dashboard__MenuButton\",\n  componentId: \"sc-9r28sr-3\"\n})([\"display:none;@media only screen and (max-width:768px){display:flex;justify-content:center;align-items:center;}\"]);\nconst LogoZone = styled(Row).withConfig({\n  displayName: \"dashboard__LogoZone\",\n  componentId: \"sc-9r28sr-4\"\n})([\"justify-content:space-between;@media only screen and (max-width:996px){width:auto;}\"]);\nconst Logotype = styled.div.withConfig({\n  displayName: \"dashboard__Logotype\",\n  componentId: \"sc-9r28sr-5\"\n})([\"display:flex;justify-content:flex-start;align-items:center;img{height:30px;object-fit:contain;}@media only screen and (max-width:996px){min-width:auto;}@media only screen and (max-width:480px){display:none;}\"]);\nconst Content = styled(Container).withConfig({\n  displayName: \"dashboard__Content\",\n  componentId: \"sc-9r28sr-6\"\n})([\"padding:0 15px 15px 255px;flex-grow:1;@media only screen and (max-width:996px){padding:0 15px 15px 80px;}@media only screen and (max-width:480px){padding:0 15px 15px 15px;}\"]);\nexport const DashboardLayout = ({\n  children,\n  title = 'Панель администрирования'\n}) => {\n  var _root$settings$genera, _user$avatar;\n\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    root,\n    user\n  } = useSelector(state => state);\n  const [getUser, {\n    data,\n    loading\n  }] = useLazyQuery(queries.GET_USER);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (false) {\n      const token = localStorage.getItem(config.get('secret'));\n      if (token) getUser();else router.push('/');\n    }\n  }, []);\n  useEffect(() => {\n    if (data && data.getUser) {\n      var _data$getUser$role;\n\n      const isAccept = (_data$getUser$role = data.getUser.role) === null || _data$getUser$role === void 0 ? void 0 : _data$getUser$role.permissions.find(permission => permission === 'ACCESS_DASHBOARD');\n\n      if (isAccept) {\n        dispatch(setUser(data.getUser));\n      } else {\n        router.push('/');\n      }\n    }\n  }, [data, dispatch]);\n\n  if (loading || !user.authenticated) {\n    return /*#__PURE__*/React.createElement(FixedLoader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(MainLayout, null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"next,javascript,nextjs,react\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: root.settings.meta.description\n  }), /*#__PURE__*/React.createElement(\"title\", null, title)), /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(MenuButton, {\n    kind: 'icon',\n    appearance: 'clear',\n    onClick: recall(onMenu, {\n      links: getLinks((user === null || user === void 0 ? void 0 : user.role.permissions) || []).map((link, index) => ({\n        id: index,\n        text: link.component,\n        onClick: () => router.push(`/dashboard${link.path}`)\n      }))\n    })\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'menu'\n  })), /*#__PURE__*/React.createElement(LogoZone, null, /*#__PURE__*/React.createElement(Tooltip, {\n    text: root.settings.meta.description,\n    offset: {\n      bottom: 5\n    },\n    place: 'bottom',\n    maxWidth: 256,\n    multiline: true\n  }, /*#__PURE__*/React.createElement(Logotype, null, /*#__PURE__*/React.createElement(Link, {\n    href: '/'\n  }, /*#__PURE__*/React.createElement(\"a\", null, /*#__PURE__*/React.createElement(Image, {\n    src: (_root$settings$genera = root.settings.general.logotype) === null || _root$settings$genera === void 0 ? void 0 : _root$settings$genera.path,\n    alt: 'Logotype'\n  })))))), /*#__PURE__*/React.createElement(CommonSearch, {\n    appearance: 'ghost',\n    onClick: () => dispatch(setModal([{\n      path: '/',\n      title: 'Поиск',\n      component: ({\n        jump,\n        close\n      }) => /*#__PURE__*/React.createElement(Search, {\n        onJump: jump,\n        onHide: close\n      })\n    }, {\n      path: '/detail',\n      title: 'Подробная информация',\n      component: ({\n        data\n      }) => /*#__PURE__*/React.createElement(Column, {\n        style: {\n          padding: '15px'\n        }\n      }, /*#__PURE__*/React.createElement(Text, null, data.about || data.description))\n    }], 'l')),\n    disable: true\n  })), /*#__PURE__*/React.createElement(Main, null, /*#__PURE__*/React.createElement(SideBar, {\n    user: {\n      name: user.name,\n      role: user.role.name,\n      avatar: (user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) || '/images/avatar-default.png'\n    },\n    link: Link,\n    links: getLinks((user === null || user === void 0 ? void 0 : user.role.permissions) || []).map((link, index) => {\n      const path = `/dashboard${link.path.length > 1 ? link.path : ''}`;\n      return { ...link,\n        path,\n        component: /*#__PURE__*/React.createElement(\"a\", {\n          key: index,\n          className: router.pathname === path ? 'active' : ''\n        }, React.cloneElement(link.component, {\n          active: router.pathname === path\n        }))\n      };\n    })\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Column, null, children))));\n};\nexport default DashboardLayout;","map":null,"metadata":{},"sourceType":"module"}