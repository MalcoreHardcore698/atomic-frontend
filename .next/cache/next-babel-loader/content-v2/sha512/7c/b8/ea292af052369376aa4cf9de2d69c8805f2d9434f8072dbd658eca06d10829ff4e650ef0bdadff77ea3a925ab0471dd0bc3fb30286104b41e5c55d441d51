{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Column from '../atomic-ui/components/Column';\nimport DashboardLayout from './dashboard';\nimport DefaultLayout from '../layouts/default';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport HandleBar from '../components/HandleBar';\nimport { Card } from './dashboard/content';\nimport List from '../components/List';\nexport const INITIAL_DISPLAY_METHOD = 'grid';\nconst Wrap = styled(Column).withConfig({\n  displayName: \"content__Wrap\",\n  componentId: \"sc-1afm75p-0\"\n})([\"margin-top:120px;margin-bottom:80px;\", \" @media only screen and (max-width:480px){margin-top:0;}\"], ({\n  clear\n}) => clear && css([\"margin:0;\"]));\n_c = Wrap;\nconst Container = styled.div.withConfig({\n  displayName: \"content__Container\",\n  componentId: \"sc-1afm75p-1\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;\", \" @media only screen and (max-width:1196px){grid-template-columns:1fr;}\"], ({\n  stretch\n}) => stretch && css([\"grid-template-columns:1fr;\"]));\n_c2 = Container;\n\nconst ContentLayout = ({\n  limit,\n  title,\n  aside,\n  store,\n  handle,\n  render,\n  getType,\n  getQuery,\n  dashboard,\n  variables,\n  filterConfig,\n  emptyMessage,\n  startOffset,\n  onLink\n}) => {\n  _s();\n\n  const search = useSelector(state => state.root.search);\n  const Layout = dashboard ? DashboardLayout : DefaultLayout;\n  const [visibleFilter, setVisibleFilter] = useState(false);\n\n  const renderCard = item => /*#__PURE__*/React.createElement(Card, {\n    item: item,\n    component: render(item),\n    onLink: onLink && (item => onLink(item)),\n    withoutChecked: true\n  });\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: title,\n    scaffold: store === null || store === void 0 ? void 0 : store.scaffold\n  }, /*#__PURE__*/React.createElement(Wrap, {\n    clear: (store === null || store === void 0 ? void 0 : store.scaffold) || dashboard\n  }, !(store !== null && store !== void 0 && store.scaffold) && !dashboard && /*#__PURE__*/React.createElement(SearchBar, {\n    onChangeFilter: () => setVisibleFilter(!visibleFilter)\n  }), dashboard && handle && /*#__PURE__*/React.createElement(HandleBar, {\n    title: title,\n    icon: handle.icon,\n    onCreate: handle.onCreate,\n    buttonCreateText: handle.buttonCreateText,\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: handle.onChangeDisplayMethod\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filterConfig: filterConfig\n  }), /*#__PURE__*/React.createElement(Container, {\n    stretch: search && !aside || !aside\n  }, /*#__PURE__*/React.createElement(List, {\n    limit: limit,\n    type: getType,\n    query: getQuery,\n    variables: variables,\n    startOffset: startOffset,\n    emptyMessage: emptyMessage,\n    component: item => renderCard(item),\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    onClick: onLink && (item => onLink(item))\n  }), aside)));\n};\n\n_s(ContentLayout, \"GA2xHmyG/GibtxGacpEzHvwcqcA=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = ContentLayout;\nexport default ContentLayout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ContentLayout\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/layouts/content.js"],"names":["React","useState","useSelector","styled","css","Column","DashboardLayout","DefaultLayout","FilterBar","SearchBar","HandleBar","Card","List","INITIAL_DISPLAY_METHOD","Wrap","clear","Container","div","stretch","ContentLayout","limit","title","aside","store","handle","render","getType","getQuery","dashboard","variables","filterConfig","emptyMessage","startOffset","onLink","search","state","root","Layout","visibleFilter","setVisibleFilter","renderCard","item","scaffold","icon","onCreate","buttonCreateText","onChangeDisplayMethod"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport Column from '../atomic-ui/components/Column'\n\nimport DashboardLayout from './dashboard'\nimport DefaultLayout from '../layouts/default'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport HandleBar from '../components/HandleBar'\nimport { Card } from './dashboard/content'\nimport List from '../components/List'\n\nexport const INITIAL_DISPLAY_METHOD = 'grid'\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  ${({ clear }) =>\n    clear &&\n    css`\n      margin: 0;\n    `}\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  ${({ stretch }) =>\n    stretch &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst ContentLayout = ({\n  limit,\n  title,\n  aside,\n  store,\n  handle,\n  render,\n  getType,\n  getQuery,\n  dashboard,\n  variables,\n  filterConfig,\n  emptyMessage,\n  startOffset,\n  onLink\n}) => {\n  const search = useSelector((state) => state.root.search)\n  const Layout = dashboard ? DashboardLayout : DefaultLayout\n  const [visibleFilter, setVisibleFilter] = useState(false)\n\n  const renderCard = (item) => (\n    <Card\n      item={item}\n      component={render(item)}\n      onLink={onLink && ((item) => onLink(item))}\n      withoutChecked\n    />\n  )\n\n  return (\n    <Layout title={title} scaffold={store?.scaffold}>\n      <Wrap clear={store?.scaffold || dashboard}>\n        {!store?.scaffold && !dashboard && (\n          <SearchBar\n            onChangeFilter={() => setVisibleFilter(!visibleFilter)}\n          />\n        )}\n\n        {dashboard && handle && (\n          <HandleBar\n            title={title}\n            icon={handle.icon}\n            onCreate={handle.onCreate}\n            buttonCreateText={handle.buttonCreateText}\n            onChangeVisibleFilter={() => setVisibleFilter(!visibleFilter)}\n            onChangeDisplayMethod={handle.onChangeDisplayMethod}\n          />\n        )}\n\n        <FilterBar isOpen={visibleFilter} filterConfig={filterConfig} />\n\n        <Container stretch={(search && !aside) || !aside}>\n          <List\n            limit={limit}\n            type={getType}\n            query={getQuery}\n            variables={variables}\n            startOffset={startOffset}\n            emptyMessage={emptyMessage}\n            component={(item) => renderCard(item)}\n            initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n            onClick={onLink && ((item) => onLink(item))}\n          />\n          {aside}\n        </Container>\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport default ContentLayout\n"]},"metadata":{},"sourceType":"module"}