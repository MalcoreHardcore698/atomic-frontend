{"ast":null,"code":"var _jsxFileName = \"/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Arrower/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Icon from '../Icon';\nimport Button from '../Button';\nexport const Wrap = styled(Row)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  ${({\n  noMargin\n}) => noMargin && css`\n      margin: 0;\n    `}\n`;\nexport const Label = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 5px;\n  flex-grow: 1;\n  height: var(--input-height-s);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      background: none;\n      border: none;\n    `}\n\n  span {\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n`;\nexport const ArrowButton = styled(Button)``;\n\nconst Arrower = ({\n  label,\n  appearance,\n  arrowLeft,\n  arrowRight,\n  noMargin,\n  onChange\n}) => {\n  const onChangeMonth = sign => {\n    if (onChange) onChange(sign);\n  };\n\n  const onPrevMonth = () => onChangeMonth(-1);\n\n  const onNextMonth = () => onChangeMonth(1);\n\n  return __jsx(Wrap, {\n    noMargin: noMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(ArrowButton, {\n    type: 'button',\n    size: 's',\n    kind: 'icon',\n    appearance: appearance,\n    \"aria-label\": 'Назад',\n    onMouseDown: onPrevMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    icon: arrowLeft || 'arrowLeft',\n    stroke: appearance !== 'clear' && 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), __jsx(Label, {\n    appearance: appearance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, label), __jsx(ArrowButton, {\n    type: 'button',\n    size: 's',\n    kind: 'icon',\n    appearance: appearance,\n    \"aria-label\": 'Далее',\n    onMouseDown: onNextMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    icon: arrowRight || 'arrowRight',\n    stroke: appearance !== 'clear' && 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n};\n\nArrower.defaultProps = {\n  appearance: 'clear'\n};\nexport default Arrower;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Arrower/index.js"],"names":["React","styled","css","Row","Icon","Button","Wrap","noMargin","Label","div","appearance","ArrowButton","Arrower","label","arrowLeft","arrowRight","onChange","onChangeMonth","sign","onPrevMonth","onNextMonth","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGL,MAAM,CAACE,GAAD,CAAM;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEI,EAAAA;AAAF,CAAD,KACAA,QAAQ,IACRL,GAAI;AACR;AACA,KAAM;AACN,CAXO;AAaP,OAAO,MAAMM,KAAK,GAAGP,MAAM,CAACQ,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAR,GAAI;AACR;AACA;AACA,KAAM;AACN;AACA;AACA;AACA;AACA;AACA,CAtBO;AAwBP,OAAO,MAAMS,WAAW,GAAGV,MAAM,CAACI,MAAD,CAAS,EAAnC;;AAEP,MAAMO,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA,UAAT;AAAqBI,EAAAA,SAArB;AAAgCC,EAAAA,UAAhC;AAA4CR,EAAAA,QAA5C;AAAsDS,EAAAA;AAAtD,CAAD,KAAsE;AACpF,QAAMC,aAAa,GAAIC,IAAD,IAAU;AAC9B,QAAIF,QAAJ,EAAcA,QAAQ,CAACE,IAAD,CAAR;AACf,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAMF,aAAa,CAAC,CAAC,CAAF,CAAvC;;AACA,QAAMG,WAAW,GAAG,MAAMH,aAAa,CAAC,CAAD,CAAvC;;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEV,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,kBAAY,OALd;AAME,IAAA,WAAW,EAAES,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,SAAS,IAAI,WAAzB;AAAsC,IAAA,MAAM,EAAEJ,UAAU,KAAK,OAAf,IAA0B,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAWE,MAAC,KAAD;AAAO,IAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCG,KAAhC,CAXF,EAaE,MAAC,WAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,IAAI,EAAE,GAFR;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,UAAU,EAAEH,UAJd;AAKE,kBAAY,OALd;AAME,IAAA,WAAW,EAAEU,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,UAAU,IAAI,YAA1B;AAAwC,IAAA,MAAM,EAAEL,UAAU,KAAK,OAAf,IAA0B,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAbF,CADF;AAyBD,CAjCD;;AAmCAE,OAAO,CAACS,YAAR,GAAuB;AACrBX,EAAAA,UAAU,EAAE;AADS,CAAvB;AAIA,eAAeE,OAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Icon from '../Icon'\nimport Button from '../Button'\n\nexport const Wrap = styled(Row)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n\n  ${({ noMargin }) =>\n    noMargin &&\n    css`\n      margin: 0;\n    `}\n`\n\nexport const Label = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 5px;\n  flex-grow: 1;\n  height: var(--input-height-s);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      background: none;\n      border: none;\n    `}\n\n  span {\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n`\n\nexport const ArrowButton = styled(Button)``\n\nconst Arrower = ({ label, appearance, arrowLeft, arrowRight, noMargin, onChange }) => {\n  const onChangeMonth = (sign) => {\n    if (onChange) onChange(sign)\n  }\n\n  const onPrevMonth = () => onChangeMonth(-1)\n  const onNextMonth = () => onChangeMonth(1)\n\n  return (\n    <Wrap noMargin={noMargin}>\n      <ArrowButton\n        type={'button'}\n        size={'s'}\n        kind={'icon'}\n        appearance={appearance}\n        aria-label={'Назад'}\n        onMouseDown={onPrevMonth}>\n        <Icon icon={arrowLeft || 'arrowLeft'} stroke={appearance !== 'clear' && 'white'} />\n      </ArrowButton>\n\n      <Label appearance={appearance}>{label}</Label>\n\n      <ArrowButton\n        type={'button'}\n        size={'s'}\n        kind={'icon'}\n        appearance={appearance}\n        aria-label={'Далее'}\n        onMouseDown={onNextMonth}>\n        <Icon icon={arrowRight || 'arrowRight'} stroke={appearance !== 'clear' && 'white'} />\n      </ArrowButton>\n    </Wrap>\n  )\n}\n\nArrower.defaultProps = {\n  appearance: 'clear'\n}\n\nexport default Arrower\n"]},"metadata":{},"sourceType":"module"}