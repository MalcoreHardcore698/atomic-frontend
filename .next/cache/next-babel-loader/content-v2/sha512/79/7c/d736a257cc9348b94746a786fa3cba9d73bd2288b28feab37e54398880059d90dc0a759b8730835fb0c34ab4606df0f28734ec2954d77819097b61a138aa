{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport { getColorStatus, getLabelStatus } from '../../atomic-ui/utils/functions';\nimport HTMLView from '../HTMLView';\nimport Comments from '../Comments';\nimport Processed from '../Processed';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nconst HOST_URL = config.get('host-url');\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ArticleView__Wrap\",\n  componentId: \"sc-12lysue-0\"\n})([\"flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ArticleView__Poster\",\n  componentId: \"sc-12lysue-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);@media only screen and (max-width:480px){height:256px;}\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"ArticleView__Content\",\n  componentId: \"sc-12lysue-2\"\n})([\"grid-gap:0;\"]);\nexport const View = ({\n  article,\n  appearance,\n  className,\n  style,\n  onLink,\n  onCommentLink,\n  onCommentReply,\n  withStatus\n}) => {\n  var _data$getArticle, _data$getArticle2, _data$getArticle2$pre, _data$getArticle3, _data$getArticle4, _data$getArticle5, _data$getArticle6, _data$getArticle7, _data$getArticle8, _data$getArticle8$cat, _data$getArticle9, _data$getArticle10, _data$getArticle11, _data$getArticle12, _data$getArticle13;\n\n  const [comments, setComments] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_ARTICLE, {\n    variables: {\n      id: article\n    }\n  });\n  const {\n    data: dataComments,\n    loading: loadingComments,\n    error: errorComments\n  } = useQuery(queries.GET_COMMENTS, {\n    variables: {\n      id: article\n    }\n  });\n  const [sendComment, {\n    data: dataSendComment,\n    loading: loadingSendComment,\n    error: errorSendComment\n  }] = useMutation(queries.SEND_COMMENT);\n  const [likeComment] = useMutation(queries.LIKE_COMMENT);\n  useEffect(() => {\n    if (!loadingComments && dataComments) {\n      setComments(dataComments.getComments);\n    }\n  }, [dataComments, loadingComments]);\n  useEffect(() => {\n    if (!loadingSendComment && dataSendComment) {\n      setComments(dataSendComment.sendComment);\n    }\n  }, [dataSendComment, loadingSendComment]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getArticle,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о статье',\n    emptyMessage: 'Кажется такой статьи не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, (data === null || data === void 0 ? void 0 : (_data$getArticle = data.getArticle) === null || _data$getArticle === void 0 ? void 0 : _data$getArticle.preview) && /*#__PURE__*/React.createElement(Poster, {\n    src: data === null || data === void 0 ? void 0 : (_data$getArticle2 = data.getArticle) === null || _data$getArticle2 === void 0 ? void 0 : (_data$getArticle2$pre = _data$getArticle2.preview) === null || _data$getArticle2$pre === void 0 ? void 0 : _data$getArticle2$pre.path\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    shareTitle: data === null || data === void 0 ? void 0 : (_data$getArticle3 = data.getArticle) === null || _data$getArticle3 === void 0 ? void 0 : _data$getArticle3.title,\n    shareUrl: false ? location.href : HOST_URL,\n    status: withStatus && (data === null || data === void 0 ? void 0 : (_data$getArticle4 = data.getArticle) === null || _data$getArticle4 === void 0 ? void 0 : _data$getArticle4.status) && getLabelStatus(data === null || data === void 0 ? void 0 : (_data$getArticle5 = data.getArticle) === null || _data$getArticle5 === void 0 ? void 0 : _data$getArticle5.status),\n    color: withStatus && (data === null || data === void 0 ? void 0 : (_data$getArticle6 = data.getArticle) === null || _data$getArticle6 === void 0 ? void 0 : _data$getArticle6.status) && getColorStatus(data === null || data === void 0 ? void 0 : (_data$getArticle7 = data.getArticle) === null || _data$getArticle7 === void 0 ? void 0 : _data$getArticle7.status),\n    category: data === null || data === void 0 ? void 0 : (_data$getArticle8 = data.getArticle) === null || _data$getArticle8 === void 0 ? void 0 : (_data$getArticle8$cat = _data$getArticle8.category) === null || _data$getArticle8$cat === void 0 ? void 0 : _data$getArticle8$cat.name,\n    date: data === null || data === void 0 ? void 0 : (_data$getArticle9 = data.getArticle) === null || _data$getArticle9 === void 0 ? void 0 : _data$getArticle9.createdAt\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    onClick: onLink,\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$getArticle10 = data.getArticle) === null || _data$getArticle10 === void 0 ? void 0 : _data$getArticle10.title), (data === null || data === void 0 ? void 0 : (_data$getArticle11 = data.getArticle) === null || _data$getArticle11 === void 0 ? void 0 : _data$getArticle11.body) && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data === null || data === void 0 ? void 0 : (_data$getArticle12 = data.getArticle) === null || _data$getArticle12 === void 0 ? void 0 : _data$getArticle12.body\n  })), (data === null || data === void 0 ? void 0 : (_data$getArticle13 = data.getArticle) === null || _data$getArticle13 === void 0 ? void 0 : _data$getArticle13.status) === 'PUBLISHED' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Comments, {\n    comments: comments,\n    appearance: 'ghost',\n    error: errorComments || errorSendComment,\n    loading: loadingComments || loadingSendComment,\n    onLink: onCommentLink,\n    onReply: onCommentReply,\n    onLike: (id, liked) => likeComment({\n      variables: {\n        comment: id,\n        liked\n      }\n    }),\n    onSubmit: value => sendComment({\n      variables: {\n        article: data.getArticle.id,\n        text: value\n      }\n    })\n  })))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}