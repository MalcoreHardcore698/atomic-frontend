{"ast":null,"code":"import _extends from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\DateText\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nexport var Wrap = styled.time(_templateObject());\n_c = Wrap;\nexport var DateText = function DateText(_ref) {\n  var _Date$toLocaleString;\n\n  var text = _ref.text,\n      locales = _ref.locales,\n      options = _ref.options,\n      props = _objectWithoutProperties(_ref, [\"text\", \"locales\", \"options\"]);\n\n  return __jsx(Wrap, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }\n  }), (_Date$toLocaleString = new Date(parseInt(text) || text).toLocaleString(locales, options)) !== null && _Date$toLocaleString !== void 0 ? _Date$toLocaleString : 'Date Invalid');\n};\n_c2 = DateText;\nDateText.defaultProps = {\n  text: new Date(),\n  locales: 'ru-RU',\n  options: {\n    hour: 'numeric',\n    minute: '2-digit'\n  }\n};\nexport default DateText;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"DateText\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/DateText/index.js"],"names":["React","styled","Wrap","time","DateText","text","locales","options","props","Date","parseInt","toLocaleString","defaultProps","hour","minute"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,IAAI,GAAGD,MAAM,CAACE,IAAV,mBAAV;KAAMD,I;AAIb,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,OAAlB,QAAkBA,OAAlB;AAAA,MAA8BC,KAA9B;;AAAA,SACtB,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACG,IAAIC,IAAJ,CAASC,QAAQ,CAACL,IAAD,CAAR,IAAkBA,IAA3B,EAAiCM,cAAjC,CAAgDL,OAAhD,EAAyDC,OAAzD,CADH,uEACwE,cADxE,CADsB;AAAA,CAAjB;MAAMH,Q;AAMbA,QAAQ,CAACQ,YAAT,GAAwB;AACtBP,EAAAA,IAAI,EAAE,IAAII,IAAJ,EADgB;AAEtBH,EAAAA,OAAO,EAAE,OAFa;AAGtBC,EAAAA,OAAO,EAAE;AACPM,IAAAA,IAAI,EAAE,SADC;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAHa,CAAxB;AASA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const Wrap = styled.time`\n  font-size: var(--font-size-s);\n`\n\nexport const DateText = ({ text, locales, options, ...props }) => (\n  <Wrap {...props}>\n    {new Date(parseInt(text) || text).toLocaleString(locales, options) ?? 'Date Invalid'}\n  </Wrap>\n)\n\nDateText.defaultProps = {\n  text: new Date(),\n  locales: 'ru-RU',\n  options: {\n    hour: 'numeric',\n    minute: '2-digit'\n  }\n}\n\nexport default DateText\n"]},"metadata":{},"sourceType":"module"}