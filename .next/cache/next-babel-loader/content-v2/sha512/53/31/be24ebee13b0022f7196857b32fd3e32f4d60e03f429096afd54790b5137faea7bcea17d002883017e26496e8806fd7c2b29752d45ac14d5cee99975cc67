{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\nimport Grid from '../atomic-ui/components/Grid';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Title from '../atomic-ui/components/Title';\nimport Text from '../atomic-ui/components/Text';\nimport Card, { Wrap as WrapCard } from '../atomic-ui/components/Card';\nimport Tape from '../atomic-ui/components/Tape';\nimport Arrower from '../atomic-ui/components/Arrower';\nimport Breadcrumbs from '../atomic-ui/components/Breadcrumbs';\nimport IconIdea from '../atomic-ui/assets/images/heads/idea.svg';\nimport IconAnalys from '../atomic-ui/assets/images/heads/analys.svg';\nimport IconInsight from '../atomic-ui/assets/images/heads/insight.svg';\nimport IconScience from '../atomic-ui/assets/images/heads/science.svg';\nimport IconReborn from '../atomic-ui/assets/images/heads/reborn.svg';\nimport IconEducation from '../atomic-ui/assets/images/heads/education.svg';\nimport IconArrow from '../atomic-ui/assets/images/icons/arrow_right_circle.svg';\nimport useHelper from '../hooks/useHelper';\nimport DefaultLayout from '../layouts/default';\nimport { onIndexVideoLink } from '../store/helpers';\nimport config from '../config';\nconst TITLE = 'О портале';\nconst SOLID_CARDS = [{\n  text: 'Здесь авторы презентуют свои проекты',\n  color: 'blue',\n  extras: 1\n}, {\n  text: 'Проектные компании предлагают инновационные решения',\n  color: 'orange',\n  extras: 2\n}, {\n  text: 'Представители власти и бизнеса выбирают проекты для инвестиций',\n  color: 'green',\n  extras: 3\n}];\nconst DEFAULT_CARDS = [{\n  text: 'В Вашем проекте будут уникальные архитектурные решения, например, \"Эктон\"',\n  extras: /*#__PURE__*/React.createElement(IconIdea, null),\n  color: 'pink'\n}, {\n  text: /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", null, \"\\u0412\\u044B \\u0440\\u0430\\u0441\\u0441\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043E\\u0431 \\u043E\\u0441\\u043D\\u043E\\u0432\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0435\\u043B\\u044F\\u0445 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430:\"), /*#__PURE__*/React.createElement(\"p\", null, \"- \\u0444\\u0438\\u043D\\u0430\\u043D\\u0441\\u043E\\u0432\\u044B\\u0435 (\\u043D\\u0430\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u044D\\u0442\\u043E \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E)\"), /*#__PURE__*/React.createElement(\"p\", null, \"- \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u0438\\u0431\\u0430\\u0432\\u0438\\u0448\\u0438\\u0445\\u0441\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u043E\\u0432 (\\u0434\\u0430\\u0436\\u0435 \\u0435\\u0441\\u043B\\u0438 \\u044D\\u0442\\u043E \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437)\"), /*#__PURE__*/React.createElement(\"p\", null, \"- \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0448\\u043A\\u043E\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0442\\u0435\\u0440\\u0440\\u0438\\u0442\\u043E\\u0440\\u0438\\u0439 \\u0438 \\u0442.\\u0434.\")),\n  extras: /*#__PURE__*/React.createElement(IconAnalys, null),\n  color: 'red'\n}, {\n  text: 'Описание что приобрела школа после ее преображения (рождения)',\n  extras: /*#__PURE__*/React.createElement(IconInsight, null),\n  color: 'blue'\n}, {\n  text: 'Какие инновационные решения Вы применили в своем проекте: например, концепция \"Smart-класс\" /' + 'включает себя создание пространства для творческой индивидуальности и совместных интерактивных /' + 'активностей преподователя и школьников',\n  extras: /*#__PURE__*/React.createElement(IconScience, null),\n  color: 'orange'\n}, {\n  text: 'Какие уникальные методы использования школьных пространств Вы нашли',\n  extras: /*#__PURE__*/React.createElement(IconReborn, null),\n  color: 'red'\n}, {\n  text: 'Какие передовые средства обучения были вами заложены (планетарии, 3д принтеры, высокотехнологические станки и.т.д.)',\n  extras: /*#__PURE__*/React.createElement(IconEducation, null),\n  color: 'green'\n}];\nconst Container = styled(Column).withConfig({\n  displayName: \"about__Container\",\n  componentId: \"sc-11tf6ey-0\"\n})([\"grid-gap:75px;\"]);\nconst SolidCards = styled(Row).withConfig({\n  displayName: \"about__SolidCards\",\n  componentId: \"sc-11tf6ey-1\"\n})([\"display:flex;flex-wrap:wrap;grid-gap:var(--default-gap);\", \"{p{max-width:300px;}}\"], WrapCard);\n\nconst SolidCardSection = ({\n  onOpenVideo\n}) => /*#__PURE__*/React.createElement(SolidCards, null, SOLID_CARDS.map(card => /*#__PURE__*/React.createElement(Card, _extends({\n  key: v4()\n}, card, {\n  type: 'solid'\n}))), /*#__PURE__*/React.createElement(Card, {\n  text: 'Что такое Атомик по мнению создателей',\n  color: 'purple',\n  extras: /*#__PURE__*/React.createElement(IconArrow, null),\n  type: 'solid',\n  onClick: onOpenVideo\n}));\n\nconst ArrowerSection = () => {\n  const advantages = ['Продвижение автора и команды', 'Government Relations – здесь можно «поговорить» с представителями государства', 'Нетворкинг для бизнеса – полезные связи и знакомства', 'Коммьюнити специалистов в сфере образования – только на Атомике можно увидеть уникальные решения', 'Быть причастным к изменениям в образовательной среде'];\n  const [advantage, setAdvantage] = useState(0);\n  return /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Arrower, {\n    key: v4(),\n    appearance: 'default',\n    arrowLeft: 'arrowLeft2',\n    arrowRight: 'arrowRight2',\n    label: advantages[advantage],\n    onChange: sign => setAdvantage(advantage + sign < 0 ? advantages.length - 1 : advantage + sign > advantages.length - 1 ? 0 : advantage + sign),\n    noMargin: true\n  }));\n};\n\nconst DefaultCardSection = () => /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n  tag: 'h3'\n}, \"\\u041A\\u0430\\u043A \\u043E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0432\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442 \\u043D\\u0430 \\u043F\\u043E\\u0440\\u0442\\u0430\\u043B\\u0435 \\u0410\\u0442\\u043E\\u043C\\u0438\\u043A?\"), /*#__PURE__*/React.createElement(Text, null, \"\\u041C\\u044B \\u043F\\u0440\\u0435\\u0434\\u043F\\u043E\\u043B\\u0430\\u0433\\u0430\\u0435\\u043C, \\u0447\\u0442\\u043E...\"), /*#__PURE__*/React.createElement(Grid, {\n  percentage: 'minmax(325px, 1fr)'\n}, DEFAULT_CARDS.map(card => /*#__PURE__*/React.createElement(Card, _extends({\n  key: v4()\n}, card)))));\n\nconst About = () => {\n  const recall = useHelper();\n  const router = useRouter();\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE,\n    background: '/images/background.png'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Breadcrumbs, {\n    links: [{\n      label: 'Главная',\n      path: '/'\n    }, {\n      label: 'О ресурсе'\n    }],\n    callback: path => router.push(path)\n  }), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Title, null, \"\\u0410\\u0442\\u043E\\u043C\\u0438\\u043A \\u2013 \\u043F\\u043E\\u0440\\u0442\\u0430\\u043B \\u0434\\u043B\\u044F \\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u043D\\u043E\\u0432\\u043E\\u0439 \\u0441\\u0444\\u0435\\u0440\\u044B \\u043E\\u0431\\u0440\\u0430\\u0437\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(SolidCardSection, {\n    onOpenVideo: recall(onIndexVideoLink, {\n      video: config.get('video-id')\n    })\n  }), /*#__PURE__*/React.createElement(Tape, {\n    text: 'Для авторов проектов в сфере образования, содержащих уникальные архитектурные или дизайнерские решения'\n  }), /*#__PURE__*/React.createElement(ArrowerSection, null), /*#__PURE__*/React.createElement(Tape, {\n    text: 'Для проектных институтов или бюро, имеющих практику нового строительства, реконструкции или капитального ремонта общеобразовательной организации'\n  }), /*#__PURE__*/React.createElement(DefaultCardSection, null), /*#__PURE__*/React.createElement(Tape, {\n    text: 'Для представителей государственного кластера всей страны'\n  }))));\n};\n\nexport default About;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/about.js"],"names":["React","useState","useMemo","useRouter","styled","v4","Grid","Row","Column","Title","Text","Card","Wrap","WrapCard","Tape","Arrower","Breadcrumbs","IconIdea","IconAnalys","IconInsight","IconScience","IconReborn","IconEducation","IconArrow","useHelper","DefaultLayout","onIndexVideoLink","config","TITLE","SOLID_CARDS","text","color","extras","DEFAULT_CARDS","gridGap","Container","SolidCards","SolidCardSection","onOpenVideo","map","card","ArrowerSection","advantages","advantage","setAdvantage","sign","length","DefaultCardSection","About","recall","router","label","path","push","video","get"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Grid from '../atomic-ui/components/Grid'\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Title from '../atomic-ui/components/Title'\nimport Text from '../atomic-ui/components/Text'\nimport Card, { Wrap as WrapCard } from '../atomic-ui/components/Card'\nimport Tape from '../atomic-ui/components/Tape'\nimport Arrower from '../atomic-ui/components/Arrower'\nimport Breadcrumbs from '../atomic-ui/components/Breadcrumbs'\nimport IconIdea from '../atomic-ui/assets/images/heads/idea.svg'\nimport IconAnalys from '../atomic-ui/assets/images/heads/analys.svg'\nimport IconInsight from '../atomic-ui/assets/images/heads/insight.svg'\nimport IconScience from '../atomic-ui/assets/images/heads/science.svg'\nimport IconReborn from '../atomic-ui/assets/images/heads/reborn.svg'\nimport IconEducation from '../atomic-ui/assets/images/heads/education.svg'\nimport IconArrow from '../atomic-ui/assets/images/icons/arrow_right_circle.svg'\n\nimport useHelper from '../hooks/useHelper'\nimport DefaultLayout from '../layouts/default'\nimport { onIndexVideoLink } from '../store/helpers'\nimport config from '../config'\n\nconst TITLE = 'О портале'\n\nconst SOLID_CARDS = [\n  {\n    text: 'Здесь авторы презентуют свои проекты',\n    color: 'blue',\n    extras: 1\n  },\n  {\n    text: 'Проектные компании предлагают инновационные решения',\n    color: 'orange',\n    extras: 2\n  },\n  {\n    text: 'Представители власти и бизнеса выбирают проекты для инвестиций',\n    color: 'green',\n    extras: 3\n  }\n]\n\nconst DEFAULT_CARDS = [\n  {\n    text: 'В Вашем проекте будут уникальные архитектурные решения, например, \"Эктон\"',\n    extras: <IconIdea />,\n    color: 'pink'\n  },\n  {\n    text: (\n      <Column style={{ gridGap: 5 }}>\n        <p>Вы расскажите об основных показателях своего проекта:</p>\n        <p>- финансовые (насколько это возможно)</p>\n        <p>- количество прибавишихся учеников (даже если это прогноз)</p>\n        <p>- качественное использование школьных территорий и т.д.</p>\n      </Column>\n    ),\n    extras: <IconAnalys />,\n    color: 'red'\n  },\n  {\n    text: 'Описание что приобрела школа после ее преображения (рождения)',\n    extras: <IconInsight />,\n    color: 'blue'\n  },\n  {\n    text:\n      'Какие инновационные решения Вы применили в своем проекте: например, концепция \"Smart-класс\" /' +\n      'включает себя создание пространства для творческой индивидуальности и совместных интерактивных /' +\n      'активностей преподователя и школьников',\n    extras: <IconScience />,\n    color: 'orange'\n  },\n  {\n    text: 'Какие уникальные методы использования школьных пространств Вы нашли',\n    extras: <IconReborn />,\n    color: 'red'\n  },\n  {\n    text:\n      'Какие передовые средства обучения были вами заложены (планетарии, 3д принтеры, высокотехнологические станки и.т.д.)',\n    extras: <IconEducation />,\n    color: 'green'\n  }\n]\n\nconst Container = styled(Column)`\n  grid-gap: 75px;\n`\n\nconst SolidCards = styled(Row)`\n  display: flex;\n  flex-wrap: wrap;\n  grid-gap: var(--default-gap);\n\n  ${WrapCard} {\n    p {\n      max-width: 300px;\n    }\n  }\n`\n\nconst SolidCardSection = ({ onOpenVideo }) => (\n  <SolidCards>\n    {SOLID_CARDS.map((card) => (\n      <Card key={v4()} {...card} type={'solid'} />\n    ))}\n    <Card\n      text={'Что такое Атомик по мнению создателей'}\n      color={'purple'}\n      extras={<IconArrow />}\n      type={'solid'}\n      onClick={onOpenVideo}\n    />\n  </SolidCards>\n)\n\nconst ArrowerSection = () => {\n  const advantages = [\n    'Продвижение автора и команды',\n    'Government Relations – здесь можно «поговорить» с представителями государства',\n    'Нетворкинг для бизнеса – полезные связи и знакомства',\n    'Коммьюнити специалистов в сфере образования – только на Атомике можно увидеть уникальные решения',\n    'Быть причастным к изменениям в образовательной среде'\n  ]\n  const [advantage, setAdvantage] = useState(0)\n\n  return (\n    <Column>\n      <Arrower\n        key={v4()}\n        appearance={'default'}\n        arrowLeft={'arrowLeft2'}\n        arrowRight={'arrowRight2'}\n        label={advantages[advantage]}\n        onChange={(sign) =>\n          setAdvantage(\n            advantage + sign < 0\n              ? advantages.length - 1\n              : advantage + sign > advantages.length - 1\n              ? 0\n              : advantage + sign\n          )\n        }\n        noMargin\n      />\n    </Column>\n  )\n}\n\nconst DefaultCardSection = () => (\n  <Column>\n    <Title tag={'h3'}>Как опубликовать свой проект на портале Атомик?</Title>\n    <Text>Мы предполагаем, что...</Text>\n\n    <Grid percentage={'minmax(325px, 1fr)'}>\n      {DEFAULT_CARDS.map((card) => (\n        <Card key={v4()} {...card} />\n      ))}\n    </Grid>\n  </Column>\n)\n\nconst About = () => {\n  const recall = useHelper()\n  const router = useRouter()\n\n  return (\n    <DefaultLayout title={TITLE} background={'/images/background.png'}>\n      <Column>\n        <Breadcrumbs\n          links={[{ label: 'Главная', path: '/' }, { label: 'О ресурсе' }]}\n          callback={(path) => router.push(path)}\n        />\n\n        <Container>\n          <Title>Атомик – портал для формирования новой сферы образования</Title>\n\n          <SolidCardSection\n            onOpenVideo={recall(onIndexVideoLink, { video: config.get('video-id') })}\n          />\n\n          <Tape\n            text={\n              'Для авторов проектов в сфере образования, содержащих уникальные архитектурные или дизайнерские решения'\n            }\n          />\n\n          <ArrowerSection />\n\n          <Tape\n            text={\n              'Для проектных институтов или бюро, имеющих практику нового строительства, реконструкции или капитального ремонта общеобразовательной организации'\n            }\n          />\n\n          <DefaultCardSection />\n\n          <Tape text={'Для представителей государственного кластера всей страны'} />\n        </Container>\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport default About\n"]},"metadata":{},"sourceType":"module"}