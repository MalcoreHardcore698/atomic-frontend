{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"CategoryView__Wrap\",\n  componentId: \"sc-1leuzf2-0\"\n})([\"\", \" \", \" \", \"\"], function (_ref) {\n  var appearance = _ref.appearance;\n  return appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]);\n}, function (_ref2) {\n  var appearance = _ref2.appearance;\n  return appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n}, function (_ref3) {\n  var appearance = _ref3.appearance;\n  return appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n});\nexport var Poster = styled(Image).withConfig({\n  displayName: \"CategoryView__Poster\",\n  componentId: \"sc-1leuzf2-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);\"]);\nexport var Content = styled(Column).withConfig({\n  displayName: \"CategoryView__Content\",\n  componentId: \"sc-1leuzf2-2\"\n})([\"grid-gap:0;\"]);\nexport var View = function View(_ref4) {\n  var category = _ref4.category,\n      appearance = _ref4.appearance,\n      className = _ref4.className,\n      style = _ref4.style;\n\n  var _useQuery = useQuery(queries.GET_CATEGORY, {\n    variables: {\n      id: category\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data.getCategory ? /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    date: data.getCategory.createdAt,\n    category: getLabelCategory(data.getCategory.type)\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, data.getCategory.name), /*#__PURE__*/React.createElement(Text, null, data.getCategory.description)) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0441\\u0442\\u0430\\u0442\\u044C\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/CategoryView/index.js"],"names":["React","styled","css","useQuery","Column","Title","Text","Image","Meta","Alert","Spinner","getLabelCategory","Loader","queries","Wrap","appearance","Poster","Content","View","category","className","style","GET_CATEGORY","variables","id","data","loading","error","getCategory","createdAt","type","name","description","width","textAlign","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAO,IAAMC,IAAI,GAAGb,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,uBACb;AAAA,MAAGW,UAAH,QAAGA,UAAH;AAAA,SACAA,UAAU,KAAK,SAAf,IACAb,GADA,+KADA;AAAA,CADa,EAWb;AAAA,MAAGa,UAAH,SAAGA,UAAH;AAAA,SACAA,UAAU,KAAK,OAAf,IACAb,GADA,4EADA;AAAA,CAXa,EAqBb;AAAA,MAAGa,UAAH,SAAGA,UAAH;AAAA,SACAA,UAAU,KAAK,OAAf,IACAb,GADA,4EADA;AAAA,CArBa,CAAV;AAgCP,OAAO,IAAMc,MAAM,GAAGf,MAAM,CAACM,KAAD,CAAT;AAAA;AAAA;AAAA,4FAAZ;AAOP,OAAO,IAAMU,OAAO,GAAGhB,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,mBAAb;AAIP,OAAO,IAAMc,IAAI,GAAG,SAAPA,IAAO,QAAgD;AAAA,MAA7CC,QAA6C,SAA7CA,QAA6C;AAAA,MAAnCJ,UAAmC,SAAnCA,UAAmC;AAAA,MAAvBK,SAAuB,SAAvBA,SAAuB;AAAA,MAAZC,KAAY,SAAZA,KAAY;;AAAA,kBACjClB,QAAQ,CAACU,OAAO,CAACS,YAAT,EAAuB;AAC9DC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEL;AADK;AADmD,GAAvB,CADyB;AAAA,MAC1DM,IAD0D,aAC1DA,IAD0D;AAAA,MACpDC,OADoD,aACpDA,OADoD;AAAA,MAC3CC,KAD2C,aAC3CA,KAD2C;;AAOlE,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,SAAjB;AAA4B,IAAA,KAAK,EAAEC,KAAnC;AAA0C,IAAA,UAAU,EAAEN;AAAtD,KACG,CAACW,OAAD,IAAYD,IAAI,CAACG,WAAjB,gBACC,oBAAC,OAAD,qBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEH,IAAI,CAACG,WAAL,CAAiBC,SADzB;AAEE,IAAA,QAAQ,EAAElB,gBAAgB,CAACc,IAAI,CAACG,WAAL,CAAiBE,IAAlB;AAF5B,IADF,eAKE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,KAAmBL,IAAI,CAACG,WAAL,CAAiBG,IAApC,CALF,eAME,oBAAC,IAAD,QAAON,IAAI,CAACG,WAAL,CAAiBI,WAAxB,CANF,CADD,GASGL,KAAK,gBACP,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE,OAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAnC,mPADO,gBAKP,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CAfJ,CADF;AAsBD,CA7BM;AA+BPhB,IAAI,CAACiB,YAAL,GAAoB;AAClBpB,EAAAA,UAAU,EAAE;AADM,CAApB;AAIA,eAAeG,IAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport { getLabelCategory } from '../../atomic-ui/utils/functions'\n\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  width: 100%;\n  height: 512px;\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n`\n\nexport const View = ({ category, appearance, className, style }) => {\n  const { data, loading, error } = useQuery(queries.GET_CATEGORY, {\n    variables: {\n      id: category\n    }\n  })\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && data.getCategory ? (\n        <Content>\n          <Meta\n            date={data.getCategory.createdAt}\n            category={getLabelCategory(data.getCategory.type)}\n          />\n          <Title tag={'h4'}>{data.getCategory.name}</Title>\n          <Text>{data.getCategory.description}</Text>\n        </Content>\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о статье\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}