{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Switch, { Track as SwitchTrack } from '../../atomic-ui/components/Switch';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"HandleBar__Wrap\",\n  componentId: \"phr6ix-0\"\n})([\"\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"HandleBar__Header\",\n  componentId: \"phr6ix-1\"\n})([\"justify-content:space-between;grid-gap:var(--default-gap);flex-wrap:wrap;\"]);\nexport const ActionGroup = styled(Row).withConfig({\n  displayName: \"HandleBar__ActionGroup\",\n  componentId: \"phr6ix-2\"\n})([\"justify-content:flex-end;@media only screen and (max-width:996px){width:100%;\", \"{width:auto;}}@media only screen and (max-width:480px){flex-wrap:wrap;grid-gap:var(--default-gap);\", \"{flex-direction:row;flex-grow:1;}\", \"{button{width:100%;height:100%;}}}\"], SwitchTrack, SwitchTrack, WrapTooltip);\nexport const CreateButton = styled(Button).withConfig({\n  displayName: \"HandleBar__CreateButton\",\n  componentId: \"phr6ix-3\"\n})([\"display:flex;justify-content:center;align-items:center;grid-gap:10px;span{white-space:nowrap;}@media only screen and (max-width:996px){width:100%;}\"]);\nexport const Footer = styled(Row).withConfig({\n  displayName: \"HandleBar__Footer\",\n  componentId: \"phr6ix-4\"\n})([\"justify-content:space-between;@media only screen and (max-width:480px){flex-direction:column;align-items:end;grid-gap:var(--default-gap);}\"]);\nexport const DeleteButton = styled(Button).withConfig({\n  displayName: \"HandleBar__DeleteButton\",\n  componentId: \"phr6ix-5\"\n})([\"color:var(--default-color-red);background:none;border:none;&:hover{background:none;border:none;color:var(--default-color-red);}\", \"\"], ({\n  disabled\n}) => disabled && css([\"color:var(--ghost-color-text);&:hover{color:var(--ghost-color-text);}\"]));\nconst displayMethods = [{\n  label: /*#__PURE__*/React.createElement(Icon, {\n    icon: 'menu'\n  }),\n  value: 'list',\n  tooltip: 'Отображение списком'\n}, {\n  label: /*#__PURE__*/React.createElement(Icon, {\n    icon: 'category'\n  }),\n  value: 'grid',\n  tooltip: 'Отображение сеткой'\n}];\nexport const Handle = ({\n  icon,\n  title,\n  buttonCreateText,\n  buttonDeleteDisabled,\n  defaultDisplayMethod,\n  defaultVisibleFilters,\n  withoutFooter,\n  checked,\n  onCreate,\n  onChecked,\n  onDeleteAll,\n  onChangeDisplayMethod,\n  onChangeVisibleFilter\n}) => {\n  const [isChecked, setChecked] = useState(checked);\n  const [visibleFilter, setVisibleFilter] = useState(defaultVisibleFilters);\n  const [displayMethod, setDisplayMethod] = useState(defaultDisplayMethod);\n\n  const onVisibleFilter = () => {\n    setVisibleFilter(!visibleFilter);\n    if (onChangeVisibleFilter) onChangeVisibleFilter();\n  };\n\n  const onDisplayMethod = item => {\n    setDisplayMethod(item);\n    if (onChangeDisplayMethod) onChangeDisplayMethod(item);\n  };\n\n  const onChangeChecked = e => {\n    const value = e.target.checked;\n    setChecked(value);\n    if (onChecked) onChecked(value);\n  };\n\n  useEffect(() => {\n    setChecked(checked);\n  }, [checked]);\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n    icon: icon,\n    text: title\n  }), /*#__PURE__*/React.createElement(ActionGroup, null, onCreate && /*#__PURE__*/React.createElement(CreateButton, {\n    type: 'button',\n    onClick: onCreate\n  }, /*#__PURE__*/React.createElement(\"span\", null, buttonCreateText), /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Отображение фильтров'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onVisibleFilter,\n    revert: !visibleFilter\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'filter2',\n    stroke: !visibleFilter ? 'var(--default-color-accent)' : 'white'\n  }))), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: displayMethod || displayMethods[1],\n    options: displayMethods,\n    onChange: item => onDisplayMethod(item)\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), !withoutFooter && /*#__PURE__*/React.createElement(Footer, null, /*#__PURE__*/React.createElement(Checkbox, {\n    label: 'Выделить все',\n    checked: isChecked,\n    onChange: onChangeChecked\n  }), /*#__PURE__*/React.createElement(DeleteButton, {\n    appearance: 'clear',\n    disabled: buttonDeleteDisabled,\n    onClick: onDeleteAll\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u043E\\u0435\")));\n};\nHandle.defaultProps = {\n  buttonCreateText: 'Добавить',\n  buttonDeleteDisabled: true\n};\nexport default Handle;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/HandleBar/index.js"],"names":["React","useState","useEffect","styled","css","Row","Column","Button","Icon","Switch","Track","SwitchTrack","Difinition","Checkbox","Divider","Tooltip","Wrap","WrapTooltip","Header","ActionGroup","CreateButton","Footer","DeleteButton","disabled","displayMethods","label","value","tooltip","Handle","icon","title","buttonCreateText","buttonDeleteDisabled","defaultDisplayMethod","defaultVisibleFilters","withoutFooter","checked","onCreate","onChecked","onDeleteAll","onChangeDisplayMethod","onChangeVisibleFilter","isChecked","setChecked","visibleFilter","setVisibleFilter","displayMethod","setDisplayMethod","onVisibleFilter","onDisplayMethod","item","onChangeChecked","e","target","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Switch, { Track as SwitchTrack } from '../../atomic-ui/components/Switch'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\n\nexport const Wrap = styled(Column)``\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  grid-gap: var(--default-gap);\n  flex-wrap: wrap;\n`\n\nexport const ActionGroup = styled(Row)`\n  justify-content: flex-end;\n\n  @media only screen and (max-width: 996px) {\n    width: 100%;\n\n    ${SwitchTrack} {\n      width: auto;\n    }\n  }\n\n  @media only screen and (max-width: 480px) {\n    flex-wrap: wrap;\n    grid-gap: var(--default-gap);\n\n    ${SwitchTrack} {\n      flex-direction: row;\n      flex-grow: 1;\n    }\n\n    ${WrapTooltip} {\n      button {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`\n\nexport const CreateButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 10px;\n\n  span {\n    white-space: nowrap;\n  }\n\n  @media only screen and (max-width: 996px) {\n    width: 100%;\n  }\n`\n\nexport const Footer = styled(Row)`\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    align-items: end;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const DeleteButton = styled(Button)`\n  color: var(--default-color-red);\n  background: none;\n  border: none;\n\n  &:hover {\n    background: none;\n    border: none;\n    color: var(--default-color-red);\n  }\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: var(--ghost-color-text);\n\n      &:hover {\n        color: var(--ghost-color-text);\n      }\n    `}\n`\n\nconst displayMethods = [\n  { label: <Icon icon={'menu'} />, value: 'list', tooltip: 'Отображение списком' },\n  { label: <Icon icon={'category'} />, value: 'grid', tooltip: 'Отображение сеткой' }\n]\n\nexport const Handle = ({\n  icon,\n  title,\n  buttonCreateText,\n  buttonDeleteDisabled,\n  defaultDisplayMethod,\n  defaultVisibleFilters,\n  withoutFooter,\n  checked,\n  onCreate,\n  onChecked,\n  onDeleteAll,\n  onChangeDisplayMethod,\n  onChangeVisibleFilter\n}) => {\n  const [isChecked, setChecked] = useState(checked)\n  const [visibleFilter, setVisibleFilter] = useState(defaultVisibleFilters)\n  const [displayMethod, setDisplayMethod] = useState(defaultDisplayMethod)\n\n  const onVisibleFilter = () => {\n    setVisibleFilter(!visibleFilter)\n    if (onChangeVisibleFilter) onChangeVisibleFilter()\n  }\n\n  const onDisplayMethod = (item) => {\n    setDisplayMethod(item)\n    if (onChangeDisplayMethod) onChangeDisplayMethod(item)\n  }\n\n  const onChangeChecked = (e) => {\n    const value = e.target.checked\n    setChecked(value)\n    if (onChecked) onChecked(value)\n  }\n\n  useEffect(() => {\n    setChecked(checked)\n  }, [checked])\n\n  return (\n    <Wrap>\n      <Header>\n        <Difinition icon={icon} text={title} />\n\n        <ActionGroup>\n          {onCreate && (\n            <CreateButton type={'button'} onClick={onCreate}>\n              <span>{buttonCreateText}</span>\n              <Icon icon={'add'} stroke={'white'} />\n            </CreateButton>\n          )}\n\n          <Tooltip text={'Отображение фильтров'}>\n            <Button type={'button'} kind={'icon'} onClick={onVisibleFilter} revert={!visibleFilter}>\n              <Icon\n                icon={'filter2'}\n                stroke={!visibleFilter ? 'var(--default-color-accent)' : 'white'}\n              />\n            </Button>\n          </Tooltip>\n\n          <Switch\n            defaultValue={displayMethod || displayMethods[1]}\n            options={displayMethods}\n            onChange={(item) => onDisplayMethod(item)}\n          />\n        </ActionGroup>\n      </Header>\n\n      <Divider clear />\n\n      {!withoutFooter && (\n        <Footer>\n          <Checkbox label={'Выделить все'} checked={isChecked} onChange={onChangeChecked} />\n          <DeleteButton appearance={'clear'} disabled={buttonDeleteDisabled} onClick={onDeleteAll}>\n            Удалить выделенное\n          </DeleteButton>\n        </Footer>\n      )}\n    </Wrap>\n  )\n}\n\nHandle.defaultProps = {\n  buttonCreateText: 'Добавить',\n  buttonDeleteDisabled: true\n}\n\nexport default Handle\n"]},"metadata":{},"sourceType":"module"}