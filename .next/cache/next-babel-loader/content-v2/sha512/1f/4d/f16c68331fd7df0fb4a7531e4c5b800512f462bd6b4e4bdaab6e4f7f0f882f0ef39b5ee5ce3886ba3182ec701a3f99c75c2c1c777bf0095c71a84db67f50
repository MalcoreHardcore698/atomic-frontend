{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { setCurrentPage, setVisibleFilters } from '../store/actions';\nimport { useHelper } from './useHelper';\nimport { useUser } from './useUser';\nimport queries from '../graphql/queries';\nexport const useProfile = ({\n  isManage\n} = {}) => {\n  const recall = useHelper();\n  const {\n    user,\n    visibleFilter\n  } = useSelector(state => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }));\n  const dispatch = useDispatch();\n  const {\n    onMembers,\n    onCompanyLink,\n    onEdit\n  } = useUser({\n    isManage\n  });\n\n  const onChangePage = value => dispatch(setCurrentPage(value));\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter));\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  }, [recall]);\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onMembers,\n    onEdit\n  };\n};","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useProfile.js"],"names":["useCallback","useDispatch","useSelector","onArticleCreate","onProjectCreate","setCurrentPage","setVisibleFilters","useHelper","useUser","queries","useProfile","isManage","recall","user","visibleFilter","state","root","dispatch","onMembers","onCompanyLink","onEdit","onChangePage","value","onChangeVisibleFilters","onAddProject","mutation","CREATE_PROJECT","query","GET_USERS","isPurpose","onAddArticle","CREATE_ARTICLE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAe,EAAhB,KAAuB;AAC/C,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA0BZ,WAAW,CAAEa,KAAD,KAAY;AACtDF,IAAAA,IAAI,EAAEE,KAAK,CAACC,IAAN,CAAWH,IADqC;AAEtDC,IAAAA,aAAa,EAAEC,KAAK,CAACC,IAAN,CAAWF;AAF4B,GAAZ,CAAD,CAA3C;AAIA,QAAMG,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAM;AAAEiB,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAAuCZ,OAAO,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAApD;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAWL,QAAQ,CAACZ,cAAc,CAACiB,KAAD,CAAf,CAAxC;;AAEA,QAAMC,sBAAsB,GAAG,MAAMN,QAAQ,CAACX,iBAAiB,CAAC,CAACQ,aAAF,CAAlB,CAA7C;;AAEA,QAAMU,YAAY,GAAGxB,WAAW,CAAC,MAAM;AACrCY,IAAAA,MAAM,CAACR,eAAD,EAAkB;AACtBqB,MAAAA,QAAQ,EAAEhB,OAAO,CAACiB,cADI;AAEtBC,MAAAA,KAAK,EAAElB,OAAO,CAACmB,SAFO;AAGtBC,MAAAA,SAAS,EAAE;AAHW,KAAlB,CAAN;AAKD,GAN+B,EAM7B,CAACjB,MAAD,CAN6B,CAAhC;AAQA,QAAMkB,YAAY,GAAG9B,WAAW,CAAC,MAAM;AACrCY,IAAAA,MAAM,CAACT,eAAD,EAAkB;AACtBsB,MAAAA,QAAQ,EAAEhB,OAAO,CAACsB,cADI;AAEtBF,MAAAA,SAAS,EAAE;AAFW,KAAlB,CAAN;AAID,GAL+B,EAK7B,CAACjB,MAAD,CAL6B,CAAhC;AAOA,SAAO;AACLC,IAAAA,IADK;AAELQ,IAAAA,YAFK;AAGLE,IAAAA,sBAHK;AAILJ,IAAAA,aAJK;AAKLK,IAAAA,YALK;AAMLM,IAAAA,YANK;AAOLZ,IAAAA,SAPK;AAQLE,IAAAA;AARK,GAAP;AAUD,CAvCM","sourcesContent":["import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { onArticleCreate } from '../store/helpers/article'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { setCurrentPage, setVisibleFilters } from '../store/actions'\nimport { useHelper } from './useHelper'\nimport { useUser } from './useUser'\nimport queries from '../graphql/queries'\n\nexport const useProfile = ({ isManage } = {}) => {\n  const recall = useHelper()\n  const { user, visibleFilter } = useSelector((state) => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }))\n  const dispatch = useDispatch()\n\n  const { onMembers, onCompanyLink, onEdit } = useUser({ isManage })\n\n  const onChangePage = (value) => dispatch(setCurrentPage(value))\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter))\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onMembers,\n    onEdit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}