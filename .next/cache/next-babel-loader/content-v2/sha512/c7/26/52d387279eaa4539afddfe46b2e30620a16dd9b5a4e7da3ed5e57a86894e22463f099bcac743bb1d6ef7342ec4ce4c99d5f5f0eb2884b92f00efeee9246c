{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nimport Processed from '../Processed';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"CategoryView__Wrap\",\n  componentId: \"sc-1leuzf2-0\"\n})([\"flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"CategoryView__Poster\",\n  componentId: \"sc-1leuzf2-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"CategoryView__Content\",\n  componentId: \"sc-1leuzf2-2\"\n})([\"grid-gap:0;\"]);\nexport const View = ({\n  category,\n  appearance,\n  className,\n  style\n}) => {\n  var _data$getCategory, _data$getCategory2, _data$getCategory3, _data$getCategory4;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_CATEGORY, {\n    variables: {\n      id: category\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getCategory,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о категории',\n    emptyMessage: 'Кажется такой категории не существует'\n  }, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    date: data === null || data === void 0 ? void 0 : (_data$getCategory = data.getCategory) === null || _data$getCategory === void 0 ? void 0 : _data$getCategory.createdAt,\n    category: getLabelCategory(data === null || data === void 0 ? void 0 : (_data$getCategory2 = data.getCategory) === null || _data$getCategory2 === void 0 ? void 0 : _data$getCategory2.type)\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, data === null || data === void 0 ? void 0 : (_data$getCategory3 = data.getCategory) === null || _data$getCategory3 === void 0 ? void 0 : _data$getCategory3.name), /*#__PURE__*/React.createElement(Text, null, data === null || data === void 0 ? void 0 : (_data$getCategory4 = data.getCategory) === null || _data$getCategory4 === void 0 ? void 0 : _data$getCategory4.description))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}