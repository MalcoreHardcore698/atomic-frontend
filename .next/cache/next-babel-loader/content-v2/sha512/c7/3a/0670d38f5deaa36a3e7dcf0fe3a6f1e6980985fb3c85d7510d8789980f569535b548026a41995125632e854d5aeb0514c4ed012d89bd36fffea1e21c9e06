{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Text from '../Text';\nimport DateText from '../DateText';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Tooltip from '../Tooltip';\nexport const Wrap = styled(Row)`\n  margin: 0;\n  padding: 0;\n`;\nexport const Name = styled(Text)`\n  font-weight: var(--font-weight-medium);\n  color: var(--default-color-accent);\n  transition: opacity 150ms ease;\n\n  ${({\n  onClick\n}) => onClick && css`\n    cursor: pointer;\n\n    &:hover {\n      opacity: .65;\n    }\n  `}\n`;\nexport const Message = styled(Text)`\n  color: black;\n`;\nexport const Content = styled(Column)`\n  grid-gap: 0;\n  width: 100%;\n`;\nexport const Meta = styled(Row)`\n  grid-gap: 5px;\n`;\nexport const Line = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const DispatchTime = styled(DateText)`\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`;\nexport const ReplyButton = styled(Button)`\n  color: var(--default-color-accent);\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n`;\nexport const LikeButton = styled(Row)`\n  align-items: center;\n  grid-gap: 0;\n  cursor: pointer;\n\n  span {\n    color: var(--default-color-text);\n    transition: color 150ms ease;\n  }\n\n  &:hover {\n    span {\n      color: var(--default-color-accent);\n    }\n\n    svg {\n      path,\n      circle {\n        stroke: var(--default-color-accent);\n      }\n    }\n  }\n`;\nexport const Comment = ({\n  user,\n  message,\n  likes,\n  liked,\n  time,\n  className,\n  style,\n  onLink,\n  onReply,\n  onLike\n}) => {\n  var _user$avatar$path, _user$avatar;\n\n  const {\n    0: isLiked,\n    1: setLiked\n  } = useState(false);\n  const color = isLiked || liked ? 'var(--default-color-accent)' : 'var(--default-color-text)';\n\n  const onClick = () => {\n    setLiked(!isLiked);\n    if (onLike) onLike();\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style\n  }, __jsx(Avatar, {\n    src: (_user$avatar$path = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) !== null && _user$avatar$path !== void 0 ? _user$avatar$path : ''\n  }), __jsx(Content, null, __jsx(Name, {\n    onClick: onLink\n  }, user.name), __jsx(Message, null, message), __jsx(Line, null, __jsx(Meta, null, __jsx(DispatchTime, {\n    text: time\n  }), __jsx(ReplyButton, {\n    appearance: 'clear',\n    onClick: onReply\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\")), likes && likes > 0 && __jsx(Tooltip, {\n    text: 'Мне нравится'\n  }, __jsx(LikeButton, {\n    type: 'button',\n    onClick: onClick,\n    appearance: 'clear',\n    size: 'xs'\n  }, __jsx(\"span\", {\n    style: {\n      color\n    }\n  }, likes), __jsx(Icon, {\n    icon: 'heart',\n    size: 'xs',\n    stroke: color,\n    fill: isLiked || liked ? 'var(--default-color-accent)' : 'none'\n  }))))));\n};\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}