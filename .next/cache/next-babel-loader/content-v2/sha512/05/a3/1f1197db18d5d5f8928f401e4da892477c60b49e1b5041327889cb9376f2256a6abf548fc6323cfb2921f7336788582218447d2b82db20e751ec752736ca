{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Screenshot\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: var(--surface-border-radius);\\n  max-height: 650px;\\n  object-fit: cover;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  padding: var(--default-gap);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Image from '../Image';\nimport Button from '../Button';\nimport Text from '../Text';\nimport Icon from '../Icon';\nexport var Wrap = styled(Column)(_templateObject());\n_c = Wrap;\nexport var Content = styled(Image)(_templateObject2());\n_c2 = Content;\nexport var Navigation = styled(Row)(_templateObject3());\n_c3 = Navigation;\nexport var Screenshot = function Screenshot(_ref) {\n  var _screenshots, _screenshots2;\n\n  var index = _ref.index,\n      screenshot = _ref.screenshot,\n      screenshots = _ref.screenshots,\n      className = _ref.className,\n      style = _ref.style,\n      _onClick = _ref.onClick;\n  var previousId = ((_screenshots = screenshots[index - 1]) === null || _screenshots === void 0 ? void 0 : _screenshots.id) || '';\n  var nextId = ((_screenshots2 = screenshots[index + 1]) === null || _screenshots2 === void 0 ? void 0 : _screenshots2.id) || '';\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Content, {\n    src: screenshot.path,\n    alt: screenshot.filename,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), screenshots.length > 1 && __jsx(Navigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    disabled: index === 0,\n    onClick: function onClick() {\n      return _onClick && _onClick(\"/\".concat(previousId));\n    },\n    revert: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    icon: 'arrowLeft',\n    stroke: index === 0 ? 'var(--ghost-color-text)' : 'var(--default-color-accent)',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, index + 1, \" / \", screenshots.length), __jsx(Button, {\n    disabled: screenshots.length - 1 === index,\n    onClick: function onClick() {\n      return _onClick && _onClick(\"/\".concat(nextId));\n    },\n    revert: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    icon: 'arrowRight',\n    stroke: screenshots.length - 1 === index ? 'var(--ghost-color-text)' : 'var(--default-color-accent)',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))));\n};\n_c4 = Screenshot;\nexport default Screenshot;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Navigation\");\n$RefreshReg$(_c4, \"Screenshot\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Screenshot/index.js"],"names":["React","styled","Row","Column","Image","Button","Text","Icon","Wrap","Content","Navigation","Screenshot","index","screenshot","screenshots","className","style","onClick","previousId","id","nextId","path","filename","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Image from '../Image'\nimport Button from '../Button'\nimport Text from '../Text'\nimport Icon from '../Icon'\n\nexport const Wrap = styled(Column)`\n  position: relative;\n  padding: var(--default-gap);\n`\n\nexport const Content = styled(Image)`\n  border-radius: var(--surface-border-radius);\n  max-height: 650px;\n  object-fit: cover;\n`\n\nexport const Navigation = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Screenshot = ({ index, screenshot, screenshots, className, style, onClick }) => {\n  const previousId = screenshots[index - 1]?.id || ''\n  const nextId = screenshots[index + 1]?.id || ''\n\n  return (\n    <Wrap className={className} style={style}>\n      <Content src={screenshot.path} alt={screenshot.filename} />\n\n      {screenshots.length > 1 && (\n        <Navigation>\n          <Button\n            disabled={index === 0}\n            onClick={() => onClick && onClick(`/${previousId}`)}\n            revert>\n            <Icon\n              icon={'arrowLeft'}\n              stroke={index === 0 ? 'var(--ghost-color-text)' : 'var(--default-color-accent)'}\n            />\n          </Button>\n\n          <Text>\n            {index + 1} / {screenshots.length}\n          </Text>\n\n          <Button\n            disabled={screenshots.length - 1 === index}\n            onClick={() => onClick && onClick(`/${nextId}`)}\n            revert>\n            <Icon\n              icon={'arrowRight'}\n              stroke={\n                screenshots.length - 1 === index\n                  ? 'var(--ghost-color-text)'\n                  : 'var(--default-color-accent)'\n              }\n            />\n          </Button>\n        </Navigation>\n      )}\n    </Wrap>\n  )\n}\n\nexport default Screenshot\n"]},"metadata":{},"sourceType":"module"}