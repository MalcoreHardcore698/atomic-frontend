{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"CategoryCard__Wrap\",\n  componentId: \"sc-10psc0b-0\"\n})([\"height:100%;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"CategoryCard__Poster\",\n  componentId: \"sc-10psc0b-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"CategoryCard__Header\",\n  componentId: \"sc-10psc0b-2\"\n})([\"justify-content:space-between;align-items:center;\"]);\nexport const Actions = styled(Row).withConfig({\n  displayName: \"CategoryCard__Actions\",\n  componentId: \"sc-10psc0b-3\"\n})([\"grid-gap:5px;\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"CategoryCard__Content\",\n  componentId: \"sc-10psc0b-4\"\n})([\"grid-gap:0;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"CategoryCard__Name\",\n  componentId: \"sc-10psc0b-5\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\nexport const Card = ({\n  category,\n  appearance,\n  className,\n  style,\n  onLink,\n  onChecked,\n  onDelete,\n  onEdit\n}) => /*#__PURE__*/React.createElement(Wrap, {\n  className: className,\n  style: style,\n  appearance: appearance\n}, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n  date: category.createdAt,\n  category: getLabelCategory(category.type)\n}), onChecked && onEdit && onDelete && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Tooltip, {\n  text: 'Удалить категорию'\n}, /*#__PURE__*/React.createElement(Button, {\n  kind: 'icon',\n  size: 'xs',\n  appearance: 'red',\n  onClick: onDelete\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'delete',\n  size: 'xs',\n  stroke: 'white'\n}))), /*#__PURE__*/React.createElement(Tooltip, {\n  text: 'Редактировать категорию'\n}, /*#__PURE__*/React.createElement(Button, {\n  kind: 'icon',\n  size: 'xs',\n  onClick: onEdit\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'edit',\n  size: 'xs',\n  stroke: 'white'\n}))), /*#__PURE__*/React.createElement(Tooltip, {\n  text: 'Отметить категорию',\n  self: true\n}, /*#__PURE__*/React.createElement(Checkbox, null)))), /*#__PURE__*/React.createElement(Name, {\n  tag: 'h4',\n  onClick: onLink\n}, category.name), /*#__PURE__*/React.createElement(Text, null, category.description)));\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/CategoryCard/index.js"],"names":["React","styled","css","Row","Column","Title","Text","Image","Meta","Button","Icon","Checkbox","Tooltip","getLabelCategory","Wrap","appearance","Poster","Header","Actions","Content","Name","onClick","Card","category","className","style","onLink","onChecked","onDelete","onEdit","createdAt","type","name","description","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport { getLabelCategory } from '../../atomic-ui/utils/functions'\n\nexport const Wrap = styled(Column)`\n  height: 100%;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  width: 100%;\n  height: 512px;\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const Card = ({\n  category,\n  appearance,\n  className,\n  style,\n  onLink,\n  onChecked,\n  onDelete,\n  onEdit\n}) => (\n  <Wrap className={className} style={style} appearance={appearance}>\n    <Content>\n      <Header>\n        <Meta date={category.createdAt} category={getLabelCategory(category.type)} />\n\n        {onChecked && onEdit && onDelete && (\n          <Actions>\n            <Tooltip text={'Удалить категорию'}>\n              <Button kind={'icon'} size={'xs'} appearance={'red'} onClick={onDelete}>\n                <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n              </Button>\n            </Tooltip>\n            <Tooltip text={'Редактировать категорию'}>\n              <Button kind={'icon'} size={'xs'} onClick={onEdit}>\n                <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n              </Button>\n            </Tooltip>\n            <Tooltip text={'Отметить категорию'} self>\n              <Checkbox />\n            </Tooltip>\n          </Actions>\n        )}\n      </Header>\n\n      <Name tag={'h4'} onClick={onLink}>\n        {category.name}\n      </Name>\n\n      <Text>{category.description}</Text>\n    </Content>\n  </Wrap>\n)\n\nCard.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}