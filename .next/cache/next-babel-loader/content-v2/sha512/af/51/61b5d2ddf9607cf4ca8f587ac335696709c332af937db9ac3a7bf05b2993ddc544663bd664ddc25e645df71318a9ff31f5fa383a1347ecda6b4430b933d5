{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  grid-gap: 0;\\n  cursor: pointer;\\n\\n  span {\\n    color: var(--default-color-text);\\n    transition: color 150ms ease;\\n  }\\n\\n  &:hover {\\n    span {\\n      color: var(--default-color-accent);\\n    }\\n\\n    svg {\\n      path,\\n      circle {\\n        stroke: var(--default-color-accent);\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--default-color-accent);\\n  font-size: var(--font-size-s);\\n  font-weight: var(--font-weight-regular);\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 5px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 0;\\n  width: 100%;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  color: black;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n\\n      &:hover {\\n        opacity: 0.65;\\n      }\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-medium);\\n  color: var(--default-color-accent);\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Text from '../Text';\nimport DateText from '../DateText';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Tooltip from '../Tooltip';\nexport var Wrap = styled(Row)(_templateObject());\nexport var Name = styled(Text)(_templateObject2(), function (_ref) {\n  var onClick = _ref.onClick;\n  return onClick && css(_templateObject3());\n});\nexport var Message = styled(Text)(_templateObject4());\nexport var Content = styled(Column)(_templateObject5());\nexport var Meta = styled(Row)(_templateObject6());\nexport var Line = styled(Row)(_templateObject7());\nexport var DispatchTime = styled(DateText)(_templateObject8());\nexport var ReplyButton = styled(Button)(_templateObject9());\nexport var LikeButton = styled(Row)(_templateObject10());\nexport var Comment = function Comment(_ref2) {\n  var _user$avatar$path, _user$avatar;\n\n  var user = _ref2.user,\n      message = _ref2.message,\n      likes = _ref2.likes,\n      liked = _ref2.liked,\n      time = _ref2.time,\n      className = _ref2.className,\n      style = _ref2.style,\n      onLink = _ref2.onLink,\n      onReply = _ref2.onReply,\n      onLike = _ref2.onLike;\n\n  var _useState = useState(false),\n      isLiked = _useState[0],\n      setLiked = _useState[1];\n\n  var color = isLiked || liked ? 'var(--default-color-accent)' : 'var(--default-color-text)';\n\n  var onClick = function onClick() {\n    setLiked(!isLiked);\n    if (onLike) onLike();\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style\n  }, __jsx(Avatar, {\n    src: (_user$avatar$path = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) !== null && _user$avatar$path !== void 0 ? _user$avatar$path : ''\n  }), __jsx(Content, null, __jsx(Name, {\n    onClick: onLink\n  }, user.name), __jsx(Message, null, message), __jsx(Line, null, __jsx(Meta, null, __jsx(DispatchTime, {\n    text: time\n  }), __jsx(ReplyButton, {\n    appearance: 'clear',\n    onClick: onReply\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\")), likes && likes > 0 && __jsx(Tooltip, {\n    text: 'Мне нравится'\n  }, __jsx(LikeButton, {\n    type: 'button',\n    onClick: onClick,\n    appearance: 'clear',\n    size: 'xs'\n  }, __jsx(\"span\", {\n    style: {\n      color: color\n    }\n  }, likes), __jsx(Icon, {\n    icon: 'heart',\n    size: 'xs',\n    stroke: color,\n    fill: isLiked || liked ? 'var(--default-color-accent)' : 'none'\n  }))))));\n};\nexport default Comment;","map":null,"metadata":{},"sourceType":"module"}