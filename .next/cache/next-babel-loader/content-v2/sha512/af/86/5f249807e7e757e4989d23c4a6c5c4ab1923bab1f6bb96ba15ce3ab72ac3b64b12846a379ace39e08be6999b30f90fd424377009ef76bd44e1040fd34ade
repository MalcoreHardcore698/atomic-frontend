{"ast":null,"code":"import gql from 'graphql-tag';\nimport { RoleFields } from '../../fragments';\nexport const GET_ROLE = gql`\n  query getRole($id: ID!) {\n    getRole(id: $id) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;\nexport const GET_ROLES = gql`\n  query getRoles(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $search: String\n    $permissions: [Permission]\n    $createdAt: String\n  ) {\n    getRoles(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      search: $search\n      permissions: $permissions\n      createdAt: $createdAt\n    ) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;\nexport const CREATE_ROLE = gql`\n  mutation createRole($input: RoleCreateInput!) {\n    createRole(input: $input) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;\nexport const UPDATE_ROLE = gql`\n  mutation updateRole($id: ID!, $input: RoleUpdateInput!) {\n    updateRole(id: $id, input: $input) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;\nexport const DELETE_ROLE = gql`\n  mutation deleteRole($id: [ID]!) {\n    deleteRole(id: $id) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/Role/index.js"],"names":["gql","RoleFields","GET_ROLE","GET_ROLES","CREATE_ROLE","UPDATE_ROLE","DELETE_ROLE"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,OAAO,MAAMC,QAAQ,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAW;AACf,CAPO;AASP,OAAO,MAAME,SAAS,GAAGH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAW;AACf,CArBO;AAuBP,OAAO,MAAMG,WAAW,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAW;AACf,CAPO;AASP,OAAO,MAAMI,WAAW,GAAGL,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAW;AACf,CAPO;AASP,OAAO,MAAMK,WAAW,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,IAAIC,UAAW;AACf,CAPO","sourcesContent":["import gql from 'graphql-tag'\nimport { RoleFields } from '../../fragments'\n\nexport const GET_ROLE = gql`\n  query getRole($id: ID!) {\n    getRole(id: $id) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n\nexport const GET_ROLES = gql`\n  query getRoles(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $search: String\n    $permissions: [Permission]\n    $createdAt: String\n  ) {\n    getRoles(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      search: $search\n      permissions: $permissions\n      createdAt: $createdAt\n    ) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n\nexport const CREATE_ROLE = gql`\n  mutation createRole($input: RoleCreateInput!) {\n    createRole(input: $input) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n\nexport const UPDATE_ROLE = gql`\n  mutation updateRole($id: ID!, $input: RoleUpdateInput!) {\n    updateRole(id: $id, input: $input) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n\nexport const DELETE_ROLE = gql`\n  mutation deleteRole($id: [ID]!) {\n    deleteRole(id: $id) {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n"]},"metadata":{},"sourceType":"module"}