{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport CountUp from 'react-countup';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Indicator__Wrap\",\n  componentId: \"c9j021-0\"\n})([\"display:flex;flex-direction:column;grid-gap:5px;padding:var(--default-gap);flex-grow:1;\", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;padding:0;\"]));\n_c = Wrap;\nexport const Label = styled(Text).withConfig({\n  displayName: \"Indicator__Label\",\n  componentId: \"c9j021-1\"\n})([\"font-size:var(--font-size-s);font-weight:var(--font-weight-regular);color:var(--ghost-color-text);\"]);\n_c2 = Label;\nexport const Value = styled(Row).withConfig({\n  displayName: \"Indicator__Value\",\n  componentId: \"c9j021-2\"\n})([\"grid-gap:5px 10px;align-items:flex-end;p{font-size:36px;font-weight:var(--font-weight-bold);line-height:1;color:black;}\"]);\n_c3 = Value;\nexport const Movement = styled(Row).withConfig({\n  displayName: \"Indicator__Movement\",\n  componentId: \"c9j021-3\"\n})([\"grid-gap:0 8px;i{transform:scale(1.85);}span{font-size:inherit;font-weight:inherit;line-height:inherit;}p{display:flex;align-items:flex-end;font-size:var(--font-size-l);line-height:1.45;\", \"}\"], ({\n  positive\n}) => positive ? css([\"color:var(--default-color-green);\"]) : css([\"color:var(--default-color-red);\"]));\n_c4 = Movement;\nexport const Indicator = ({\n  label,\n  value,\n  movement,\n  positive,\n  negative,\n  appearance,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n  appearance: appearance\n}), label && /*#__PURE__*/React.createElement(Label, null, label), (value || movement) && /*#__PURE__*/React.createElement(Value, null, value ? /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(CountUp, {\n  end: value,\n  duration: 2.75\n})) : null, movement ? /*#__PURE__*/React.createElement(Movement, {\n  positive: positive,\n  negative: negative\n}, positive && !negative && /*#__PURE__*/React.createElement(Icon, {\n  icon: 'arrowUpCarret',\n  fill: 'var(--default-color-green)'\n}), !positive && negative && /*#__PURE__*/React.createElement(Icon, {\n  icon: 'arrowDownCarret',\n  fill: 'var(--default-color-red)'\n}), /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(CountUp, {\n  end: movement,\n  duration: 3\n}))) : null));\n_c5 = Indicator;\nIndicator.defaultProps = {\n  appearance: 'default',\n  label: 'Пользователи',\n  value: 5621,\n  movement: 12\n};\nexport default Indicator;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Label\");\n$RefreshReg$(_c3, \"Value\");\n$RefreshReg$(_c4, \"Movement\");\n$RefreshReg$(_c5, \"Indicator\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Indicator/index.js"],"names":["React","styled","css","Row","Column","Text","Icon","CountUp","Wrap","appearance","Label","Value","Movement","positive","Indicator","label","value","movement","negative","props","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAO,MAAMC,IAAI,GAAGP,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,yGAOb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACAP,GADA,wKARa,EAgBb,CAAC;AAAEO,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAP,GADA,4EAjBa,CAAV;KAAMM,I;AA2Bb,OAAO,MAAME,KAAK,GAAGT,MAAM,CAACI,IAAD,CAAT;AAAA;AAAA;AAAA,0GAAX;MAAMK,K;AAMb,OAAO,MAAMC,KAAK,GAAGV,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,+HAAX;MAAMQ,K;AAYb,OAAO,MAAMC,QAAQ,GAAGX,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,wMAmBf,CAAC;AAAEU,EAAAA;AAAF,CAAD,KACAA,QAAQ,GACJX,GADI,0CAIJA,GAJI,qCApBO,CAAd;MAAMU,Q;AA8Bb,OAAO,MAAME,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0BJ,EAAAA,QAA1B;AAAoCK,EAAAA,QAApC;AAA8CT,EAAAA,UAA9C;AAA0D,KAAGU;AAA7D,CAAD,kBACvB,oBAAC,IAAD,eAAUA,KAAV;AAAiB,EAAA,UAAU,EAAEV;AAA7B,IACGM,KAAK,iBAAI,oBAAC,KAAD,QAAQA,KAAR,CADZ,EAEG,CAACC,KAAK,IAAIC,QAAV,kBACC,oBAAC,KAAD,QACGD,KAAK,gBACJ,oBAAC,IAAD,qBACE,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAEA,KAAd;AAAqB,EAAA,QAAQ,EAAE;AAA/B,EADF,CADI,GAIF,IALN,EAMGC,QAAQ,gBACP,oBAAC,QAAD;AAAU,EAAA,QAAQ,EAAEJ,QAApB;AAA8B,EAAA,QAAQ,EAAEK;AAAxC,GACGL,QAAQ,IAAI,CAACK,QAAb,iBACC,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,eAAZ;AAA6B,EAAA,IAAI,EAAE;AAAnC,EAFJ,EAIG,CAACL,QAAD,IAAaK,QAAb,iBACC,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,iBAAZ;AAA+B,EAAA,IAAI,EAAE;AAArC,EALJ,eAOE,oBAAC,IAAD,qBACE,oBAAC,OAAD;AAAS,EAAA,GAAG,EAAED,QAAd;AAAwB,EAAA,QAAQ,EAAE;AAAlC,EADF,CAPF,CADO,GAYL,IAlBN,CAHJ,CADK;MAAMH,S;AA4BbA,SAAS,CAACM,YAAV,GAAyB;AACvBX,EAAAA,UAAU,EAAE,SADW;AAEvBM,EAAAA,KAAK,EAAE,cAFgB;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBC,EAAAA,QAAQ,EAAE;AAJa,CAAzB;AAOA,eAAeH,SAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Text from '../Text'\nimport Icon from '../Icon'\nimport CountUp from 'react-countup'\n\nexport const Wrap = styled(Column)`\n  display: flex;\n  flex-direction: column;\n  grid-gap: 5px;\n  padding: var(--default-gap);\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`\n\nexport const Label = styled(Text)`\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n  color: var(--ghost-color-text);\n`\n\nexport const Value = styled(Row)`\n  grid-gap: 5px 10px;\n  align-items: flex-end;\n\n  p {\n    font-size: 36px;\n    font-weight: var(--font-weight-bold);\n    line-height: 1;\n    color: black;\n  }\n`\n\nexport const Movement = styled(Row)`\n  grid-gap: 0 8px;\n\n  i {\n    transform: scale(1.85);\n  }\n\n  span {\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n  }\n\n  p {\n    display: flex;\n    align-items: flex-end;\n    font-size: var(--font-size-l);\n    line-height: 1.45;\n\n    ${({ positive }) =>\n      positive\n        ? css`\n            color: var(--default-color-green);\n          `\n        : css`\n            color: var(--default-color-red);\n          `}\n  }\n`\n\nexport const Indicator = ({ label, value, movement, positive, negative, appearance, ...props }) => (\n  <Wrap {...props} appearance={appearance}>\n    {label && <Label>{label}</Label>}\n    {(value || movement) && (\n      <Value>\n        {value ? (\n          <Text>\n            <CountUp end={value} duration={2.75} />\n          </Text>\n        ) : null}\n        {movement ? (\n          <Movement positive={positive} negative={negative}>\n            {positive && !negative && (\n              <Icon icon={'arrowUpCarret'} fill={'var(--default-color-green)'} />\n            )}\n            {!positive && negative && (\n              <Icon icon={'arrowDownCarret'} fill={'var(--default-color-red)'} />\n            )}\n            <Text>\n              <CountUp end={movement} duration={3} />\n            </Text>\n          </Movement>\n        ) : null}\n      </Value>\n    )}\n  </Wrap>\n)\n\nIndicator.defaultProps = {\n  appearance: 'default',\n  label: 'Пользователи',\n  value: 5621,\n  movement: 12\n}\n\nexport default Indicator\n"]},"metadata":{},"sourceType":"module"}