{"ast":null,"code":"import React from 'react';\nimport Column from '../../atomic-ui/components/Column';\nimport Text from '../../atomic-ui/components/Text';\nimport UserForm from '../../components/FormUser';\nimport CheckinForm from '../../components/FormCheckin';\nimport LoginForm from '../../components/FormLogin';\nimport RegisterForm from '../../components/FormRegister';\nimport ForgotEmailForm from '../../components/FormForgotEmail';\nimport ForgotPasswordForm from '../../components/FormForgotPassword';\nimport ChangePasswordForm from '../../components/FormChangePassword';\nimport AddUserFolderForm from '../../components/FormAddUserFolder';\nimport SureDeleteForm from '../../components/FormSureDelete';\nimport DeleteForm from '../../components/FormDelete';\nimport UserCard from '../../components/UserCard';\nimport UserView from '../../components/UserView';\nimport Members from '../../components/Members';\nimport { setStepper } from '../actions/stepper';\nimport { setDrawer } from '../actions/drawer';\nimport { setModal } from '../actions/modal';\nimport { setUser, updateUser, setUserFolders } from '../actions/user';\nimport { setDocuments } from '../actions/documents';\nimport { setItem } from '../actions/snacks';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from './project';\nimport { onChat } from '.';\nimport ResetPassword from \"../../components/FormResetPassword\";\nexport function onUserCheckin(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'checkin',\n    content: /*#__PURE__*/React.createElement(CheckinForm, {\n      mutations: mutations,\n      onCreate: () => onUserRegister(dispatch, props),\n      onForgot: () => onUserResetPassword(dispatch, props),\n      onGoogleError: () => {},\n      onFacebookError: () => {},\n      onGoogleFinally: user => dispatch(setUser(user)),\n      onFacebookFinally: user => dispatch(setUser(user)),\n      onGoogleSubmit: async (response, action) => {\n        const {\n          accessToken\n        } = response;\n        await action({\n          variables: {\n            accessToken\n          }\n        });\n      },\n      onFacebookSubmit: async (response, action) => {\n        const {\n          accessToken\n        } = response;\n        await action({\n          variables: {\n            accessToken\n          }\n        });\n      },\n      onSubmit: async (form, action) => {\n        try {\n          var _response$data;\n\n          const response = await action({\n            variables: {\n              login: form.login\n            }\n          });\n\n          if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.checkin) {\n            dispatch(updateUser({\n              login: form.login\n            }));\n            onUserLogin(dispatch, {\n              login: form.login,\n              mutations\n            });\n          }\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось пройти проверку'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserLogin(dispatch, props) {\n  const {\n    login,\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'login',\n    content: /*#__PURE__*/React.createElement(LoginForm, {\n      email: login,\n      mutation: mutations.login,\n      onBack: () => onUserCheckin(dispatch, {\n        mutations\n      }),\n      onForgot: () => onUserForgotPassword(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              login,\n              password: form.password\n            }\n          });\n          const user = response.data.login;\n          dispatch(setUser(user));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось авторизоваться'\n          }));\n        } finally {\n          dispatch(setStepper(null));\n        }\n      }\n    })\n  }));\n}\nexport function onUserRegister(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'register',\n    content: /*#__PURE__*/React.createElement(RegisterForm, {\n      mutation: mutations.register,\n      onLogin: () => onUserCheckin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          const response = await action({\n            variables: {\n              input: {\n                name: form.name,\n                account: (form === null || form === void 0 ? void 0 : form.account.value) || 'INDIVIDUAL',\n                email: form.email,\n                phone: form.phone,\n                password: form.password,\n                confirmPassword: form.confirmPassword\n              }\n            }\n          });\n          const user = response.data.register;\n          dispatch(setUser({ ...user,\n            register: true\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось зарегистрировать пользователя'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserResetPassword(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'resetPassword',\n    content: /*#__PURE__*/React.createElement(ResetPassword, {\n      mutation: mutations.forgotPassword,\n      onBack: () => onUserLogin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        console.log('[form]', form);\n\n        try {\n          await action({\n            variables: {\n              email: form.login\n            }\n          });\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось сбросить пароль'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserForgotEmail(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  dispatch(setStepper({\n    name: 'forgotEmail',\n    content: /*#__PURE__*/React.createElement(ForgotEmailForm, {\n      mutation: mutations.forgotEmail,\n      onBack: () => onUserLogin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          await action(form);\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось восстановить эл. почту'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserForgotPassword(dispatch, props) {\n  const {\n    mutations\n  } = props;\n  console.log('onUserForgotPassword');\n  dispatch(setStepper({\n    name: 'forgotPassword',\n    content: /*#__PURE__*/React.createElement(ForgotPasswordForm, {\n      mutation: mutations.forgotPassword,\n      onBack: () => onUserLogin(dispatch, {\n        mutations\n      }),\n      onSubmit: async (form, action) => {\n        try {\n          await action(form);\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось восстановить пароль'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onUserChangePassword(dispatch, props) {\n  const {\n    user,\n    mutation\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    home: true,\n    title: 'Смена пароля',\n    component: () => /*#__PURE__*/React.createElement(ChangePasswordForm, {\n      mutation: mutation,\n      title: false,\n      appearance: 'ghost',\n      onSubmit: async (form, action) => {\n        try {\n          await action({\n            variables: {\n              id: user.id,\n              input: {\n                password: form.password\n              }\n            }\n          });\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось изменить пароль'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    })\n  }]));\n}\nexport function onUserLink(dispatch, props) {\n  const {\n    id,\n    auth,\n    owned\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Пользователь',\n    content: /*#__PURE__*/React.createElement(UserView, {\n      user: id,\n      owned: owned,\n      appearance: 'clear',\n      onChat: id !== auth && (() => onChat(dispatch, props)),\n      onMembers: () => onUserMembers(dispatch, {\n        id,\n        auth\n      }),\n      onAboutMore: user => onUserAboutMore(dispatch, {\n        user\n      }),\n      onCompanyLink: company => onUserLink(dispatch, {\n        id: company.email,\n        auth\n      }),\n      onProjectLink: project => onProjectLink(dispatch, {\n        id: project.id,\n        project,\n        auth,\n        owned\n      }),\n      onProjectAdd: id !== auth && (project => onProjectAdd(dispatch, {\n        id: project.id,\n        project\n      })),\n      onProjectCompanyLink: company => auth !== company && onUserLink(dispatch, {\n        id: company.email,\n        auth,\n        owned\n      }),\n      onProjectScreenshotClick: (_, key, screenshots) => onProjectScreenshot(dispatch, {\n        screenshots,\n        key\n      })\n    })\n  }));\n}\nexport function onUserCreate(dispatch, props) {\n  const {\n    roles,\n    canEditRole,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Создание пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      roles: roles,\n      mutation: mutation,\n      appearance: 'clear',\n      canEditRole: canEditRole,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$company, _form$account, _form$avatar, _form$avatar2, _form$avatar2$file, _form$gender, _form$role;\n\n          const users = await action({\n            variables: {\n              input: {\n                name: form.name,\n                email: form.email,\n                phone: form.phone,\n                password: form.password,\n                company: (_form$company = form.company) === null || _form$company === void 0 ? void 0 : _form$company.value,\n                account: (_form$account = form.account) === null || _form$account === void 0 ? void 0 : _form$account.value,\n                avatar: (_form$avatar = form.avatar) === null || _form$avatar === void 0 ? void 0 : _form$avatar.file,\n                avatarSize: (_form$avatar2 = form.avatar) === null || _form$avatar2 === void 0 ? void 0 : (_form$avatar2$file = _form$avatar2.file) === null || _form$avatar2$file === void 0 ? void 0 : _form$avatar2$file.size,\n                about: form.about,\n                gender: (_form$gender = form.gender) === null || _form$gender === void 0 ? void 0 : _form$gender.value,\n                dateOfBirth: form.dateOfBirth,\n                role: (_form$role = form.role) === null || _form$role === void 0 ? void 0 : _form$role.value\n              }\n            }\n          });\n          dispatch(setDocuments(users.data.createUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно создан'\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    })\n  }));\n}\nexport function onUserClientEdit(dispatch, props) {\n  const {\n    user,\n    mutations\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Редактирование пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      user: user,\n      mutation: mutations.update,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$account2, _form$avatar3, _form$avatar4, _form$avatar4$file, _form$company2, _form$gender2, _form$role2;\n\n          const result = await action({\n            variables: {\n              input: {\n                name: form === null || form === void 0 ? void 0 : form.name,\n                account: form === null || form === void 0 ? void 0 : (_form$account2 = form.account) === null || _form$account2 === void 0 ? void 0 : _form$account2.value,\n                avatar: form === null || form === void 0 ? void 0 : (_form$avatar3 = form.avatar) === null || _form$avatar3 === void 0 ? void 0 : _form$avatar3.file,\n                avatarSize: form === null || form === void 0 ? void 0 : (_form$avatar4 = form.avatar) === null || _form$avatar4 === void 0 ? void 0 : (_form$avatar4$file = _form$avatar4.file) === null || _form$avatar4$file === void 0 ? void 0 : _form$avatar4$file.size,\n                company: form === null || form === void 0 ? void 0 : (_form$company2 = form.company) === null || _form$company2 === void 0 ? void 0 : _form$company2.value,\n                about: form === null || form === void 0 ? void 0 : form.about,\n                gender: form === null || form === void 0 ? void 0 : (_form$gender2 = form.gender) === null || _form$gender2 === void 0 ? void 0 : _form$gender2.value,\n                phone: form === null || form === void 0 ? void 0 : form.phone,\n                email: form === null || form === void 0 ? void 0 : form.email,\n                dateOfBirth: form === null || form === void 0 ? void 0 : form.dateOfBirth,\n                role: form === null || form === void 0 ? void 0 : (_form$role2 = form.role) === null || _form$role2 === void 0 ? void 0 : _form$role2.value\n              }\n            }\n          });\n          dispatch(updateUser(result.data.updateClientUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Данные успешно отредактированы'\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать данные'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      },\n      onDelete: () => onUserDelete(dispatch, {\n        id: user,\n        mutation: mutations.del\n      }),\n      onChangePassword: () => onUserChangePassword(dispatch, {\n        mutation: mutations.changePassword\n      })\n    })\n  }));\n}\nexport function onUserEdit(dispatch, props) {\n  const {\n    user,\n    roles,\n    canEditAccount,\n    canEditRole,\n    mutations\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Редактирование пользователя',\n    content: /*#__PURE__*/React.createElement(UserForm, {\n      user: user,\n      roles: roles,\n      mutation: mutations.update,\n      appearance: 'clear',\n      canEditAccount: canEditAccount,\n      canEditRole: canEditRole,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$account3, _form$avatar5, _form$avatar6, _form$avatar6$file, _form$company3, _form$gender3, _form$role3;\n\n          const users = await action({\n            variables: {\n              email: user,\n              input: {\n                name: form.name,\n                account: (_form$account3 = form.account) === null || _form$account3 === void 0 ? void 0 : _form$account3.value,\n                avatar: (_form$avatar5 = form.avatar) === null || _form$avatar5 === void 0 ? void 0 : _form$avatar5.file,\n                avatarSize: (_form$avatar6 = form.avatar) === null || _form$avatar6 === void 0 ? void 0 : (_form$avatar6$file = _form$avatar6.file) === null || _form$avatar6$file === void 0 ? void 0 : _form$avatar6$file.size,\n                company: (_form$company3 = form.company) === null || _form$company3 === void 0 ? void 0 : _form$company3.value,\n                about: form.about,\n                gender: (_form$gender3 = form.gender) === null || _form$gender3 === void 0 ? void 0 : _form$gender3.value,\n                phone: form.phone,\n                email: form.email,\n                dateOfBirth: form.dateOfBirth,\n                role: (_form$role3 = form.role) === null || _form$role3 === void 0 ? void 0 : _form$role3.value\n              }\n            }\n          });\n          dispatch(setDocuments(users.data.updateUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно отредактирован'\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      },\n      onDelete: () => onUserDelete(dispatch, {\n        id: user,\n        mutation: mutations.del\n      }),\n      onChangePassword: () => onUserChangePassword(dispatch, {\n        mutation: mutations.changePassword\n      })\n    })\n  }));\n}\nexport function onUserMembers(dispatch, props) {\n  const {\n    id,\n    auth\n  } = props;\n  dispatch(setDrawer({\n    icon: 'user2',\n    title: 'Участники компании',\n    content: /*#__PURE__*/React.createElement(Members, {\n      user: id,\n      appearance: 'clear',\n      onMemberLink: member => onUserLink(dispatch, {\n        id: member,\n        auth\n      })\n    })\n  }));\n}\nexport function onUserDelete(dispatch, props) {\n  const {\n    id,\n    user,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление пользователя',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const users = await action({\n            variables: {\n              email: id\n            }\n          });\n          dispatch(setDocuments(users.data.deleteUser));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Пользователь успешно удален'\n          }));\n        } catch (err) {\n          console.log(err);\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить пользователя'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(UserCard, {\n      user: user,\n      appearance: 'clear'\n    }))\n  }));\n}\nexport function onUserAboutMore(dispatch, props) {\n  const {\n    user\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: user.about ? 'О себе' : 'Описание',\n    component: () => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(Text, null, user.about || user.description))\n  }]));\n}\nexport function onUserFolderAdd(dispatch, props) {\n  const {\n    mutation,\n    onCancel,\n    callback\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Создание папки',\n    component: () => /*#__PURE__*/React.createElement(AddUserFolderForm, {\n      title: false,\n      mutation: mutation,\n      onCancel: () => onCancel ? onCancel() : dispatch(setModal(null)),\n      onSubmit: async (form, action) => {\n        const response = await action({\n          variables: {\n            name: form.name\n          }\n        });\n        const folders = response.data.addUserFolder;\n        dispatch(setUserFolders(folders));\n        dispatch(setModal(null));\n        if (callback) callback(folders);\n      }\n    })\n  }]));\n}\nexport function onUserFolderDelete(dispatch, props) {\n  const {\n    id,\n    mutation,\n    callback\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Удаление папки',\n    component: () => /*#__PURE__*/React.createElement(SureDeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      text: 'Вы действительно хотите удалить папку?',\n      onCancel: () => dispatch(setModal(null)),\n      onSubmit: async (_, action) => {\n        const response = await action({\n          variables: {\n            id\n          }\n        });\n        dispatch(setUserFolders(response.data.deleteUserFolder));\n        dispatch(setModal(null));\n        if (callback) callback();\n      }\n    })\n  }]));\n}","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/store/helpers/user.js"],"names":["React","Column","Text","UserForm","CheckinForm","LoginForm","RegisterForm","ForgotEmailForm","ForgotPasswordForm","ChangePasswordForm","AddUserFolderForm","SureDeleteForm","DeleteForm","UserCard","UserView","Members","setStepper","setDrawer","setModal","setUser","updateUser","setUserFolders","setDocuments","setItem","onProjectLink","onProjectAdd","onProjectScreenshot","onChat","ResetPassword","onUserCheckin","dispatch","props","mutations","name","content","onUserRegister","onUserResetPassword","user","response","action","accessToken","variables","form","login","data","checkin","onUserLogin","err","type","message","onUserForgotPassword","password","register","input","account","value","email","phone","confirmPassword","forgotPassword","console","log","onUserForgotEmail","forgotEmail","onUserChangePassword","mutation","path","home","title","component","id","onUserLink","auth","owned","icon","onUserMembers","onUserAboutMore","company","project","_","key","screenshots","onUserCreate","roles","canEditRole","users","avatar","file","avatarSize","size","about","gender","dateOfBirth","role","createUser","onUserClientEdit","update","result","updateClientUser","onUserDelete","del","changePassword","onUserEdit","canEditAccount","member","color","deleteUser","padding","description","onUserFolderAdd","onCancel","callback","folders","addUserFolder","onUserFolderDelete","deleteUserFolder"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Text from '../../atomic-ui/components/Text'\n\nimport UserForm from '../../components/FormUser'\nimport CheckinForm from '../../components/FormCheckin'\nimport LoginForm from '../../components/FormLogin'\nimport RegisterForm from '../../components/FormRegister'\nimport ForgotEmailForm from '../../components/FormForgotEmail'\nimport ForgotPasswordForm from '../../components/FormForgotPassword'\nimport ChangePasswordForm from '../../components/FormChangePassword'\nimport AddUserFolderForm from '../../components/FormAddUserFolder'\nimport SureDeleteForm from '../../components/FormSureDelete'\nimport DeleteForm from '../../components/FormDelete'\nimport UserCard from '../../components/UserCard'\nimport UserView from '../../components/UserView'\nimport Members from '../../components/Members'\nimport { setStepper } from '../actions/stepper'\nimport { setDrawer } from '../actions/drawer'\nimport { setModal } from '../actions/modal'\nimport { setUser, updateUser, setUserFolders } from '../actions/user'\nimport { setDocuments } from '../actions/documents'\nimport { setItem } from '../actions/snacks'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from './project'\nimport { onChat } from '.'\nimport ResetPassword from \"../../components/FormResetPassword\"\n\nexport function onUserCheckin(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'checkin',\n      content: (\n        <CheckinForm\n          mutations={mutations}\n          onCreate={() => onUserRegister(dispatch, props)}\n          onForgot={() => onUserResetPassword(dispatch, props)}\n          onGoogleError={() => {}}\n          onFacebookError={() => {}}\n          onGoogleFinally={(user) => dispatch(setUser(user))}\n          onFacebookFinally={(user) => dispatch(setUser(user))}\n          onGoogleSubmit={async (response, action) => {\n            const { accessToken } = response\n            await action({ variables: { accessToken } })\n          }}\n          onFacebookSubmit={async (response, action) => {\n            const { accessToken } = response\n            await action({ variables: { accessToken } })\n          }}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  login: form.login\n                }\n              })\n\n              if (response.data?.checkin) {\n                dispatch(updateUser({ login: form.login }))\n                onUserLogin(dispatch, {\n                  login: form.login,\n                  mutations\n                })\n              }\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось пройти проверку'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserLogin(dispatch, props) {\n  const { login, mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'login',\n      content: (\n        <LoginForm\n          email={login}\n          mutation={mutations.login}\n          onBack={() => onUserCheckin(dispatch, { mutations })}\n          onForgot={() => onUserForgotPassword(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  login,\n                  password: form.password\n                }\n              })\n\n              const user = response.data.login\n              dispatch(setUser(user))\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось авторизоваться'\n                })\n              )\n            } finally {\n              dispatch(setStepper(null))\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserRegister(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'register',\n      content: (\n        <RegisterForm\n          mutation={mutations.register}\n          onLogin={() => onUserCheckin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    account: form?.account.value || 'INDIVIDUAL',\n                    email: form.email,\n                    phone: form.phone,\n                    password: form.password,\n                    confirmPassword: form.confirmPassword\n                  }\n                }\n              })\n\n              const user = response.data.register\n              dispatch(setUser({ ...user, register: true }))\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось зарегистрировать пользователя'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserResetPassword(dispatch, props) {\n  const { mutations } = props\n  dispatch(\n    setStepper({\n      name: 'resetPassword',\n      content: (\n        <ResetPassword\n          mutation={mutations.forgotPassword}\n          onBack={() => onUserLogin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            console.log('[form]', form)\n            try {\n              await action({\n                variables: {\n                  email: form.login\n                }\n              })\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось сбросить пароль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserForgotEmail(dispatch, props) {\n  const { mutations } = props\n\n  dispatch(\n    setStepper({\n      name: 'forgotEmail',\n      content: (\n        <ForgotEmailForm\n          mutation={mutations.forgotEmail}\n          onBack={() => onUserLogin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              await action(form)\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось восстановить эл. почту'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserForgotPassword(dispatch, props) {\n  const { mutations } = props\n  console.log('onUserForgotPassword')\n\n  dispatch(\n    setStepper({\n      name: 'forgotPassword',\n      content: (\n        <ForgotPasswordForm\n          mutation={mutations.forgotPassword}\n          onBack={() => onUserLogin(dispatch, { mutations })}\n          onSubmit={async (form, action) => {\n            try {\n              await action(form)\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось восстановить пароль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserChangePassword(dispatch, props) {\n  const { user, mutation } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        home: true,\n        title: 'Смена пароля',\n        component: () => (\n          <ChangePasswordForm\n            mutation={mutation}\n            title={false}\n            appearance={'ghost'}\n            onSubmit={async (form, action) => {\n              try {\n                await action({\n                  variables: {\n                    id: user.id,\n                    input: {\n                      password: form.password\n                    }\n                  }\n                })\n              } catch (err) {\n                dispatch(\n                  setItem({\n                    type: 'error',\n                    message: 'Не удалось изменить пароль'\n                  })\n                )\n              } finally {\n                dispatch(setDrawer(null))\n              }\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserLink(dispatch, props) {\n  const { id, auth, owned } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Пользователь',\n      content: (\n        <UserView\n          user={id}\n          owned={owned}\n          appearance={'clear'}\n          onChat={id !== auth && (() => onChat(dispatch, props))}\n          onMembers={() => onUserMembers(dispatch, { id, auth })}\n          onAboutMore={(user) => onUserAboutMore(dispatch, { user })}\n          onCompanyLink={(company) => onUserLink(dispatch, { id: company.email, auth })}\n          onProjectLink={(project) =>\n            onProjectLink(dispatch, { id: project.id, project, auth, owned })\n          }\n          onProjectAdd={\n            id !== auth && ((project) => onProjectAdd(dispatch, { id: project.id, project }))\n          }\n          onProjectCompanyLink={(company) =>\n            auth !== company && onUserLink(dispatch, { id: company.email, auth, owned })\n          }\n          onProjectScreenshotClick={(_, key, screenshots) =>\n            onProjectScreenshot(dispatch, {\n              screenshots,\n              key\n            })\n          }\n        />\n      )\n    })\n  )\n}\n\nexport function onUserCreate(dispatch, props) {\n  const { roles, canEditRole, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Создание пользователя',\n      content: (\n        <UserForm\n          roles={roles}\n          mutation={mutation}\n          appearance={'clear'}\n          canEditRole={canEditRole}\n          onSubmit={async (form, action) => {\n            try {\n              const users = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    email: form.email,\n                    phone: form.phone,\n                    password: form.password,\n                    company: form.company?.value,\n                    account: form.account?.value,\n                    avatar: form.avatar?.file,\n                    avatarSize: form.avatar?.file?.size,\n                    about: form.about,\n                    gender: form.gender?.value,\n                    dateOfBirth: form.dateOfBirth,\n                    role: form.role?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(users.data.createUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно создан'\n                })\n              )\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserClientEdit(dispatch, props) {\n  const { user, mutations } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Редактирование пользователя',\n      content: (\n        <UserForm\n          user={user}\n          mutation={mutations.update}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const result = await action({\n                variables: {\n                  input: {\n                    name: form?.name,\n                    account: form?.account?.value,\n                    avatar: form?.avatar?.file,\n                    avatarSize: form?.avatar?.file?.size,\n                    company: form?.company?.value,\n                    about: form?.about,\n                    gender: form?.gender?.value,\n                    phone: form?.phone,\n                    email: form?.email,\n                    dateOfBirth: form?.dateOfBirth,\n                    role: form?.role?.value\n                  }\n                }\n              })\n\n              dispatch(updateUser(result.data.updateClientUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Данные успешно отредактированы'\n                })\n              )\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать данные'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n          onDelete={() =>\n            onUserDelete(dispatch, {\n              id: user,\n              mutation: mutations.del\n            })\n          }\n          onChangePassword={() =>\n            onUserChangePassword(dispatch, { mutation: mutations.changePassword })\n          }\n        />\n      )\n    })\n  )\n}\n\nexport function onUserEdit(dispatch, props) {\n  const { user, roles, canEditAccount, canEditRole, mutations } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Редактирование пользователя',\n      content: (\n        <UserForm\n          user={user}\n          roles={roles}\n          mutation={mutations.update}\n          appearance={'clear'}\n          canEditAccount={canEditAccount}\n          canEditRole={canEditRole}\n          onSubmit={async (form, action) => {\n            try {\n              const users = await action({\n                variables: {\n                  email: user,\n                  input: {\n                    name: form.name,\n                    account: form.account?.value,\n                    avatar: form.avatar?.file,\n                    avatarSize: form.avatar?.file?.size,\n                    company: form.company?.value,\n                    about: form.about,\n                    gender: form.gender?.value,\n                    phone: form.phone,\n                    email: form.email,\n                    dateOfBirth: form.dateOfBirth,\n                    role: form.role?.value\n                  }\n                }\n              })\n\n              dispatch(setDocuments(users.data.updateUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно отредактирован'\n                })\n              )\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n          onDelete={() =>\n            onUserDelete(dispatch, {\n              id: user,\n              mutation: mutations.del\n            })\n          }\n          onChangePassword={() =>\n            onUserChangePassword(dispatch, { mutation: mutations.changePassword })\n          }\n        />\n      )\n    })\n  )\n}\n\nexport function onUserMembers(dispatch, props) {\n  const { id, auth } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'user2',\n      title: 'Участники компании',\n      content: (\n        <Members\n          user={id}\n          appearance={'clear'}\n          onMemberLink={(member) => onUserLink(dispatch, { id: member, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onUserDelete(dispatch, props) {\n  const { id, user, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление пользователя',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const users = await action({\n                variables: { email: id }\n              })\n              dispatch(setDocuments(users.data.deleteUser))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Пользователь успешно удален'\n                })\n              )\n            } catch (err) {\n              console.log(err)\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить пользователя'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <UserCard user={user} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n\nexport function onUserAboutMore(dispatch, props) {\n  const { user } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: user.about ? 'О себе' : 'Описание',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            <Text>{user.about || user.description}</Text>\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserFolderAdd(dispatch, props) {\n  const { mutation, onCancel, callback } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Создание папки',\n        component: () => (\n          <AddUserFolderForm\n            title={false}\n            mutation={mutation}\n            onCancel={() => (onCancel ? onCancel() : dispatch(setModal(null)))}\n            onSubmit={async (form, action) => {\n              const response = await action({\n                variables: {\n                  name: form.name\n                }\n              })\n\n              const folders = response.data.addUserFolder\n              dispatch(setUserFolders(folders))\n              dispatch(setModal(null))\n              if (callback) callback(folders)\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onUserFolderDelete(dispatch, props) {\n  const { id, mutation, callback } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Удаление папки',\n        component: () => (\n          <SureDeleteForm\n            mutation={mutation}\n            appearance={'clear'}\n            text={'Вы действительно хотите удалить папку?'}\n            onCancel={() => dispatch(setModal(null))}\n            onSubmit={async (_, action) => {\n              const response = await action({\n                variables: { id }\n              })\n              dispatch(setUserFolders(response.data.deleteUserFolder))\n              dispatch(setModal(null))\n              if (callback) callback()\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n"]},"metadata":{},"sourceType":"module"}