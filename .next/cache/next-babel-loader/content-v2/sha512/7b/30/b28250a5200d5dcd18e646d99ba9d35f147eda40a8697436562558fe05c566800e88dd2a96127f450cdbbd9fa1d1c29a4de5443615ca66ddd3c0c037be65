{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport DefaultLayout from '../layouts/default';\nimport ResetPassword from '../components/FormResetPassword';\nimport { setItem } from '../store/actions/snacks';\nimport { setModal } from '../store/actions/modal';\nimport queries from '../graphql/queries';\nconst TITLE = 'Поддержка';\nconst Wrap = styled.div.withConfig({\n  displayName: \"reset-password__Wrap\",\n  componentId: \"x81915-0\"\n})([\"display:grid;grid-template-columns:380px;justify-content:center;align-content:center;margin:120px 0;@media only screen and (max-width:480px){grid-template-columns:100%;margin:25px 0;}\"]);\nexport const Support = () => {\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(ResetPassword, {\n    title: false,\n    mutations: queries.RESET,\n    onBack: () => dispatch(setModal(null)),\n    onSubmit: async (form, action) => {\n      try {\n        const response = await action({\n          variables: {\n            email: user\n          }\n        });\n        if (response) router('/profile');\n      } catch (err) {\n        dispatch(setItem({\n          type: 'error',\n          message: 'Не удалось сбросить пароль'\n        }));\n      }\n    },\n    onlyButton: true\n  })));\n};\nexport default Support;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/reset-password.js"],"names":["React","styled","useSelector","useDispatch","useRouter","DefaultLayout","ResetPassword","setItem","setModal","queries","TITLE","Wrap","div","Support","user","state","dispatch","router","RESET","form","action","response","variables","email","err","type","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,WAAd;AAEA,MAAMC,IAAI,GAAGV,MAAM,CAACW,GAAV;AAAA;AAAA;AAAA,+LAAV;AAaA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMC,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,MAAM,GAAGb,SAAS,EAAxB;AAEA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEM;AAAtB,kBACE,oBAAC,IAAD,qBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,KADT;AAEE,IAAA,SAAS,EAAED,OAAO,CAACS,KAFrB;AAGE,IAAA,MAAM,EAAE,MAAMF,QAAQ,CAACR,QAAQ,CAAC,IAAD,CAAT,CAHxB;AAIE,IAAA,QAAQ,EAAE,OAAOW,IAAP,EAAaC,MAAb,KAAwB;AAChC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMD,MAAM,CAAC;AAC5BE,UAAAA,SAAS,EAAE;AACTC,YAAAA,KAAK,EAAET;AADE;AADiB,SAAD,CAA7B;AAMA,YAAIO,QAAJ,EAAcJ,MAAM,CAAC,UAAD,CAAN;AACf,OARD,CAQE,OAAOO,GAAP,EAAY;AACZR,QAAAA,QAAQ,CACNT,OAAO,CAAC;AACNkB,UAAAA,IAAI,EAAE,OADA;AAENC,UAAAA,OAAO,EAAE;AAFH,SAAD,CADD,CAAR;AAMD;AACF,KArBH;AAsBE,IAAA,UAAU;AAtBZ,IADF,CADF,CADF;AA8BD,CAnCM;AAqCP,eAAeb,OAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouter } from 'next/router'\n\nimport DefaultLayout from '../layouts/default'\nimport ResetPassword from '../components/FormResetPassword'\nimport { setItem } from '../store/actions/snacks'\nimport { setModal } from '../store/actions/modal'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Поддержка'\n\nconst Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 380px;\n  justify-content: center;\n  align-content: center;\n  margin: 120px 0;\n\n  @media only screen and (max-width: 480px) {\n    grid-template-columns: 100%;\n    margin: 25px 0;\n  }\n`\n\nexport const Support = () => {\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const router = useRouter()\n\n  return (\n    <DefaultLayout title={TITLE}>\n      <Wrap>\n        <ResetPassword\n          title={false}\n          mutations={queries.RESET}\n          onBack={() => dispatch(setModal(null))}\n          onSubmit={async (form, action) => {\n            try {\n              const response = await action({\n                variables: {\n                  email: user\n                }\n              })\n\n              if (response) router('/profile')\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось сбросить пароль'\n                })\n              )\n            }\n          }}\n          onlyButton\n        />\n      </Wrap>\n    </DefaultLayout>\n  )\n}\n\nexport default Support\n"]},"metadata":{},"sourceType":"module"}