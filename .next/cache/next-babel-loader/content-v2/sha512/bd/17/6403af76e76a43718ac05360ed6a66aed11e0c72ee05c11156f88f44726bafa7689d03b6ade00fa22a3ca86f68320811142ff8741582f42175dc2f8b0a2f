{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Alert from '../../atomic-ui/components/Alert';\nimport DatePicker from '../../atomic-ui/components/DatePicker';\nimport Select from '../../atomic-ui/components/Select';\nimport Table from '../../atomic-ui/components/Table';\nimport templates from '../../atomic-ui/components/Table/templates';\nimport { createSelectOptions } from '../../atomic-ui/utils/functions';\nimport { useHelper } from '../../hooks/useHelper';\nimport DashboardLayout from '../../layouts/dashboard';\nimport HandleBar from '../../components/HandleBar';\nimport FilterBar from '../../components/FilterBar';\nimport ArticleCard, { Wrap } from '../../components/ArticleCard';\nimport LazyLoad from '../../components/LazyLoad';\nimport FadeLoad from '../../components/FadeLoad';\nimport { onArticleCreate, onArticleEdit, onArticleDelete, onArticleLink } from '../../store/helpers/article';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Статьи';\nconst ArticlesGrid = styled(Grid).withConfig({\n  displayName: \"articles__ArticlesGrid\",\n  componentId: \"iwnag1-0\"\n})([\"\", \"{height:100%;}\"], Wrap);\n\nconst Articles = ({\n  store,\n  categories,\n  statuses\n}) => {\n  const recall = useHelper();\n  const {\n    user,\n    documents\n  } = useSelector(state => ({\n    user: state.user,\n    documents: state.documents\n  }));\n  const dispatch = useDispatch();\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [displayMethod, onChangeDisplayMethod] = useState('grid');\n  const canEditStatus = useMemo(() => user && user.role.name === 'ADMIN', [user]);\n  const articles = useMemo(() => documents || store.articles, [documents, store]);\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(DashboardLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(HandleBar, {\n    icon: 'document',\n    title: TITLE,\n    buttonCreateText: 'Создать статью',\n    onCreate: recall(onArticleCreate, {\n      categories,\n      statuses,\n      canEditStatus,\n      mutation: queries.CREATE_ARTICLE\n    }),\n    onChangeVisibleFilter: () => setVisibleFilter(!visibleFilter),\n    onChangeDisplayMethod: item => onChangeDisplayMethod(item.value)\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [/*#__PURE__*/React.createElement(DatePicker, {\n      key: 0,\n      value: date,\n      placeholder: 'Дата публикации',\n      onChange: onChangeDate,\n      withNavigate: true\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: 1,\n      options: createSelectOptions(categories),\n      placeholder: 'Раздел',\n      selected: select,\n      onChange: item => onChangeSelect(item)\n    })],\n    options: displayMethod === 'list' ? [] : templates.article.map((item, index) => ({\n      label: item.header,\n      value: index\n    }))\n  }), articles.length === 0 && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\"), displayMethod === 'list' && /*#__PURE__*/React.createElement(Table, {\n    data: articles,\n    template: templates.article,\n    onChecked: () => {},\n    onClick: article => recall(onArticleLink, {\n      id: article.id\n    })(),\n    onDelete: article => recall(onArticleDelete, {\n      id: article.id,\n      article,\n      mutation: queries.DELETE_ARTICLE\n    })(),\n    onEdit: article => recall(onArticleEdit, {\n      id: article.id,\n      categories,\n      statuses,\n      canEditStatus,\n      mutation: queries.UPDATE_ARTICLE\n    })(),\n    style: {\n      overflowX: 'auto',\n      width: 'calc(100vw - 290px)'\n    }\n  }), displayMethod === 'grid' && /*#__PURE__*/React.createElement(ArticlesGrid, null, articles.map(article => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: article.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ArticleCard, {\n    layout: 'column',\n    article: article,\n    onChecked: () => {},\n    onLink: recall(onArticleLink, {\n      id: article.id\n    }),\n    onDelete: recall(onArticleDelete, {\n      id: article.id,\n      article,\n      mutation: queries.DELETE_ARTICLE\n    }),\n    onEdit: recall(onArticleEdit, {\n      id: article.id,\n      categories,\n      statuses,\n      canEditStatus,\n      mutation: queries.UPDATE_ARTICLE\n    }),\n    withSocials: true\n  }))))));\n};\n\nexport var __N_SSP = true;\nexport default Articles;","map":null,"metadata":{},"sourceType":"module"}