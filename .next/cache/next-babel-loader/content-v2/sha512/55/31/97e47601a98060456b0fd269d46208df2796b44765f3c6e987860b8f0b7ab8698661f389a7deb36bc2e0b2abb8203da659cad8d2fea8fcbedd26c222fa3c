{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Tabs\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Column from '../Column';\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nexport const TabList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n  margin-bottom: 20px;\n`;\nexport const TabListItem = styled.li`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({\n  isActive\n}) => isActive && css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`;\nexport const TabPanel = styled.div`\n  display: none;\n  flex-direction: column;\n  flex: 1;\n\n  ${({\n  isActive\n}) => isActive && css`\n      display: flex;\n    `}\n`;\nexport const Tab = ({\n  children\n}) => __jsx(Column, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 38\n  }\n}, children);\nexport const Tabs = (_ref) => {\n  let {\n    tabs,\n    active,\n    onActivate,\n    label: ariaLabel\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"tabs\", \"active\", \"onActivate\", \"label\"]);\n\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(0);\n\n  const onActiveTab = index => {\n    if (activeTab === index) return;\n    if (onActivate) onActivate(index);\n    setActiveTab(index);\n  };\n\n  useEffect(() => {\n    if (active === undefined) return;\n    if (active !== activeTab) onActiveTab(active);\n  }, [active]);\n  return __jsx(Container, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }), __jsx(TabList, {\n    role: 'tablist',\n    \"aria-label\": ariaLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, tabs.map((tab, index) => {\n    const isActive = index === activeTab;\n    const {\n      label,\n      count\n    } = tab.props;\n    const id = v4();\n    return __jsx(TabListItem, {\n      key: `tab-${id}`,\n      id: `tab-${id}`,\n      role: 'tab',\n      \"aria-controls\": `panel-${v4()}`,\n      \"aria-selected\": isActive,\n      tabIndex: isActive ? 0 : undefined,\n      isActive: isActive,\n      onClick: () => onActiveTab(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, label, count !== undefined && count > 0 && ` (${count})`);\n  })), tabs.map((tab, index) => {\n    const isActive = index === activeTab;\n    const id = v4();\n    return __jsx(TabPanel, {\n      key: `tabpanel-${id}`,\n      id: `tabpanel-${id}`,\n      role: 'tabpanel',\n      \"aria-labelledby\": `tab-${id}`,\n      isActive: isActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, tab);\n  }));\n};\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Tabs/index.js"],"names":["React","useEffect","useState","styled","css","v4","Column","Container","div","TabList","ul","TabListItem","li","isActive","TabPanel","Tab","children","Tabs","tabs","active","onActivate","label","ariaLabel","props","activeTab","setActiveTab","onActiveTab","index","undefined","map","tab","count","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Column from '../Column'\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const TabList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n  margin-bottom: 20px;\n`\n\nexport const TabListItem = styled.li`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`\n\nexport const TabPanel = styled.div`\n  display: none;\n  flex-direction: column;\n  flex: 1;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      display: flex;\n    `}\n`\n\nexport const Tab = ({ children }) => <Column>{children}</Column>\n\nexport const Tabs = ({ tabs, active, onActivate, label: ariaLabel, ...props }) => {\n  const [activeTab, setActiveTab] = useState(0)\n\n  const onActiveTab = (index) => {\n    if (activeTab === index) return\n    if (onActivate) onActivate(index)\n    setActiveTab(index)\n  }\n\n  useEffect(() => {\n    if (active === undefined) return\n    if (active !== activeTab) onActiveTab(active)\n  }, [active])\n\n  return (\n    <Container {...props}>\n      <TabList role={'tablist'} aria-label={ariaLabel}>\n        {tabs.map((tab, index) => {\n          const isActive = index === activeTab\n          const { label, count } = tab.props\n          const id = v4()\n\n          return (\n            <TabListItem\n              key={`tab-${id}`}\n              id={`tab-${id}`}\n              role={'tab'}\n              aria-controls={`panel-${v4()}`}\n              aria-selected={isActive}\n              tabIndex={isActive ? 0 : undefined}\n              isActive={isActive}\n              onClick={() => onActiveTab(index)}>\n              {label}\n              {count !== undefined && count > 0 && ` (${count})`}\n            </TabListItem>\n          )\n        })}\n      </TabList>\n\n      {tabs.map((tab, index) => {\n        const isActive = index === activeTab\n        const id = v4()\n        return (\n          <TabPanel\n            key={`tabpanel-${id}`}\n            id={`tabpanel-${id}`}\n            role={'tabpanel'}\n            aria-labelledby={`tab-${id}`}\n            isActive={isActive}>\n            {tab}\n          </TabPanel>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default Tabs\n"]},"metadata":{},"sourceType":"module"}