{"ast":null,"code":"import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport SearchField from '../SearchBar';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"SearchBar__Wrap\",\n  componentId: \"sc-1ruwjhl-0\"\n})([\"width:100%;\"]);\nexport const WrapSearchField = styled(SearchField).withConfig({\n  displayName: \"SearchBar__WrapSearchField\",\n  componentId: \"sc-1ruwjhl-1\"\n})([\"flex-grow:100;\"]);\nexport const WrapButton = styled(Button).withConfig({\n  displayName: \"SearchBar__WrapButton\",\n  componentId: \"sc-1ruwjhl-2\"\n})([\"background:var(--default-color-accent-dim);border:none;&:hover{svg{path,circle{stroke:white;}}}\", \"\"], ({\n  visibleFilter\n}) => visibleFilter && css([\"background:var(--default-color-accent);\"]));\nexport const Search = ({\n  onChangeFilter,\n  onSubmit\n}) => {\n  const [visibleFilter, setVisibleFilter] = useState(false);\n\n  const onClick = () => {\n    setVisibleFilter(!visibleFilter);\n    if (onChangeFilter) onChangeFilter(!visibleFilter);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(WrapSearchField, {\n    placeholder: 'Поиск',\n    onSubmit: onSubmit\n  }), /*#__PURE__*/React.createElement(WrapButton, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClick,\n    visibleFilter: visibleFilter\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'filter2',\n    stroke: visibleFilter ? 'white' : 'var(--default-color-accent)'\n  })));\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/SearchBar/index.js"],"names":["React","useState","styled","css","Row","Button","Icon","SearchField","Wrap","WrapSearchField","WrapButton","visibleFilter","Search","onChangeFilter","onSubmit","setVisibleFilter","onClick"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AAEA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAO,MAAMC,IAAI,GAAGN,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,mBAAV;AAIP,OAAO,MAAMK,eAAe,GAAGP,MAAM,CAACK,WAAD,CAAT;AAAA;AAAA;AAAA,sBAArB;AAIP,OAAO,MAAMG,UAAU,GAAGR,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,4GAanB,CAAC;AAAEM,EAAAA;AAAF,CAAD,KACAA,aAAa,IACbR,GADa,6CAdM,CAAhB;AAoBP,OAAO,MAAMS,MAAM,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AACtD,QAAM,CAACH,aAAD,EAAgBI,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMe,OAAO,GAAG,MAAM;AACpBD,IAAAA,gBAAgB,CAAC,CAACJ,aAAF,CAAhB;AACA,QAAIE,cAAJ,EAAoBA,cAAc,CAAC,CAACF,aAAF,CAAd;AACrB,GAHD;;AAKA,sBACE,oBAAC,IAAD,qBACE,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAE,OAA9B;AAAuC,IAAA,QAAQ,EAAEG;AAAjD,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,QAAlB;AAA4B,IAAA,IAAI,EAAE,MAAlC;AAA0C,IAAA,OAAO,EAAEE,OAAnD;AAA4D,IAAA,aAAa,EAAEL;AAA3E,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,SAAZ;AAAuB,IAAA,MAAM,EAAEA,aAAa,GAAG,OAAH,GAAa;AAAzD,IADF,CAFF,CADF;AAQD,CAhBM;AAkBP,eAAeC,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\n\nimport SearchField from '../SearchBar'\n\nexport const Wrap = styled(Row)`\n  width: 100%;\n`\n\nexport const WrapSearchField = styled(SearchField)`\n  flex-grow: 100;\n`\n\nexport const WrapButton = styled(Button)`\n  background: var(--default-color-accent-dim);\n  border: none;\n\n  &:hover {\n    svg {\n      path,\n      circle {\n        stroke: white;\n      }\n    }\n  }\n\n  ${({ visibleFilter }) =>\n    visibleFilter &&\n    css`\n      background: var(--default-color-accent);\n    `}\n`\n\nexport const Search = ({ onChangeFilter, onSubmit }) => {\n  const [visibleFilter, setVisibleFilter] = useState(false)\n\n  const onClick = () => {\n    setVisibleFilter(!visibleFilter)\n    if (onChangeFilter) onChangeFilter(!visibleFilter)\n  }\n\n  return (\n    <Wrap>\n      <WrapSearchField placeholder={'Поиск'} onSubmit={onSubmit} />\n      <WrapButton type={'button'} kind={'icon'} onClick={onClick} visibleFilter={visibleFilter}>\n        <Icon icon={'filter2'} stroke={visibleFilter ? 'white' : 'var(--default-color-accent)'} />\n      </WrapButton>\n    </Wrap>\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}