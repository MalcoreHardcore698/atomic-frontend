{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Button from '../../atomic-ui/components/Button';\nimport SearchField from '../../atomic-ui/components/Search';\nimport { CreateButton } from '../HandleBar';\nimport { setVisibleFilters } from '../../store/actions/root';\nimport { useSearch } from '../../hooks/useSearch';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"SearchBar__Wrap\",\n  componentId: \"sc-1ruwjhl-0\"\n})([\"width:100%;\"]);\n_c = Wrap;\nexport const WrapSearchField = styled(SearchField).withConfig({\n  displayName: \"SearchBar__WrapSearchField\",\n  componentId: \"sc-1ruwjhl-1\"\n})([\"flex-grow:100;\"]);\n_c2 = WrapSearchField;\nexport const WrapButton = styled(Button).withConfig({\n  displayName: \"SearchBar__WrapButton\",\n  componentId: \"sc-1ruwjhl-2\"\n})([\"background:var(--default-color-accent-dim);border:none;&:hover{svg{path,circle{stroke:white;}}}\", \"\"], ({\n  visibleFilter\n}) => visibleFilter && css([\"background:var(--default-color-accent);\"]));\n_c3 = WrapButton;\nexport const Search = ({\n  appearance,\n  buttonCreateText,\n  withFilter,\n  onCreate\n}) => {\n  _s();\n\n  const [onSubmit] = useSearch();\n  const {\n    search,\n    visibleFilter\n  } = useSelector(state => ({\n    search: state.root.search,\n    visibleFilter: state.root.visibleFilter\n  }));\n  const dispatch = useDispatch();\n\n  const onClick = () => dispatch(setVisibleFilters(!visibleFilter));\n\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(WrapSearchField, {\n    placeholder: 'Поиск',\n    appearance: appearance,\n    defaultValue: search,\n    onSubmit: onSubmit\n  }), withFilter && /*#__PURE__*/React.createElement(WrapButton, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClick,\n    visibleFilter: visibleFilter\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'filter2',\n    stroke: visibleFilter ? 'white' : 'var(--default-color-accent)'\n  })), onCreate && /*#__PURE__*/React.createElement(CreateButton, {\n    type: 'button',\n    onClick: onCreate\n  }, /*#__PURE__*/React.createElement(\"span\", null, buttonCreateText), /*#__PURE__*/React.createElement(Icon, {\n    type: 'button',\n    icon: 'add',\n    stroke: 'white'\n  })));\n};\n\n_s(Search, \"/hmEac6lNlDQi+9b+B+ZsY0eNFY=\", false, function () {\n  return [useSearch, useSelector, useDispatch];\n});\n\n_c4 = Search;\nexport default Search;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"WrapSearchField\");\n$RefreshReg$(_c3, \"WrapButton\");\n$RefreshReg$(_c4, \"Search\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/components/SearchBar/index.js"],"names":["React","useDispatch","useSelector","styled","css","Row","Icon","Button","SearchField","CreateButton","setVisibleFilters","useSearch","Wrap","WrapSearchField","WrapButton","visibleFilter","Search","appearance","buttonCreateText","withFilter","onCreate","onSubmit","search","state","root","dispatch","onClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,OAAO,MAAMC,IAAI,GAAGT,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,mBAAV;KAAMO,I;AAIb,OAAO,MAAMC,eAAe,GAAGV,MAAM,CAACK,WAAD,CAAT;AAAA;AAAA;AAAA,sBAArB;MAAMK,e;AAIb,OAAO,MAAMC,UAAU,GAAGX,MAAM,CAACI,MAAD,CAAT;AAAA;AAAA;AAAA,4GAanB,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KACAA,aAAa,IACbX,GADa,6CAdM,CAAhB;MAAMU,U;AAoBb,OAAO,MAAME,MAAM,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,gBAAd;AAAgCC,EAAAA,UAAhC;AAA4CC,EAAAA;AAA5C,CAAD,KAA4D;AAAA;;AAChF,QAAM,CAACC,QAAD,IAAaV,SAAS,EAA5B;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUP,IAAAA;AAAV,MAA4Bb,WAAW,CAAEqB,KAAD,KAAY;AACxDD,IAAAA,MAAM,EAAEC,KAAK,CAACC,IAAN,CAAWF,MADqC;AAExDP,IAAAA,aAAa,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AAF8B,GAAZ,CAAD,CAA7C;AAIA,QAAMU,QAAQ,GAAGxB,WAAW,EAA5B;;AAEA,QAAMyB,OAAO,GAAG,MAAMD,QAAQ,CAACf,iBAAiB,CAAC,CAACK,aAAF,CAAlB,CAA9B;;AAEA,sBACE,oBAAC,IAAD,qBACE,oBAAC,eAAD;AACE,IAAA,WAAW,EAAE,OADf;AAEE,IAAA,UAAU,EAAEE,UAFd;AAGE,IAAA,YAAY,EAAEK,MAHhB;AAIE,IAAA,QAAQ,EAAED;AAJZ,IADF,EAQGF,UAAU,iBACT,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAE,QAAlB;AAA4B,IAAA,IAAI,EAAE,MAAlC;AAA0C,IAAA,OAAO,EAAEO,OAAnD;AAA4D,IAAA,aAAa,EAAEX;AAA3E,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,SAAZ;AAAuB,IAAA,MAAM,EAAEA,aAAa,GAAG,OAAH,GAAa;AAAzD,IADF,CATJ,EAcGK,QAAQ,iBACP,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAE,QAApB;AAA8B,IAAA,OAAO,EAAEA;AAAvC,kBACE,kCAAOF,gBAAP,CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,QAAZ;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAE;AAA3C,IAFF,CAfJ,CADF;AAuBD,CAjCM;;GAAMF,M;UACQL,S,EACeT,W,EAIjBD,W;;;MANNe,M;AAmCb,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Button from '../../atomic-ui/components/Button'\nimport SearchField from '../../atomic-ui/components/Search'\n\nimport { CreateButton } from '../HandleBar'\nimport { setVisibleFilters } from '../../store/actions/root'\nimport { useSearch } from '../../hooks/useSearch'\n\nexport const Wrap = styled(Row)`\n  width: 100%;\n`\n\nexport const WrapSearchField = styled(SearchField)`\n  flex-grow: 100;\n`\n\nexport const WrapButton = styled(Button)`\n  background: var(--default-color-accent-dim);\n  border: none;\n\n  &:hover {\n    svg {\n      path,\n      circle {\n        stroke: white;\n      }\n    }\n  }\n\n  ${({ visibleFilter }) =>\n    visibleFilter &&\n    css`\n      background: var(--default-color-accent);\n    `}\n`\n\nexport const Search = ({ appearance, buttonCreateText, withFilter, onCreate }) => {\n  const [onSubmit] = useSearch()\n  const { search, visibleFilter } = useSelector((state) => ({\n    search: state.root.search,\n    visibleFilter: state.root.visibleFilter\n  }))\n  const dispatch = useDispatch()\n\n  const onClick = () => dispatch(setVisibleFilters(!visibleFilter))\n\n  return (\n    <Wrap>\n      <WrapSearchField\n        placeholder={'Поиск'}\n        appearance={appearance}\n        defaultValue={search}\n        onSubmit={onSubmit}\n      />\n\n      {withFilter && (\n        <WrapButton type={'button'} kind={'icon'} onClick={onClick} visibleFilter={visibleFilter}>\n          <Icon icon={'filter2'} stroke={visibleFilter ? 'white' : 'var(--default-color-accent)'} />\n        </WrapButton>\n      )}\n\n      {onCreate && (\n        <CreateButton type={'button'} onClick={onCreate}>\n          <span>{buttonCreateText}</span>\n          <Icon type={'button'} icon={'add'} stroke={'white'} />\n        </CreateButton>\n      )}\n    </Wrap>\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}