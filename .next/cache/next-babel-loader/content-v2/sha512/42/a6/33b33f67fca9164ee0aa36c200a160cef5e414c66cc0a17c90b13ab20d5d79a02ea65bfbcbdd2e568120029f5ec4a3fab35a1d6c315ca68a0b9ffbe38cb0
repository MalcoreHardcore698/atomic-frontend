{"ast":null,"code":"import { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../../atomic-ui/utils/functions';\nimport { useHelper } from './useHelper';\nimport { useMutate } from './useMutate';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onCategoryLink } from '../store/helpers/category';\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project';\nimport { onRoleLink } from '../store/helpers/role';\nimport { onUserLink } from '../store/helpers/user';\nimport { onTicketLink } from '../store/helpers/ticket';\nimport { setScrollTop } from '../store/actions/root';\nimport { updateUser } from '../store/actions/user';\nimport queries from '../graphql/queries';\n\nconst getProjectLinkProps = (id, user, owned, dispatch, mutate, recall) => ({\n  id,\n  auth: user === null || user === void 0 ? void 0 : user.email,\n  liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === id),\n  onLike: user.email && mutate(queries.LIKE_PROJECT, {\n    id\n  }, response => dispatch(updateUser(response.data.likeProject))),\n  onAdd: user.email && recall(onProjectAdd, {\n    id,\n    folders: user === null || user === void 0 ? void 0 : user.folders,\n    mutations: {\n      addProject: queries.ADD_USER_PROJECT,\n      createFolder: queries.ADD_USER_FOLDER\n    }\n  }),\n  owned\n});\n\nconst getUserLinkProps = (id, user, owned) => ({\n  id,\n  auth: user === null || user === void 0 ? void 0 : user.email,\n  owned,\n  queries: {\n    userChats: queries.GET_USER_CHATS,\n    chat: queries.GET_CHAT\n  },\n  mutations: {\n    addUserChat: queries.ADD_USER_CHAT,\n    sendMessage: queries.SEND_MESSAGE\n  }\n});\n\nexport const useEntityQuery = () => {\n  const recall = useHelper();\n  const mutate = useMutate();\n  const router = useRouter();\n  const {\n    user,\n    scrollTop\n  } = useSelector(state => ({\n    user: state.user,\n    scrollTop: state.root.scrollTop\n  }));\n  const dispatch = useDispatch();\n\n  const setQuery = async (str, entity, callback) => {\n    await router.push({\n      pathname: router.pathname,\n      query: {\n        [entity]: b64EncodeUnicode(str)\n      }\n    }, undefined, {\n      shallow: true\n    });\n    if (callback) callback(str);\n  };\n\n  const useDetectQuery = () => {\n    useEffect(() => {\n      var _document, _document$documentEle;\n\n      const query = router.query;\n      dispatch(setScrollTop((_document = document) === null || _document === void 0 ? void 0 : (_document$documentEle = _document.documentElement) === null || _document$documentEle === void 0 ? void 0 : _document$documentEle.scrollTop));\n\n      if (query.article) {\n        const id = b64DecodeUnicode(query.article);\n        recall(onArticleLink, {\n          id\n        })();\n      }\n\n      if (query.category) {\n        const id = b64DecodeUnicode(query.category);\n        recall(onCategoryLink, {\n          id\n        })();\n      }\n\n      if (query.project) {\n        var _user$projects;\n\n        const id = b64DecodeUnicode(query.project);\n        const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === id);\n        recall(onProjectLink, getProjectLinkProps(id, user, owned, dispatch, mutate, recall))();\n      }\n\n      if (query.role) {\n        const id = b64DecodeUnicode(query.role);\n        recall(onRoleLink, {\n          id\n        })();\n      }\n\n      if (query.user) {\n        const id = b64DecodeUnicode(query.user);\n        const owned = id === (user === null || user === void 0 ? void 0 : user.name);\n        recall(onUserLink, getUserLinkProps(id, user, owned))();\n      }\n\n      if (query.ticket) {\n        const id = b64DecodeUnicode(query.ticket);\n        recall(onTicketLink, {\n          id,\n          auth: user === null || user === void 0 ? void 0 : user.email\n        })();\n      }\n    }, [router]);\n  };\n\n  useEffect(() => {\n    document.body.scrollTop = scrollTop;\n  }, []);\n  return {\n    setQuery,\n    useDetectQuery\n  };\n};\nexport default useEntityQuery;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useEntityQuery.js"],"names":["useEffect","useRouter","useDispatch","useSelector","b64DecodeUnicode","b64EncodeUnicode","useHelper","useMutate","onArticleLink","onCategoryLink","onProjectAdd","onProjectLink","onRoleLink","onUserLink","onTicketLink","setScrollTop","updateUser","queries","getProjectLinkProps","id","user","owned","dispatch","mutate","recall","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","getUserLinkProps","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","useEntityQuery","router","scrollTop","state","root","setQuery","str","entity","callback","push","pathname","query","undefined","shallow","useDetectQuery","document","documentElement","article","category","project","projects","candidate","role","name","ticket","body"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../../atomic-ui/utils/functions'\n\nimport { useHelper } from './useHelper'\nimport { useMutate } from './useMutate'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onCategoryLink } from '../store/helpers/category'\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project'\nimport { onRoleLink } from '../store/helpers/role'\nimport { onUserLink } from '../store/helpers/user'\nimport { onTicketLink } from '../store/helpers/ticket'\nimport { setScrollTop } from '../store/actions/root'\nimport { updateUser } from '../store/actions/user'\nimport queries from '../graphql/queries'\n\nconst getProjectLinkProps = (id, user, owned, dispatch, mutate, recall) => ({\n  id,\n  auth: user?.email,\n  liked: !!(user?.likedProjects || []).find((item) => item.id === id),\n  onLike:\n    user.email &&\n    mutate(queries.LIKE_PROJECT, { id }, (response) =>\n      dispatch(updateUser(response.data.likeProject))\n    ),\n  onAdd:\n    user.email &&\n    recall(onProjectAdd, {\n      id,\n      folders: user?.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      }\n    }),\n  owned\n})\n\nconst getUserLinkProps = (id, user, owned) => ({\n  id,\n  auth: user?.email,\n  owned,\n  queries: {\n    userChats: queries.GET_USER_CHATS,\n    chat: queries.GET_CHAT\n  },\n  mutations: {\n    addUserChat: queries.ADD_USER_CHAT,\n    sendMessage: queries.SEND_MESSAGE\n  }\n})\n\nexport const useEntityQuery = () => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const router = useRouter()\n\n  const { user, scrollTop } = useSelector((state) => ({\n    user: state.user,\n    scrollTop: state.root.scrollTop\n  }))\n  const dispatch = useDispatch()\n\n  const setQuery = async (str, entity, callback) => {\n    await router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          [entity]: b64EncodeUnicode(str)\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n    if (callback) callback(str)\n  }\n\n  const useDetectQuery = () => {\n    useEffect(() => {\n      const query = router.query\n      dispatch(setScrollTop(document?.documentElement?.scrollTop))\n\n      if (query.article) {\n        const id = b64DecodeUnicode(query.article)\n        recall(onArticleLink, { id })()\n      }\n\n      if (query.category) {\n        const id = b64DecodeUnicode(query.category)\n        recall(onCategoryLink, { id })()\n      }\n\n      if (query.project) {\n        const id = b64DecodeUnicode(query.project)\n        const owned = user?.projects?.find((candidate) => candidate.id === id)\n        recall(onProjectLink, getProjectLinkProps(id, user, owned, dispatch, mutate, recall))()\n      }\n\n      if (query.role) {\n        const id = b64DecodeUnicode(query.role)\n        recall(onRoleLink, { id })()\n      }\n\n      if (query.user) {\n        const id = b64DecodeUnicode(query.user)\n        const owned = id === user?.name\n        recall(onUserLink, getUserLinkProps(id, user, owned))()\n      }\n\n      if (query.ticket) {\n        const id = b64DecodeUnicode(query.ticket)\n        recall(onTicketLink, { id, auth: user?.email })()\n      }\n    }, [router])\n  }\n\n  useEffect(() => {\n    document.body.scrollTop = scrollTop\n  }, [])\n\n  return { setQuery, useDetectQuery }\n}\n\nexport default useEntityQuery\n"]},"metadata":{},"sourceType":"module"}