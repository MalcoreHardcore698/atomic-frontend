{"ast":null,"code":"import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { getDateLabel, parseDate } from '../../assets/scripts/date';\nimport useClickOutside from '../../hooks/useClickOutside';\nimport Transition from '../Transition';\nimport DateSheet from '../DateSheet';\nimport Input from '../Input';\nimport Icon from '../Icon';\nconst DURATION = 100;\nexport const Wrap = styled.div.withConfig({\n  displayName: \"DatePicker__Wrap\",\n  componentId: \"iku3jj-0\"\n})([\"position:relative;display:flex;flex-grow:1;\"]);\nexport const TextField = styled.div.withConfig({\n  displayName: \"DatePicker__TextField\",\n  componentId: \"iku3jj-1\"\n})([\"position:relative;flex-grow:1;\"]);\nexport const Popout = styled(Transition).withConfig({\n  displayName: \"DatePicker__Popout\",\n  componentId: \"iku3jj-2\"\n})([\"position:absolute;top:calc(var(--input-height-m) + 10px);left:0;z-index:15;padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--default-shadow);&.fade-enter{opacity:0;}&.fade-enter-active{opacity:1;transition:opacity 100ms,blur 100ms;}&.fade-exit{opacity:1;}&.fade-exit-active{opacity:0;transition:opacity 100ms,blur 100ms;}\"]);\nexport const DateIcon = styled(Icon).withConfig({\n  displayName: \"DatePicker__DateIcon\",\n  componentId: \"iku3jj-3\"\n})([\"position:absolute;top:9px;right:10px;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\nexport const DatePicker = ({\n  id,\n  name,\n  style,\n  sheets,\n  inputRef,\n  placeholder,\n  value = null,\n  className,\n  appearance,\n  canEditYear,\n  withNavigate,\n  withMarkers,\n  withYearDisplay,\n  onChange,\n  onCompare\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(parseDate(value));\n  const [label] = useClickOutside(() => setIsOpen(false));\n\n  const handleChange = newVal => {\n    setSelected(newVal);\n    if (onChange) onChange(newVal);\n  };\n\n  const handleInputClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    ref: label,\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onClick: handleInputClick,\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: id,\n    name: name,\n    type: 'text',\n    inputRef: inputRef !== null && inputRef !== void 0 ? inputRef : null,\n    defaultValue: getDateLabel(selected),\n    placeholder: placeholder || 'Выберите дату',\n    appearance: appearance,\n    readOnly: true\n  }), /*#__PURE__*/React.createElement(DateIcon, {\n    size: 'xs',\n    stroke: 'var(--ghost-color-text)',\n    icon: selected ? 'delete' : 'calendar',\n    onClick: selected && (() => setSelected(null))\n  })), /*#__PURE__*/React.createElement(Popout, {\n    in: isOpen,\n    animation: 'fade',\n    timeout: DURATION\n  }, /*#__PURE__*/React.createElement(DateSheet, {\n    value: selected,\n    sheets: sheets,\n    style: {\n      width: 282\n    },\n    canEditYear: canEditYear,\n    withNavigate: withNavigate,\n    withMarkers: withMarkers,\n    withYearDisplay: withYearDisplay,\n    onChange: handleChange,\n    onCompare: onCompare\n  })));\n};\nexport default DatePicker;","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/DatePicker/index.js"],"names":["React","useState","styled","css","getDateLabel","parseDate","useClickOutside","Transition","DateSheet","Input","Icon","DURATION","Wrap","div","TextField","Popout","DateIcon","onClick","DatePicker","id","name","style","sheets","inputRef","placeholder","value","className","appearance","canEditYear","withNavigate","withMarkers","withYearDisplay","onChange","onCompare","isOpen","setIsOpen","selected","setSelected","label","handleChange","newVal","handleInputClick","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { getDateLabel, parseDate } from '../../assets/scripts/date'\nimport useClickOutside from '../../hooks/useClickOutside'\nimport Transition from '../Transition'\nimport DateSheet from '../DateSheet'\nimport Input from '../Input'\nimport Icon from '../Icon'\n\nconst DURATION = 100\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n`\n\nexport const TextField = styled.div`\n  position: relative;\n  flex-grow: 1;\n`\n\nexport const Popout = styled(Transition)`\n  position: absolute;\n  top: calc(var(--input-height-m) + 10px);\n  left: 0;\n  z-index: 15;\n  padding: var(--default-gap);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--default-shadow);\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const DateIcon = styled(Icon)`\n  position: absolute;\n  top: 9px;\n  right: 10px;\n\n  ${({ onClick }) =>\n    onClick && \n    css`\n      cursor: pointer;\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const DatePicker = ({\n  id,\n  name,\n  style,\n  sheets,\n  inputRef,\n  placeholder,\n  value = null,\n  className,\n  appearance,\n  canEditYear,\n  withNavigate,\n  withMarkers,\n  withYearDisplay,\n  onChange,\n  onCompare\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [selected, setSelected] = useState(parseDate(value))\n  const [label] = useClickOutside(() => setIsOpen(false))\n\n  const handleChange = (newVal) => {\n    setSelected(newVal)\n    if (onChange) onChange(newVal)\n  }\n\n  const handleInputClick = () => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <Wrap ref={label} className={className} style={style}>\n      <TextField onClick={handleInputClick} className={className} style={style}>\n        <Input\n          id={id}\n          name={name}\n          type={'text'}\n          inputRef={inputRef ?? null}\n          defaultValue={getDateLabel(selected)}\n          placeholder={placeholder || 'Выберите дату'}\n          appearance={appearance}\n          readOnly\n        />\n        <DateIcon\n          size={'xs'}\n          stroke={'var(--ghost-color-text)'}\n          icon={selected ? 'delete' : 'calendar'}\n          onClick={selected && (() => setSelected(null))}\n        />\n      </TextField>\n\n      <Popout in={isOpen} animation={'fade'} timeout={DURATION}>\n        <DateSheet\n          value={selected}\n          sheets={sheets}\n          style={{ width: 282 }}\n          canEditYear={canEditYear}\n          withNavigate={withNavigate}\n          withMarkers={withMarkers}\n          withYearDisplay={withYearDisplay}\n          onChange={handleChange}\n          onCompare={onCompare}\n        />\n      </Popout>\n    </Wrap>\n  )\n}\n\nexport default DatePicker\n"]},"metadata":{},"sourceType":"module"}