{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Comment\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\n  &:hover {\\n    svg {\\n      path,\\n      circle {\\n        stroke: var(--default-color-accent);\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\n  span {\\n    color: var(--default-color-text);\\n    transition: color 150ms ease;\\n  }\\n\\n  &:hover {\\n    span {\\n      color: var(--default-color-accent);\\n    }\\n  }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n  align-items: center;\\n  grid-gap: 0;\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--default-color-accent);\\n  font-size: var(--font-size-s);\\n  font-weight: var(--font-weight-regular);\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: var(--font-size-s);\\n  color: var(--default-color-text);\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  grid-gap: 10px;\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 5px;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-gap: 0;\\n  width: 100%;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  color: black;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 128px;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n\\n      &:hover {\\n        opacity: 0.65;\\n      }\\n    \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n      display: flex;\\n      align-items: center;\\n      grid-gap: 10px;\\n      margin-bottom: 5px;\\n    \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-medium);\\n  color: var(--default-color-accent);\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-xs);\\n  height: var(--input-height-xs);\\n  min-width: var(--input-height-xs);\\n  min-height: var(--input-height-xs);\\n  border-radius: var(--surface-border-radius);\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      opacity: 0.45;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  margin: 0;\\n  padding: 0;\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useMemo, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Text from '../Text';\nimport DateText from '../DateText';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Tooltip from '../Tooltip';\nimport Checkbox from '../Checkbox';\nimport TextArea from '../TextArea';\nexport var Wrap = styled(Row)(_templateObject(), function (_ref) {\n  var checked = _ref.checked;\n  return checked && css(_templateObject2());\n});\n_c = Wrap;\nexport var MiniAvatar = styled(Avatar)(_templateObject3());\n_c2 = MiniAvatar;\nexport var Name = styled(Text)(_templateObject4(), function (_ref2) {\n  var compact = _ref2.compact;\n  return compact && css(_templateObject5());\n}, function (_ref3) {\n  var onClick = _ref3.onClick;\n  return onClick && css(_templateObject6());\n});\n_c3 = Name;\nexport var MessageTextArea = styled(TextArea)(_templateObject7());\n_c4 = MessageTextArea;\nexport var MessageText = styled(Text)(_templateObject8());\n_c5 = MessageText;\nexport var Content = styled(Column)(_templateObject9());\n_c6 = Content;\nexport var Meta = styled(Row)(_templateObject10());\n_c7 = Meta;\nexport var Line = styled(Row)(_templateObject11());\n_c8 = Line;\nexport var Actions = styled(Row)(_templateObject12());\n_c9 = Actions;\nexport var DispatchUpdatedDate = styled(DateText)(_templateObject13());\n_c10 = DispatchUpdatedDate;\nexport var DispatchTime = styled(DateText)(_templateObject14());\n_c11 = DispatchTime;\nexport var ReplyButton = styled(Button)(_templateObject15());\n_c12 = ReplyButton;\nexport var Likes = styled(Row)(_templateObject16());\n_c13 = Likes;\nexport var LikesButton = styled(Button)(_templateObject17());\n_c14 = LikesButton;\nexport var LikeButton = styled(Button)(_templateObject18());\n_c15 = LikeButton;\nexport var Comment = function Comment(_ref4) {\n  _s();\n\n  var _user$avatar$path, _user$avatar, _user$avatar$path2, _user$avatar2;\n\n  var user = _ref4.user,\n      message = _ref4.message,\n      likes = _ref4.likes,\n      time = _ref4.time,\n      className = _ref4.className,\n      style = _ref4.style,\n      compact = _ref4.compact,\n      initialLiked = _ref4.isLiked,\n      isUpdated = _ref4.isUpdated,\n      isChecked = _ref4.isChecked,\n      onLink = _ref4.onLink,\n      onReply = _ref4.onReply,\n      onChecked = _ref4.onChecked,\n      onShowLikes = _ref4.onShowLikes,\n      onDelete = _ref4.onDelete,\n      onEdit = _ref4.onEdit,\n      onLike = _ref4.onLike;\n\n  var _useState = useState(isUpdated ? time : null),\n      updatedAt = _useState[0],\n      setUpdatedAt = _useState[1];\n\n  var _useState2 = useState(isChecked),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = useState(likes),\n      count = _useState3[0],\n      setCount = _useState3[1];\n\n  var _useState4 = useState(false),\n      isEdit = _useState4[0],\n      setEdit = _useState4[1];\n\n  var _useState5 = useState(initialLiked),\n      isLiked = _useState5[0],\n      setLiked = _useState5[1];\n\n  var color = useMemo(function () {\n    return isLiked ? 'var(--default-color-accent)' : 'var(--default-color-text)';\n  }, [isLiked]);\n  var textLikes = useMemo(function () {\n    return count === 1 ? 'человеку' : 'людям';\n  }, [count]);\n\n  var _useState6 = useState(message),\n      comment = _useState6[0],\n      setComment = _useState6[1];\n\n  var commentRef = useRef(null);\n\n  var onClick = function onClick() {\n    var value = !isLiked;\n    if (onLike) onLike(value);\n    setCount(function (prev) {\n      return prev + (value ? 1 : -1);\n    });\n    setLiked(value);\n  };\n\n  var handleToggleEdit = function handleToggleEdit() {\n    return setEdit(function (prev) {\n      return !prev;\n    });\n  };\n\n  var handleChecked = function handleChecked(e) {\n    var value = e.target.checked;\n    if (onChecked) onChecked(value);\n    setChecked(value);\n  };\n\n  var handleApplyChanges = function handleApplyChanges() {\n    var _commentRef$current;\n\n    var value = commentRef === null || commentRef === void 0 ? void 0 : (_commentRef$current = commentRef.current) === null || _commentRef$current === void 0 ? void 0 : _commentRef$current.value;\n\n    if (value) {\n      if (onEdit) onEdit(value);\n      setUpdatedAt(new Date());\n      setComment(value);\n    }\n\n    handleToggleEdit();\n  };\n\n  return __jsx(Wrap, {\n    checked: checked,\n    style: style,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, !compact && __jsx(Avatar, {\n    src: (_user$avatar$path = user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) !== null && _user$avatar$path !== void 0 ? _user$avatar$path : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 20\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, __jsx(Name, {\n    compact: compact,\n    onClick: onLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, compact && __jsx(MiniAvatar, {\n    src: (_user$avatar$path2 = user === null || user === void 0 ? void 0 : (_user$avatar2 = user.avatar) === null || _user$avatar2 === void 0 ? void 0 : _user$avatar2.path) !== null && _user$avatar$path2 !== void 0 ? _user$avatar$path2 : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }), user.name), isEdit ? __jsx(MessageTextArea, {\n    ref: commentRef,\n    defaultValue: comment,\n    appearance: 'ghost',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }) : __jsx(MessageText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, comment), compact && onEdit && onDelete && __jsx(Actions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, !isEdit ? __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, __jsx(Tooltip, {\n    text: 'Удалить комментарий',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: onDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Редактировать комментарий',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    onClick: handleToggleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Отметить комментарий',\n    self: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    checked: checked,\n    onChange: handleChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }))) : __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, __jsx(Tooltip, {\n    text: 'Применить изменения',\n    self: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'green',\n    onClick: handleApplyChanges,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'check',\n    size: 'xs',\n    stroke: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Отменить изменения',\n    self: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: handleToggleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'closeSquare',\n    size: 'xs',\n    stroke: 'white',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }))))), __jsx(Line, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, __jsx(Meta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, updatedAt ? __jsx(DispatchUpdatedDate, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\", ' ', new Date(updatedAt).toLocaleString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })) : __jsx(DispatchTime, {\n    text: time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }), onReply && __jsx(ReplyButton, {\n    appearance: 'clear',\n    onClick: onReply,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\")), __jsx(Likes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, count > 0 && __jsx(Tooltip, {\n    text: \"\".concat(count, \" \").concat(textLikes, \" \\u044D\\u0442\\u043E \\u043D\\u0440\\u0430\\u0432\\u0438\\u0442\\u0441\\u044F\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, __jsx(LikesButton, {\n    type: 'button',\n    onClick: onShowLikes,\n    appearance: 'clear',\n    size: 'xs',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    style: {\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }, count))), __jsx(Tooltip, {\n    text: 'Мне нравится',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, __jsx(LikeButton, {\n    type: 'button',\n    onClick: onClick,\n    appearance: 'clear',\n    size: 'xs',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 15\n    }\n  }, __jsx(Icon, {\n    icon: 'heart',\n    size: 'xs',\n    stroke: color,\n    fill: isLiked ? 'var(--default-color-accent)' : 'none',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  })))))));\n};\n\n_s(Comment, \"ZLhvLWT1grjM0JQt+b1ti+dxQCw=\");\n\n_c16 = Comment;\nexport default Comment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"MiniAvatar\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"MessageTextArea\");\n$RefreshReg$(_c5, \"MessageText\");\n$RefreshReg$(_c6, \"Content\");\n$RefreshReg$(_c7, \"Meta\");\n$RefreshReg$(_c8, \"Line\");\n$RefreshReg$(_c9, \"Actions\");\n$RefreshReg$(_c10, \"DispatchUpdatedDate\");\n$RefreshReg$(_c11, \"DispatchTime\");\n$RefreshReg$(_c12, \"ReplyButton\");\n$RefreshReg$(_c13, \"Likes\");\n$RefreshReg$(_c14, \"LikesButton\");\n$RefreshReg$(_c15, \"LikeButton\");\n$RefreshReg$(_c16, \"Comment\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Comment/index.js"],"names":["React","useState","useMemo","useRef","styled","css","Row","Column","Avatar","Text","DateText","Button","Icon","Tooltip","Checkbox","TextArea","Wrap","checked","MiniAvatar","Name","compact","onClick","MessageTextArea","MessageText","Content","Meta","Line","Actions","DispatchUpdatedDate","DispatchTime","ReplyButton","Likes","LikesButton","LikeButton","Comment","user","message","likes","time","className","style","initialLiked","isLiked","isUpdated","isChecked","onLink","onReply","onChecked","onShowLikes","onDelete","onEdit","onLike","updatedAt","setUpdatedAt","setChecked","count","setCount","isEdit","setEdit","setLiked","color","textLikes","comment","setComment","commentRef","value","prev","handleToggleEdit","handleChecked","e","target","handleApplyChanges","current","Date","avatar","path","name","toLocaleString","day","month","year"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Avatar from '../Avatar'\nimport Text from '../Text'\nimport DateText from '../DateText'\nimport Button from '../Button'\nimport Icon from '../Icon'\nimport Tooltip from '../Tooltip'\nimport Checkbox from '../Checkbox'\nimport TextArea from '../TextArea'\n\nexport const Wrap = styled(Row)`\n  position: relative;\n  margin: 0;\n  padding: 0;\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      opacity: 0.45;\n    `}\n`\n\nexport const MiniAvatar = styled(Avatar)`\n  width: var(--input-height-xs);\n  height: var(--input-height-xs);\n  min-width: var(--input-height-xs);\n  min-height: var(--input-height-xs);\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Name = styled(Text)`\n  font-weight: var(--font-weight-medium);\n  color: var(--default-color-accent);\n  transition: opacity 150ms ease;\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      display: flex;\n      align-items: center;\n      grid-gap: 10px;\n      margin-bottom: 5px;\n    `}\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const MessageTextArea = styled(TextArea)`\n  height: 128px;\n`\n\nexport const MessageText = styled(Text)`\n  color: black;\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n  width: 100%;\n`\n\nexport const Meta = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const Line = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  grid-gap: 10px;\n`\n\nexport const DispatchUpdatedDate = styled(DateText)`\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`\n\nexport const DispatchTime = styled(DateText)`\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`\n\nexport const ReplyButton = styled(Button)`\n  color: var(--default-color-accent);\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n`\n\nexport const Likes = styled(Row)`\n  align-items: center;\n  grid-gap: 0;\n`\n\nexport const LikesButton = styled(Button)`\n  span {\n    color: var(--default-color-text);\n    transition: color 150ms ease;\n  }\n\n  &:hover {\n    span {\n      color: var(--default-color-accent);\n    }\n  }\n`\n\nexport const LikeButton = styled(Button)`\n  &:hover {\n    svg {\n      path,\n      circle {\n        stroke: var(--default-color-accent);\n      }\n    }\n  }\n`\n\nexport const Comment = ({\n  user,\n  message,\n  likes,\n  time,\n  className,\n  style,\n  compact,\n  isLiked: initialLiked,\n  isUpdated,\n  isChecked,\n  onLink,\n  onReply,\n  onChecked,\n  onShowLikes,\n  onDelete,\n  onEdit,\n  onLike\n}) => {\n  const [updatedAt, setUpdatedAt] = useState(isUpdated ? time : null)\n  const [checked, setChecked] = useState(isChecked)\n  const [count, setCount] = useState(likes)\n  const [isEdit, setEdit] = useState(false)\n  const [isLiked, setLiked] = useState(initialLiked)\n  const color = useMemo(\n    () => (isLiked ? 'var(--default-color-accent)' : 'var(--default-color-text)'),\n    [isLiked]\n  )\n  const textLikes = useMemo(() => (count === 1 ? 'человеку' : 'людям'), [count])\n  const [comment, setComment] = useState(message)\n  const commentRef = useRef(null)\n\n  const onClick = () => {\n    const value = !isLiked\n    if (onLike) onLike(value)\n    setCount((prev) => prev + (value ? 1 : -1))\n    setLiked(value)\n  }\n\n  const handleToggleEdit = () => setEdit((prev) => !prev)\n\n  const handleChecked = (e) => {\n    const value = e.target.checked\n    if (onChecked) onChecked(value)\n    setChecked(value)\n  }\n\n  const handleApplyChanges = () => {\n    const value = commentRef?.current?.value\n\n    if (value) {\n      if (onEdit) onEdit(value)\n      setUpdatedAt(new Date())\n      setComment(value)\n    }\n    handleToggleEdit()\n  }\n\n  return (\n    <Wrap checked={checked} style={style} className={className}>\n      {!compact && <Avatar src={user?.avatar?.path ?? ''} />}\n\n      <Content>\n        <Name compact={compact} onClick={onLink}>\n          {compact && <MiniAvatar src={user?.avatar?.path ?? ''} />}\n          {user.name}\n        </Name>\n\n        {isEdit ? (\n          <MessageTextArea ref={commentRef} defaultValue={comment} appearance={'ghost'} />\n        ) : (\n          <MessageText>{comment}</MessageText>\n        )}\n\n        {compact && onEdit && onDelete && (\n          <Actions>\n            {!isEdit ? (\n              <React.Fragment>\n                <Tooltip text={'Удалить комментарий'}>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'red'}\n                    onClick={onDelete}>\n                    <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Редактировать комментарий'}>\n                  <Button kind={'icon'} size={'xs'} disabled={checked} onClick={handleToggleEdit}>\n                    <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Отметить комментарий'} self>\n                  <Checkbox checked={checked} onChange={handleChecked} />\n                </Tooltip>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Tooltip text={'Применить изменения'} self>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'green'}\n                    onClick={handleApplyChanges}>\n                    <Icon icon={'check'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Отменить изменения'} self>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'red'}\n                    onClick={handleToggleEdit}>\n                    <Icon icon={'closeSquare'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n              </React.Fragment>\n            )}\n          </Actions>\n        )}\n\n        <Line>\n          <Meta>\n            {updatedAt ? (\n              <DispatchUpdatedDate>\n                Отредактировано{' '}\n                {new Date(updatedAt).toLocaleString('ru-RU', {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n                })}\n              </DispatchUpdatedDate>\n            ) : (\n              <DispatchTime text={time} />\n            )}\n\n            {onReply && (\n              <ReplyButton appearance={'clear'} onClick={onReply}>\n                Ответить\n              </ReplyButton>\n            )}\n          </Meta>\n\n          <Likes>\n            {count > 0 && (\n              <Tooltip text={`${count} ${textLikes} это нравится`}>\n                <LikesButton type={'button'} onClick={onShowLikes} appearance={'clear'} size={'xs'}>\n                  <span style={{ color }}>{count}</span>\n                </LikesButton>\n              </Tooltip>\n            )}\n            <Tooltip text={'Мне нравится'}>\n              <LikeButton type={'button'} onClick={onClick} appearance={'clear'} size={'xs'}>\n                <Icon\n                  icon={'heart'}\n                  size={'xs'}\n                  stroke={color}\n                  fill={isLiked ? 'var(--default-color-accent)' : 'none'}\n                />\n              </LikeButton>\n            </Tooltip>\n          </Likes>\n        </Line>\n      </Content>\n    </Wrap>\n  )\n}\n\nexport default Comment\n"]},"metadata":{},"sourceType":"module"}