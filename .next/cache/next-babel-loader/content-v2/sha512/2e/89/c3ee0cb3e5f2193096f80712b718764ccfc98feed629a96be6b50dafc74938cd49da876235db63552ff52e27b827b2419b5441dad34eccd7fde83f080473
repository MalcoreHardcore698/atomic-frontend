{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { motion } from 'framer-motion';\nimport Column from '../atomic-ui/components/Column';\nimport Alert from '../atomic-ui/components/Alert';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Select from '../atomic-ui/components/Select';\nimport { useHelper } from '../hooks/useHelper';\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll';\nimport DefaultLayout from '../layouts/default';\nimport UserCard from '../components/UserCard';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport { onUserLink, onUserMembers } from '../store/helpers/user';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nimport { categories, filters } from '../__mock__';\nconst TITLE = 'Авторы';\nconst START_OFFSET = 6;\nconst LIMIT = 6;\nconst Wrap = styled(Column).withConfig({\n  displayName: \"creators__Wrap\",\n  componentId: \"sc-1n5fua5-0\"\n})([\"margin-top:120px;margin-bottom:80px;@media only screen and (max-width:480px){margin-top:0;}\"]);\n_c = Wrap;\nconst Container = styled.aside.withConfig({\n  displayName: \"creators__Container\",\n  componentId: \"sc-1n5fua5-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c2 = Container;\nconst Loader = styled.div.withConfig({\n  displayName: \"creators__Loader\",\n  componentId: \"sc-1n5fua5-2\"\n})([\"display:flex;justify-content:center;width:100%;height:80px;\"]);\n_c3 = Loader;\nconst chatQueries = {\n  userChats: queries.GET_USER_CHATS,\n  chat: queries.GET_CHAT\n};\nconst chatMutations = {\n  addUserChat: queries.ADD_USER_CHAT,\n  sendMessage: queries.SEND_MESSAGE\n};\n\nconst Creators = ({\n  store\n}) => {\n  _s();\n\n  var _dataBySearch$getUser, _dataBySearch$getUser2;\n\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [search, setSearch] = useState(null);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const [offset, setOffset] = useState(START_OFFSET);\n  const [users, setUsers] = useState(store.users || []);\n  const [loadUsersBySearch, {\n    data: dataBySearch,\n    loading: loadingBySearch,\n    error: errorBySearch,\n    refetch: refetchBySearch\n  }] = useLazyQuery(queries.GET_USERS);\n  const [loadUsers, {\n    data,\n    loading,\n    error,\n    refetch\n  }] = useLazyQuery(queries.GET_USERS);\n  const [isFetching, setIsFetching] = useInfiniteScroll(async () => {\n    await (search ? refetchBySearch : refetch)({\n      offset,\n      limit: LIMIT\n    });\n    setOffset(prev => prev + LIMIT);\n    setIsFetching(false);\n  }, 800);\n\n  const onSearch = search => {\n    setUsers([]);\n    setSearch(search);\n    setOffset(search ? START_OFFSET : 0);\n\n    if (search) {\n      loadUsersBySearch({\n        variables: {\n          search,\n          offset: 0,\n          limit: START_OFFSET\n        }\n      });\n    } else {\n      loadUsers({\n        variables: {\n          offset: 0,\n          limit: LIMIT\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const isCommon = !search && !loading && data;\n    const isSearch = search && !loadingBySearch && dataBySearch;\n    const result = isCommon || isSearch;\n    if (result) setUsers(prev => [...prev, ...result.getUsers]);\n  }, [search, loading, loadingBySearch, data, dataBySearch]);\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(SearchBar, {\n    onChangeFilter: () => setVisibleFilter(!visibleFilter),\n    onSubmit: onSearch\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [/*#__PURE__*/React.createElement(DatePicker, {\n      key: 0,\n      value: date,\n      placeholder: 'Дата публикации',\n      onChange: onChangeDate,\n      withNavigate: true\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: 1,\n      options: categories,\n      placeholder: 'Раздел',\n      selected: select,\n      onChange: item => onChangeSelect(item)\n    })],\n    options: filters\n  }), /*#__PURE__*/React.createElement(Container, null, ((dataBySearch === null || dataBySearch === void 0 ? void 0 : dataBySearch.getUsers) || users).map(author => {\n    var _author$company;\n\n    const owned = author.name === user.name;\n    return /*#__PURE__*/React.createElement(motion.div, {\n      key: author.email,\n      initial: 'pageInitial',\n      animate: 'pageAnimate',\n      variants: {\n        pageInitial: {\n          opacity: 0\n        },\n        pageAnimate: {\n          opacity: 1\n        }\n      }\n    }, /*#__PURE__*/React.createElement(UserCard, {\n      user: author,\n      owned: owned,\n      onChat: user.email && recall(onChat, {\n        sender: user,\n        recipient: author,\n        queries: chatQueries,\n        mutations: chatMutations\n      }),\n      onMembers: recall(onUserMembers, {\n        id: author === null || author === void 0 ? void 0 : author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onLink: recall(onUserLink, {\n        id: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned,\n        queries: chatQueries,\n        mutations: chatMutations\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_author$company = author.company) === null || _author$company === void 0 ? void 0 : _author$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: chatQueries,\n        mutations: chatMutations\n      })\n    }));\n  })), search && dataBySearch && ((_dataBySearch$getUser = dataBySearch.getUsers) === null || _dataBySearch$getUser === void 0 ? void 0 : _dataBySearch$getUser.length) === 0 && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u043E \\u0432\\u0430\\u0448\\u0435\\u043C\\u0443 \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0443 \\u043D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"), (search && errorBySearch || !search && error) && /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0430\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432\"), (!errorBySearch && loading || search && loadingBySearch && !dataBySearch || isFetching) && /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)), !search && !loading && !loadingBySearch && !errorBySearch && users.length === 0 && (!(dataBySearch !== null && dataBySearch !== void 0 && dataBySearch.getUsers) || (dataBySearch === null || dataBySearch === void 0 ? void 0 : (_dataBySearch$getUser2 = dataBySearch.getUsers) === null || _dataBySearch$getUser2 === void 0 ? void 0 : _dataBySearch$getUser2.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442\")));\n};\n\n_s(Creators, \"mNlzZaN5ZF0ctqYH20J1zW+1S6U=\", false, function () {\n  return [useHelper, useSelector, useLazyQuery, useLazyQuery, useInfiniteScroll];\n});\n\n_c4 = Creators;\nexport var __N_SSP = true;\nexport default Creators;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Loader\");\n$RefreshReg$(_c4, \"Creators\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/creators.js"],"names":["React","useState","useEffect","styled","useSelector","useLazyQuery","motion","Column","Alert","DatePicker","Spinner","Select","useHelper","useInfiniteScroll","DefaultLayout","UserCard","FilterBar","SearchBar","onUserLink","onUserMembers","onChat","queries","categories","filters","TITLE","START_OFFSET","LIMIT","Wrap","Container","aside","Loader","div","chatQueries","userChats","GET_USER_CHATS","chat","GET_CHAT","chatMutations","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","Creators","store","recall","user","state","date","onChangeDate","select","onChangeSelect","search","setSearch","visibleFilter","setVisibleFilter","offset","setOffset","users","setUsers","loadUsersBySearch","data","dataBySearch","loading","loadingBySearch","error","errorBySearch","refetch","refetchBySearch","GET_USERS","loadUsers","isFetching","setIsFetching","limit","prev","onSearch","variables","isCommon","isSearch","result","getUsers","item","map","author","owned","name","email","pageInitial","opacity","pageAnimate","sender","recipient","mutations","id","auth","company","length","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport { motion } from 'framer-motion'\n\nimport Column from '../atomic-ui/components/Column'\nimport Alert from '../atomic-ui/components/Alert'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Select from '../atomic-ui/components/Select'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll'\nimport DefaultLayout from '../layouts/default'\nimport UserCard from '../components/UserCard'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport { onUserLink, onUserMembers } from '../store/helpers/user'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\nimport { categories, filters } from '../__mock__'\n\nconst TITLE = 'Авторы'\nconst START_OFFSET = 6\nconst LIMIT = 6\n\nconst Wrap = styled(Column)`\n  margin-top: 120px;\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 480px) {\n    margin-top: 0;\n  }\n`\n\nconst Container = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 80px;\n`\n\nconst chatQueries = {\n  userChats: queries.GET_USER_CHATS,\n  chat: queries.GET_CHAT\n}\n\nconst chatMutations = {\n  addUserChat: queries.ADD_USER_CHAT,\n  sendMessage: queries.SEND_MESSAGE\n}\n\nconst Creators = ({ store }) => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.user)\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [search, setSearch] = useState(null)\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const [offset, setOffset] = useState(START_OFFSET)\n  const [users, setUsers] = useState(store.users || [])\n\n  const [\n    loadUsersBySearch,\n    { data: dataBySearch, loading: loadingBySearch, error: errorBySearch, refetch: refetchBySearch }\n  ] = useLazyQuery(queries.GET_USERS)\n\n  const [loadUsers, { data, loading, error, refetch }] = useLazyQuery(queries.GET_USERS)\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(async () => {\n    await (search ? refetchBySearch : refetch)({ offset, limit: LIMIT })\n    setOffset((prev) => prev + LIMIT)\n    setIsFetching(false)\n  }, 800)\n\n  const onSearch = (search) => {\n    setUsers([])\n    setSearch(search)\n    setOffset(search ? START_OFFSET : 0)\n    if (search) {\n      loadUsersBySearch({\n        variables: {\n          search,\n          offset: 0,\n          limit: START_OFFSET\n        }\n      })\n    } else {\n      loadUsers({\n        variables: {\n          offset: 0,\n          limit: LIMIT\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n    const isCommon = !search && !loading && data\n    const isSearch = search && !loadingBySearch && dataBySearch\n    const result = isCommon || isSearch\n    if (result) setUsers((prev) => [...prev, ...result.getUsers])\n  }, [search, loading, loadingBySearch, data, dataBySearch])\n\n  return (\n    <DefaultLayout title={TITLE}>\n      <Wrap>\n        <SearchBar onChangeFilter={() => setVisibleFilter(!visibleFilter)} onSubmit={onSearch} />\n\n        <FilterBar\n          isOpen={visibleFilter}\n          filters={[\n            <DatePicker\n              key={0}\n              value={date}\n              placeholder={'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />,\n            <Select\n              key={1}\n              options={categories}\n              placeholder={'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          ]}\n          options={filters}\n        />\n\n        <Container>\n          {(dataBySearch?.getUsers || users).map((author) => {\n            const owned = author.name === user.name\n\n            return (\n              <motion.div\n                key={author.email}\n                initial={'pageInitial'}\n                animate={'pageAnimate'}\n                variants={{\n                  pageInitial: {\n                    opacity: 0\n                  },\n                  pageAnimate: {\n                    opacity: 1\n                  }\n                }}>\n                <UserCard\n                  user={author}\n                  owned={owned}\n                  onChat={\n                    user.email &&\n                    recall(onChat, {\n                      sender: user,\n                      recipient: author,\n                      queries: chatQueries,\n                      mutations: chatMutations\n                    })\n                  }\n                  onMembers={recall(onUserMembers, { id: author?.email, auth: user?.email })}\n                  onLink={recall(onUserLink, {\n                    id: author.email,\n                    auth: user?.email,\n                    owned,\n                    queries: chatQueries,\n                    mutations: chatMutations\n                  })}\n                  onCompanyLink={recall(onUserLink, {\n                    id: author.company?.email,\n                    auth: user?.email,\n                    queries: chatQueries,\n                    mutations: chatMutations\n                  })}\n                />\n              </motion.div>\n            )\n          })}\n        </Container>\n\n        {search && dataBySearch && dataBySearch.getUsers?.length === 0 && (\n          <Alert style={{ width: '100%', textAlign: 'center' }}>\n            По вашему запросу ничего не найдено\n          </Alert>\n        )}\n\n        {((search && errorBySearch) || (!search && error)) && (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Не удалось загрузить авторов\n          </Alert>\n        )}\n\n        {((!errorBySearch && loading) ||\n          (search && loadingBySearch && !dataBySearch) ||\n          isFetching) && (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )}\n\n        {!search &&\n          !loading &&\n          !loadingBySearch &&\n          !errorBySearch &&\n          users.length === 0 &&\n          (!dataBySearch?.getUsers || dataBySearch?.getUsers?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Авторов нет</Alert>\n          )}\n      </Wrap>\n    </DefaultLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let users = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_AUTHORS,\n      variables: {\n        offset: 0,\n        limit: START_OFFSET\n      }\n    })\n\n    if (response && response.data) {\n      users = response.data.getUsers\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: { users }\n    }\n  }\n}\n\nexport default Creators\n"]},"metadata":{},"sourceType":"module"}