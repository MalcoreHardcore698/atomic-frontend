{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nexport const Wrap = styled.time.withConfig({\n  displayName: \"DateText__Wrap\",\n  componentId: \"oiz5xo-0\"\n})([\"font-size:var(--font-size-s);\"]);\nexport const DateText = ({\n  text,\n  locales,\n  options,\n  ...props\n}) => {\n  var _Date$toLocaleString;\n\n  return /*#__PURE__*/React.createElement(Wrap, props, (_Date$toLocaleString = new Date(parseInt(text) || text).toLocaleString(locales, options)) !== null && _Date$toLocaleString !== void 0 ? _Date$toLocaleString : 'Date Invalid');\n};\nDateText.defaultProps = {\n  text: new Date(),\n  locales: 'ru-RU',\n  options: {\n    hour: 'numeric',\n    minute: '2-digit'\n  }\n};\nexport default DateText;","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/DateText/index.js"],"names":["React","styled","Wrap","time","DateText","text","locales","options","props","Date","parseInt","toLocaleString","defaultProps","hour","minute"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGD,MAAM,CAACE,IAAV;AAAA;AAAA;AAAA,qCAAV;AAIP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,OAAjB;AAA0B,KAAGC;AAA7B,CAAD;AAAA;;AAAA,sBACtB,oBAAC,IAAD,EAAUA,KAAV,0BACG,IAAIC,IAAJ,CAASC,QAAQ,CAACL,IAAD,CAAR,IAAkBA,IAA3B,EAAiCM,cAAjC,CAAgDL,OAAhD,EAAyDC,OAAzD,CADH,uEACwE,cADxE,CADsB;AAAA,CAAjB;AAMPH,QAAQ,CAACQ,YAAT,GAAwB;AACtBP,EAAAA,IAAI,EAAE,IAAII,IAAJ,EADgB;AAEtBH,EAAAA,OAAO,EAAE,OAFa;AAGtBC,EAAAA,OAAO,EAAE;AACPM,IAAAA,IAAI,EAAE,SADC;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAHa,CAAxB;AASA,eAAeV,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const Wrap = styled.time`\n  font-size: var(--font-size-s);\n`\n\nexport const DateText = ({ text, locales, options, ...props }) => (\n  <Wrap {...props}>\n    {new Date(parseInt(text) || text).toLocaleString(locales, options) ?? 'Date Invalid'}\n  </Wrap>\n)\n\nDateText.defaultProps = {\n  text: new Date(),\n  locales: 'ru-RU',\n  options: {\n    hour: 'numeric',\n    minute: '2-digit'\n  }\n}\n\nexport default DateText\n"]},"metadata":{},"sourceType":"module"}