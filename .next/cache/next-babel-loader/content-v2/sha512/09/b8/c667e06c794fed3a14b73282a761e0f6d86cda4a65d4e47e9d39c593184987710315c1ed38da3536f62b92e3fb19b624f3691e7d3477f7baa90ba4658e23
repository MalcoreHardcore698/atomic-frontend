{"ast":null,"code":"var _jsxFileName = \"/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Message/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Avatar from '../Avatar';\nimport Title from '../Title';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Button from '../Button';\nimport Tooltip from '../Tooltip';\nimport DateText from '../DateText';\nimport Checkbox from '../Checkbox';\nimport TextArea from '../TextArea';\nexport const dispatchDateStyles = css`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n`;\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 64px 1fr;\n  grid-template-areas: 'avatar opinion';\n  margin: 0;\n  transition: opacity 150ms ease;\n\n  & > span {\n    grid-area: avatar;\n    align-self: end;\n    justify-self: start;\n    cursor: pointer;\n    transition: opacity 150ms ease;\n  }\n\n  ${({\n  onClick\n}) => onClick && css`\n      & > span {\n        cursor: pointer;\n\n        &:hover {\n          opacity: 0.65;\n        }\n      }\n    `}\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      grid-template-columns: 1fr 64px;\n      grid-template-areas: 'opinion avatar';\n\n      & > span {\n        justify-self: end;\n      }\n    `}\n\n  ${({\n  compact\n}) => compact && css`\n      display: flex;\n    `}\n    \n  ${({\n  checked\n}) => checked && css`\n      opacity: 0.45;\n    `}\n`;\nexport const MiniAvatar = styled(Avatar)`\n  width: var(--input-height-xs);\n  height: var(--input-height-xs);\n  min-width: var(--input-height-xs);\n  min-height: var(--input-height-xs);\n  border-radius: var(--surface-border-radius);\n`;\nexport const OpinionAvatar = styled(Avatar)`\n  grid-area: avatar;\n  align-self: end;\n  transition: opacity 150ms ease;\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n    `}\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const Opinion = styled.div`\n  position: relative;\n  padding: 10px var(--default-gap) 25px var(--default-gap);\n  border-radius: var(--surface-border-radius);\n  color: white;\n  width: fit-content;\n  grid-area: opinion;\n\n  ${({\n  side\n}) => side === 'observer' && css`\n      background: var(--ghost-color-background);\n      color: var(--ghost-color-text);\n    `}\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n      background: var(--default-color-accent);\n      color: white;\n    `}\n\n  ${({\n  compact\n}) => compact && css`\n      padding: 0 0 25px 0;\n      background: none;\n      color: black;\n      width: 100%;\n    `}\n`;\nexport const OpinionName = styled(Title)`\n  color: inherit;\n  transition: opacity 150ms ease;\n\n  ${({\n  compact\n}) => compact && css`\n      display: flex;\n      align-items: center;\n      grid-gap: 10px;\n    `}\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const OpinionTextArea = styled(TextArea)`\n  margin-top: 10px;\n  height: 128px;\n\n  ${({\n  height\n}) => height && css`\n      height: ${height}px;\n    `}\n`;\nexport const OpinionText = styled(Text)`\n  color: inherit;\n\n  ${({\n  compact\n}) => compact && css`\n      margin-top: 10px;\n    `}\n`;\nexport const OpinionTail = styled.span`\n  position: absolute;\n  bottom: -6px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 25px;\n  height: 20px;\n\n  ${({\n  side,\n  tails\n}) => side === 'observer' && css`\n      left: -12px;\n      background-image: url('${tails.default}');\n    `}\n\n  ${({\n  side,\n  tails\n}) => side === 'owner' && css`\n      right: -12px;\n      background-image: url('${tails.owner}');\n      transform: scaleX(-1);\n    `}\n`;\nexport const DispatchTime = styled(DateText)`\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n\n  ${({\n  compact\n}) => compact && css`\n      right: 0;\n      font-size: var(--font-size-s);\n      color: var(--default-color-text);\n    `}\n`;\nexport const DispatchDate = styled(DateText)`\n  ${dispatchDateStyles}\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`;\nexport const DispatchUpdatedDate = styled.div`\n  ${dispatchDateStyles}\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`;\nexport const Actions = styled(Row)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  grid-gap: 10px;\n`;\nexport const Message = ({\n  avatar,\n  side,\n  name,\n  text,\n  time,\n  tails,\n  style,\n  compact,\n  className,\n  isUpdated,\n  isChecked,\n  onEdit,\n  onChecked,\n  onDelete,\n  onLink\n}) => {\n  const {\n    0: updatedAt,\n    1: setUpdatedAt\n  } = useState(isUpdated ? time : null);\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(isChecked);\n  const {\n    0: isEdit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: message,\n    1: setMessage\n  } = useState(text);\n  const textRef = useRef(null);\n\n  const handleToggleEdit = () => setEdit(prev => !prev);\n\n  const handleChecked = e => {\n    const value = e.target.checked;\n    if (onChecked) onChecked(value);\n    setChecked(value);\n  };\n\n  const handleApplyChanges = () => {\n    var _textRef$current;\n\n    const value = textRef === null || textRef === void 0 ? void 0 : (_textRef$current = textRef.current) === null || _textRef$current === void 0 ? void 0 : _textRef$current.value;\n\n    if (value) {\n      if (onEdit) onEdit(value);\n      setUpdatedAt(new Date());\n      setMessage(value);\n    }\n\n    handleToggleEdit();\n  };\n\n  return __jsx(Wrap, {\n    side: side,\n    compact: compact,\n    checked: checked,\n    style: style,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, !compact && __jsx(OpinionAvatar, {\n    side: side,\n    src: avatar,\n    onClick: onLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 20\n    }\n  }), __jsx(Opinion, {\n    side: side,\n    compact: compact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, __jsx(OpinionName, {\n    tag: 'h5',\n    compact: compact,\n    onClick: onLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, compact && __jsx(MiniAvatar, {\n    side: side,\n    src: avatar,\n    onClick: onLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 23\n    }\n  }), name), !compact && __jsx(OpinionTail, {\n    side: side,\n    tails: tails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 22\n    }\n  }), isEdit ? __jsx(OpinionTextArea, {\n    ref: textRef,\n    defaultValue: message,\n    appearance: 'ghost',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }) : __jsx(OpinionText, {\n    compact: compact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, message), __jsx(DispatchTime, {\n    text: updatedAt || time,\n    compact: compact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }), compact && updatedAt && __jsx(DispatchUpdatedDate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0442\\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E\", ' ', new Date(updatedAt).toLocaleString('ru-RU', {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  })), compact && !updatedAt && __jsx(DispatchDate, {\n    text: time,\n    options: {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }), compact && onEdit && onDelete && __jsx(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  }, !isEdit ? __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, __jsx(Tooltip, {\n    text: 'Удалить сообщение',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Редактировать сообщение',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    onClick: handleToggleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Отметить сообщение',\n    self: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, __jsx(Checkbox, {\n    checked: checked,\n    onChange: handleChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 19\n    }\n  }))) : __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }, __jsx(Tooltip, {\n    text: 'Применить изменения',\n    self: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'green',\n    onClick: handleApplyChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'check',\n    size: 'xs',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }))), __jsx(Tooltip, {\n    text: 'Отменить изменения',\n    self: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    appearance: 'red',\n    onClick: handleToggleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 19\n    }\n  }, __jsx(Icon, {\n    icon: 'closeSquare',\n    size: 'xs',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  })))))));\n};\nMessage.defaultProps = {\n  side: 'observer',\n  text: 'Some Message',\n  time: '15:00'\n};\nexport default Message;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Message/index.js"],"names":["React","useState","useRef","styled","css","Row","Avatar","Title","Text","Icon","Button","Tooltip","DateText","Checkbox","TextArea","dispatchDateStyles","Wrap","div","onClick","side","compact","checked","MiniAvatar","OpinionAvatar","Opinion","OpinionName","OpinionTextArea","height","OpinionText","OpinionTail","span","tails","default","owner","DispatchTime","DispatchDate","DispatchUpdatedDate","Actions","Message","avatar","name","text","time","style","className","isUpdated","isChecked","onEdit","onChecked","onDelete","onLink","updatedAt","setUpdatedAt","setChecked","isEdit","setEdit","message","setMessage","textRef","handleToggleEdit","prev","handleChecked","e","value","target","handleApplyChanges","current","Date","toLocaleString","day","month","year","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Avatar from '../Avatar'\nimport Title from '../Title'\nimport Text from '../Text'\nimport Icon from '../Icon'\nimport Button from '../Button'\nimport Tooltip from '../Tooltip'\nimport DateText from '../DateText'\nimport Checkbox from '../Checkbox'\nimport TextArea from '../TextArea'\n\nexport const dispatchDateStyles = css`\n  position: absolute;\n  left: 0;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n`\n\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 64px 1fr;\n  grid-template-areas: 'avatar opinion';\n  margin: 0;\n  transition: opacity 150ms ease;\n\n  & > span {\n    grid-area: avatar;\n    align-self: end;\n    justify-self: start;\n    cursor: pointer;\n    transition: opacity 150ms ease;\n  }\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      & > span {\n        cursor: pointer;\n\n        &:hover {\n          opacity: 0.65;\n        }\n      }\n    `}\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      grid-template-columns: 1fr 64px;\n      grid-template-areas: 'opinion avatar';\n\n      & > span {\n        justify-self: end;\n      }\n    `}\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      display: flex;\n    `}\n    \n  ${({ checked }) =>\n    checked &&\n    css`\n      opacity: 0.45;\n    `}\n`\n\nexport const MiniAvatar = styled(Avatar)`\n  width: var(--input-height-xs);\n  height: var(--input-height-xs);\n  min-width: var(--input-height-xs);\n  min-height: var(--input-height-xs);\n  border-radius: var(--surface-border-radius);\n`\n\nexport const OpinionAvatar = styled(Avatar)`\n  grid-area: avatar;\n  align-self: end;\n  transition: opacity 150ms ease;\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      justify-self: end;\n    `}\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Opinion = styled.div`\n  position: relative;\n  padding: 10px var(--default-gap) 25px var(--default-gap);\n  border-radius: var(--surface-border-radius);\n  color: white;\n  width: fit-content;\n  grid-area: opinion;\n\n  ${({ side }) =>\n    side === 'observer' &&\n    css`\n      background: var(--ghost-color-background);\n      color: var(--ghost-color-text);\n    `}\n\n  ${({ side }) =>\n    side === 'owner' &&\n    css`\n      justify-self: end;\n      background: var(--default-color-accent);\n      color: white;\n    `}\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      padding: 0 0 25px 0;\n      background: none;\n      color: black;\n      width: 100%;\n    `}\n`\n\nexport const OpinionName = styled(Title)`\n  color: inherit;\n  transition: opacity 150ms ease;\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      display: flex;\n      align-items: center;\n      grid-gap: 10px;\n    `}\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const OpinionTextArea = styled(TextArea)`\n  margin-top: 10px;\n  height: 128px;\n\n  ${({ height }) =>\n    height &&\n    css`\n      height: ${height}px;\n    `}\n`\n\nexport const OpinionText = styled(Text)`\n  color: inherit;\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      margin-top: 10px;\n    `}\n`\n\nexport const OpinionTail = styled.span`\n  position: absolute;\n  bottom: -6px;\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 25px;\n  height: 20px;\n\n  ${({ side, tails }) =>\n    side === 'observer' &&\n    css`\n      left: -12px;\n      background-image: url('${tails.default}');\n    `}\n\n  ${({ side, tails }) =>\n    side === 'owner' &&\n    css`\n      right: -12px;\n      background-image: url('${tails.owner}');\n      transform: scaleX(-1);\n    `}\n`\n\nexport const DispatchTime = styled(DateText)`\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n\n  ${({ compact }) =>\n    compact &&\n    css`\n      right: 0;\n      font-size: var(--font-size-s);\n      color: var(--default-color-text);\n    `}\n`\n\nexport const DispatchDate = styled(DateText)`\n  ${dispatchDateStyles}\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`\n\nexport const DispatchUpdatedDate = styled.div`\n  ${dispatchDateStyles}\n  font-size: var(--font-size-s);\n  color: var(--default-color-text);\n`\n\nexport const Actions = styled(Row)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  grid-gap: 10px;\n`\n\nexport const Message = ({\n  avatar,\n  side,\n  name,\n  text,\n  time,\n  tails,\n  style,\n  compact,\n  className,\n  isUpdated,\n  isChecked,\n  onEdit,\n  onChecked,\n  onDelete,\n  onLink\n}) => {\n  const [updatedAt, setUpdatedAt] = useState(isUpdated ? time : null)\n  const [checked, setChecked] = useState(isChecked)\n  const [isEdit, setEdit] = useState(false)\n  const [message, setMessage] = useState(text)\n  const textRef = useRef(null)\n\n  const handleToggleEdit = () => setEdit((prev) => !prev)\n\n  const handleChecked = (e) => {\n    const value = e.target.checked\n    if (onChecked) onChecked(value)\n    setChecked(value)\n  }\n\n  const handleApplyChanges = () => {\n    const value = textRef?.current?.value\n\n    if (value) {\n      if (onEdit) onEdit(value)\n      setUpdatedAt(new Date())\n      setMessage(value)\n    }\n    handleToggleEdit()\n  }\n\n  return (\n    <Wrap side={side} compact={compact} checked={checked} style={style} className={className}>\n      {!compact && <OpinionAvatar side={side} src={avatar} onClick={onLink} />}\n      <Opinion side={side} compact={compact}>\n        <OpinionName tag={'h5'} compact={compact} onClick={onLink}>\n          {compact && <MiniAvatar side={side} src={avatar} onClick={onLink} />}\n          {name}\n        </OpinionName>\n        {!compact && <OpinionTail side={side} tails={tails} />}\n\n        {isEdit ? (\n          <OpinionTextArea ref={textRef} defaultValue={message} appearance={'ghost'} />\n        ) : (\n          <OpinionText compact={compact}>{message}</OpinionText>\n        )}\n\n        <DispatchTime text={updatedAt || time} compact={compact} />\n        {compact && updatedAt && (\n          <DispatchUpdatedDate>\n            Отредактировано{' '}\n            {new Date(updatedAt).toLocaleString('ru-RU', {\n              day: 'numeric',\n              month: 'long',\n              year: 'numeric'\n            })}\n          </DispatchUpdatedDate>\n        )}\n        {compact && !updatedAt && (\n          <DispatchDate\n            text={time}\n            options={{\n              day: 'numeric',\n              month: 'long',\n              year: 'numeric'\n            }}\n          />\n        )}\n\n        {compact && onEdit && onDelete && (\n          <Actions>\n            {!isEdit ? (\n              <React.Fragment>\n                <Tooltip text={'Удалить сообщение'}>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'red'}\n                    onClick={onDelete}>\n                    <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Редактировать сообщение'}>\n                  <Button kind={'icon'} size={'xs'} disabled={checked} onClick={handleToggleEdit}>\n                    <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Отметить сообщение'} self>\n                  <Checkbox checked={checked} onChange={handleChecked} />\n                </Tooltip>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Tooltip text={'Применить изменения'} self>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'green'}\n                    onClick={handleApplyChanges}>\n                    <Icon icon={'check'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n                <Tooltip text={'Отменить изменения'} self>\n                  <Button\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={checked}\n                    appearance={'red'}\n                    onClick={handleToggleEdit}>\n                    <Icon icon={'closeSquare'} size={'xs'} stroke={'white'} />\n                  </Button>\n                </Tooltip>\n              </React.Fragment>\n            )}\n          </Actions>\n        )}\n      </Opinion>\n    </Wrap>\n  )\n}\n\nMessage.defaultProps = {\n  side: 'observer',\n  text: 'Some Message',\n  time: '15:00'\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}