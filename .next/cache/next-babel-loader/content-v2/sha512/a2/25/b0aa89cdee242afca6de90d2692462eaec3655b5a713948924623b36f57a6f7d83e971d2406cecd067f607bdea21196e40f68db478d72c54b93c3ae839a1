{"ast":null,"code":"import React from 'react';\nimport TicketForm from '../../components/FormTicket';\nimport DeleteForm from '../../components/FormDelete';\nimport TicketCard from '../../components/TicketCard';\nimport TicketView from '../../components/TicketView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink } from './user';\nimport { onFileLink } from '.';\nexport function onTicketLink(dispatch, props) {\n  const {\n    id,\n    auth\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Обращение',\n    content: /*#__PURE__*/React.createElement(TicketView, {\n      auth: auth,\n      ticket: id,\n      appearance: 'clear',\n      onAttach: () => onFileLink(dispatch),\n      onMemberLink: member => onUserLink(dispatch, {\n        id: member.email,\n        auth\n      })\n    })\n  }));\n}\nexport function onTicketCreate(dispatch, props) {\n  const {\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Создание обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$author, _form$author$value, _form$counsellor, _form$counsellor$valu, _form$category;\n\n          const tickets = await action({\n            variables: {\n              input: {\n                title: form.title,\n                message: form.message,\n                author: (_form$author = form.author) === null || _form$author === void 0 ? void 0 : (_form$author$value = _form$author.value) === null || _form$author$value === void 0 ? void 0 : _form$author$value.email,\n                counsellor: (_form$counsellor = form.counsellor) === null || _form$counsellor === void 0 ? void 0 : (_form$counsellor$valu = _form$counsellor.value) === null || _form$counsellor$valu === void 0 ? void 0 : _form$counsellor$valu.email,\n                category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.createTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно создано'\n          }));\n        } catch (err) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketEdit(dispatch, props) {\n  const {\n    id,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Редактирование обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      ticket: id,\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$author2, _form$author2$value, _form$counsellor2, _form$counsellor2$val, _form$category2;\n\n          const tickets = await action({\n            variables: {\n              id,\n              input: {\n                title: form.title,\n                message: form.message,\n                messages: form.messages.map(message => ({\n                  id: message.id,\n                  text: message.text\n                })),\n                author: (_form$author2 = form.author) === null || _form$author2 === void 0 ? void 0 : (_form$author2$value = _form$author2.value) === null || _form$author2$value === void 0 ? void 0 : _form$author2$value.email,\n                counsellor: (_form$counsellor2 = form.counsellor) === null || _form$counsellor2 === void 0 ? void 0 : (_form$counsellor2$val = _form$counsellor2.value) === null || _form$counsellor2$val === void 0 ? void 0 : _form$counsellor2$val.email,\n                category: (_form$category2 = form.category) === null || _form$category2 === void 0 ? void 0 : _form$category2.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.updateTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно отредактировано'\n          }));\n        } catch (_unused) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketDelete(dispatch, props) {\n  const {\n    ticket,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление обращения',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              id: ticket.id\n            }\n          });\n          dispatch(setDocuments(tickets.data.deleteTicket));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно удалено'\n          }));\n        } catch (_unused2) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить обращение'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(TicketCard, {\n      ticket: ticket,\n      appearance: 'clear'\n    }))\n  }));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/ticket.js"],"names":["React","TicketForm","DeleteForm","TicketCard","TicketView","setDocuments","setDrawer","setItem","onUserLink","onFileLink","onTicketLink","dispatch","props","id","auth","icon","title","content","member","email","onTicketCreate","mutation","form","action","tickets","variables","input","message","author","value","counsellor","category","data","createTicket","type","err","onTicketEdit","messages","map","text","updateTicket","onTicketDelete","ticket","color","_","deleteTicket"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport TicketForm from '../../components/FormTicket'\nimport DeleteForm from '../../components/FormDelete'\nimport TicketCard from '../../components/TicketCard'\nimport TicketView from '../../components/TicketView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\nimport { onUserLink } from './user'\nimport { onFileLink } from '.'\n\nexport function onTicketLink(dispatch, props) {\n  const { id, auth } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Обращение',\n      content: (\n        <TicketView\n          auth={auth}\n          ticket={id}\n          appearance={'clear'}\n          onAttach={() => onFileLink(dispatch)}\n          onMemberLink={(member) => onUserLink(dispatch, { id: member.email, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketCreate(dispatch, props) {\n  const { mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Создание обращения',\n      content: (\n        <TicketForm\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  input: {\n                    title: form.title,\n                    message: form.message,\n                    author: form.author?.value?.email,\n                    counsellor: form.counsellor?.value?.email,\n                    category: form.category?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.createTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно создано'\n                })\n              )\n            } catch (err) {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketEdit(dispatch, props) {\n  const { id, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Редактирование обращения',\n      content: (\n        <TicketForm\n          ticket={id}\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  id,\n                  input: {\n                    title: form.title,\n                    message: form.message,\n                    messages: form.messages.map((message) => ({\n                      id: message.id,\n                      text: message.text\n                    })),\n                    author: form.author?.value?.email,\n                    counsellor: form.counsellor?.value?.email,\n                    category: form.category?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.updateTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно отредактировано'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketDelete(dispatch, props) {\n  const { ticket, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление обращения',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const tickets = await action({\n                variables: { id: ticket.id }\n              })\n              dispatch(setDocuments(tickets.data.deleteTicket))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно удалено'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить обращение'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <TicketCard ticket={ticket} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}