{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Search from '../../atomic-ui/components/Search';\nimport Title from '../../atomic-ui/components/Title';\nimport ProjectSuit from '../ProjectSuit';\nimport { Poster, Media } from '../ProjectCard';\nimport { useSearch } from '../../hooks/useSearch';\nimport { useProject } from '../../hooks/useProject';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Scaffold__Wrap\",\n  componentId: \"sc-11xb1f4-0\"\n})([\"position:relative;align-items:center;width:100%;padding:45px var(--main-offset-l);&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-11);width:100%;height:100%;background:rgba(0,0,0,0.15);}@media only screen and (max-width:996px){padding:45px var(--main-offset-m);}@media only screen and (max-width:768px){padding:45px var(--main-offset-s);}@media only screen and (max-width:480px){padding:45px var(--main-offset-xs);}\"]);\nexport const Background = styled.img.withConfig({\n  displayName: \"Scaffold__Background\",\n  componentId: \"sc-11xb1f4-1\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);width:100%;height:100%;object-fit:cover;\"]);\nexport const GlobalSearch = styled(Search).withConfig({\n  displayName: \"Scaffold__GlobalSearch\",\n  componentId: \"sc-11xb1f4-2\"\n})([\"min-width:815px;@media only screen and (max-width:996px){min-width:480px;}@media only screen and (max-width:768px){min-width:320px;}@media only screen and (max-width:480px){min-width:285px;}\"]);\nexport const Header = styled(Column).withConfig({\n  displayName: \"Scaffold__Header\",\n  componentId: \"sc-11xb1f4-3\"\n})([\"padding:0 var(--main-offset-l);margin-bottom:30px;@media only screen and (max-width:996px){padding:0 var(--main-offset-m);}@media only screen and (max-width:768px){padding:0 var(--main-offset-s);}@media only screen and (max-width:480px){padding:0 var(--main-offset-xs);}\"]);\nexport const Container = styled(Column).withConfig({\n  displayName: \"Scaffold__Container\",\n  componentId: \"sc-11xb1f4-4\"\n})([\"position:relative;z-index:var(--z-12);justify-content:center;align-items:center;flex-grow:1;width:100%;height:100%;\"]);\nexport const MainTitle = styled(Title).withConfig({\n  displayName: \"Scaffold__MainTitle\",\n  componentId: \"sc-11xb1f4-5\"\n})([\"text-align:center;color:white;@media only screen and (max-width:768px){font-size:26px;line-height:1.25;margin-bottom:15px;}@media only screen and (max-width:768px){font-size:22px;}\"]);\nexport const Projects = styled.div.withConfig({\n  displayName: \"Scaffold__Projects\",\n  componentId: \"sc-11xb1f4-6\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(256px,1fr));grid-gap:var(--default-gap);@media only screen and (max-width:1280px){display:flex;flex-direction:column;}\"]);\nexport const PrimaryProject = styled(ProjectSuit).withConfig({\n  displayName: \"Scaffold__PrimaryProject\",\n  componentId: \"sc-11xb1f4-7\"\n})([\"flex-grow:1;height:100%;flex-basis:50%;\", \"{max-height:345px;}\", \"{height:256px;}@media only screen and (max-width:768px){\", \"{img{height:256px;flex-basis:auto;}}}\"], Media, Poster, Media);\nexport const Residues = styled(Column).withConfig({\n  displayName: \"Scaffold__Residues\",\n  componentId: \"sc-11xb1f4-8\"\n})([\"flex-grow:1;@media only screen and (max-width:1280px){flex-direction:row;grid-gap:var(--default-gap);width:100%;}@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);width:100%;}\"]);\nexport const Residue = styled(ProjectSuit).withConfig({\n  displayName: \"Scaffold__Residue\",\n  componentId: \"sc-11xb1f4-9\"\n})([\"flex-grow:1;@media only screen and (max-width:1280px){width:100%;}\"]);\nexport const Scaffold = ({\n  scaffold,\n  style,\n  className\n}) => {\n  const methods = useProject();\n  const [onSearch] = useSearch();\n  const search = useSelector(state => state.root.search);\n  const {\n    title,\n    background,\n    primary,\n    residues\n  } = useMemo(() => ({ ...scaffold,\n    background: scaffold.background.path\n  }), [scaffold]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(Background, {\n    src: background,\n    alt: 'Background'\n  }), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, !search && title && /*#__PURE__*/React.createElement(MainTitle, null, title), /*#__PURE__*/React.createElement(GlobalSearch, {\n    defaultValue: search,\n    onSubmit: onSearch\n  })), !search && (primary || residues && residues.length > 0) && /*#__PURE__*/React.createElement(Projects, null, primary && /*#__PURE__*/React.createElement(PrimaryProject, _extends({}, methods, {\n    project: primary,\n    layout: 'column'\n  })), residues && residues.length > 0 && /*#__PURE__*/React.createElement(Residues, null, residues.map((project, index) => /*#__PURE__*/React.createElement(Residue, _extends({\n    key: index\n  }, methods, {\n    project: project\n  })))))));\n};\nexport default Scaffold;","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/components/Scaffold/index.js"],"names":["React","useMemo","useSelector","styled","Column","Search","Title","ProjectSuit","Poster","Media","useSearch","useProject","Wrap","Background","img","GlobalSearch","Header","Container","MainTitle","Projects","div","PrimaryProject","Residues","Residue","Scaffold","scaffold","style","className","methods","onSearch","search","state","root","title","background","primary","residues","path","length","map","project","index"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Search from '../../atomic-ui/components/Search'\nimport Title from '../../atomic-ui/components/Title'\n\nimport ProjectSuit from '../ProjectSuit'\nimport { Poster, Media } from '../ProjectCard'\nimport { useSearch } from '../../hooks/useSearch'\nimport { useProject } from '../../hooks/useProject'\n\nexport const Wrap = styled(Column)`\n  position: relative;\n  align-items: center;\n  width: 100%;\n  padding: 45px var(--main-offset-l);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: var(--z-11);\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.15);\n  }\n\n  @media only screen and (max-width: 996px) {\n    padding: 45px var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 45px var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 45px var(--main-offset-xs);\n  }\n`\n\nexport const Background = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: var(--z-10);\n\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\nexport const GlobalSearch = styled(Search)`\n  min-width: 815px;\n\n  @media only screen and (max-width: 996px) {\n    min-width: 480px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media only screen and (max-width: 480px) {\n    min-width: 285px;\n  }\n`\n\nexport const Header = styled(Column)`\n  padding: 0 var(--main-offset-l);\n  margin-bottom: 30px;\n\n  @media only screen and (max-width: 996px) {\n    padding: 0 var(--main-offset-m);\n  }\n\n  @media only screen and (max-width: 768px) {\n    padding: 0 var(--main-offset-s);\n  }\n\n  @media only screen and (max-width: 480px) {\n    padding: 0 var(--main-offset-xs);\n  }\n`\n\nexport const Container = styled(Column)`\n  position: relative;\n  z-index: var(--z-12);\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  width: 100%;\n  height: 100%;\n`\n\nexport const MainTitle = styled(Title)`\n  text-align: center;\n  color: white;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 26px;\n    line-height: 1.25;\n    margin-bottom: 15px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    font-size: 22px;\n  }\n`\n\nexport const Projects = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nexport const PrimaryProject = styled(ProjectSuit)`\n  flex-grow: 1;\n  height: 100%;\n  flex-basis: 50%;\n\n  ${Media} {\n    max-height: 345px;\n  }\n\n  ${Poster} {\n    height: 256px;\n  }\n\n  @media only screen and (max-width: 768px) {\n    ${Media} {\n      img {\n        height: 256px;\n        flex-basis: auto;\n      }\n    }\n  }\n`\n\nexport const Residues = styled(Column)`\n  flex-grow: 1;\n\n  @media only screen and (max-width: 1280px) {\n    flex-direction: row;\n    grid-gap: var(--default-gap);\n    width: 100%;\n  }\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n    width: 100%;\n  }\n`\n\nexport const Residue = styled(ProjectSuit)`\n  flex-grow: 1;\n\n  @media only screen and (max-width: 1280px) {\n    width: 100%;\n  }\n`\n\nexport const Scaffold = ({ scaffold, style, className }) => {\n  const methods = useProject()\n  const [onSearch] = useSearch()\n  const search = useSelector((state) => state.root.search)\n\n  const { title, background, primary, residues } = useMemo(\n    () => ({\n      ...scaffold,\n      background: scaffold.background.path\n    }),\n    [scaffold]\n  )\n\n  return (\n    <Wrap className={className} style={style}>\n      <Background src={background} alt={'Background'} />\n\n      <Container>\n        <Header>\n          {!search && title && <MainTitle>{title}</MainTitle>}\n          <GlobalSearch defaultValue={search} onSubmit={onSearch} />\n        </Header>\n\n        {!search && (primary || (residues && residues.length > 0)) && (\n          <Projects>\n            {primary && <PrimaryProject {...methods} project={primary} layout={'column'} />}\n            {residues && residues.length > 0 && (\n              <Residues>\n                {residues.map((project, index) => (\n                  <Residue key={index} {...methods} project={project} />\n                ))}\n              </Residues>\n            )}\n          </Projects>\n        )}\n      </Container>\n    </Wrap>\n  )\n}\n\nexport default Scaffold\n"]},"metadata":{},"sourceType":"module"}