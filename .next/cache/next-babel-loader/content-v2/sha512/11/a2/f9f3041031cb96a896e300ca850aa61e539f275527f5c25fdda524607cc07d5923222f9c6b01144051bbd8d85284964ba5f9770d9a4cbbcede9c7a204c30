{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Loader } from '../Styled';\nimport FadeLoad from '../FadeLoad';\nimport LazyLoad from '../LazyLoad';\nimport ProjectCard from '../ProjectCard';\nimport { useHelper } from '../../hooks/useHelper';\nimport { useMutate } from '../../hooks/useMutate';\nimport { updateUser } from '../../store/actions/user';\nimport { onUserAboutMore, onUserLink } from '../../store/helpers/user';\nimport { onProjectAdd, onProjectLink, onProjectScreenshot } from '../../store/helpers/project';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"ProjectList__Wrap\",\n  componentId: \"zcwfmw-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c = Wrap;\nexport const ProjectList = ({\n  variables,\n  initialList = null\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const [projects, setProjects] = useState(initialList);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    data,\n    loading,\n    error\n  } = !initialList ? useQuery(queries.GET_PROJECTS, {\n    variables\n  }) : {\n    data: null,\n    loading: false,\n    error: false\n  };\n  useEffect(() => {\n    if (!loading && data) {\n      setProjects(data.getProjects);\n    }\n  }, [data, loading]);\n  return /*#__PURE__*/React.createElement(Wrap, null, !loading && data ? projects.map(project => {\n    var _user$projects, _user$folders, _project$company;\n\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: project.id\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      owned: owned,\n      added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item.id === project.id)))),\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      }),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: project\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        recipient: project.author,\n        query: queries.GET_USER_CHATS,\n        mutation: queries.SEND_MESSAGE\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    })));\n  }) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\") : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"));\n};\n\n_s(ProjectList, \"qxXl1rPL8tOKvdRNxzfFA1U20UQ=\", false, function () {\n  return [useHelper, useMutate, useSelector, useDispatch, useQuery];\n});\n\n_c2 = ProjectList;\nexport default ProjectList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"ProjectList\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ProjectList/index.js"],"names":["React","useState","useEffect","styled","useQuery","useDispatch","useSelector","Alert","Spinner","Loader","FadeLoad","LazyLoad","ProjectCard","useHelper","useMutate","updateUser","onUserAboutMore","onUserLink","onProjectAdd","onProjectLink","onProjectScreenshot","queries","Wrap","div","ProjectList","variables","initialList","recall","mutate","projects","setProjects","user","state","dispatch","data","loading","error","GET_PROJECTS","getProjects","map","project","owned","find","candidate","id","folders","folder","item","likedProjects","auth","email","liked","onLike","LIKE_PROJECT","response","likeProject","onAdd","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","company","recipient","author","query","GET_USER_CHATS","mutation","SEND_MESSAGE","_","key","screenshots","preview","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport { Loader } from '../Styled'\nimport FadeLoad from '../FadeLoad'\nimport LazyLoad from '../LazyLoad'\nimport ProjectCard from '../ProjectCard'\nimport { useHelper } from '../../hooks/useHelper'\nimport { useMutate } from '../../hooks/useMutate'\nimport { updateUser } from '../../store/actions/user'\nimport { onUserAboutMore, onUserLink } from '../../store/helpers/user'\nimport { onProjectAdd, onProjectLink, onProjectScreenshot } from '../../store/helpers/project'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nexport const ProjectList = ({ variables, initialList = null }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const [projects, setProjects] = useState(initialList)\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  const { data, loading, error } = !initialList\n    ? useQuery(queries.GET_PROJECTS, { variables })\n    : { data: null, loading: false, error: false }\n\n  useEffect(() => {\n    if (!loading && data) {\n      setProjects(data.getProjects)\n    }\n  }, [data, loading])\n\n  return (\n    <Wrap>\n      {!loading && data ? (\n        projects.map((project) => {\n          const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n\n          return (\n            <FadeLoad key={project.id}>\n              <LazyLoad>\n                <ProjectCard\n                  project={project}\n                  owned={owned}\n                  added={\n                    !!user?.folders?.find(\n                      (folder) => !!folder?.projects.find((item) => item.id === project.id)\n                    )\n                  }\n                  liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n                  onLink={recall(onProjectLink, {\n                    id: project.id,\n                    auth: user?.email,\n                    liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n                    onLike:\n                      user.email &&\n                      mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                        dispatch(updateUser(response.data.likeProject))\n                      ),\n                    onAdd:\n                      user.email &&\n                      recall(onProjectAdd, {\n                        id: project.id,\n                        project,\n                        folders: user?.folders,\n                        mutations: {\n                          addProject: queries.ADD_USER_PROJECT,\n                          createFolder: queries.ADD_USER_FOLDER\n                        }\n                      }),\n                    owned\n                  })}\n                  onLike={\n                    user.email &&\n                    mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                      dispatch(updateUser(response.data.likeProject))\n                    )\n                  }\n                  onAdd={\n                    user.email &&\n                    recall(onProjectAdd, {\n                      id: project.id,\n                      project,\n                      folders: user?.folders,\n                      mutations: {\n                        addProject: queries.ADD_USER_PROJECT,\n                        createFolder: queries.ADD_USER_FOLDER\n                      }\n                    })\n                  }\n                  onAboutMore={recall(onUserAboutMore, { user: project })}\n                  onCompanyLink={recall(onUserLink, {\n                    id: project.company?.email,\n                    auth: user?.email,\n                    recipient: project.author,\n                    query: queries.GET_USER_CHATS,\n                    mutation: queries.SEND_MESSAGE\n                  })}\n                  onScreenshotClick={(_, key) =>\n                    recall(onProjectScreenshot, {\n                      screenshots: [project.preview, ...project.screenshots],\n                      key\n                    })()\n                  }\n                />\n              </LazyLoad>\n            </FadeLoad>\n          )\n        })\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Не удалось загрузить данные\n        </Alert>\n      ) : loading ? (\n        <Loader>\n          <Spinner />\n        </Loader>\n      ) : (\n        <Alert style={{ width: '100%', textAlign: 'center' }}>Проектов нет</Alert>\n      )}\n    </Wrap>\n  )\n}\n\nexport default ProjectList\n"]},"metadata":{},"sourceType":"module"}