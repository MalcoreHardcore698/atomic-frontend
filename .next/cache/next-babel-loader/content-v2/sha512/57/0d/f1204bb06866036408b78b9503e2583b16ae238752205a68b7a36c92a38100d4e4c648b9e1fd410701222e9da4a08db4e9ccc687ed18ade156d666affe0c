{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Button from '../../atomic-ui/components/Button';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport CheckBox from '../../atomic-ui/components/Checkbox';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Select from '../../atomic-ui/components/Select';\nimport Column from '../../atomic-ui/components/Column';\nimport Input from '../../atomic-ui/components/Input';\nimport Form from '../Form';\nimport queries from '../../graphql/queries';\nconst logotypeSize = {\n  width: 128,\n  height: 30\n};\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n};\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:320px;height:128px;min-height:128px;img{object-fit:contain;}\"]);\nexport const Background = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Background\",\n  componentId: \"sc-13smq0j-1\"\n})([\"width:100%;height:100%;max-width:\", \"px;max-height:\", \"px;\"], backgroundSize.width, backgroundSize.height);\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormSettings__Wrap\",\n  componentId: \"sc-13smq0j-2\"\n})([\"\"]);\nexport const TabLabelList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabLabelList\",\n  componentId: \"sc-13smq0j-3\"\n})([\"position:relative;display:flex;flex-flow:row nowrap;background:linear-gradient(to top,rgba(0,0,0,15%) 1px,transparent 1px) 0 100% no-repeat;\"]);\nexport const TabContentList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabContentList\",\n  componentId: \"sc-13smq0j-4\"\n})([\"display:flex;flex-flow:row nowrap;\"]);\nexport const TabLabel = styled(Text).withConfig({\n  displayName: \"FormSettings__TabLabel\",\n  componentId: \"sc-13smq0j-5\"\n})([\"position:relative;display:inline-flex;margin-right:40px;padding-bottom:12px;font-family:var(--default-font-family);font-weight:500;font-size:0.875rem;line-height:1;color:rgba(0,0,0,75%);border-bottom:2px solid transparent;cursor:pointer;transition:color 0.2s;&:last-child{margin-right:0;}&:hover{color:black;}\", \"\"], ({\n  active\n}) => active && css([\"color:var(--default-color-accent);border-color:var(--default-color-accent);&:hover{color:var(--default-color-accent);}\"]));\nexport const TabContent = styled(Column).withConfig({\n  displayName: \"FormSettings__TabContent\",\n  componentId: \"sc-13smq0j-6\"\n})([\"display:none;flex-grow:1;\", \"\"], ({\n  active\n}) => active && css([\"display:flex;\"]));\n\nconst FormContent = ({\n  watch,\n  register,\n  loading,\n  control,\n  getValues,\n  settings\n}) => {\n  var _settings$general, _settings$scaffold, _settings$scaffold2, _settings$scaffold3, _settings$scaffold4, _settings$scaffold5, _settings$scaffold6, _settings$scaffold7, _settings$scaffold8, _settings$scaffold9, _settings$scaffold10, _settings$scaffold11, _settings$scaffold12, _settings$meta, _settings$meta2;\n\n  const [active, setActive] = useState(0);\n  const tabsLabel = ['Основное', 'Scaffold', 'Мета'];\n  const isRandom = watch('[scaffold][isRandom]');\n  const {\n    data: dataProjects,\n    loading: loadingProjects\n  } = useQuery(queries.GET_META_SETTINGS_PROJECTS, {\n    variables: {\n      status: ['PUBLISHED']\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TabLabelList, null, tabsLabel.map((tab, index) => /*#__PURE__*/React.createElement(TabLabel, {\n    key: v4(),\n    active: active === index,\n    onClick: () => setActive(index)\n  }, tab))), /*#__PURE__*/React.createElement(TabContentList, null, /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 0\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"), /*#__PURE__*/React.createElement(Controller, {\n    name: '[general][logotype]',\n    control: control,\n    defaultValue: getValues('[general][logotype]') || (settings === null || settings === void 0 ? void 0 : (_settings$general = settings.general) === null || _settings$general === void 0 ? void 0 : _settings$general.logotype) || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Logotype, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: `Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`,\n      tooltip: `Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`\n    })\n  })), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 1\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[scaffold][title]',\n    ref: register(),\n    defaultValue: getValues('title') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold = settings.scaffold) === null || _settings$scaffold === void 0 ? void 0 : _settings$scaffold.title) || 'Создавай школу будущего с нами',\n    placeholder: 'Заголовок',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][isRandom]',\n    control: control,\n    defaultValue: getValues('[scaffold][isRandom]') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold2 = settings.scaffold) === null || _settings$scaffold2 === void 0 ? void 0 : _settings$scaffold2.isRandom),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(CheckBox, {\n      defaultChecked: value,\n      label: 'Выводить случайные проекты',\n      onChange: e => onChange(e.target.checked)\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][primary]',\n    control: control,\n    defaultValue: getValues('[scaffold][primary]') || (settings !== null && settings !== void 0 && (_settings$scaffold3 = settings.scaffold) !== null && _settings$scaffold3 !== void 0 && _settings$scaffold3.primary ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold4 = settings.scaffold) === null || _settings$scaffold4 === void 0 ? void 0 : _settings$scaffold4.primary.id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold5 = settings.scaffold) === null || _settings$scaffold5 === void 0 ? void 0 : _settings$scaffold5.primary.title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите первый проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: isRandom,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][residues][0]',\n    control: control,\n    defaultValue: getValues('[scaffold][residues][0]') || (settings !== null && settings !== void 0 && (_settings$scaffold6 = settings.scaffold) !== null && _settings$scaffold6 !== void 0 && _settings$scaffold6.residues[0] ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold7 = settings.scaffold) === null || _settings$scaffold7 === void 0 ? void 0 : _settings$scaffold7.residues[0].id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold8 = settings.scaffold) === null || _settings$scaffold8 === void 0 ? void 0 : _settings$scaffold8.residues[0].title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите второй проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: isRandom,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][residues][1]',\n    control: control,\n    defaultValue: getValues('[scaffold][residues][1]') || (settings !== null && settings !== void 0 && (_settings$scaffold9 = settings.scaffold) !== null && _settings$scaffold9 !== void 0 && _settings$scaffold9.residues[1] ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold10 = settings.scaffold) === null || _settings$scaffold10 === void 0 ? void 0 : _settings$scaffold10.residues[1].id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold11 = settings.scaffold) === null || _settings$scaffold11 === void 0 ? void 0 : _settings$scaffold11.residues[1].title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите третий проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: isRandom,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][background]',\n    control: control,\n    defaultValue: getValues('[scaffold][background]') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold12 = settings.scaffold) === null || _settings$scaffold12 === void 0 ? void 0 : _settings$scaffold12.background) || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Background, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: `Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`,\n      tooltip: `Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`\n    })\n  })), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 2\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[meta][title]',\n    ref: register(),\n    defaultValue: getValues('[meta][title]') || (settings === null || settings === void 0 ? void 0 : (_settings$meta = settings.meta) === null || _settings$meta === void 0 ? void 0 : _settings$meta.title) || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[meta][description]',\n    ref: register(),\n    defaultValue: getValues('[meta][description]') || (settings === null || settings === void 0 ? void 0 : (_settings$meta2 = settings.meta) === null || _settings$meta2 === void 0 ? void 0 : _settings$meta2.description),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")));\n};\n\nexport const Settings = ({\n  settings,\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => /*#__PURE__*/React.createElement(Form, {\n  className: className,\n  appearance: appearance,\n  mutation: mutation,\n  onSubmit: onSubmit\n}, methods => /*#__PURE__*/React.createElement(FormContent, _extends({}, methods, {\n  settings: settings\n})));\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}