{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useInfiniteScroll = ({\n  callbackOnTop,\n  callbackOnBottom,\n  offset = 50\n}) => {\n  _s();\n\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  useEffect(() => {\n    const scrollElement = document.body;\n    console.log(scrollElement);\n\n    const onScroll = () => {\n      if (!scrollElement) return;\n      const dir = scrollElement.scrollTop - lastScrollTop;\n\n      if (callbackOnBottom && dir > 0 && scrollElement.scrollTop + scrollElement.clientHeight >= scrollElement.scrollHeight - offset) {\n        callbackOnBottom(scrollElement.scrollTop, scrollElement.scrollHeight);\n      }\n\n      if (callbackOnTop && dir < 0 && scrollElement.scrollTop <= offset) {\n        callbackOnTop(scrollElement.scrollTop, scrollElement.scrollHeight);\n      }\n\n      setLastScrollTop(scrollElement.scrollTop);\n    };\n\n    if (scrollElement) {\n      scrollElement.addEventListener('scroll', onScroll);\n    }\n\n    return () => {\n      if (scrollElement) {\n        scrollElement.removeEventListener('scroll', onScroll);\n      }\n    };\n  }, [callbackOnTop, callbackOnBottom, offset]);\n};\n\n_s(useInfiniteScroll, \"Ysq8Rfde3lcEiwMxYcg8Kq62XXo=\");\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useInfiniteScroll.js"],"names":["useState","useEffect","useInfiniteScroll","callbackOnTop","callbackOnBottom","offset","lastScrollTop","setLastScrollTop","scrollElement","document","body","console","log","onScroll","dir","scrollTop","clientHeight","scrollHeight","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,gBAAjB;AAAmCC,EAAAA,MAAM,GAAG;AAA5C,CAAD,KAAsD;AAAA;;AACrF,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,CAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,aAAa,GAAGC,QAAQ,CAACC,IAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;;AAEA,UAAMK,QAAQ,GAAG,MAAM;AACrB,UAAI,CAACL,aAAL,EAAoB;AACpB,YAAMM,GAAG,GAAGN,aAAa,CAACO,SAAd,GAA0BT,aAAtC;;AAEA,UACEF,gBAAgB,IAChBU,GAAG,GAAG,CADN,IAEAN,aAAa,CAACO,SAAd,GAA0BP,aAAa,CAACQ,YAAxC,IAAwDR,aAAa,CAACS,YAAd,GAA6BZ,MAHvF,EAIE;AACAD,QAAAA,gBAAgB,CAACI,aAAa,CAACO,SAAf,EAA0BP,aAAa,CAACS,YAAxC,CAAhB;AACD;;AACD,UAAId,aAAa,IAAIW,GAAG,GAAG,CAAvB,IAA4BN,aAAa,CAACO,SAAd,IAA2BV,MAA3D,EAAmE;AACjEF,QAAAA,aAAa,CAACK,aAAa,CAACO,SAAf,EAA0BP,aAAa,CAACS,YAAxC,CAAb;AACD;;AAEDV,MAAAA,gBAAgB,CAACC,aAAa,CAACO,SAAf,CAAhB;AACD,KAhBD;;AAkBA,QAAIP,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACU,gBAAd,CAA+B,QAA/B,EAAyCL,QAAzC;AACD;;AAED,WAAO,MAAM;AACX,UAAIL,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACW,mBAAd,CAAkC,QAAlC,EAA4CN,QAA5C;AACD;AACF,KAJD;AAKD,GA/BQ,EA+BN,CAACV,aAAD,EAAgBC,gBAAhB,EAAkCC,MAAlC,CA/BM,CAAT;AAgCD,CAnCM;;GAAMH,iB;;AAqCb,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useInfiniteScroll = ({ callbackOnTop, callbackOnBottom, offset = 50 }) => {\n  const [lastScrollTop, setLastScrollTop] = useState(0)\n\n  useEffect(() => {\n    const scrollElement = document.body\n    console.log(scrollElement)\n\n    const onScroll = () => {\n      if (!scrollElement) return\n      const dir = scrollElement.scrollTop - lastScrollTop\n\n      if (\n        callbackOnBottom &&\n        dir > 0 &&\n        scrollElement.scrollTop + scrollElement.clientHeight >= scrollElement.scrollHeight - offset\n      ) {\n        callbackOnBottom(scrollElement.scrollTop, scrollElement.scrollHeight)\n      }\n      if (callbackOnTop && dir < 0 && scrollElement.scrollTop <= offset) {\n        callbackOnTop(scrollElement.scrollTop, scrollElement.scrollHeight)\n      }\n\n      setLastScrollTop(scrollElement.scrollTop)\n    }\n\n    if (scrollElement) {\n      scrollElement.addEventListener('scroll', onScroll)\n    }\n\n    return () => {\n      if (scrollElement) {\n        scrollElement.removeEventListener('scroll', onScroll)\n      }\n    }\n  }, [callbackOnTop, callbackOnBottom, offset])\n}\n\nexport default useInfiniteScroll\n"]},"metadata":{},"sourceType":"module"}