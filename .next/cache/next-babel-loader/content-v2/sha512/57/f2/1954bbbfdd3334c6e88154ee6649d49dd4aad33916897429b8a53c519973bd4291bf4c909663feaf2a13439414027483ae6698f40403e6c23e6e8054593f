{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const useInfiniteScroll = fetchCallback => {\n  const [isFetching, setIsFetching] = useState(false);\n\n  const onScroll = () => {\n    const offsetHeight = document.documentElement.scrollHeight;\n    const innerHeight = window.innerHeight;\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n    if (isFetching || innerHeight + scrollTop !== offsetHeight) return;\n    setIsFetching(true);\n  };\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchCallback();\n  }, [isFetching]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n  return [isFetching, setIsFetching];\n};\nexport default useInfiniteScroll;","map":null,"metadata":{},"sourceType":"module"}