{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Title from '../../atomic-ui/components/Title';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"RoleView__Wrap\",\n  componentId: \"sc-3s69fr-0\"\n})([\"grid-gap:var(--default-gap);height:max-content;\", \" \", \" \", \"\"], function (_ref) {\n  var appearance = _ref.appearance;\n  return appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]);\n}, function (_ref2) {\n  var appearance = _ref2.appearance;\n  return appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n}, function (_ref3) {\n  var appearance = _ref3.appearance;\n  return appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n});\n_c = Wrap;\nexport var Permissions = styled(Row).withConfig({\n  displayName: \"RoleView__Permissions\",\n  componentId: \"sc-3s69fr-1\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\n_c2 = Permissions;\nexport var View = function View(_ref4) {\n  _s();\n\n  var role = _ref4.role,\n      appearance = _ref4.appearance,\n      className = _ref4.className,\n      style = _ref4.style;\n\n  var _useQuery = useQuery(queries.GET_ROLE, {\n    variables: {\n      id: role\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data.getRole ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 0\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    date: data.getRole.createdAt\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, getLabelRole(data.getRole.name))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getRole && data.getRole.permissions.length > 0 ? /*#__PURE__*/React.createElement(Permissions, null, data.getRole.permissions.map(function (permission) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      key: v4(),\n      color: 'ghost',\n      appearance: 'outlined'\n    }, getLabelPermission(permission));\n  })) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\")) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0441\\u0442\\u0430\\u0442\\u044C\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\n\n_s(View, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c3 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Permissions\");\n$RefreshReg$(_c3, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/RoleView/index.js"],"names":["React","styled","css","useQuery","v4","Row","Column","Meta","Divider","Chip","Alert","Title","Spinner","getLabelRole","getLabelPermission","Loader","queries","Wrap","appearance","Permissions","View","role","className","style","GET_ROLE","variables","id","data","loading","error","getRole","gridGap","createdAt","name","permissions","length","map","permission","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport { v4 } from 'uuid'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Chip from '../../atomic-ui/components/Chip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Title from '../../atomic-ui/components/Title'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions'\n\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: var(--default-gap);\n  height: max-content;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Permissions = styled(Row)`\n  flex-wrap: wrap;\n  grid-gap: 10px;\n`\n\nexport const View = ({ role, appearance, className, style }) => {\n  const { data, loading, error } = useQuery(queries.GET_ROLE, {\n    variables: {\n      id: role\n    }\n  })\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && data.getRole ? (\n        <React.Fragment>\n          <Column style={{ gridGap: 0 }}>\n            <Meta date={data.getRole.createdAt} />\n\n            <Title tag={'h4'}>{getLabelRole(data.getRole.name)}</Title>\n          </Column>\n\n          <Divider clear />\n\n          {data.getRole && data.getRole.permissions.length > 0 ? (\n            <Permissions>\n              {data.getRole.permissions.map((permission) => (\n                <Chip key={v4()} color={'ghost'} appearance={'outlined'}>\n                  {getLabelPermission(permission)}\n                </Chip>\n              ))}\n            </Permissions>\n          ) : (\n            <Alert>Привелегии отсутствует</Alert>\n          )}\n        </React.Fragment>\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о статье\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}