{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Button from '../../atomic-ui/components/Button';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport CheckBox from '../../atomic-ui/components/Checkbox';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Select from '../../atomic-ui/components/Select';\nimport Column from '../../atomic-ui/components/Column';\nimport Input from '../../atomic-ui/components/Input';\nimport Form from '../Form';\nimport queries from '../../graphql/queries';\nconst logotypeSize = {\n  width: 128,\n  height: 30\n};\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n};\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:320px;height:128px;min-height:128px;img{object-fit:contain;}\"]);\n_c = Logotype;\nexport const Background = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Background\",\n  componentId: \"sc-13smq0j-1\"\n})([\"width:100%;height:100%;max-width:\", \"px;max-height:\", \"px;\"], backgroundSize.width, backgroundSize.height);\n_c2 = Background;\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormSettings__Wrap\",\n  componentId: \"sc-13smq0j-2\"\n})([\"\"]);\nexport const TabLabelList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabLabelList\",\n  componentId: \"sc-13smq0j-3\"\n})([\"position:relative;display:flex;flex-flow:row nowrap;background:linear-gradient(to top,rgba(0,0,0,15%) 1px,transparent 1px) 0 100% no-repeat;\"]);\n_c3 = TabLabelList;\nexport const TabContentList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabContentList\",\n  componentId: \"sc-13smq0j-4\"\n})([\"display:flex;flex-flow:row nowrap;\"]);\n_c4 = TabContentList;\nexport const TabLabel = styled(Text).withConfig({\n  displayName: \"FormSettings__TabLabel\",\n  componentId: \"sc-13smq0j-5\"\n})([\"position:relative;display:inline-flex;margin-right:40px;padding-bottom:12px;font-family:var(--default-font-family);font-weight:500;font-size:0.875rem;line-height:1;color:rgba(0,0,0,75%);border-bottom:2px solid transparent;cursor:pointer;transition:color 0.2s;&:last-child{margin-right:0;}&:hover{color:black;}\", \"\"], ({\n  active\n}) => active && css([\"color:var(--default-color-accent);border-color:var(--default-color-accent);&:hover{color:var(--default-color-accent);}\"]));\n_c5 = TabLabel;\nexport const TabContent = styled(Column).withConfig({\n  displayName: \"FormSettings__TabContent\",\n  componentId: \"sc-13smq0j-6\"\n})([\"display:none;flex-grow:1;\", \"\"], ({\n  active\n}) => active && css([\"display:flex;\"]));\n_c6 = TabContent;\n\nconst FormContent = ({\n  watch,\n  register,\n  loading,\n  control,\n  getValues,\n  settings\n}) => {\n  _s();\n\n  var _settings$general, _settings$scaffold, _settings$scaffold2, _settings$scaffold3, _settings$scaffold4, _settings$scaffold5, _settings$scaffold6, _settings$scaffold7, _settings$scaffold8, _settings$scaffold9, _settings$scaffold10, _settings$scaffold11, _settings$scaffold12, _settings$meta, _settings$meta2;\n\n  const [active, setActive] = useState(0);\n  const tabsLabel = ['Основное', 'Scaffold', 'Мета'];\n  const random = watch('random');\n  console.log(random);\n  const {\n    data: dataProjects,\n    loading: loadingProjects\n  } = useQuery(queries.GET_META_SETTINGS_PROJECTS, {\n    variables: {\n      status: ['PUBLISHED']\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TabLabelList, null, tabsLabel.map((tab, index) => /*#__PURE__*/React.createElement(TabLabel, {\n    key: v4(),\n    active: active === index,\n    onClick: () => setActive(index)\n  }, tab))), /*#__PURE__*/React.createElement(TabContentList, null, /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 0\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"), /*#__PURE__*/React.createElement(Controller, {\n    name: '[general][logotype]',\n    control: control,\n    defaultValue: getValues('[general][logotype]') || (settings === null || settings === void 0 ? void 0 : (_settings$general = settings.general) === null || _settings$general === void 0 ? void 0 : _settings$general.logotype) || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Logotype, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: `Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`,\n      tooltip: `Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`\n    })\n  })), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 1\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[scaffold][title]',\n    ref: register(),\n    defaultValue: getValues('title') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold = settings.scaffold) === null || _settings$scaffold === void 0 ? void 0 : _settings$scaffold.title) || 'Создавай школу будущего с нами',\n    placeholder: 'Заголовок',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Controller, {\n    name: 'random',\n    control: control,\n    defaultValue: getValues('random') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold2 = settings.scaffold) === null || _settings$scaffold2 === void 0 ? void 0 : _settings$scaffold2.random),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(CheckBox, {\n      defaultChecked: value,\n      label: 'Выводить случайные проекты',\n      onChange: e => onChange(e.target.checked)\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][primary]',\n    control: control,\n    defaultValue: getValues('[scaffold][primary]') || (settings !== null && settings !== void 0 && (_settings$scaffold3 = settings.scaffold) !== null && _settings$scaffold3 !== void 0 && _settings$scaffold3.primary ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold4 = settings.scaffold) === null || _settings$scaffold4 === void 0 ? void 0 : _settings$scaffold4.primary.id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold5 = settings.scaffold) === null || _settings$scaffold5 === void 0 ? void 0 : _settings$scaffold5.primary.title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите первый проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: random,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][residues][0]',\n    control: control,\n    defaultValue: getValues('[scaffold][residues][0]') || (settings !== null && settings !== void 0 && (_settings$scaffold6 = settings.scaffold) !== null && _settings$scaffold6 !== void 0 && _settings$scaffold6.residues[0] ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold7 = settings.scaffold) === null || _settings$scaffold7 === void 0 ? void 0 : _settings$scaffold7.residues[0].id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold8 = settings.scaffold) === null || _settings$scaffold8 === void 0 ? void 0 : _settings$scaffold8.residues[0].title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите второй проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: random,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][residues][1]',\n    control: control,\n    defaultValue: getValues('[scaffold][residues][1]') || (settings !== null && settings !== void 0 && (_settings$scaffold9 = settings.scaffold) !== null && _settings$scaffold9 !== void 0 && _settings$scaffold9.residues[1] ? {\n      value: settings === null || settings === void 0 ? void 0 : (_settings$scaffold10 = settings.scaffold) === null || _settings$scaffold10 === void 0 ? void 0 : _settings$scaffold10.residues[1].id,\n      label: settings === null || settings === void 0 ? void 0 : (_settings$scaffold11 = settings.scaffold) === null || _settings$scaffold11 === void 0 ? void 0 : _settings$scaffold11.residues[1].title\n    } : null),\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Select, {\n      appearance: 'ghost',\n      defaultValue: value,\n      placeholder: 'Выберите третий проект',\n      options: ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => ({\n        value: project.id,\n        label: project.title\n      })),\n      onChange: onChange,\n      isLoading: loadingProjects,\n      isDisabled: random,\n      isSearchable: true,\n      cacheOptions: true\n    })\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Controller, {\n    name: '[scaffold][background]',\n    control: control,\n    defaultValue: getValues('[scaffold][background]') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold12 = settings.scaffold) === null || _settings$scaffold12 === void 0 ? void 0 : _settings$scaffold12.background) || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Background, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: `Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`,\n      tooltip: `Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`\n    })\n  })), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 2\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[meta][title]',\n    ref: register(),\n    defaultValue: getValues('[meta][title]') || (settings === null || settings === void 0 ? void 0 : (_settings$meta = settings.meta) === null || _settings$meta === void 0 ? void 0 : _settings$meta.title) || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: '[meta][description]',\n    ref: register(),\n    defaultValue: getValues('[meta][description]') || (settings === null || settings === void 0 ? void 0 : (_settings$meta2 = settings.meta) === null || _settings$meta2 === void 0 ? void 0 : _settings$meta2.description),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")));\n};\n\n_s(FormContent, \"00rV5fd76c+ku590KgCYoC9lNXg=\", false, function () {\n  return [useQuery];\n});\n\n_c7 = FormContent;\nexport const Settings = ({\n  settings,\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => /*#__PURE__*/React.createElement(Form, {\n  className: className,\n  appearance: appearance,\n  mutation: mutation,\n  onSubmit: onSubmit\n}, methods => /*#__PURE__*/React.createElement(FormContent, _extends({}, methods, {\n  settings: settings\n})));\n_c8 = Settings;\nexport default Settings;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Logotype\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"TabLabelList\");\n$RefreshReg$(_c4, \"TabContentList\");\n$RefreshReg$(_c5, \"TabLabel\");\n$RefreshReg$(_c6, \"TabContent\");\n$RefreshReg$(_c7, \"FormContent\");\n$RefreshReg$(_c8, \"Settings\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/FormSettings/index.js"],"names":["React","useState","styled","css","Controller","useQuery","v4","Row","Title","Text","Button","Dropzone","CheckBox","Divider","Select","Column","Input","Form","queries","logotypeSize","width","height","backgroundSize","Logotype","Background","Wrap","TabLabelList","TabContentList","TabLabel","active","TabContent","FormContent","watch","register","loading","control","getValues","settings","setActive","tabsLabel","random","console","log","data","dataProjects","loadingProjects","GET_META_SETTINGS_PROJECTS","variables","status","map","tab","index","general","logotype","value","onChange","scaffold","title","e","target","checked","primary","id","label","getProjects","project","residues","background","meta","description","flexGrow","Settings","mutation","appearance","className","onSubmit","methods"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,GADY;AAEnBC,EAAAA,MAAM,EAAE;AAFW,CAArB;AAKA,MAAMC,cAAc,GAAG;AACrBF,EAAAA,KAAK,EAAE,IADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,OAAO,MAAME,QAAQ,GAAGrB,MAAM,CAACS,QAAD,CAAT;AAAA;AAAA;AAAA,0EAAd;KAAMY,Q;AAUb,OAAO,MAAMC,UAAU,GAAGtB,MAAM,CAACS,QAAD,CAAT;AAAA;AAAA;AAAA,mEAGRW,cAAc,CAACF,KAHP,EAIPE,cAAc,CAACD,MAJR,CAAhB;MAAMG,U;AAOb,OAAO,MAAMC,IAAI,GAAGvB,MAAM,CAACa,MAAD,CAAT;AAAA;AAAA;AAAA,QAAV;AAEP,OAAO,MAAMW,YAAY,GAAGxB,MAAM,CAACK,GAAD,CAAT;AAAA;AAAA;AAAA,oJAAlB;MAAMmB,Y;AAOb,OAAO,MAAMC,cAAc,GAAGzB,MAAM,CAACK,GAAD,CAAT;AAAA;AAAA;AAAA,0CAApB;MAAMoB,c;AAKb,OAAO,MAAMC,QAAQ,GAAG1B,MAAM,CAACO,IAAD,CAAT;AAAA;AAAA;AAAA,kUAsBjB,CAAC;AAAEoB,EAAAA;AAAF,CAAD,KACAA,MAAM,IACN1B,GADM,4HAvBW,CAAd;MAAMyB,Q;AAkCb,OAAO,MAAME,UAAU,GAAG5B,MAAM,CAACa,MAAD,CAAT;AAAA;AAAA;AAAA,sCAInB,CAAC;AAAEc,EAAAA;AAAF,CAAD,KACAA,MAAM,IACN1B,GADM,mBALa,CAAhB;MAAM2B,U;;AAWb,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,OAAnB;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA,SAArC;AAAgDC,EAAAA;AAAhD,CAAD,KAAgE;AAAA;;AAAA;;AAClF,QAAM,CAACR,MAAD,EAASS,SAAT,IAAsBrC,QAAQ,CAAC,CAAD,CAApC;AACA,QAAMsC,SAAS,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,MAAzB,CAAlB;AAEA,QAAMC,MAAM,GAAGR,KAAK,CAAC,QAAD,CAApB;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,QAAM;AACJG,IAAAA,IAAI,EAAEC,YADF;AAEJV,IAAAA,OAAO,EAAEW;AAFL,MAGFxC,QAAQ,CAACa,OAAO,CAAC4B,0BAAT,EAAqC;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAC,WAAD;AAAV;AAAb,GAArC,CAHZ;AAKA,sBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,YAAD,QACGT,SAAS,CAACU,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE7C,EAAE,EAAjB;AAAqB,IAAA,MAAM,EAAEuB,MAAM,KAAKsB,KAAxC;AAA+C,IAAA,OAAO,EAAE,MAAMb,SAAS,CAACa,KAAD;AAAvE,KACGD,GADH,CADD,CADH,CADF,eASE,oBAAC,cAAD,qBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAErB,MAAM,KAAK;AAA/B,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,kDADF,eAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,qBADR;AAEE,IAAA,OAAO,EAAEM,OAFX;AAGE,IAAA,YAAY,EAAEC,SAAS,CAAC,qBAAD,CAAT,KAAoCC,QAApC,aAAoCA,QAApC,4CAAoCA,QAAQ,CAAEe,OAA9C,sDAAoC,kBAAmBC,QAAvD,KAAmE,IAHnF;AAIE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,SADV;AAEE,MAAA,YAAY,EAAED,KAFhB;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,WAAW,EAAG,wCAAuCpC,YAAY,CAACC,KAAM,IAAGD,YAAY,CAACE,MAAO,IAJjG;AAKE,MAAA,OAAO,EAAG,eAAcF,YAAY,CAACC,KAAM,IAAGD,YAAY,CAACE,MAAO;AALpE;AALJ,IAFF,CADF,eAkBE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEQ,MAAM,KAAK;AAA/B,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,8DADF,eAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,IAAI,EAAE,mBAFR;AAGE,IAAA,GAAG,EAAEI,QAAQ,EAHf;AAIE,IAAA,YAAY,EACVG,SAAS,CAAC,OAAD,CAAT,KAAsBC,QAAtB,aAAsBA,QAAtB,6CAAsBA,QAAQ,CAAEmB,QAAhC,uDAAsB,mBAAoBC,KAA1C,KAAmD,gCALvD;AAOE,IAAA,WAAW,EAAE,WAPf;AAQE,IAAA,UAAU,EAAE,OARd;AASE,IAAA,QAAQ,EAAEvB;AATZ,IAFF,eAcE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,kDAdF,eAeE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,QADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,YAAY,EAAEC,SAAS,CAAC,QAAD,CAAT,KAAuBC,QAAvB,aAAuBA,QAAvB,8CAAuBA,QAAQ,CAAEmB,QAAjC,wDAAuB,oBAAoBhB,MAA3C,CAHhB;AAIE,IAAA,MAAM,EAAE,CAAC;AAAEc,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,QAAD;AACE,MAAA,cAAc,EAAED,KADlB;AAEE,MAAA,KAAK,EAAE,4BAFT;AAGE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,OAAV;AAH3B;AALJ,IAfF,eA2BE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,qBADR;AAEE,IAAA,OAAO,EAAEzB,OAFX;AAGE,IAAA,YAAY,EACVC,SAAS,CAAC,qBAAD,CAAT,KACCC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,2BAAAA,QAAQ,CAAEmB,QAAV,oEAAoBK,OAApB,GACG;AACEP,MAAAA,KAAK,EAAEjB,QAAF,aAAEA,QAAF,8CAAEA,QAAQ,CAAEmB,QAAZ,wDAAE,oBAAoBK,OAApB,CAA4BC,EADrC;AAEEC,MAAAA,KAAK,EAAE1B,QAAF,aAAEA,QAAF,8CAAEA,QAAQ,CAAEmB,QAAZ,wDAAE,oBAAoBK,OAApB,CAA4BJ;AAFrC,KADH,GAKG,IANJ,CAJJ;AAYE,IAAA,MAAM,EAAE,CAAC;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,MAAD;AACE,MAAA,UAAU,EAAE,OADd;AAEE,MAAA,YAAY,EAAED,KAFhB;AAGE,MAAA,WAAW,EAAE,wBAHf;AAIE,MAAA,OAAO,EAAE,CAAC,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEoB,WAAd,KAA6B,EAA9B,EAAkCf,GAAlC,CAAuCgB,OAAD,KAAc;AAC3DX,QAAAA,KAAK,EAAEW,OAAO,CAACH,EAD4C;AAE3DC,QAAAA,KAAK,EAAEE,OAAO,CAACR;AAF4C,OAAd,CAAtC,CAJX;AAQE,MAAA,QAAQ,EAAEF,QARZ;AASE,MAAA,SAAS,EAAEV,eATb;AAUE,MAAA,UAAU,EAAEL,MAVd;AAWE,MAAA,YAAY,MAXd;AAYE,MAAA,YAAY;AAZd;AAbJ,IA3BF,eAwDE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,yBADR;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,YAAY,EACVC,SAAS,CAAC,yBAAD,CAAT,KACCC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,2BAAAA,QAAQ,CAAEmB,QAAV,oEAAoBU,QAApB,CAA6B,CAA7B,IACG;AACEZ,MAAAA,KAAK,EAAEjB,QAAF,aAAEA,QAAF,8CAAEA,QAAQ,CAAEmB,QAAZ,wDAAE,oBAAoBU,QAApB,CAA6B,CAA7B,EAAgCJ,EADzC;AAEEC,MAAAA,KAAK,EAAE1B,QAAF,aAAEA,QAAF,8CAAEA,QAAQ,CAAEmB,QAAZ,wDAAE,oBAAoBU,QAApB,CAA6B,CAA7B,EAAgCT;AAFzC,KADH,GAKG,IANJ,CAJJ;AAYE,IAAA,MAAM,EAAE,CAAC;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,MAAD;AACE,MAAA,UAAU,EAAE,OADd;AAEE,MAAA,YAAY,EAAED,KAFhB;AAGE,MAAA,WAAW,EAAE,wBAHf;AAIE,MAAA,OAAO,EAAE,CAAC,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEoB,WAAd,KAA6B,EAA9B,EAAkCf,GAAlC,CAAuCgB,OAAD,KAAc;AAC3DX,QAAAA,KAAK,EAAEW,OAAO,CAACH,EAD4C;AAE3DC,QAAAA,KAAK,EAAEE,OAAO,CAACR;AAF4C,OAAd,CAAtC,CAJX;AAQE,MAAA,QAAQ,EAAEF,QARZ;AASE,MAAA,SAAS,EAAEV,eATb;AAUE,MAAA,UAAU,EAAEL,MAVd;AAWE,MAAA,YAAY,MAXd;AAYE,MAAA,YAAY;AAZd;AAbJ,IAxDF,eAqFE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,yBADR;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,YAAY,EACVC,SAAS,CAAC,yBAAD,CAAT,KACCC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,2BAAAA,QAAQ,CAAEmB,QAAV,oEAAoBU,QAApB,CAA6B,CAA7B,IACG;AACEZ,MAAAA,KAAK,EAAEjB,QAAF,aAAEA,QAAF,+CAAEA,QAAQ,CAAEmB,QAAZ,yDAAE,qBAAoBU,QAApB,CAA6B,CAA7B,EAAgCJ,EADzC;AAEEC,MAAAA,KAAK,EAAE1B,QAAF,aAAEA,QAAF,+CAAEA,QAAQ,CAAEmB,QAAZ,yDAAE,qBAAoBU,QAApB,CAA6B,CAA7B,EAAgCT;AAFzC,KADH,GAKG,IANJ,CAJJ;AAYE,IAAA,MAAM,EAAE,CAAC;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,MAAD;AACE,MAAA,UAAU,EAAE,OADd;AAEE,MAAA,YAAY,EAAED,KAFhB;AAGE,MAAA,WAAW,EAAE,wBAHf;AAIE,MAAA,OAAO,EAAE,CAAC,CAAAV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEoB,WAAd,KAA6B,EAA9B,EAAkCf,GAAlC,CAAuCgB,OAAD,KAAc;AAC3DX,QAAAA,KAAK,EAAEW,OAAO,CAACH,EAD4C;AAE3DC,QAAAA,KAAK,EAAEE,OAAO,CAACR;AAF4C,OAAd,CAAtC,CAJX;AAQE,MAAA,QAAQ,EAAEF,QARZ;AASE,MAAA,SAAS,EAAEV,eATb;AAUE,MAAA,UAAU,EAAEL,MAVd;AAWE,MAAA,YAAY,MAXd;AAYE,MAAA,YAAY;AAZd;AAbJ,IArFF,eAmHE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,0BAnHF,eAoHE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAE,wBADR;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,YAAY,EACVC,SAAS,CAAC,wBAAD,CAAT,KAAuCC,QAAvC,aAAuCA,QAAvC,+CAAuCA,QAAQ,CAAEmB,QAAjD,yDAAuC,qBAAoBW,UAA3D,KAAyE,IAJ7E;AAME,IAAA,MAAM,EAAE,CAAC;AAAEb,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACN,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,SADV;AAEE,MAAA,YAAY,EAAED,KAFhB;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,WAAW,EAAG,wCAAuCjC,cAAc,CAACF,KAAM,IAAGE,cAAc,CAACD,MAAO,IAJrG;AAKE,MAAA,OAAO,EAAG,eAAcC,cAAc,CAACF,KAAM,IAAGE,cAAc,CAACD,MAAO;AALxE;AAPJ,IApHF,CAlBF,eAuJE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEQ,MAAM,KAAK;AAA/B,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,yDADF,eAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,IAAI,EAAE,eAFR;AAGE,IAAA,GAAG,EAAEI,QAAQ,EAHf;AAIE,IAAA,YAAY,EAAEG,SAAS,CAAC,eAAD,CAAT,KAA8BC,QAA9B,aAA8BA,QAA9B,yCAA8BA,QAAQ,CAAE+B,IAAxC,mDAA8B,eAAgBX,KAA9C,KAAuD,QAJvE;AAKE,IAAA,WAAW,EAAE,eALf;AAME,IAAA,UAAU,EAAE,OANd;AAOE,IAAA,QAAQ,EAAEvB;AAPZ,IAHF,eAaE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,IAAI,EAAE,qBAFR;AAGE,IAAA,GAAG,EAAED,QAAQ,EAHf;AAIE,IAAA,YAAY,EAAEG,SAAS,CAAC,qBAAD,CAAT,KAAoCC,QAApC,aAAoCA,QAApC,0CAAoCA,QAAQ,CAAE+B,IAA9C,oDAAoC,gBAAgBC,WAApD,CAJhB;AAKE,IAAA,WAAW,EAAE,eALf;AAME,IAAA,UAAU,EAAE,OANd;AAOE,IAAA,QAAQ,EAAEnC;AAPZ,IAbF,CAvJF,CATF,eAyLE,oBAAC,OAAD;AAAS,IAAA,KAAK;AAAd,IAzLF,eA2LE,oBAAC,GAAD,qBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KAAf;AAAgC,IAAA,IAAI,EAAE,QAAtC;AAAgD,IAAA,QAAQ,EAAEpC;AAA1D,8DADF,CA3LF,CADF;AAmMD,CAhND;;GAAMH,W;UAWA1B,Q;;;MAXA0B,W;AAkNN,OAAO,MAAMwC,QAAQ,GAAG,CAAC;AAAElC,EAAAA,QAAF;AAAYmC,EAAAA,QAAZ;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA;AAA7C,CAAD,kBACtB,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAED,SAAjB;AAA4B,EAAA,UAAU,EAAED,UAAxC;AAAoD,EAAA,QAAQ,EAAED,QAA9D;AAAwE,EAAA,QAAQ,EAAEG;AAAlF,GACIC,OAAD,iBAAa,oBAAC,WAAD,eAAiBA,OAAjB;AAA0B,EAAA,QAAQ,EAAEvC;AAApC,GADhB,CADK;MAAMkC,Q;AAMb,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Controller } from 'react-hook-form'\nimport { useQuery } from '@apollo/react-hooks'\nimport { v4 } from 'uuid'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Button from '../../atomic-ui/components/Button'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport CheckBox from '../../atomic-ui/components/Checkbox'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Select from '../../atomic-ui/components/Select'\nimport Column from '../../atomic-ui/components/Column'\nimport Input from '../../atomic-ui/components/Input'\n\nimport Form from '../Form'\nimport queries from '../../graphql/queries'\n\nconst logotypeSize = {\n  width: 128,\n  height: 30\n}\n\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n}\n\nexport const Logotype = styled(Dropzone)`\n  width: 320px;\n  height: 128px;\n  min-height: 128px;\n\n  img {\n    object-fit: contain;\n  }\n`\n\nexport const Background = styled(Dropzone)`\n  width: 100%;\n  height: 100%;\n  max-width: ${backgroundSize.width}px;\n  max-height: ${backgroundSize.height}px;\n`\n\nexport const Wrap = styled(Column)``\n\nexport const TabLabelList = styled(Row)`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n`\n\nexport const TabContentList = styled(Row)`\n  display: flex;\n  flex-flow: row nowrap;\n`\n\nexport const TabLabel = styled(Text)`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`\n\nexport const TabContent = styled(Column)`\n  display: none;\n  flex-grow: 1;\n\n  ${({ active }) =>\n    active &&\n    css`\n      display: flex;\n    `}\n`\n\nconst FormContent = ({ watch, register, loading, control, getValues, settings }) => {\n  const [active, setActive] = useState(0)\n  const tabsLabel = ['Основное', 'Scaffold', 'Мета']\n\n  const random = watch('random')\n\n  console.log(random)\n\n  const {\n    data: dataProjects,\n    loading: loadingProjects\n  } = useQuery(queries.GET_META_SETTINGS_PROJECTS, { variables: { status: ['PUBLISHED'] } })\n\n  return (\n    <React.Fragment>\n      <TabLabelList>\n        {tabsLabel.map((tab, index) => (\n          <TabLabel key={v4()} active={active === index} onClick={() => setActive(index)}>\n            {tab}\n          </TabLabel>\n        ))}\n      </TabLabelList>\n\n      <TabContentList>\n        <TabContent active={active === 0}>\n          <Title tag={'h4'}>Логотип</Title>\n          <Controller\n            name={'[general][logotype]'}\n            control={control}\n            defaultValue={getValues('[general][logotype]') || settings?.general?.logotype || null}\n            render={({ value, onChange }) => (\n              <Logotype\n                accept={'image/*'}\n                defaultValue={value}\n                onChange={onChange}\n                placeholder={`Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`}\n                tooltip={`Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`}\n              />\n            )}\n          />\n        </TabContent>\n        <TabContent active={active === 1}>\n          <Title tag={'h4'}>Заголовок</Title>\n          <Input\n            type={'text'}\n            name={'[scaffold][title]'}\n            ref={register()}\n            defaultValue={\n              getValues('title') || settings?.scaffold?.title || 'Создавай школу будущего с нами'\n            }\n            placeholder={'Заголовок'}\n            appearance={'ghost'}\n            disabled={loading}\n          />\n\n          <Title tag={'h4'}>Проекты</Title>\n          <Controller\n            name={'random'}\n            control={control}\n            defaultValue={getValues('random') || settings?.scaffold?.random}\n            render={({ value, onChange }) => (\n              <CheckBox\n                defaultChecked={value}\n                label={'Выводить случайные проекты'}\n                onChange={(e) => onChange(e.target.checked)}\n              />\n            )}\n          />\n          <Controller\n            name={'[scaffold][primary]'}\n            control={control}\n            defaultValue={\n              getValues('[scaffold][primary]') ||\n              (settings?.scaffold?.primary\n                ? {\n                    value: settings?.scaffold?.primary.id,\n                    label: settings?.scaffold?.primary.title\n                  }\n                : null)\n            }\n            render={({ value, onChange }) => (\n              <Select\n                appearance={'ghost'}\n                defaultValue={value}\n                placeholder={'Выберите первый проект'}\n                options={(dataProjects?.getProjects || []).map((project) => ({\n                  value: project.id,\n                  label: project.title\n                }))}\n                onChange={onChange}\n                isLoading={loadingProjects}\n                isDisabled={random}\n                isSearchable\n                cacheOptions\n              />\n            )}\n          />\n          <Controller\n            name={'[scaffold][residues][0]'}\n            control={control}\n            defaultValue={\n              getValues('[scaffold][residues][0]') ||\n              (settings?.scaffold?.residues[0]\n                ? {\n                    value: settings?.scaffold?.residues[0].id,\n                    label: settings?.scaffold?.residues[0].title\n                  }\n                : null)\n            }\n            render={({ value, onChange }) => (\n              <Select\n                appearance={'ghost'}\n                defaultValue={value}\n                placeholder={'Выберите второй проект'}\n                options={(dataProjects?.getProjects || []).map((project) => ({\n                  value: project.id,\n                  label: project.title\n                }))}\n                onChange={onChange}\n                isLoading={loadingProjects}\n                isDisabled={random}\n                isSearchable\n                cacheOptions\n              />\n            )}\n          />\n          <Controller\n            name={'[scaffold][residues][1]'}\n            control={control}\n            defaultValue={\n              getValues('[scaffold][residues][1]') ||\n              (settings?.scaffold?.residues[1]\n                ? {\n                    value: settings?.scaffold?.residues[1].id,\n                    label: settings?.scaffold?.residues[1].title\n                  }\n                : null)\n            }\n            render={({ value, onChange }) => (\n              <Select\n                appearance={'ghost'}\n                defaultValue={value}\n                placeholder={'Выберите третий проект'}\n                options={(dataProjects?.getProjects || []).map((project) => ({\n                  value: project.id,\n                  label: project.title\n                }))}\n                onChange={onChange}\n                isLoading={loadingProjects}\n                isDisabled={random}\n                isSearchable\n                cacheOptions\n              />\n            )}\n          />\n\n          <Title tag={'h4'}>Фон</Title>\n          <Controller\n            name={'[scaffold][background]'}\n            control={control}\n            defaultValue={\n              getValues('[scaffold][background]') || settings?.scaffold?.background || null\n            }\n            render={({ value, onChange }) => (\n              <Background\n                accept={'image/*'}\n                defaultValue={value}\n                onChange={onChange}\n                placeholder={`Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`}\n                tooltip={`Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`}\n              />\n            )}\n          />\n        </TabContent>\n        <TabContent active={active === 2}>\n          <Title tag={'h4'}>Мета теги</Title>\n\n          <Input\n            type={'text'}\n            name={'[meta][title]'}\n            ref={register()}\n            defaultValue={getValues('[meta][title]') || settings?.meta?.title || 'Atomic'}\n            placeholder={'Мета-название'}\n            appearance={'ghost'}\n            disabled={loading}\n          />\n\n          <Input\n            type={'text'}\n            name={'[meta][description]'}\n            ref={register()}\n            defaultValue={getValues('[meta][description]') || settings?.meta?.description}\n            placeholder={'Мета-описание'}\n            appearance={'ghost'}\n            disabled={loading}\n          />\n        </TabContent>\n      </TabContentList>\n\n      <Divider clear />\n\n      <Row>\n        <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n          Сохранить\n        </Button>\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport const Settings = ({ settings, mutation, appearance, className, onSubmit }) => (\n  <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n    {(methods) => <FormContent {...methods} settings={settings} />}\n  </Form>\n)\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}