{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nexport var Wrap = styled.div.withConfig({\n  displayName: \"FadeLoad__Wrap\",\n  componentId: \"sc-1rdnrub-0\"\n})([\"opacity:0;transition:opacity 100ms ease;\", \"\"], function (_ref) {\n  var isVisible = _ref.isVisible;\n  return isVisible && css([\"opacity:1;\"]);\n});\nexport var FadeLoad = function FadeLoad(_ref2) {\n  var children = _ref2.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var domRef = useRef();\n  useEffect(function () {\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        return setVisible(entry.isIntersecting);\n      });\n    });\n    observer.observe(domRef.current);\n    return function () {\n      return observer.unobserve(domRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    isVisible: isVisible,\n    ref: domRef\n  }, children);\n};\nexport default FadeLoad;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FadeLoad/index.js"],"names":["React","useState","useEffect","useRef","styled","css","Wrap","div","isVisible","FadeLoad","children","setVisible","domRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","unobserve"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAO,IAAMC,IAAI,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qDAIb;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SACAA,SAAS,IACTH,GADS,gBADT;AAAA,CAJa,CAAV;AAWP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;;AAAA,kBACRT,QAAQ,CAAC,IAAD,CADA;AAAA;AAAA,MACjCO,SADiC;AAAA,MACtBG,UADsB;;AAExC,MAAMC,MAAM,GAAGT,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMW,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAACC,OAAD,EAAa;AACrDA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAACC,KAAD;AAAA,eAAWN,UAAU,CAACM,KAAK,CAACC,cAAP,CAArB;AAAA,OAAhB;AACD,KAFgB,CAAjB;AAIAL,IAAAA,QAAQ,CAACM,OAAT,CAAiBP,MAAM,CAACQ,OAAxB;AACA,WAAO;AAAA,aAAMP,QAAQ,CAACQ,SAAT,CAAmBT,MAAM,CAACQ,OAA1B,CAAN;AAAA,KAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,SAAjB;AAA4B,IAAA,GAAG,EAAEI;AAAjC,KACGF,QADH,CADF;AAKD,CAlBM;AAoBP,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const Wrap = styled.div`\n  opacity: 0;\n  transition: opacity 100ms ease;\n\n  ${({ isVisible }) =>\n    isVisible &&\n    css`\n      opacity: 1;\n    `}\n`\n\nexport const FadeLoad = ({ children }) => {\n  const [isVisible, setVisible] = useState(true)\n  const domRef = useRef()\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => setVisible(entry.isIntersecting))\n    })\n\n    observer.observe(domRef.current)\n    return () => observer.unobserve(domRef.current)\n  }, [])\n\n  return (\n    <Wrap isVisible={isVisible} ref={domRef}>\n      {children}\n    </Wrap>\n  )\n}\n\nexport default FadeLoad\n"]},"metadata":{},"sourceType":"module"}