{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Title from '../../atomic-ui/components/Title';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nimport Processed from '../Processed';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"RoleView__Wrap\",\n  componentId: \"sc-3s69fr-0\"\n})([\"grid-gap:var(--default-gap);height:max-content;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Permissions = styled(Row).withConfig({\n  displayName: \"RoleView__Permissions\",\n  componentId: \"sc-3s69fr-1\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\nexport const View = ({\n  role,\n  appearance,\n  className,\n  style\n}) => {\n  var _data$getRole, _data$getRole2, _data$getRole3, _data$getRole3$permis, _data$getRole4, _data$getRole4$permis;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_ROLE, {\n    variables: {\n      id: role\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getRole,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о роли',\n    emptyMessage: 'Кажется такой роли не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 0\n    }\n  }, /*#__PURE__*/React.createElement(Meta, {\n    date: data === null || data === void 0 ? void 0 : (_data$getRole = data.getRole) === null || _data$getRole === void 0 ? void 0 : _data$getRole.createdAt\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, getLabelRole(data === null || data === void 0 ? void 0 : (_data$getRole2 = data.getRole) === null || _data$getRole2 === void 0 ? void 0 : _data$getRole2.name))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data !== null && data !== void 0 && data.getRole && (data === null || data === void 0 ? void 0 : (_data$getRole3 = data.getRole) === null || _data$getRole3 === void 0 ? void 0 : (_data$getRole3$permis = _data$getRole3.permissions) === null || _data$getRole3$permis === void 0 ? void 0 : _data$getRole3$permis.length) > 0 ? /*#__PURE__*/React.createElement(Permissions, null, data === null || data === void 0 ? void 0 : (_data$getRole4 = data.getRole) === null || _data$getRole4 === void 0 ? void 0 : (_data$getRole4$permis = _data$getRole4.permissions) === null || _data$getRole4$permis === void 0 ? void 0 : _data$getRole4$permis.map(permission => /*#__PURE__*/React.createElement(Chip, {\n    key: v4(),\n    color: 'ghost',\n    appearance: 'outlined'\n  }, getLabelPermission(permission)))) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":null,"metadata":{},"sourceType":"module"}