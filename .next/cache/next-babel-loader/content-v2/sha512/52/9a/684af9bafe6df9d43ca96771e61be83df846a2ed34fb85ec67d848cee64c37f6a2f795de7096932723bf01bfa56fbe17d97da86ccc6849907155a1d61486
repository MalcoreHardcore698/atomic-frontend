{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Alert from '../atomic-ui/components/Alert';\nimport Title from '../atomic-ui/components/Title';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { initializeApollo } from '../apollo';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll';\nimport DefaultLayout from '../layouts/default';\nimport ProjectCard from '../components/ProjectCard';\nimport ArticleCard from '../components/ArticleCard';\nimport UserCard from '../components/UserCard';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserLink, onUserMembers } from '../store/helpers/user';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;@media only screen and (max-width:1196px){grid-template-columns:1fr;}\"]);\nconst Projects = styled.aside.withConfig({\n  displayName: \"pages__Projects\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-2\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\nconst Loader = styled.div.withConfig({\n  displayName: \"pages__Loader\",\n  componentId: \"sc-1kp8388-3\"\n})([\"display:flex;justify-content:center;width:100%;height:80px;\"]);\n\nconst Home = ({\n  store\n}) => {\n  const recall = useHelper();\n  const mutate = useMutate();\n  const [loadProjects, {\n    data,\n    loading\n  }] = useLazyQuery(queries.GET_PROJECTS);\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    articles,\n    users\n  } = store;\n  const [projects, setProjects] = useState([]);\n  const [offset, setOffset] = useState(7);\n  const [isFetching, setIsFetching] = useInfiniteScroll(() => {\n    loadProjects({\n      variables: {\n        offset,\n        limit: 5\n      }\n    });\n    setOffset(prev => prev + 5);\n    setIsFetching(false);\n  });\n  console.log(store === null || store === void 0 ? void 0 : store.projects);\n  useEffect(() => {\n    var _store$projects;\n\n    if ((store === null || store === void 0 ? void 0 : (_store$projects = store.projects) === null || _store$projects === void 0 ? void 0 : _store$projects.length) > 0) {\n      setProjects(prev => [...prev, store.projects]);\n    }\n  }, [store]);\n  useEffect(() => {\n    if (data && !loading) {\n      setIsFetching(false);\n    }\n  }, [data, loading]);\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE,\n    scaffold: {\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: projects.length > 0 && projects[0],\n      residue: projects.length > 4 && projects.slice(1, 3),\n      onLink: (project, owned) => recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        project,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      })(),\n      onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject)))()),\n      onAdd: user.email && (project => recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      })()),\n      onCompanyLink: project => {\n        var _project$company;\n\n        return recall(onUserLink, {\n          id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n          auth: user\n        })();\n      },\n      onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    }\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Projects, null, projects.length > 0 ? projects.map(project => {\n    var _user$projects, _user$folders, _project$company2;\n\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      project: project,\n      owned: owned,\n      added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item.id === project.id)))),\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      }),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_project$company2 = project.company) === null || _project$company2 === void 0 ? void 0 : _project$company2.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        recipient: project.author,\n        query: queries.GET_USER_CHATS,\n        mutation: queries.SEND_MESSAGE\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"), isFetching && projects.length > 0 && /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), users.length > 0 ? users.slice(0, 3).map(author => {\n    var _author$company;\n\n    const owned = author.name === (user === null || user === void 0 ? void 0 : user.name);\n    return /*#__PURE__*/React.createElement(UserCard, {\n      key: author.email,\n      user: author,\n      owned: owned,\n      onChat: user.email && recall(onChat, {\n        email: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onLink: recall(onUserLink, {\n        id: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onMembers: recall(onUserMembers, {\n        id: author === null || author === void 0 ? void 0 : author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_author$company = author.company) === null || _author$company === void 0 ? void 0 : _author$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      })\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), articles.length > 0 ? articles.slice(0, 2).map(article => {\n    var _user$articles;\n\n    return /*#__PURE__*/React.createElement(ArticleCard, {\n      key: article.id,\n      layout: 'column',\n      article: article,\n      owned: user === null || user === void 0 ? void 0 : (_user$articles = user.articles) === null || _user$articles === void 0 ? void 0 : _user$articles.find(candidate => candidate.id === article.id),\n      onLink: recall(onArticleLink, {\n        id: article.id,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      })\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\"))));\n};\n\nexport const getServerSideProps = async () => {\n  const client = initializeApollo();\n  let projects = [];\n  let articles = [];\n  let users = [];\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_INDEX,\n      variables: {\n        offset: 0,\n        limit: 7,\n        status: 'PUBLISHED'\n      }\n    });\n\n    if (response && response.data) {\n      projects = response.data.getProjects;\n      articles = response.data.getArticles;\n      users = response.data.getUsers;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  return {\n    props: {\n      store: {\n        projects,\n        articles,\n        users\n      }\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","useLazyQuery","Alert","Title","Spinner","initializeApollo","useHelper","useMutate","useInfiniteScroll","DefaultLayout","ProjectCard","ArticleCard","UserCard","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserLink","onUserMembers","onArticleLink","onChat","queries","TITLE","Container","div","Projects","aside","Aside","Loader","Home","store","recall","mutate","loadProjects","data","loading","GET_PROJECTS","user","state","dispatch","articles","users","projects","setProjects","offset","setOffset","isFetching","setIsFetching","variables","limit","prev","console","log","length","title","background","primary","residue","slice","onLink","project","owned","id","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","map","candidate","folder","recipient","author","query","GET_USER_CHATS","mutation","SEND_MESSAGE","_","width","textAlign","name","userChats","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","article","getServerSideProps","client","GET_META_INDEX","status","getProjects","getArticles","getUsers","err","props"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,mBAAtC,QAAiE,0BAAjE;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,uBAA1C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,KAAK,GAAG,QAAd;AAEA,MAAMC,SAAS,GAAGzB,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,+KAAf;AAWA,MAAMC,QAAQ,GAAG3B,MAAM,CAAC4B,KAAV;AAAA;AAAA;AAAA,wOAAd;AAWA,MAAMC,KAAK,GAAG7B,MAAM,CAAC4B,KAAV;AAAA;AAAA;AAAA,yIAAX;AAWA,MAAME,MAAM,GAAG9B,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,mEAAZ;;AAOA,MAAMK,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1B,QAAMC,MAAM,GAAGzB,SAAS,EAAxB;AACA,QAAM0B,MAAM,GAAGzB,SAAS,EAAxB;AACA,QAAM,CAAC0B,YAAD,EAAe;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAf,IAAoClC,YAAY,CAACoB,OAAO,CAACe,YAAT,CAAtD;AACA,QAAMC,IAAI,GAAGtC,WAAW,CAAEuC,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,QAAQ,GAAGvC,WAAW,EAA5B;AACA,QAAM;AAAEwC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAsBX,KAA5B;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACkD,UAAD,EAAaC,aAAb,IAA8BvC,iBAAiB,CAAC,MAAM;AAC1DyB,IAAAA,YAAY,CAAC;AACXe,MAAAA,SAAS,EAAE;AACTJ,QAAAA,MADS;AAETK,QAAAA,KAAK,EAAE;AAFE;AADA,KAAD,CAAZ;AAMAJ,IAAAA,SAAS,CAAEK,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAT;AACAH,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAToD,CAArD;AAUAI,EAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEY,QAAnB;AAEA7C,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAI,CAAAiC,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEY,QAAP,oEAAiBW,MAAjB,IAA0B,CAA9B,EAAiC;AAC/BV,MAAAA,WAAW,CAAEO,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUpB,KAAK,CAACY,QAAhB,CAAX,CAAX;AACD;AACF,GAJQ,EAIN,CAACZ,KAAD,CAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,IAAI,IAAI,CAACC,OAAb,EAAsB;AACpBY,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACb,IAAD,EAAOC,OAAP,CAJM,CAAT;AAMA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEb,KADT;AAEE,IAAA,QAAQ,EAAE;AACRgC,MAAAA,KAAK,EAAE,gCADC;AAERC,MAAAA,UAAU,EAAE,6BAFJ;AAGRC,MAAAA,OAAO,EAAEd,QAAQ,CAACW,MAAT,GAAkB,CAAlB,IAAuBX,QAAQ,CAAC,CAAD,CAHhC;AAIRe,MAAAA,OAAO,EAAEf,QAAQ,CAACW,MAAT,GAAkB,CAAlB,IAAuBX,QAAQ,CAACgB,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAJxB;AAKRC,MAAAA,MAAM,EAAE,CAACC,OAAD,EAAUC,KAAV,KACN9B,MAAM,CAACjB,aAAD,EAAgB;AACpBgD,QAAAA,EAAE,EAAEF,OAAO,CAACE,EADQ;AAEpBC,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFQ;AAGpBJ,QAAAA,OAHoB;AAIpBK,QAAAA,KAAK,EAAE,CAAC,CAAC,CAAC,CAAA5B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE6B,aAAN,KAAuB,EAAxB,EAA4BC,IAA5B,CAAkCC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYF,OAAO,CAACE,EAA/D,CAJW;AAKpBO,QAAAA,MAAM,EACJhC,IAAI,CAAC2B,KAAL,IACAhC,MAAM,CAACX,OAAO,CAACiD,YAAT,EAAuB;AAAER,UAAAA,EAAE,EAAEF,OAAO,CAACE;AAAd,SAAvB,EAA4CS,QAAD,IAC/ChC,QAAQ,CAAC1B,UAAU,CAAC0D,QAAQ,CAACrC,IAAT,CAAcsC,WAAf,CAAX,CADJ,CAPY;AAUpBC,QAAAA,KAAK,EACHpC,IAAI,CAAC2B,KAAL,IACAjC,MAAM,CAAChB,YAAD,EAAe;AACnB+C,UAAAA,EAAE,EAAEF,OAAO,CAACE,EADO;AAEnBF,UAAAA,OAFmB;AAGnBc,UAAAA,OAAO,EAAErC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqC,OAHI;AAInBC,UAAAA,SAAS,EAAE;AACTC,YAAAA,UAAU,EAAEvD,OAAO,CAACwD,gBADX;AAETC,YAAAA,YAAY,EAAEzD,OAAO,CAAC0D;AAFb;AAJQ,SAAf,CAZY;AAqBpBlB,QAAAA;AArBoB,OAAhB,CAAN,EANM;AA6BRQ,MAAAA,MAAM,EACJhC,IAAI,CAAC2B,KAAL,KACEJ,OAAD,IACC5B,MAAM,CAACX,OAAO,CAACiD,YAAT,EAAuB;AAAER,QAAAA,EAAE,EAAEF,OAAO,CAACE;AAAd,OAAvB,EAA4CS,QAAD,IAC/ChC,QAAQ,CAAC1B,UAAU,CAAC0D,QAAQ,CAACrC,IAAT,CAAcsC,WAAf,CAAX,CADJ,CAAN,EAFF,CA9BM;AAmCRC,MAAAA,KAAK,EACHpC,IAAI,CAAC2B,KAAL,KACEJ,OAAD,IACC7B,MAAM,CAAChB,YAAD,EAAe;AACnB+C,QAAAA,EAAE,EAAEF,OAAO,CAACE,EADO;AAEnBF,QAAAA,OAFmB;AAGnBc,QAAAA,OAAO,EAAErC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqC,OAHI;AAInBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAEvD,OAAO,CAACwD,gBADX;AAETC,UAAAA,YAAY,EAAEzD,OAAO,CAAC0D;AAFb;AAJQ,OAAf,CAAN,EAFF,CApCM;AA+CRC,MAAAA,aAAa,EAAGpB,OAAD;AAAA;;AAAA,eACb7B,MAAM,CAACd,UAAD,EAAa;AAAE6C,UAAAA,EAAE,sBAAEF,OAAO,CAACqB,OAAV,qDAAE,iBAAiBjB,KAAvB;AAA8BD,UAAAA,IAAI,EAAE1B;AAApC,SAAb,CAAN,EADa;AAAA,OA/CP;AAiDR6C,MAAAA,iBAAiB,EAAE,CAACtB,OAAD,EAAUuB,GAAV,KACjBpD,MAAM,CAACf,mBAAD,EAAsB;AAC1BoE,QAAAA,WAAW,EAAE,CAACxB,OAAO,CAACyB,OAAT,EAAkB,GAAGzB,OAAO,CAACwB,WAA7B,CADa;AAE1BD,QAAAA;AAF0B,OAAtB,CAAN;AAlDM;AAFZ,kBAyDE,oBAAC,SAAD,qBACE,oBAAC,QAAD,QACGzC,QAAQ,CAACW,MAAT,GAAkB,CAAlB,GACCX,QAAQ,CAAC4C,GAAT,CAAc1B,OAAD,IAAa;AAAA;;AACxB,UAAMC,KAAK,GAAGxB,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAEK,QAAT,mDAAG,eAAgByB,IAAhB,CAAsBoB,SAAD,IAAeA,SAAS,CAACzB,EAAV,KAAiBF,OAAO,CAACE,EAA7D,CAAd;AAEA,wBACE,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEF,OAAO,CAACE,EADf;AAEE,MAAA,OAAO,EAAEF,OAFX;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,KAAK,EACH,CAAC,EAACxB,IAAD,aAACA,IAAD,gCAACA,IAAI,CAAEqC,OAAP,0CAAC,cAAeP,IAAf,CACCqB,MAAD,IAAY,CAAC,EAACA,MAAD,aAACA,MAAD,eAACA,MAAM,CAAE9C,QAAR,CAAiByB,IAAjB,CAAuBC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYF,OAAO,CAACE,EAApD,CAAD,CADb,CAAD,CALL;AASE,MAAA,KAAK,EAAE,CAAC,CAAC,CAAC,CAAAzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE6B,aAAN,KAAuB,EAAxB,EAA4BC,IAA5B,CAAkCC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYF,OAAO,CAACE,EAA/D,CATX;AAUE,MAAA,MAAM,EAAE/B,MAAM,CAACjB,aAAD,EAAgB;AAC5BgD,QAAAA,EAAE,EAAEF,OAAO,CAACE,EADgB;AAE5BC,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFgB;AAG5BC,QAAAA,KAAK,EAAE,CAAC,CAAC,CAAC,CAAA5B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE6B,aAAN,KAAuB,EAAxB,EAA4BC,IAA5B,CAAkCC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYF,OAAO,CAACE,EAA/D,CAHmB;AAI5BO,QAAAA,MAAM,EACJhC,IAAI,CAAC2B,KAAL,IACAhC,MAAM,CAACX,OAAO,CAACiD,YAAT,EAAuB;AAAER,UAAAA,EAAE,EAAEF,OAAO,CAACE;AAAd,SAAvB,EAA4CS,QAAD,IAC/ChC,QAAQ,CAAC1B,UAAU,CAAC0D,QAAQ,CAACrC,IAAT,CAAcsC,WAAf,CAAX,CADJ,CANoB;AAS5BC,QAAAA,KAAK,EACHpC,IAAI,CAAC2B,KAAL,IACAjC,MAAM,CAAChB,YAAD,EAAe;AACnB+C,UAAAA,EAAE,EAAEF,OAAO,CAACE,EADO;AAEnBF,UAAAA,OAFmB;AAGnBc,UAAAA,OAAO,EAAErC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqC,OAHI;AAInBC,UAAAA,SAAS,EAAE;AACTC,YAAAA,UAAU,EAAEvD,OAAO,CAACwD,gBADX;AAETC,YAAAA,YAAY,EAAEzD,OAAO,CAAC0D;AAFb;AAJQ,SAAf,CAXoB;AAoB5BlB,QAAAA;AApB4B,OAAhB,CAVhB;AAgCE,MAAA,MAAM,EACJxB,IAAI,CAAC2B,KAAL,IACAhC,MAAM,CAACX,OAAO,CAACiD,YAAT,EAAuB;AAAER,QAAAA,EAAE,EAAEF,OAAO,CAACE;AAAd,OAAvB,EAA4CS,QAAD,IAC/ChC,QAAQ,CAAC1B,UAAU,CAAC0D,QAAQ,CAACrC,IAAT,CAAcsC,WAAf,CAAX,CADJ,CAlCV;AAsCE,MAAA,KAAK,EACHnC,IAAI,CAAC2B,KAAL,IACAjC,MAAM,CAAChB,YAAD,EAAe;AACnB+C,QAAAA,EAAE,EAAEF,OAAO,CAACE,EADO;AAEnBF,QAAAA,OAFmB;AAGnBc,QAAAA,OAAO,EAAErC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqC,OAHI;AAInBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAEvD,OAAO,CAACwD,gBADX;AAETC,UAAAA,YAAY,EAAEzD,OAAO,CAAC0D;AAFb;AAJQ,OAAf,CAxCV;AAkDE,MAAA,aAAa,EAAEhD,MAAM,CAACd,UAAD,EAAa;AAChC6C,QAAAA,EAAE,uBAAEF,OAAO,CAACqB,OAAV,sDAAE,kBAAiBjB,KADW;AAEhCD,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFoB;AAGhCyB,QAAAA,SAAS,EAAE7B,OAAO,CAAC8B,MAHa;AAIhCC,QAAAA,KAAK,EAAEtE,OAAO,CAACuE,cAJiB;AAKhCC,QAAAA,QAAQ,EAAExE,OAAO,CAACyE;AALc,OAAb,CAlDvB;AAyDE,MAAA,iBAAiB,EAAE,CAACC,CAAD,EAAIZ,GAAJ,KACjBpD,MAAM,CAACf,mBAAD,EAAsB;AAC1BoE,QAAAA,WAAW,EAAE,CAACxB,OAAO,CAACyB,OAAT,EAAkB,GAAGzB,OAAO,CAACwB,WAA7B,CADa;AAE1BD,QAAAA;AAF0B,OAAtB,CAAN;AA1DJ,MADF;AAkED,GArED,CADD,gBAwEC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAd,2EAzEJ,EA4EGnD,UAAU,IAAIJ,QAAQ,CAACW,MAAT,GAAkB,CAAhC,iBACC,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CA7EJ,CADF,eAoFE,oBAAC,KAAD,qBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,4CADF,EAEGZ,KAAK,CAACY,MAAN,GAAe,CAAf,GACCZ,KAAK,CAACiB,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB4B,GAAlB,CAAuBI,MAAD,IAAY;AAAA;;AAChC,UAAM7B,KAAK,GAAG6B,MAAM,CAACQ,IAAP,MAAgB7D,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAE6D,IAAtB,CAAd;AAEA,wBACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAER,MAAM,CAAC1B,KADd;AAEE,MAAA,IAAI,EAAE0B,MAFR;AAGE,MAAA,KAAK,EAAE7B,KAHT;AAIE,MAAA,MAAM,EACJxB,IAAI,CAAC2B,KAAL,IACAjC,MAAM,CAACX,MAAD,EAAS;AACb4C,QAAAA,KAAK,EAAE0B,MAAM,CAAC1B,KADD;AAEbD,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFC;AAGb3C,QAAAA,OAAO,EAAE;AACP8E,UAAAA,SAAS,EAAE9E,OAAO,CAACuE,cADZ;AAEPQ,UAAAA,IAAI,EAAE/E,OAAO,CAACgF;AAFP,SAHI;AAOb1B,QAAAA,SAAS,EAAE;AACT2B,UAAAA,WAAW,EAAEjF,OAAO,CAACkF,aADZ;AAETC,UAAAA,WAAW,EAAEnF,OAAO,CAACyE;AAFZ;AAPE,OAAT,CANV;AAmBE,MAAA,MAAM,EAAE/D,MAAM,CAACd,UAAD,EAAa;AACzB6C,QAAAA,EAAE,EAAE4B,MAAM,CAAC1B,KADc;AAEzBD,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFa;AAGzBH,QAAAA,KAHyB;AAIzBxC,QAAAA,OAAO,EAAE;AACP8E,UAAAA,SAAS,EAAE9E,OAAO,CAACuE,cADZ;AAEPQ,UAAAA,IAAI,EAAE/E,OAAO,CAACgF;AAFP,SAJgB;AAQzB1B,QAAAA,SAAS,EAAE;AACT2B,UAAAA,WAAW,EAAEjF,OAAO,CAACkF,aADZ;AAETC,UAAAA,WAAW,EAAEnF,OAAO,CAACyE;AAFZ;AARc,OAAb,CAnBhB;AAgCE,MAAA,SAAS,EAAE/D,MAAM,CAACb,aAAD,EAAgB;AAAE4C,QAAAA,EAAE,EAAE4B,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAE1B,KAAd;AAAqBD,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B;AAAjC,OAAhB,CAhCnB;AAiCE,MAAA,aAAa,EAAEjC,MAAM,CAACd,UAAD,EAAa;AAChC6C,QAAAA,EAAE,qBAAE4B,MAAM,CAACT,OAAT,oDAAE,gBAAgBjB,KADY;AAEhCD,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B,KAFoB;AAGhC3C,QAAAA,OAAO,EAAE;AACP8E,UAAAA,SAAS,EAAE9E,OAAO,CAACuE,cADZ;AAEPQ,UAAAA,IAAI,EAAE/E,OAAO,CAACgF;AAFP,SAHuB;AAOhC1B,QAAAA,SAAS,EAAE;AACT2B,UAAAA,WAAW,EAAEjF,OAAO,CAACkF,aADZ;AAETC,UAAAA,WAAW,EAAEnF,OAAO,CAACyE;AAFZ;AAPqB,OAAb;AAjCvB,MADF;AAgDD,GAnDD,CADD,gBAsDC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAd,qEAxDJ,eA2DE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAE;AAAZ,kDA3DF,EA4DGzD,QAAQ,CAACa,MAAT,GAAkB,CAAlB,GACCb,QAAQ,CACLkB,KADH,CACS,CADT,EACY,CADZ,EAEG4B,GAFH,CAEQmB,OAAD;AAAA;;AAAA,wBACH,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAAC3C,EADf;AAEE,MAAA,MAAM,EAAE,QAFV;AAGE,MAAA,OAAO,EAAE2C,OAHX;AAIE,MAAA,KAAK,EAAEpE,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAEG,QAAR,mDAAE,eAAgB2B,IAAhB,CAAsBoB,SAAD,IAAeA,SAAS,CAACzB,EAAV,KAAiB2C,OAAO,CAAC3C,EAA7D,CAJT;AAKE,MAAA,MAAM,EAAE/B,MAAM,CAACZ,aAAD,EAAgB;AAAE2C,QAAAA,EAAE,EAAE2C,OAAO,CAAC3C,EAAd;AAAkBC,QAAAA,IAAI,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE2B;AAA9B,OAAhB;AALhB,MADG;AAAA,GAFP,CADD,gBAaC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEgC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAd,2EAzEJ,CApFF,CAzDF,CADF;AA6ND,CA9PD;;AAgQA,OAAO,MAAMS,kBAAkB,GAAG,YAAY;AAC5C,QAAMC,MAAM,GAAGtG,gBAAgB,EAA/B;AAEA,MAAIqC,QAAQ,GAAG,EAAf;AACA,MAAIF,QAAQ,GAAG,EAAf;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAI;AACF,UAAM8B,QAAQ,GAAG,MAAMoC,MAAM,CAAChB,KAAP,CAAa;AAClCA,MAAAA,KAAK,EAAEtE,OAAO,CAACuF,cADmB;AAElC5D,MAAAA,SAAS,EAAE;AACTJ,QAAAA,MAAM,EAAE,CADC;AAETK,QAAAA,KAAK,EAAE,CAFE;AAGT4D,QAAAA,MAAM,EAAE;AAHC;AAFuB,KAAb,CAAvB;;AASA,QAAItC,QAAQ,IAAIA,QAAQ,CAACrC,IAAzB,EAA+B;AAC7BQ,MAAAA,QAAQ,GAAG6B,QAAQ,CAACrC,IAAT,CAAc4E,WAAzB;AACAtE,MAAAA,QAAQ,GAAG+B,QAAQ,CAACrC,IAAT,CAAc6E,WAAzB;AACAtE,MAAAA,KAAK,GAAG8B,QAAQ,CAACrC,IAAT,CAAc8E,QAAtB;AACD;AACF,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZ9D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,GAAZ;AACD;;AAED,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLpF,MAAAA,KAAK,EAAE;AACLY,QAAAA,QADK;AAELF,QAAAA,QAFK;AAGLC,QAAAA;AAHK;AADF;AADF,GAAP;AASD,CAnCM;AAqCP,eAAeZ,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport Alert from '../atomic-ui/components/Alert'\nimport Title from '../atomic-ui/components/Title'\nimport Spinner from '../atomic-ui/components/Spinner'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll'\nimport DefaultLayout from '../layouts/default'\nimport ProjectCard from '../components/ProjectCard'\nimport ArticleCard from '../components/ArticleCard'\nimport UserCard from '../components/UserCard'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserLink, onUserMembers } from '../store/helpers/user'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Атомик'\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Projects = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 80px;\n`\n\nconst Home = ({ store }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const [loadProjects, { data, loading }] = useLazyQuery(queries.GET_PROJECTS)\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const { articles, users } = store\n  const [projects, setProjects] = useState([])\n  const [offset, setOffset] = useState(7)\n  const [isFetching, setIsFetching] = useInfiniteScroll(() => {\n    loadProjects({\n      variables: {\n        offset,\n        limit: 5\n      }\n    })\n    setOffset((prev) => prev + 5)\n    setIsFetching(false)\n  })\n  console.log(store?.projects)\n\n  useEffect(() => {\n    if (store?.projects?.length > 0) {\n      setProjects((prev) => [...prev, store.projects])\n    }\n  }, [store])\n\n  useEffect(() => {\n    if (data && !loading) {\n      setIsFetching(false)\n    }\n  }, [data, loading])\n\n  return (\n    <DefaultLayout\n      title={TITLE}\n      scaffold={{\n        title: 'Создавай школу будущего с нами',\n        background: '/images/main-background.png',\n        primary: projects.length > 0 && projects[0],\n        residue: projects.length > 4 && projects.slice(1, 3),\n        onLink: (project, owned) =>\n          recall(onProjectLink, {\n            id: project.id,\n            auth: user?.email,\n            project,\n            liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n            onLike:\n              user.email &&\n              mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                dispatch(updateUser(response.data.likeProject))\n              ),\n            onAdd:\n              user.email &&\n              recall(onProjectAdd, {\n                id: project.id,\n                project,\n                folders: user?.folders,\n                mutations: {\n                  addProject: queries.ADD_USER_PROJECT,\n                  createFolder: queries.ADD_USER_FOLDER\n                }\n              }),\n            owned\n          })(),\n        onLike:\n          user.email &&\n          ((project) =>\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            )()),\n        onAdd:\n          user.email &&\n          ((project) =>\n            recall(onProjectAdd, {\n              id: project.id,\n              project,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              }\n            })()),\n        onCompanyLink: (project) =>\n          recall(onUserLink, { id: project.company?.email, auth: user })(),\n        onScreenshotClick: (project, key) =>\n          recall(onProjectScreenshot, {\n            screenshots: [project.preview, ...project.screenshots],\n            key\n          })()\n      }}>\n      <Container>\n        <Projects>\n          {projects.length > 0 ? (\n            projects.map((project) => {\n              const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n\n              return (\n                <ProjectCard\n                  key={project.id}\n                  project={project}\n                  owned={owned}\n                  added={\n                    !!user?.folders?.find(\n                      (folder) => !!folder?.projects.find((item) => item.id === project.id)\n                    )\n                  }\n                  liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n                  onLink={recall(onProjectLink, {\n                    id: project.id,\n                    auth: user?.email,\n                    liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n                    onLike:\n                      user.email &&\n                      mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                        dispatch(updateUser(response.data.likeProject))\n                      ),\n                    onAdd:\n                      user.email &&\n                      recall(onProjectAdd, {\n                        id: project.id,\n                        project,\n                        folders: user?.folders,\n                        mutations: {\n                          addProject: queries.ADD_USER_PROJECT,\n                          createFolder: queries.ADD_USER_FOLDER\n                        }\n                      }),\n                    owned\n                  })}\n                  onLike={\n                    user.email &&\n                    mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                      dispatch(updateUser(response.data.likeProject))\n                    )\n                  }\n                  onAdd={\n                    user.email &&\n                    recall(onProjectAdd, {\n                      id: project.id,\n                      project,\n                      folders: user?.folders,\n                      mutations: {\n                        addProject: queries.ADD_USER_PROJECT,\n                        createFolder: queries.ADD_USER_FOLDER\n                      }\n                    })\n                  }\n                  onCompanyLink={recall(onUserLink, {\n                    id: project.company?.email,\n                    auth: user?.email,\n                    recipient: project.author,\n                    query: queries.GET_USER_CHATS,\n                    mutation: queries.SEND_MESSAGE\n                  })}\n                  onScreenshotClick={(_, key) =>\n                    recall(onProjectScreenshot, {\n                      screenshots: [project.preview, ...project.screenshots],\n                      key\n                    })()\n                  }\n                />\n              )\n            })\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Проектов нет</Alert>\n          )}\n\n          {isFetching && projects.length > 0 && (\n            <Loader>\n              <Spinner />\n            </Loader>\n          )}\n        </Projects>\n\n        <Aside>\n          <Title tag={'h4'}>Авторы</Title>\n          {users.length > 0 ? (\n            users.slice(0, 3).map((author) => {\n              const owned = author.name === user?.name\n\n              return (\n                <UserCard\n                  key={author.email}\n                  user={author}\n                  owned={owned}\n                  onChat={\n                    user.email &&\n                    recall(onChat, {\n                      email: author.email,\n                      auth: user?.email,\n                      queries: {\n                        userChats: queries.GET_USER_CHATS,\n                        chat: queries.GET_CHAT\n                      },\n                      mutations: {\n                        addUserChat: queries.ADD_USER_CHAT,\n                        sendMessage: queries.SEND_MESSAGE\n                      }\n                    })\n                  }\n                  onLink={recall(onUserLink, {\n                    id: author.email,\n                    auth: user?.email,\n                    owned,\n                    queries: {\n                      userChats: queries.GET_USER_CHATS,\n                      chat: queries.GET_CHAT\n                    },\n                    mutations: {\n                      addUserChat: queries.ADD_USER_CHAT,\n                      sendMessage: queries.SEND_MESSAGE\n                    }\n                  })}\n                  onMembers={recall(onUserMembers, { id: author?.email, auth: user?.email })}\n                  onCompanyLink={recall(onUserLink, {\n                    id: author.company?.email,\n                    auth: user?.email,\n                    queries: {\n                      userChats: queries.GET_USER_CHATS,\n                      chat: queries.GET_CHAT\n                    },\n                    mutations: {\n                      addUserChat: queries.ADD_USER_CHAT,\n                      sendMessage: queries.SEND_MESSAGE\n                    }\n                  })}\n                />\n              )\n            })\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Авторов нет</Alert>\n          )}\n\n          <Title tag={'h4'}>Новости</Title>\n          {articles.length > 0 ? (\n            articles\n              .slice(0, 2)\n              .map((article) => (\n                <ArticleCard\n                  key={article.id}\n                  layout={'column'}\n                  article={article}\n                  owned={user?.articles?.find((candidate) => candidate.id === article.id)}\n                  onLink={recall(onArticleLink, { id: article.id, auth: user?.email })}\n                />\n              ))\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Новостей нет</Alert>\n          )}\n        </Aside>\n      </Container>\n    </DefaultLayout>\n  )\n}\n\nexport const getServerSideProps = async () => {\n  const client = initializeApollo()\n\n  let projects = []\n  let articles = []\n  let users = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_INDEX,\n      variables: {\n        offset: 0,\n        limit: 7,\n        status: 'PUBLISHED'\n      }\n    })\n\n    if (response && response.data) {\n      projects = response.data.getProjects\n      articles = response.data.getArticles\n      users = response.data.getUsers\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        projects,\n        articles,\n        users\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}