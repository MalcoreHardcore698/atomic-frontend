{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport { Surface } from '../Styled';\nimport CardActions from '../CardActions';\nimport { onTicketDelete, onTicketEdit } from '../../store/helpers/ticket';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { useHelper } from '../../hooks/useHelper';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Surface).withConfig({\n  displayName: \"TicketCard__Wrap\",\n  componentId: \"sc-3sqqk7-0\"\n})([\"grid-gap:var(--default-gap);height:100%;\"]);\n_c = Wrap;\nexport const Header = styled(Row).withConfig({\n  displayName: \"TicketCard__Header\",\n  componentId: \"sc-3sqqk7-1\"\n})([\"justify-content:space-between;align-items:center;\"]);\n_c2 = Header;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"TicketCard__Actions\",\n  componentId: \"sc-3sqqk7-2\"\n})([\"grid-gap:5px;height:100%;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"TicketCard__Name\",\n  componentId: \"sc-3sqqk7-3\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\n_c3 = Name;\nexport const Status = styled(Text).withConfig({\n  displayName: \"TicketCard__Status\",\n  componentId: \"sc-3sqqk7-4\"\n})([\"color:\", \";\"], ({\n  status\n}) => `var(--default-color-${status === 'OPENED' ? 'accent' : 'red'})`);\n_c4 = Status;\nexport const Footer = styled(Row).withConfig({\n  displayName: \"TicketCard__Footer\",\n  componentId: \"sc-3sqqk7-5\"\n})([\"justify-content:space-between;align-items:center;flex-grow:1;\"]);\n_c5 = Footer;\nexport const Card = ({\n  ticket,\n  checked,\n  appearance,\n  className,\n  style,\n  onLink,\n  onAuthorLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n\n  var _ticket$category, _ticket$author, _ticket$author$avatar, _ticket$author2, _ticket$messages;\n\n  const recall = useHelper();\n  const {\n    setQuery\n  } = useEntityQuery();\n\n  const handleEdit = () => {\n    recall(onTicketEdit, {\n      id: ticket.id,\n      mutation: queries.UPDATE_TICKET\n    })();\n    if (onEdit) onEdit();\n  };\n\n  const handleDelete = () => {\n    recall(onTicketDelete, {\n      ticket,\n      mutation: queries.DELETE_TICKET\n    })();\n    if (onDelete) onDelete();\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    checked: checked,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 0\n    }\n  }, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n    date: ticket.createdAt,\n    category: (_ticket$category = ticket.category) === null || _ticket$category === void 0 ? void 0 : _ticket$category.name\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    typeText: 'обращение',\n    checked: checked,\n    onEdit: onEdit && handleEdit,\n    onDelete: onDelete && handleDelete,\n    onChecked: onChecked\n  })), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: () => setQuery(ticket.id, 'ticket', onLink)\n  }, ticket.title), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      gridGap: 5\n    }\n  }, /*#__PURE__*/React.createElement(Status, {\n    status: ticket.status\n  }, ticket.status))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Footer, null, /*#__PURE__*/React.createElement(Difinition, {\n    label: 'Автор',\n    img: (_ticket$author = ticket.author) === null || _ticket$author === void 0 ? void 0 : (_ticket$author$avatar = _ticket$author.avatar) === null || _ticket$author$avatar === void 0 ? void 0 : _ticket$author$avatar.path,\n    text: (_ticket$author2 = ticket.author) === null || _ticket$author2 === void 0 ? void 0 : _ticket$author2.name,\n    onLink: onAuthorLink && (() => {\n      var _ticket$author3;\n\n      return onAuthorLink((_ticket$author3 = ticket.author) === null || _ticket$author3 === void 0 ? void 0 : _ticket$author3.email);\n    })\n  }), /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'chat',\n    label: 'Сообщений',\n    text: (_ticket$messages = ticket.messages) === null || _ticket$messages === void 0 ? void 0 : _ticket$messages.length\n  })));\n};\n\n_s(Card, \"oy5FWuhCZpdHauXkptlPc4fcV0I=\", false, function () {\n  return [useHelper, useEntityQuery];\n});\n\n_c6 = Card;\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"Status\");\n$RefreshReg$(_c5, \"Footer\");\n$RefreshReg$(_c6, \"Card\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketCard/index.js"],"names":["React","styled","css","Row","Column","Title","Text","Meta","Divider","Difinition","Surface","CardActions","onTicketDelete","onTicketEdit","useEntityQuery","useHelper","queries","Wrap","Header","Actions","Name","onClick","Status","status","Footer","Card","ticket","checked","appearance","className","style","onLink","onAuthorLink","onChecked","onEdit","onDelete","recall","setQuery","handleEdit","id","mutation","UPDATE_TICKET","handleDelete","DELETE_TICKET","gridGap","createdAt","category","name","title","author","avatar","path","email","messages","length","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Difinition from '../../atomic-ui/components/Difinition'\n\nimport { Surface } from '../Styled'\nimport CardActions from '../CardActions'\nimport { onTicketDelete, onTicketEdit } from '../../store/helpers/ticket'\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { useHelper } from '../../hooks/useHelper'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Surface)`\n  grid-gap: var(--default-gap);\n  height: 100%;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n  height: 100%;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const Status = styled(Text)`\n  color: ${({ status }) => `var(--default-color-${status === 'OPENED' ? 'accent' : 'red'})`};\n`\n\nexport const Footer = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n  flex-grow: 1;\n`\n\nexport const Card = ({\n  ticket,\n  checked,\n  appearance,\n  className,\n  style,\n  onLink,\n  onAuthorLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  const recall = useHelper()\n  const { setQuery } = useEntityQuery()\n\n  const handleEdit = () => {\n    recall(onTicketEdit, {\n      id: ticket.id,\n      mutation: queries.UPDATE_TICKET\n    })()\n    if (onEdit) onEdit()\n  }\n\n  const handleDelete = () => {\n    recall(onTicketDelete, {\n      ticket,\n      mutation: queries.DELETE_TICKET\n    })()\n    if (onDelete) onDelete()\n  }\n\n  return (\n    <Wrap className={className} style={style} checked={checked} appearance={appearance}>\n      <Column style={{ gridGap: 0 }}>\n        <Header>\n          <Meta date={ticket.createdAt} category={ticket.category?.name} />\n\n          <CardActions\n            typeText={'обращение'}\n            checked={checked}\n            onEdit={onEdit && handleEdit}\n            onDelete={onDelete && handleDelete}\n            onChecked={onChecked}\n          />\n        </Header>\n\n        <Name tag={'h4'} onClick={() => setQuery(ticket.id, 'ticket', onLink)}>\n          {ticket.title}\n        </Name>\n\n        <Row style={{ gridGap: 5 }}>\n          <Status status={ticket.status}>{ticket.status}</Status>\n        </Row>\n      </Column>\n\n      <Divider clear />\n\n      <Footer>\n        <Difinition\n          label={'Автор'}\n          img={ticket.author?.avatar?.path}\n          text={ticket.author?.name}\n          onLink={onAuthorLink && (() => onAuthorLink(ticket.author?.email))}\n        />\n\n        <Difinition icon={'chat'} label={'Сообщений'} text={ticket.messages?.length} />\n      </Footer>\n    </Wrap>\n  )\n}\n\nCard.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}