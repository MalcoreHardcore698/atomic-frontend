{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Button from '../../atomic-ui/components/Button';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport { getLabelRole } from '../../utils/functions';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"UserBar__Wrap\",\n  componentId: \"sc-17kd9nb-0\"\n})([\"width:100%;@media only screen and (max-width:568px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c = Wrap;\nexport const Content = styled(Column).withConfig({\n  displayName: \"UserBar__Content\",\n  componentId: \"sc-17kd9nb-1\"\n})([\"justify-content:space-between;grid-gap:0;width:100%;\"]);\n_c2 = Content;\nexport const RoundedAvatar = styled(Image).withConfig({\n  displayName: \"UserBar__RoundedAvatar\",\n  componentId: \"sc-17kd9nb-2\"\n})([\"width:256px;height:256px;border-radius:var(--surface-border-radius);object-fit:cover;@media only screen and (max-width:768px){width:169px;}@media only screen and (max-width:568px){width:100%;}\"]);\n_c3 = RoundedAvatar;\nexport const About = styled.div.withConfig({\n  displayName: \"UserBar__About\",\n  componentId: \"sc-17kd9nb-3\"\n})([\"display:-webkit-box;-webkit-line-clamp:3;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;flex-grow:100;@media only screen and (max-width:568px){margin-bottom:15px;}\"]);\n_c4 = About;\nexport const Difinitions = styled(Row).withConfig({\n  displayName: \"UserBar__Difinitions\",\n  componentId: \"sc-17kd9nb-4\"\n})([\"flex-wrap:wrap;justify-content:space-between;grid-gap:var(--default-gap);@media only screen and (max-width:568px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c5 = Difinitions;\nexport const EditButton = styled(Button).withConfig({\n  displayName: \"UserBar__EditButton\",\n  componentId: \"sc-17kd9nb-5\"\n})([\"font-size:var(--font-size-s);color:var(--ghost-color-text);transition:color 150ms ease;&:hover{color:black;}\"]);\n_c6 = EditButton;\nexport const User = ({\n  user,\n  onEdit,\n  onAboutMore\n}) => {\n  var _user$avatar, _user$projects;\n\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(RoundedAvatar, {\n    src: (user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) || '/images/avatar-default.png'\n  }), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Meta, {\n    category: getLabelRole(user.account)\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      gridGap: '0 10px'\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, user.name), /*#__PURE__*/React.createElement(Tooltip, {\n    place: 'top',\n    text: 'Редактировать'\n  }, /*#__PURE__*/React.createElement(EditButton, {\n    type: 'button',\n    kind: 'icon',\n    size: 'xs',\n    appearance: 'clear',\n    onClick: onEdit\n  }, \"\\u0420\\u0435\\u0434.\"))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: '5px 0'\n    }\n  }), /*#__PURE__*/React.createElement(About, null, /*#__PURE__*/React.createElement(Text, null, (user === null || user === void 0 ? void 0 : user.about) || 'Информация отсутствует'), (user === null || user === void 0 ? void 0 : user.about) && (user === null || user === void 0 ? void 0 : user.about.length) > 135 && /*#__PURE__*/React.createElement(More, {\n    onClick: onAboutMore\n  }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")), /*#__PURE__*/React.createElement(Difinitions, null, /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'chart',\n    label: 'Компания',\n    text: (user === null || user === void 0 ? void 0 : user.company) || 0\n  }), /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'work',\n    label: 'Проекты',\n    text: (user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.length) || 0\n  }), /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'user2',\n    label: 'Подписчики',\n    text: (user === null || user === void 0 ? void 0 : user.followers) || 0\n  }))));\n};\n_c7 = User;\nexport default User;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"RoundedAvatar\");\n$RefreshReg$(_c4, \"About\");\n$RefreshReg$(_c5, \"Difinitions\");\n$RefreshReg$(_c6, \"EditButton\");\n$RefreshReg$(_c7, \"User\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/UserBar/index.js"],"names":["React","styled","Row","Column","Meta","Divider","Title","Text","Image","Tooltip","Button","Difinition","getLabelRole","Wrap","Content","RoundedAvatar","About","div","Difinitions","EditButton","User","user","onEdit","onAboutMore","avatar","path","account","gridGap","name","margin","about","length","company","projects","followers"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport Button from '../../atomic-ui/components/Button'\nimport Difinition from '../../atomic-ui/components/Difinition'\n\nimport { getLabelRole } from '../../utils/functions'\n\nexport const Wrap = styled(Row)`\n  width: 100%;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  grid-gap: 0;\n  width: 100%;\n`\n\nexport const RoundedAvatar = styled(Image)`\n  width: 256px;\n  height: 256px;\n  border-radius: var(--surface-border-radius);\n  object-fit: cover;\n\n  @media only screen and (max-width: 768px) {\n    width: 169px;\n  }\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const About = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-grow: 100;\n\n  @media only screen and (max-width: 568px) {\n    margin-bottom: 15px;\n  }\n`\n\nexport const Difinitions = styled(Row)`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const EditButton = styled(Button)`\n  font-size: var(--font-size-s);\n  color: var(--ghost-color-text);\n  transition: color 150ms ease;\n\n  &:hover {\n    color: black;\n  }\n`\n\nexport const User = ({ user, onEdit, onAboutMore }) => (\n  <Wrap>\n    <RoundedAvatar src={user?.avatar?.path || '/images/avatar-default.png'} />\n\n    <Content>\n      <Meta category={getLabelRole(user.account)} />\n\n      <Row style={{ gridGap: '0 10px' }}>\n        <Title tag={'h3'}>{user.name}</Title>\n        <Tooltip place={'top'} text={'Редактировать'}>\n          <EditButton\n            type={'button'}\n            kind={'icon'}\n            size={'xs'}\n            appearance={'clear'}\n            onClick={onEdit}>\n            Ред.\n          </EditButton>\n        </Tooltip>\n      </Row>\n\n      <Divider style={{ margin: '5px 0' }} />\n\n      <About>\n        <Text>{user?.about || 'Информация отсутствует'}</Text>\n        {user?.about && user?.about.length > 135 && <More onClick={onAboutMore}>Подробнее</More>}\n      </About>\n\n      <Difinitions>\n        <Difinition icon={'chart'} label={'Компания'} text={user?.company || 0} />\n        <Difinition icon={'work'} label={'Проекты'} text={user?.projects?.length || 0} />\n        <Difinition icon={'user2'} label={'Подписчики'} text={user?.followers || 0} />\n      </Difinitions>\n    </Content>\n  </Wrap>\n)\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}