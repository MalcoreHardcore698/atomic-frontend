{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Column from '../../atomic-ui/components/Column';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Button from '../../atomic-ui/components/Button';\nimport Input from '../../atomic-ui/components/Input';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition';\nimport { getLabelRole, hasAccess } from '../../atomic-ui/utils/functions';\nimport { useMutationEffect } from '../../hooks/useMutationEffect';\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { setModal } from '../../store/actions/modal';\nimport queries from '../../graphql/queries';\nimport { CentralAlert } from '../Processed';\nimport { Loader } from '../Styled';\nimport Form from '../Form';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Members__Wrap\",\n  componentId: \"sc-2k8qnt-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const hasResponsibleMember = member => {\n  const hasPurposeProject = hasAccess(member, 'PURPOSE_PROJECT');\n  const hasPurposeArticle = hasAccess(member, 'PURPOSE_ARTICLE');\n  return hasPurposeProject && hasPurposeArticle;\n};\nexport const ResponsibleMark = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", null, \" | \"), /*#__PURE__*/React.createElement(Tooltip, {\n  text: 'Ответственный'\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'shieldDone',\n  size: 'xs',\n  stroke: 'var(--ghost-color-text)'\n})));\n_c2 = ResponsibleMark;\nexport const Invite = () => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const hideModal = () => dispatch(setModal(null));\n\n  const onSubmit = (form, action) => {\n    action({\n      variables: {\n        email: form.email\n      }\n    });\n    hideModal();\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    appearance: 'clear',\n    style: {\n      padding: 'var(--default-gap)'\n    },\n    mutation: queries.INVITE_USER_MEMBER,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'email',\n    ref: register({\n      required: true\n    }),\n    placeholder: 'Введите Эл. почту',\n    appearance: 'ghost',\n    disabled: loading,\n    autoComplete: 'off'\n  })), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'button',\n    appearance: 'ghost',\n    disabled: loading,\n    onClick: hideModal\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C\"))));\n};\n\n_s(Invite, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = Invite;\nexport const Members = ({\n  user,\n  style,\n  appearance,\n  className,\n  onMemberLink\n}) => {\n  _s2();\n\n  const authUser = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    setQuery\n  } = useEntityQuery();\n  const [members, setMembers] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user || authUser.email\n    }\n  });\n  const [exclude, {\n    loading: loadingExclude,\n    error: errorExclude\n  }] = useMutationEffect(queries.EXCLUDE_USER_MEMBER, 'excludeUserMember', setMembers);\n  const [appoint, {\n    loading: loadingAppoint,\n    error: errorAppoint\n  }] = useMutationEffect(queries.APPOINT_USER_MEMBER, 'appointUserMember', setMembers);\n  const [dismiss, {\n    loading: loadingDismiss,\n    error: errorDismiss\n  }] = useMutationEffect(queries.DISMISS_USER_MEMBER, 'dismissUserMember', setMembers);\n\n  const getDismiss = member => ({\n    text: 'Исключить',\n    color: 'red',\n    onClick: () => dismiss({\n      variables: {\n        email: member.email\n      }\n    })\n  });\n\n  const getDefaultActions = member => [{\n    text: 'Назначить ответственным',\n    onClick: () => appoint({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getDismiss(member)];\n\n  const getResponsibleActions = member => [{\n    text: 'Снять полномочия',\n    onClick: () => exclude({\n      variables: {\n        email: member.email\n      }\n    })\n  }, getDismiss(member)];\n\n  const onMemberInvite = () => {\n    dispatch(setModal([{\n      path: '/',\n      title: 'Пригласить участника',\n      component: () => /*#__PURE__*/React.createElement(Invite, null)\n    }]));\n  };\n\n  useUpdateEffect(data, loading, 'getUserMembers', setMembers);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && !loadingExclude && !loadingAppoint && !loadingDismiss && data ? /*#__PURE__*/React.createElement(Column, null, members.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    percentage: 'minmax(320px, 1fr)'\n  }, members.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: /*#__PURE__*/React.createElement(MarkedText, null, /*#__PURE__*/React.createElement(\"span\", null, getLabelRole(member.account)), hasResponsibleMember(member) && /*#__PURE__*/React.createElement(ResponsibleMark, null)),\n      text: member.name,\n      actions: authUser.email === user && (hasResponsibleMember(member) ? getResponsibleActions(member) : getDefaultActions(member)),\n      onLink: () => setQuery(member.email, 'user', onMemberLink),\n      stretch: true\n    });\n  })) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041A\\u0430\\u0436\\u0435\\u0442\\u0441\\u044F \\u0432 \\u043A\\u0430\\u0448\\u0435\\u0439 \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438 \\u043D\\u0438\\u043A\\u043E\\u0433\\u043E \\u043D\\u0435\\u0442!\"), authUser.email === user && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'button',\n    onClick: onMemberInvite\n  }, \"\\u041F\\u0440\\u0438\\u0433\\u043B\\u0430\\u0441\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"))) : error || errorExclude || errorAppoint || errorDismiss ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\\u0445\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\n\n_s2(Members, \"jQhN8PVlSibi2u+p+zROAEGuxnY=\", false, function () {\n  return [useSelector, useDispatch, useEntityQuery, useQuery, useMutationEffect, useMutationEffect, useMutationEffect, useUpdateEffect];\n});\n\n_c4 = Members;\nMembers.defaultProps = {\n  appearance: 'default'\n};\nexport default Members;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"ResponsibleMark\");\n$RefreshReg$(_c3, \"Invite\");\n$RefreshReg$(_c4, \"Members\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/Members/index.js"],"names":["React","useState","styled","css","useDispatch","useSelector","useQuery","Row","Grid","Column","Tooltip","Spinner","Button","Input","Alert","Icon","Difinition","MarkedText","getLabelRole","hasAccess","useMutationEffect","useUpdateEffect","useEntityQuery","setModal","queries","CentralAlert","Loader","Form","Wrap","appearance","hasResponsibleMember","member","hasPurposeProject","hasPurposeArticle","ResponsibleMark","Invite","dispatch","hideModal","onSubmit","form","action","variables","email","padding","INVITE_USER_MEMBER","register","loading","required","flexGrow","Members","user","style","className","onMemberLink","authUser","state","setQuery","members","setMembers","data","error","GET_USER_MEMBERS","exclude","loadingExclude","errorExclude","EXCLUDE_USER_MEMBER","appoint","loadingAppoint","errorAppoint","APPOINT_USER_MEMBER","dismiss","loadingDismiss","errorDismiss","DISMISS_USER_MEMBER","getDismiss","text","color","onClick","getDefaultActions","getResponsibleActions","onMemberInvite","path","title","component","length","map","avatar","account","name","width","textAlign","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,UAAP,IAAqBC,UAArB,QAAuC,uCAAvC;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,iCAAxC;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAG1B,MAAM,CAACO,MAAD,CAAT;AAAA;AAAA;AAAA,8CAIb,CAAC;AAAEoB,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACA1B,GADA,+KALa,EAcb,CAAC;AAAE0B,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACA1B,GADA,4EAfa,EAwBb,CAAC;AAAE0B,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACA1B,GADA,4EAzBa,CAAV;KAAMyB,I;AAmCb,OAAO,MAAME,oBAAoB,GAAIC,MAAD,IAAY;AAC9C,QAAMC,iBAAiB,GAAGb,SAAS,CAACY,MAAD,EAAS,iBAAT,CAAnC;AACA,QAAME,iBAAiB,GAAGd,SAAS,CAACY,MAAD,EAAS,iBAAT,CAAnC;AACA,SAAOC,iBAAiB,IAAIC,iBAA5B;AACD,CAJM;AAMP,OAAO,MAAMC,eAAe,GAAG,mBAC7B,oBAAC,KAAD,CAAO,QAAP,qBACE,wCADF,eAEE,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAE;AAAf,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,YAAZ;AAA0B,EAAA,IAAI,EAAE,IAAhC;AAAsC,EAAA,MAAM,EAAE;AAA9C,EADF,CAFF,CADK;MAAMA,e;AASb,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGhC,WAAW,EAA5B;;AAEA,QAAMiC,SAAS,GAAG,MAAMD,QAAQ,CAACb,QAAQ,CAAC,IAAD,CAAT,CAAhC;;AAEA,QAAMe,QAAQ,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACjCA,IAAAA,MAAM,CAAC;AACLC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAEH,IAAI,CAACG;AADH;AADN,KAAD,CAAN;AAKAL,IAAAA,SAAS;AACV,GAPD;;AASA,sBACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAE,OADd;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAFT;AAGE,IAAA,QAAQ,EAAEnB,OAAO,CAACoB,kBAHpB;AAIE,IAAA,QAAQ,EAAEN;AAJZ,KAKG,CAAC;AAAEO,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,kBACC,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,MAAD,qBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,IAAI,EAAE,OAFR;AAGE,IAAA,GAAG,EAAED,QAAQ,CAAC;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAIE,IAAA,WAAW,EAAE,mBAJf;AAKE,IAAA,UAAU,EAAE,OALd;AAME,IAAA,QAAQ,EAAED,OANZ;AAOE,IAAA,YAAY,EAAE;AAPhB,IADF,CADF,eAaE,oBAAC,GAAD,qBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,IAAI,EAAE,QAFR;AAGE,IAAA,UAAU,EAAE,OAHd;AAIE,IAAA,QAAQ,EAAEF,OAJZ;AAKE,IAAA,OAAO,EAAET;AALX,4CADF,eASE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAf;AAAgC,IAAA,IAAI,EAAE,QAAtC;AAAgD,IAAA,QAAQ,EAAEF;AAA1D,oEATF,CAbF,CANJ,CADF;AAqCD,CAnDM;;GAAMX,M;UACM/B,W;;;MADN+B,M;AAqDb,OAAO,MAAMc,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAetB,EAAAA,UAAf;AAA2BuB,EAAAA,SAA3B;AAAsCC,EAAAA;AAAtC,CAAD,KAA0D;AAAA;;AAC/E,QAAMC,QAAQ,GAAGjD,WAAW,CAAEkD,KAAD,IAAWA,KAAK,CAACL,IAAlB,CAA5B;AACA,QAAMd,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAM;AAAEoD,IAAAA;AAAF,MAAelC,cAAc,EAAnC;AACA,QAAM,CAACmC,OAAD,EAAUC,UAAV,IAAwBzD,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAE0D,IAAAA,IAAF;AAAQb,IAAAA,OAAR;AAAiBc,IAAAA;AAAjB,MAA2BtD,QAAQ,CAACkB,OAAO,CAACqC,gBAAT,EAA2B;AAClEpB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAEQ,IAAI,IAAII,QAAQ,CAACZ;AADf;AADuD,GAA3B,CAAzC;AAMA,QAAM,CAACoB,OAAD,EAAU;AAAEhB,IAAAA,OAAO,EAAEiB,cAAX;AAA2BH,IAAAA,KAAK,EAAEI;AAAlC,GAAV,IAA8D5C,iBAAiB,CACnFI,OAAO,CAACyC,mBAD2E,EAEnF,mBAFmF,EAGnFP,UAHmF,CAArF;AAMA,QAAM,CAACQ,OAAD,EAAU;AAAEpB,IAAAA,OAAO,EAAEqB,cAAX;AAA2BP,IAAAA,KAAK,EAAEQ;AAAlC,GAAV,IAA8DhD,iBAAiB,CACnFI,OAAO,CAAC6C,mBAD2E,EAEnF,mBAFmF,EAGnFX,UAHmF,CAArF;AAMA,QAAM,CAACY,OAAD,EAAU;AAAExB,IAAAA,OAAO,EAAEyB,cAAX;AAA2BX,IAAAA,KAAK,EAAEY;AAAlC,GAAV,IAA8DpD,iBAAiB,CACnFI,OAAO,CAACiD,mBAD2E,EAEnF,mBAFmF,EAGnFf,UAHmF,CAArF;;AAMA,QAAMgB,UAAU,GAAI3C,MAAD,KAAa;AAC9B4C,IAAAA,IAAI,EAAE,WADwB;AAE9BC,IAAAA,KAAK,EAAE,KAFuB;AAG9BC,IAAAA,OAAO,EAAE,MAAMP,OAAO,CAAC;AAAE7B,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEX,MAAM,CAACW;AAAhB;AAAb,KAAD;AAHQ,GAAb,CAAnB;;AAMA,QAAMoC,iBAAiB,GAAI/C,MAAD,IAAY,CACpC;AACE4C,IAAAA,IAAI,EAAE,yBADR;AAEEE,IAAAA,OAAO,EAAE,MAAMX,OAAO,CAAC;AAAEzB,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEX,MAAM,CAACW;AAAhB;AAAb,KAAD;AAFxB,GADoC,EAKpCgC,UAAU,CAAC3C,MAAD,CAL0B,CAAtC;;AAQA,QAAMgD,qBAAqB,GAAIhD,MAAD,IAAY,CACxC;AAAE4C,IAAAA,IAAI,EAAE,kBAAR;AAA4BE,IAAAA,OAAO,EAAE,MAAMf,OAAO,CAAC;AAAErB,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEX,MAAM,CAACW;AAAhB;AAAb,KAAD;AAAlD,GADwC,EAExCgC,UAAU,CAAC3C,MAAD,CAF8B,CAA1C;;AAKA,QAAMiD,cAAc,GAAG,MAAM;AAC3B5C,IAAAA,QAAQ,CACNb,QAAQ,CAAC,CACP;AACE0D,MAAAA,IAAI,EAAE,GADR;AAEEC,MAAAA,KAAK,EAAE,sBAFT;AAGEC,MAAAA,SAAS,EAAE,mBAAM,oBAAC,MAAD;AAHnB,KADO,CAAD,CADF,CAAR;AASD,GAVD;;AAYA9D,EAAAA,eAAe,CAACsC,IAAD,EAAOb,OAAP,EAAgB,gBAAhB,EAAkCY,UAAlC,CAAf;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,SAAjB;AAA4B,IAAA,KAAK,EAAED,KAAnC;AAA0C,IAAA,UAAU,EAAEtB;AAAtD,KACG,CAACiB,OAAD,IAAY,CAACiB,cAAb,IAA+B,CAACI,cAAhC,IAAkD,CAACI,cAAnD,IAAqEZ,IAArE,gBACC,oBAAC,MAAD,QACGF,OAAO,CAAC2B,MAAR,GAAiB,CAAjB,gBACC,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE;AAAlB,KACG3B,OAAO,CAAC4B,GAAR,CAAatD,MAAD;AAAA;;AAAA,wBACX,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEA,MAAM,CAACW,KADd;AAEE,MAAA,GAAG,EAAE,mBAAAX,MAAM,CAACuD,MAAP,kEAAeL,IAAf,KAAuB,4BAF9B;AAGE,MAAA,KAAK,eACH,oBAAC,UAAD,qBACE,kCAAO/D,YAAY,CAACa,MAAM,CAACwD,OAAR,CAAnB,CADF,EAEGzD,oBAAoB,CAACC,MAAD,CAApB,iBAAgC,oBAAC,eAAD,OAFnC,CAJJ;AASE,MAAA,IAAI,EAAEA,MAAM,CAACyD,IATf;AAUE,MAAA,OAAO,EACLlC,QAAQ,CAACZ,KAAT,KAAmBQ,IAAnB,KACCpB,oBAAoB,CAACC,MAAD,CAApB,GACGgD,qBAAqB,CAAChD,MAAD,CADxB,GAEG+C,iBAAiB,CAAC/C,MAAD,CAHrB,CAXJ;AAgBE,MAAA,MAAM,EAAE,MAAMyB,QAAQ,CAACzB,MAAM,CAACW,KAAR,EAAe,MAAf,EAAuBW,YAAvB,CAhBxB;AAiBE,MAAA,OAAO;AAjBT,MADW;AAAA,GAAZ,CADH,CADD,gBAyBC,oBAAC,YAAD,qMA1BJ,EA6BGC,QAAQ,CAACZ,KAAT,KAAmBQ,IAAnB,iBACC,oBAAC,GAAD,qBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAf;AAAgC,IAAA,IAAI,EAAE,QAAtC;AAAgD,IAAA,OAAO,EAAEgC;AAAzD,2HADF,CA9BJ,CADD,GAsCGpB,KAAK,IAAII,YAAT,IAAyBI,YAAzB,IAAyCI,YAAzC,gBACF,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE,OAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B;AAAnC,2QADE,gBAKF,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CA5CJ,CADF;AAmDD,CAlHM;;IAAMzC,O;UACM5C,W,EACAD,W,EACIkB,c,EAGYhB,Q,EAMmCc,iB,EAMAA,iB,EAMAA,iB,EAqCpEC,e;;;MA7DW4B,O;AAoHbA,OAAO,CAAC0C,YAAR,GAAuB;AACrB9D,EAAAA,UAAU,EAAE;AADS,CAAvB;AAIA,eAAeoB,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Column from '../../atomic-ui/components/Column'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Button from '../../atomic-ui/components/Button'\nimport Input from '../../atomic-ui/components/Input'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition'\nimport { getLabelRole, hasAccess } from '../../atomic-ui/utils/functions'\n\nimport { useMutationEffect } from '../../hooks/useMutationEffect'\nimport { useUpdateEffect } from '../../hooks/useUpdateEffect'\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { setModal } from '../../store/actions/modal'\nimport queries from '../../graphql/queries'\nimport { CentralAlert } from '../Processed'\nimport { Loader } from '../Styled'\nimport Form from '../Form'\n\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const hasResponsibleMember = (member) => {\n  const hasPurposeProject = hasAccess(member, 'PURPOSE_PROJECT')\n  const hasPurposeArticle = hasAccess(member, 'PURPOSE_ARTICLE')\n  return hasPurposeProject && hasPurposeArticle\n}\n\nexport const ResponsibleMark = () => (\n  <React.Fragment>\n    <span> | </span>\n    <Tooltip text={'Ответственный'}>\n      <Icon icon={'shieldDone'} size={'xs'} stroke={'var(--ghost-color-text)'} />\n    </Tooltip>\n  </React.Fragment>\n)\n\nexport const Invite = () => {\n  const dispatch = useDispatch()\n\n  const hideModal = () => dispatch(setModal(null))\n\n  const onSubmit = (form, action) => {\n    action({\n      variables: {\n        email: form.email\n      }\n    })\n    hideModal()\n  }\n\n  return (\n    <Form\n      appearance={'clear'}\n      style={{ padding: 'var(--default-gap)' }}\n      mutation={queries.INVITE_USER_MEMBER}\n      onSubmit={onSubmit}>\n      {({ register, loading }) => (\n        <React.Fragment>\n          <Column>\n            <Input\n              type={'text'}\n              name={'email'}\n              ref={register({ required: true })}\n              placeholder={'Введите Эл. почту'}\n              appearance={'ghost'}\n              disabled={loading}\n              autoComplete={'off'}\n            />\n          </Column>\n\n          <Row>\n            <Button\n              style={{ flexGrow: 1 }}\n              type={'button'}\n              appearance={'ghost'}\n              disabled={loading}\n              onClick={hideModal}>\n              Отмена\n            </Button>\n            <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n              Пригласить\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport const Members = ({ user, style, appearance, className, onMemberLink }) => {\n  const authUser = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const { setQuery } = useEntityQuery()\n  const [members, setMembers] = useState([])\n\n  const { data, loading, error } = useQuery(queries.GET_USER_MEMBERS, {\n    variables: {\n      email: user || authUser.email\n    }\n  })\n\n  const [exclude, { loading: loadingExclude, error: errorExclude }] = useMutationEffect(\n    queries.EXCLUDE_USER_MEMBER,\n    'excludeUserMember',\n    setMembers\n  )\n\n  const [appoint, { loading: loadingAppoint, error: errorAppoint }] = useMutationEffect(\n    queries.APPOINT_USER_MEMBER,\n    'appointUserMember',\n    setMembers\n  )\n\n  const [dismiss, { loading: loadingDismiss, error: errorDismiss }] = useMutationEffect(\n    queries.DISMISS_USER_MEMBER,\n    'dismissUserMember',\n    setMembers\n  )\n\n  const getDismiss = (member) => ({\n    text: 'Исключить',\n    color: 'red',\n    onClick: () => dismiss({ variables: { email: member.email } })\n  })\n\n  const getDefaultActions = (member) => [\n    {\n      text: 'Назначить ответственным',\n      onClick: () => appoint({ variables: { email: member.email } })\n    },\n    getDismiss(member)\n  ]\n\n  const getResponsibleActions = (member) => [\n    { text: 'Снять полномочия', onClick: () => exclude({ variables: { email: member.email } }) },\n    getDismiss(member)\n  ]\n\n  const onMemberInvite = () => {\n    dispatch(\n      setModal([\n        {\n          path: '/',\n          title: 'Пригласить участника',\n          component: () => <Invite />\n        }\n      ])\n    )\n  }\n\n  useUpdateEffect(data, loading, 'getUserMembers', setMembers)\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && !loadingExclude && !loadingAppoint && !loadingDismiss && data ? (\n        <Column>\n          {members.length > 0 ? (\n            <Grid percentage={'minmax(320px, 1fr)'}>\n              {members.map((member) => (\n                <Difinition\n                  key={member.email}\n                  img={member.avatar?.path || '/images/avatar-default.png'}\n                  label={\n                    <MarkedText>\n                      <span>{getLabelRole(member.account)}</span>\n                      {hasResponsibleMember(member) && <ResponsibleMark />}\n                    </MarkedText>\n                  }\n                  text={member.name}\n                  actions={\n                    authUser.email === user &&\n                    (hasResponsibleMember(member)\n                      ? getResponsibleActions(member)\n                      : getDefaultActions(member))\n                  }\n                  onLink={() => setQuery(member.email, 'user', onMemberLink)}\n                  stretch\n                />\n              ))}\n            </Grid>\n          ) : (\n            <CentralAlert>Кажется в кашей компании никого нет!</CentralAlert>\n          )}\n\n          {authUser.email === user && (\n            <Row>\n              <Button style={{ flexGrow: 1 }} type={'button'} onClick={onMemberInvite}>\n                Пригласить участника\n              </Button>\n            </Row>\n          )}\n        </Column>\n      ) : error || errorExclude || errorAppoint || errorDismiss ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о участниках\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nMembers.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Members\n"]},"metadata":{},"sourceType":"module"}