{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport UserCard from '../../UserCard';\nimport CategoryCard from '../../CategoryCard';\nimport ArticleCard from '../../ArticleCard';\nimport ProjectCard from '../../ProjectCard';\nimport TicketCard from '../../TicketCard';\nimport RoleCard from '../../RoleCard';\nimport queries from '../../../graphql/queries';\nexport const entities = [{\n  value: 'getUsers',\n  label: 'Пользователи',\n  singlePath: 'user',\n  originPath: 'users',\n  query: queries.GET_USERS,\n  deleteQuery: queries.DELETE_USER,\n  deleteEntityMultiText: 'Пользователи',\n  deleteEntitySingleText: 'Пользователь',\n  render: (item, props) => /*#__PURE__*/React.createElement(UserCard, _extends({}, props, {\n    user: item\n  }))\n}, {\n  value: 'getCategories',\n  label: 'Категории',\n  singlePath: 'category',\n  originPath: 'categories',\n  query: queries.GET_CATEGORIES,\n  deleteQuery: queries.DELETE_CATEGORY,\n  deleteEntityMultiText: 'Категории',\n  deleteEntitySingleText: 'Категория',\n  render: item => /*#__PURE__*/React.createElement(CategoryCard, {\n    category: item\n  })\n}, {\n  value: 'getArticles',\n  label: 'Статьи',\n  singlePath: 'article',\n  originPath: 'articles',\n  query: queries.GET_ARTICLES,\n  deleteQuery: queries.DELETE_ARTICLE,\n  deleteEntityMultiText: 'Статьи',\n  deleteEntitySingleText: 'Статья',\n  render: item => /*#__PURE__*/React.createElement(ArticleCard, {\n    article: item\n  })\n}, {\n  value: 'getProjects',\n  label: 'Проекты',\n  singlePath: 'project',\n  originPath: 'projects',\n  query: queries.GET_PROJECTS,\n  deleteQuery: queries.DELETE_PROJECT,\n  deleteEntityMultiText: 'Продукты',\n  deleteEntitySingleText: 'Продукт',\n  render: item => /*#__PURE__*/React.createElement(ProjectCard, {\n    project: item,\n    preview: true\n  })\n}, {\n  value: 'getTickets',\n  label: 'Обращения',\n  singlePath: 'ticket',\n  originPath: 'tickets',\n  query: queries.GET_TICKETS,\n  deleteQuery: queries.DELETE_TICKET,\n  deleteEntityMultiText: 'Обращения',\n  deleteEntitySingleText: 'Обращение',\n  render: item => /*#__PURE__*/React.createElement(TicketCard, {\n    ticket: item\n  })\n}, {\n  value: 'getRoles',\n  label: 'Роли',\n  singlePath: 'role',\n  originPath: 'roles',\n  query: queries.GET_ROLES,\n  deleteQuery: queries.DELETE_ROLE,\n  deleteEntityMultiText: 'Роли',\n  deleteEntitySingleText: 'Роль',\n  render: item => /*#__PURE__*/React.createElement(RoleCard, {\n    role: item\n  })\n}];","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/Search/mocks/index.js"],"names":["React","UserCard","CategoryCard","ArticleCard","ProjectCard","TicketCard","RoleCard","queries","entities","value","label","singlePath","originPath","query","GET_USERS","deleteQuery","DELETE_USER","deleteEntityMultiText","deleteEntitySingleText","render","item","props","GET_CATEGORIES","DELETE_CATEGORY","GET_ARTICLES","DELETE_ARTICLE","GET_PROJECTS","DELETE_PROJECT","GET_TICKETS","DELETE_TICKET","GET_ROLES","DELETE_ROLE"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport UserCard from '../../UserCard'\nimport CategoryCard from '../../CategoryCard'\nimport ArticleCard from '../../ArticleCard'\nimport ProjectCard from '../../ProjectCard'\nimport TicketCard from '../../TicketCard'\nimport RoleCard from '../../RoleCard'\nimport queries from '../../../graphql/queries'\n\nexport const entities = [\n  {\n    value: 'getUsers',\n    label: 'Пользователи',\n    singlePath: 'user',\n    originPath: 'users',\n    query: queries.GET_USERS,\n    deleteQuery: queries.DELETE_USER,\n    deleteEntityMultiText: 'Пользователи',\n    deleteEntitySingleText: 'Пользователь',\n    render: (item, props) => <UserCard {...props} user={item} />\n  },\n  {\n    value: 'getCategories',\n    label: 'Категории',\n    singlePath: 'category',\n    originPath: 'categories',\n    query: queries.GET_CATEGORIES,\n    deleteQuery: queries.DELETE_CATEGORY,\n    deleteEntityMultiText: 'Категории',\n    deleteEntitySingleText: 'Категория',\n    render: (item) => <CategoryCard category={item} />\n  },\n  {\n    value: 'getArticles',\n    label: 'Статьи',\n    singlePath: 'article',\n    originPath: 'articles',\n    query: queries.GET_ARTICLES,\n    deleteQuery: queries.DELETE_ARTICLE,\n    deleteEntityMultiText: 'Статьи',\n    deleteEntitySingleText: 'Статья',\n    render: (item) => <ArticleCard article={item} />\n  },\n  {\n    value: 'getProjects',\n    label: 'Проекты',\n    singlePath: 'project',\n    originPath: 'projects',\n    query: queries.GET_PROJECTS,\n    deleteQuery: queries.DELETE_PROJECT,\n    deleteEntityMultiText: 'Продукты',\n    deleteEntitySingleText: 'Продукт',\n    render: (item) => <ProjectCard project={item} preview />\n  },\n  {\n    value: 'getTickets',\n    label: 'Обращения',\n    singlePath: 'ticket',\n    originPath: 'tickets',\n    query: queries.GET_TICKETS,\n    deleteQuery: queries.DELETE_TICKET,\n    deleteEntityMultiText: 'Обращения',\n    deleteEntitySingleText: 'Обращение',\n    render: (item) => <TicketCard ticket={item} />\n  },\n  {\n    value: 'getRoles',\n    label: 'Роли',\n    singlePath: 'role',\n    originPath: 'roles',\n    query: queries.GET_ROLES,\n    deleteQuery: queries.DELETE_ROLE,\n    deleteEntityMultiText: 'Роли',\n    deleteEntitySingleText: 'Роль',\n    render: (item) => <RoleCard role={item} />\n  }\n]\n"]},"metadata":{},"sourceType":"module"}