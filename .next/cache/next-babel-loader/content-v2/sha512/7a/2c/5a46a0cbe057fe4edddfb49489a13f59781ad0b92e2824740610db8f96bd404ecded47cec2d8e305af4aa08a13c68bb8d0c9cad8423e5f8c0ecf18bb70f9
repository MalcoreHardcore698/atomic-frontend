{"ast":null,"code":"var _jsxFileName = \"/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Snack/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Transition from '../Transition';\nimport Text, { Wrap as WrapText } from '../Text';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nconst getInfo = (type, tag) => {\n  if (type === 'success') {\n    if (tag === 'color') return 'green';\n    if (tag === 'icon') return 'check';\n    return 'var(--default-color-green)';\n  }\n\n  if (type === 'warning') {\n    if (tag === 'color') return 'orange';\n    if (tag === 'icon') return 'danger';\n    return 'var(--default-color-orange)';\n  }\n\n  if (tag === 'color') return 'red';\n  if (tag === 'icon') return 'danger';\n  return 'var(--default-color-red)';\n};\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  width: 320px;\n  cursor: pointer;\n  background: white;\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--surface-shadow);\n  padding: var(--default-gap) calc(var(--default-gap) + 5px);\n  transition: opacity 150ms ease;\n\n  ${({\n  type\n}) => type && css`\n      background: ${getInfo(type)};\n    `}\n\n  &:hover {\n    opacity: 0.85;\n  }\n\n  ${WrapText} {\n    color: white;\n  }\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`;\nexport const MarkButton = styled(Button)`\n  background: white;\n  border-radius: 50%;\n  border: none;\n\n  &:hover {\n    background: white;\n    border: none;\n  }\n`;\nexport const Snack = ({\n  type,\n  message,\n  style,\n  className,\n  onRemove\n}) => __jsx(Transition, {\n  in: true,\n  appear: true,\n  animation: 'fade',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }\n}, __jsx(Wrap, {\n  type: type,\n  className: className,\n  style: style,\n  onClick: onRemove,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }\n}, __jsx(Text, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }\n}, message), __jsx(MarkButton, {\n  kind: 'icon',\n  size: 'xs',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }\n}, __jsx(Icon, {\n  icon: getInfo(type, 'icon'),\n  stroke: getInfo(type),\n  size: 'xs',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }\n}))));\nexport default Snack;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Snack/index.js"],"names":["React","styled","css","Row","Transition","Text","Wrap","WrapText","Button","Icon","getInfo","type","tag","MarkButton","Snack","message","style","className","onRemove"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,IAAP,IAAeC,IAAI,IAAIC,QAAvB,QAAuC,SAAvC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7B,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAIC,GAAG,KAAK,OAAZ,EAAqB,OAAO,OAAP;AACrB,QAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,OAAP;AACpB,WAAO,4BAAP;AACD;;AACD,MAAID,IAAI,KAAK,SAAb,EAAwB;AACtB,QAAIC,GAAG,KAAK,OAAZ,EAAqB,OAAO,QAAP;AACrB,QAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,QAAP;AACpB,WAAO,6BAAP;AACD;;AACD,MAAIA,GAAG,KAAK,OAAZ,EAAqB,OAAO,KAAP;AACrB,MAAIA,GAAG,KAAK,MAAZ,EAAoB,OAAO,QAAP;AACpB,SAAO,0BAAP;AACD,CAdD;;AAgBA,OAAO,MAAMN,IAAI,GAAGL,MAAM,CAACE,GAAD,CAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KACAA,IAAI,IACJT,GAAI;AACR,oBAAoBQ,OAAO,CAACC,IAAD,CAAO;AAClC,KAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAIJ,QAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CO;AA6CP,OAAO,MAAMM,UAAU,GAAGZ,MAAM,CAACO,MAAD,CAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP,OAAO,MAAMM,KAAK,GAAG,CAAC;AAAEH,EAAAA,IAAF;AAAQI,EAAAA,OAAR;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA;AAAnC,CAAD,KACnB,MAAC,UAAD;AAAY,EAAA,EAAE,MAAd;AAAe,EAAA,MAAM,MAArB;AAAsB,EAAA,SAAS,EAAE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAEP,IAAZ;AAAkB,EAAA,SAAS,EAAEM,SAA7B;AAAwC,EAAA,KAAK,EAAED,KAA/C;AAAsD,EAAA,OAAO,EAAEE,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOH,OAAP,CADF,EAEE,MAAC,UAAD;AAAY,EAAA,IAAI,EAAE,MAAlB;AAA0B,EAAA,IAAI,EAAE,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAEL,OAAO,CAACC,IAAD,EAAO,MAAP,CAAnB;AAAmC,EAAA,MAAM,EAAED,OAAO,CAACC,IAAD,CAAlD;AAA0D,EAAA,IAAI,EAAE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,CADF,CADK;AAWP,eAAeG,KAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Transition from '../Transition'\nimport Text, { Wrap as WrapText } from '../Text'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nconst getInfo = (type, tag) => {\n  if (type === 'success') {\n    if (tag === 'color') return 'green'\n    if (tag === 'icon') return 'check'\n    return 'var(--default-color-green)'\n  }\n  if (type === 'warning') {\n    if (tag === 'color') return 'orange'\n    if (tag === 'icon') return 'danger'\n    return 'var(--default-color-orange)'\n  }\n  if (tag === 'color') return 'red'\n  if (tag === 'icon') return 'danger'\n  return 'var(--default-color-red)'\n}\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  width: 320px;\n  cursor: pointer;\n  background: white;\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--surface-shadow);\n  padding: var(--default-gap) calc(var(--default-gap) + 5px);\n  transition: opacity 150ms ease;\n\n  ${({ type }) =>\n    type &&\n    css`\n      background: ${getInfo(type)};\n    `}\n\n  &:hover {\n    opacity: 0.85;\n  }\n\n  ${WrapText} {\n    color: white;\n  }\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const MarkButton = styled(Button)`\n  background: white;\n  border-radius: 50%;\n  border: none;\n\n  &:hover {\n    background: white;\n    border: none;\n  }\n`\n\nexport const Snack = ({ type, message, style, className, onRemove }) => (\n  <Transition in appear animation={'fade'}>\n    <Wrap type={type} className={className} style={style} onClick={onRemove}>\n      <Text>{message}</Text>\n      <MarkButton kind={'icon'} size={'xs'}>\n        <Icon icon={getInfo(type, 'icon')} stroke={getInfo(type)} size={'xs'} />\n      </MarkButton>\n    </Wrap>\n  </Transition>\n)\n\nexport default Snack\n"]},"metadata":{},"sourceType":"module"}