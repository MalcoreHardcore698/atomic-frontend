{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Avatar from '../Avatar';\nimport Title from '../Title';\nimport Text from '../Text';\nimport DateText from '../DateText';\nexport const Wrap = styled.div`\n  display: grid;\n  grid-template-columns: 64px 1fr;\n  grid-template-areas: 'avatar opinion';\n  margin: 0;\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      grid-template-columns: 1fr 64px;\n      grid-template-areas: 'opinion avatar';\n    `}\n`;\nexport const OpinionAvatar = styled(Avatar)`\n  grid-area: avatar;\n  transition: opacity 150ms ease;\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n    `}\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const Opinion = styled.div`\n  position: relative;\n  padding: 10px var(--default-gap) 25px var(--default-gap);\n  border-radius: var(--surface-border-radius);\n  color: white;\n  width: fit-content;\n  grid-area: opinion;\n\n  ${({\n  side\n}) => side === 'observer' && css`\n      background: var(--ghost-color-background);\n      color: var(--ghost-color-text);\n    `}\n\n  ${({\n  side\n}) => side === 'owner' && css`\n      justify-self: end;\n      background: var(--default-color-accent);\n      color: white;\n    `}\n`;\nexport const OpinionName = styled(Title)`\n  color: inherit;\n  transition: opacity 150ms ease;\n\n  ${({\n  onClick\n}) => onClick && css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`;\nexport const OpinionText = styled(Text)`\n  color: inherit;\n`;\nexport const DispatchTime = styled(DateText)`\n  position: absolute;\n  right: 10px;\n  bottom: 5px;\n  font-size: var(--font-size-xs);\n`;\nexport const Message = ({\n  avatar,\n  side,\n  name,\n  text,\n  time,\n  onLink\n}) => __jsx(Wrap, {\n  side: side\n}, __jsx(OpinionAvatar, {\n  side: side,\n  src: avatar,\n  onClick: onLink\n}), __jsx(Opinion, {\n  side: side\n}, __jsx(OpinionName, {\n  tag: 'h5',\n  onClick: onLink\n}, name), __jsx(OpinionText, null, text), __jsx(DispatchTime, {\n  text: time\n})));\nMessage.defaultProps = {\n  side: 'observer',\n  text: 'Some Message',\n  time: '15:00'\n};\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}