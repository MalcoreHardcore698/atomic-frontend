{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Search from '../../atomic-ui/components/Search';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport TicketChat from '../TicketChat';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"TicketView__Wrap\",\n  componentId: \"sc-1wxiq0b-0\"\n})([\"height:100%;flex-grow:1;@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Tickets = styled(Column).withConfig({\n  displayName: \"TicketView__Tickets\",\n  componentId: \"sc-1wxiq0b-1\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\nexport const Ticket = styled(Member).withConfig({\n  displayName: \"TicketView__Ticket\",\n  componentId: \"sc-1wxiq0b-2\"\n})([\"margin:10px 0 0 0;padding:10px;border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);\"]));\nexport const LIMIT_TICKETS = 36;\nexport const fetchPolicy = {\n  fetchPolicy: 'no-cache'\n};\nexport const View = ({\n  auth,\n  ticket,\n  appearance,\n  onMemberLink,\n  onReport,\n  onAttach,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null); // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n\n  const [offsetTickets, setOffsetTickets] = useState(0);\n  const [loadingTicket, setLoadingTicket] = useState(false);\n  const [tickets, setTickets] = useState([]);\n  const documents = useSelector(state => state.documents);\n  const dispatch = useDispatch();\n  const variablesTickets = useMemo(() => ({\n    offset: offsetTickets,\n    limit: LIMIT_TICKETS\n  }), [offsetTickets]);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy\n  });\n  const [closeTicket, {\n    data: dataCloseTicket,\n    loading: loadingCloseTicket,\n    error: errorCloseTicket\n  }] = useMutation(queries.CLOSE_TICKET);\n  const [sendTicketMessage, {\n    data: dataSendMessage,\n    loading: loadingSendMessage\n  }] = useMutation(queries.SEND_TICKET_MESSAGE);\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets // fetchMore: updateTickets\n\n  } = useQuery(queries.GET_TICKETS, {\n    variables: variablesTickets,\n    fetchPolicy\n  });\n  useEffect(() => {\n    if (!loading && data !== null && data !== void 0 && data.getTicket) {\n      setCurrentTicket(data.getTicket);\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket !== null && dataCloseTicket !== void 0 && dataCloseTicket.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket;\n      setCurrentTicket(candidate);\n      dispatch(setDocuments((documents || []).map(document => document.id === candidate.id ? candidate : document)));\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket]);\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets(dataTickets.getTickets);\n    }\n  }, [dataTickets, loadingTickets]);\n  useEffect(() => {\n    if (!loadingSendMessage && dataSendMessage) {\n      setCurrentTicket(prev => ({ ...prev,\n        messages: dataSendMessage.sendTicketMessage\n      }));\n    }\n  }, [dataSendMessage, loadingSendMessage]);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Tickets, null, /*#__PURE__*/React.createElement(Search, {\n    appearance: 'ghost',\n    onSubmit: () => {}\n  }), !loadingTickets ? tickets.map(item => {\n    var _item$author;\n\n    return /*#__PURE__*/React.createElement(Ticket, {\n      key: item.id,\n      name: item.title,\n      position: (_item$author = item.author) === null || _item$author === void 0 ? void 0 : _item$author.name,\n      active: currentTicket && currentTicket.id === item.id,\n      onClick: async () => {\n        setLoadingTicket(true);\n        await refetch({\n          id: item.id\n        });\n        setCurrentTicket(item);\n        setLoadingTicket(false);\n      }\n    });\n  }) : errorTickets ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      marginTop: 15,\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(TicketChat, {\n    auth: auth,\n    ticket: currentTicket,\n    loading: loading || loadingSendMessage || loadingTicket || loadingTickets || errorCloseTicket,\n    onLink: onMemberLink,\n    onFinish: () => closeTicket({\n      variables: {\n        id: ticket\n      }\n    }),\n    onReport: onReport,\n    onAttach: onAttach,\n    onSubmit: value => {\n      var _currentTicket$author;\n\n      return sendTicketMessage({\n        variables: {\n          ticket: currentTicket.id,\n          recipient: (_currentTicket$author = currentTicket.author) === null || _currentTicket$author === void 0 ? void 0 : _currentTicket$author.email,\n          text: value\n        }\n      });\n    }\n  }));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketView/index.js"],"names":["React","useState","useEffect","useMemo","styled","css","useQuery","useMutation","useSelector","useDispatch","Row","Column","Member","Alert","Search","Spinner","TicketChat","setDocuments","queries","Loader","Wrap","appearance","Tickets","Ticket","active","LIMIT_TICKETS","fetchPolicy","View","auth","ticket","onMemberLink","onReport","onAttach","props","currentTicket","setCurrentTicket","offsetTickets","setOffsetTickets","loadingTicket","setLoadingTicket","tickets","setTickets","documents","state","dispatch","variablesTickets","offset","limit","data","loading","refetch","GET_TICKET","variables","id","closeTicket","dataCloseTicket","loadingCloseTicket","error","errorCloseTicket","CLOSE_TICKET","sendTicketMessage","dataSendMessage","loadingSendMessage","SEND_TICKET_MESSAGE","dataTickets","loadingTickets","errorTickets","GET_TICKETS","getTicket","candidate","map","document","getTickets","prev","messages","item","title","author","name","marginTop","width","textAlign","value","recipient","email","text","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Search from '../../atomic-ui/components/Search'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport TicketChat from '../TicketChat'\nimport { setDocuments } from '../../store/actions/documents'\nimport queries from '../../graphql/queries'\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Tickets = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Ticket = styled(Member)`\n  margin: 10px 0 0 0;\n  padding: 10px;\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n    `}\n`\n\nexport const LIMIT_TICKETS = 36\n\nexport const fetchPolicy = {\n  fetchPolicy: 'no-cache'\n}\n\nexport const View = ({ auth, ticket, appearance, onMemberLink, onReport, onAttach, ...props }) => {\n  const [currentTicket, setCurrentTicket] = useState(null)\n  // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n  const [offsetTickets, setOffsetTickets] = useState(0)\n  const [loadingTicket, setLoadingTicket] = useState(false)\n  const [tickets, setTickets] = useState([])\n  const documents = useSelector((state) => state.documents)\n  const dispatch = useDispatch()\n\n  const variablesTickets = useMemo(\n    () => ({\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    }),\n    [offsetTickets]\n  )\n\n  const { data, loading, refetch } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy\n  })\n\n  const [\n    closeTicket,\n    { data: dataCloseTicket, loading: loadingCloseTicket, error: errorCloseTicket }\n  ] = useMutation(queries.CLOSE_TICKET)\n\n  const [sendTicketMessage, { data: dataSendMessage, loading: loadingSendMessage }] = useMutation(\n    queries.SEND_TICKET_MESSAGE\n  )\n\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets\n    // fetchMore: updateTickets\n  } = useQuery(queries.GET_TICKETS, {\n    variables: variablesTickets,\n    fetchPolicy\n  })\n\n  useEffect(() => {\n    if (!loading && data?.getTicket) {\n      setCurrentTicket(data.getTicket)\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket?.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket\n\n      setCurrentTicket(candidate)\n      dispatch(\n        setDocuments(\n          (documents || []).map((document) => (document.id === candidate.id ? candidate : document))\n        )\n      )\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket])\n\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets(dataTickets.getTickets)\n    }\n  }, [dataTickets, loadingTickets])\n\n  useEffect(() => {\n    if (!loadingSendMessage && dataSendMessage) {\n      setCurrentTicket((prev) => ({\n        ...prev,\n        messages: dataSendMessage.sendTicketMessage\n      }))\n    }\n  }, [dataSendMessage, loadingSendMessage])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Tickets>\n        <Search appearance={'ghost'} onSubmit={() => {}} />\n        {!loadingTickets ? (\n          tickets.map((item) => (\n            <Ticket\n              key={item.id}\n              name={item.title}\n              position={item.author?.name}\n              active={currentTicket && currentTicket.id === item.id}\n              onClick={async () => {\n                setLoadingTicket(true)\n                await refetch({ id: item.id })\n                setCurrentTicket(item)\n                setLoadingTicket(false)\n              }}\n            />\n          ))\n        ) : errorTickets ? (\n          <Alert appearance={'error'} style={{ marginTop: 15, width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )}\n      </Tickets>\n      <TicketChat\n        auth={auth}\n        ticket={currentTicket}\n        loading={\n          loading || loadingSendMessage || loadingTicket || loadingTickets || errorCloseTicket\n        }\n        onLink={onMemberLink}\n        onFinish={() =>\n          closeTicket({\n            variables: {\n              id: ticket\n            }\n          })\n        }\n        onReport={onReport}\n        onAttach={onAttach}\n        onSubmit={(value) =>\n          sendTicketMessage({\n            variables: {\n              ticket: currentTicket.id,\n              recipient: currentTicket.author?.email,\n              text: value\n            }\n          })\n        }\n      />\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}