{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.figure`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  cursor: crosshair;\n`;\nexport const Magnify = styled.div`\n  position: absolute !important;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: var(--z-12);\n  border-radius: var(--surface-border-radius);\n  background-repeat: no-repeat;\n  opacity: 1 !important;\n  cursor: crosshair !important;\n\n  ${({\n  portal,\n  scale,\n  bottomOffset\n}) => portal && css`\n      top: calc(-${bottomOffset || 100}% - 15px);\n      border: var(--surface-border);\n      box-shadow: var(--default-shadow);\n      border-radius: ${8 / scale};\n      transform: scale(${scale});\n    `}\n`;\nexport const Source = styled.img`\n  overflow: hidden;\n  border-radius: var(--surface-border-radius);\n  opacity: 1 !important;\n  cursor: crosshair !important;\n`;\nexport const Image = (_ref) => {\n  let {\n    src,\n    width,\n    height,\n    portal,\n    magnify,\n    scale,\n    multiply,\n    bottomOffset\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"src\", \"width\", \"height\", \"portal\", \"magnify\", \"scale\", \"multiply\", \"bottomOffset\"]);\n\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    backgroundImage: `url(${src})`,\n    backgroundPosition: '0% 0%',\n    display: 'none'\n  });\n  const {\n    0: opacity,\n    1: setOpacity\n  } = useState(1);\n\n  const handleMouseMove = e => {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = e.target.getBoundingClientRect();\n    const x = (e.pageX - left) / width * 100;\n    const y = (e.pageY - top) / height * 100;\n    setOpacity(0);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      backgroundSize: `${100 * multiply}%`,\n      backgroundPosition: `${x}% ${y}%`,\n      display: 'flex'\n    }));\n  };\n\n  const handleMouseLeave = () => {\n    setOpacity(1);\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      backgroundPosition: '0% 0%',\n      backgroundSize: '100%',\n      display: 'none'\n    }));\n  };\n\n  return magnify ? __jsx(Wrap, {\n    style: {\n      width,\n      height\n    },\n    onMouseMove: !portal ? handleMouseMove : () => {},\n    onMouseLeave: !portal ? handleMouseLeave : () => {}\n  }, __jsx(Magnify, _extends({}, props, {\n    style: _objectSpread(_objectSpread({}, state), {}, {\n      width,\n      height\n    }),\n    bottomOffset: bottomOffset,\n    portal: portal,\n    scale: scale\n  })), __jsx(Source, _extends({}, props, {\n    src: src,\n    onMouseMove: portal && handleMouseMove,\n    onMouseLeave: portal && handleMouseLeave,\n    style: {\n      width,\n      height,\n      opacity\n    }\n  }))) : __jsx(Source, _extends({}, props, {\n    src: src,\n    style: {\n      width,\n      height\n    }\n  }));\n};\nImage.defaultProps = {\n  bottomOffset: 125,\n  multiply: 3,\n  scale: 2\n};\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}