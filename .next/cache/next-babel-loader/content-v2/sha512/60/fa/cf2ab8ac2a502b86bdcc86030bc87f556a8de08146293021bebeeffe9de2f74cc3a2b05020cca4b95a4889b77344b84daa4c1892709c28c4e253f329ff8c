{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Card\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Text from '../Text';\nimport Image from '../Image';\nexport const Wrap = styled(Row)`\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 96px;\n  align-items: center;\n  padding: var(--default-gap);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  p {\n    font-size: var(--font-h3);\n    font-weight: 700;\n    color: white;\n\n    ${({\n  type,\n  color\n}) => (type !== 'solid' || !type) && color && css`\n        padding-left: 15px;\n        color: #232323;\n      `}\n  }\n\n  ${({\n  type,\n  color\n}) => (type !== 'solid' || !type) && color && css`\n      &::before {\n        content: '';\n        position: absolute;\n        top: 10px;\n        left: 0;\n        width: 3px;\n        height: calc(100% - 20px);\n        background: ${color.accent};\n        border-radius: 0 var(--surface-border-radius) var(--surface-border-radius) 0;\n      }\n    `}\n\n  ${({\n  type\n}) => type === 'solid' && css`\n      font-size: var(--font-h3);\n      font-weight: 700;\n      color: white;\n    `}\n\n  ${({\n  type,\n  color\n}) => type === 'solid' && color && css`\n      background: ${color.accent};\n      border: none;\n    `}\n`;\nexport const Extras = styled.span`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  transform: rotate(15deg);\n\n  ${({\n  type,\n  color\n}) => type === 'solid' && color && css`\n      position: relative;\n      top: 4px;\n      font-size: 60px;\n      font-weight: 700;\n      color: ${color.dim};\n      line-height: 0;\n      transform: rotate(0);\n\n      svg {\n        path,\n        circle {\n          stroke: ${color.dim};\n        }\n        transform: scale(2.35);\n      }\n    `}\n`;\nexport const getColor = color => {\n  switch (color) {\n    case 'blue':\n      return {\n        accent: '#009EE3',\n        dim: '#3EC0F0'\n      };\n\n    case 'orange':\n      return {\n        accent: '#F07C00',\n        dim: '#F39300'\n      };\n\n    case 'green':\n      return {\n        accent: '#93C11C',\n        dim: '#B8CF21'\n      };\n\n    case 'purple':\n      return {\n        accent: '#4065AD',\n        dim: '#697DBD'\n      };\n\n    case 'red':\n      return {\n        accent: '#E40039',\n        dim: '#EA4C60'\n      };\n\n    case 'pink':\n      return {\n        accent: '#A71380',\n        dim: '#B44996'\n      };\n\n    default:\n      return {\n        accent: 'white',\n        dim: 'white'\n      };\n  }\n};\nexport const Card = (_ref) => {\n  let {\n    text,\n    color,\n    extras,\n    type\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"text\", \"color\", \"extras\", \"type\"]);\n\n  return __jsx(Wrap, _extends({\n    type: type,\n    color: getColor(color)\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, text), __jsx(Extras, {\n    type: type,\n    color: getColor(color),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, typeof extras === 'string' ? __jsx(Image, {\n    src: extras,\n    alt: 'Icon',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }) : extras));\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Card/index.js"],"names":["React","styled","css","Row","Text","Image","Wrap","type","color","accent","Extras","span","dim","getColor","Card","text","extras","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Text from '../Text'\nimport Image from '../Image'\n\nexport const Wrap = styled(Row)`\n  position: relative;\n  display: grid;\n  grid-template-columns: 1fr 96px;\n  align-items: center;\n  padding: var(--default-gap);\n  background: var(--surface-background);\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  p {\n    font-size: var(--font-h3);\n    font-weight: 700;\n    color: white;\n\n    ${({ type, color }) =>\n      (type !== 'solid' || !type) &&\n      color &&\n      css`\n        padding-left: 15px;\n        color: #232323;\n      `}\n  }\n\n  ${({ type, color }) =>\n    (type !== 'solid' || !type) &&\n    color &&\n    css`\n      &::before {\n        content: '';\n        position: absolute;\n        top: 10px;\n        left: 0;\n        width: 3px;\n        height: calc(100% - 20px);\n        background: ${color.accent};\n        border-radius: 0 var(--surface-border-radius) var(--surface-border-radius) 0;\n      }\n    `}\n\n  ${({ type }) =>\n    type === 'solid' &&\n    css`\n      font-size: var(--font-h3);\n      font-weight: 700;\n      color: white;\n    `}\n\n  ${({ type, color }) =>\n    type === 'solid' &&\n    color &&\n    css`\n      background: ${color.accent};\n      border: none;\n    `}\n`\n\nexport const Extras = styled.span`\n  display: flex;\n  justify-self: center;\n  align-self: center;\n  transform: rotate(15deg);\n\n  ${({ type, color }) =>\n    type === 'solid' &&\n    color &&\n    css`\n      position: relative;\n      top: 4px;\n      font-size: 60px;\n      font-weight: 700;\n      color: ${color.dim};\n      line-height: 0;\n      transform: rotate(0);\n\n      svg {\n        path,\n        circle {\n          stroke: ${color.dim};\n        }\n        transform: scale(2.35);\n      }\n    `}\n`\n\nexport const getColor = (color) => {\n  switch (color) {\n    case 'blue':\n      return { accent: '#009EE3', dim: '#3EC0F0' }\n    case 'orange':\n      return { accent: '#F07C00', dim: '#F39300' }\n    case 'green':\n      return { accent: '#93C11C', dim: '#B8CF21' }\n    case 'purple':\n      return { accent: '#4065AD', dim: '#697DBD' }\n    case 'red':\n      return { accent: '#E40039', dim: '#EA4C60' }\n    case 'pink':\n      return { accent: '#A71380', dim: '#B44996' }\n    default:\n      return { accent: 'white', dim: 'white' }\n  }\n}\n\nexport const Card = ({ text, color, extras, type, ...props }) => (\n  <Wrap type={type} color={getColor(color)} {...props}>\n    <Text>{text}</Text>\n    <Extras type={type} color={getColor(color)}>\n      {typeof extras === 'string' ? <Image src={extras} alt={'Icon'} /> : extras}\n    </Extras>\n  </Wrap>\n)\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}