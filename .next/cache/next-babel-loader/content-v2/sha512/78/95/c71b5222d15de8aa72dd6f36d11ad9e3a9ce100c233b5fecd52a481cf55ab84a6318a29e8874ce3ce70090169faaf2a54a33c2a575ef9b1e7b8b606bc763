{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport ReactTooltip from 'react-tooltip';\nimport { v4 } from 'uuid';\nexport const Wrap = styled.div`\n  position: relative;\n  display: inline-flex;\n`;\nexport const Content = styled(ReactTooltip)`\n  padding: var(--default-gap) !important;\n  border: 1px solid var(--surface-border) !important;\n  background: var(--surface-background) !important;\n  box-shadow: var(--default-shadow) !important;\n  border-radius: var(--surface-border-radius) !important;\n  border: none !important;\n  pointer-events: initial !important;\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      padding: 0 !important;\n      border: none !important;\n      box-shadow: var(--default-shadow) !important;\n    `}\n\n  &.show {\n    opacity: 1 !important;\n  }\n\n  &::after {\n    display: none !important;\n  }\n\n  ${({\n  width\n}) => width && css`\n      width: ${width || 'auto'} !important;\n    `}\n`;\nexport const Popper = (_ref) => {\n  let {\n    body,\n    appearance,\n    children,\n    width\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"body\", \"appearance\", \"children\", \"width\"]);\n\n  const id = `popper-${v4()}`;\n  return __jsx(Wrap, null, __jsx(\"div\", {\n    \"data-event\": 'click focus',\n    \"data-for\": id,\n    \"data-tip\": true\n  }, children), __jsx(Content, _extends({}, props, {\n    id: id,\n    width: width,\n    globalEventOff: 'click',\n    appearance: appearance\n  }), body));\n};\nPopper.defaultProps = {\n  place: 'top',\n  effect: 'solid',\n  appearance: 'default'\n};\nexport default Popper;","map":null,"metadata":{},"sourceType":"module"}