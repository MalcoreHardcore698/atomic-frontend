{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 } from 'uuid';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Title from '../../atomic-ui/components/Title';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Select from '../../atomic-ui/components/Select';\nimport TextArea from '../../atomic-ui/components/TextArea';\nimport TextEditor from '../../atomic-ui/components/TextEditor';\nimport CharacteristicEditor from '../../atomic-ui/components/CharacteristicEditor';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport ActionRow from '../../atomic-ui/components/ActionRow';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Icon from '../../atomic-ui/components/Icon';\nimport { getLabelStatus, getLabelCategory, getLabelRole, getFileSize } from '../../atomic-ui/utils/functions';\nimport Form from '../Form';\nimport { Loader } from '../Styled';\nimport { setProjectMembers, setProjectScreenshots, setProjectFiles } from '../../store/actions/root';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nexport const AdaptiveRow = styled(Row).withConfig({\n  displayName: \"FormProject__AdaptiveRow\",\n  componentId: \"sc-1t0r6a3-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-wrap:wrap;}\"]);\n_c = AdaptiveRow;\nexport const Preview = styled(Dropzone).withConfig({\n  displayName: \"FormProject__Preview\",\n  componentId: \"sc-1t0r6a3-1\"\n})([\"width:40%;height:289px;@media only screen and (max-width:768px){width:100%;height:256px;}\"]);\n_c2 = Preview;\nexport const General = styled(Column).withConfig({\n  displayName: \"FormProject__General\",\n  componentId: \"sc-1t0r6a3-2\"\n})([\"width:60%;@media only screen and (max-width:768px){width:100%;}\"]);\n_c3 = General;\nexport const DescriptionArea = styled(TextArea).withConfig({\n  displayName: \"FormProject__DescriptionArea\",\n  componentId: \"sc-1t0r6a3-3\"\n})([\"height:100%;\"]);\n_c4 = DescriptionArea;\nexport const RemoveTooltip = styled(Tooltip).withConfig({\n  displayName: \"FormProject__RemoveTooltip\",\n  componentId: \"sc-1t0r6a3-4\"\n})([\"display:none;\"]);\n_c5 = RemoveTooltip;\nexport const AlignmentRow = styled(Row).withConfig({\n  displayName: \"FormProject__AlignmentRow\",\n  componentId: \"sc-1t0r6a3-5\"\n})([\"position:relative;justify-content:space-between;align-items:center;&:hover{\", \"{display:flex;}}\"], RemoveTooltip);\n_c6 = AlignmentRow;\nexport const Project = ({\n  project,\n  companies,\n  categories,\n  statuses,\n  mutation,\n  appearance,\n  className,\n  canEditStatus,\n  onMemberAdd,\n  onScreenshotAdd,\n  onFileAdd,\n  onMemberRemove,\n  onScreenshotRemove,\n  onFileRemove,\n  onSubmit,\n  isPurpose\n}) => {\n  _s();\n\n  var _project$characterist;\n\n  const {\n    data,\n    loading: loadingData,\n    error\n  } = project ? useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  }) : {\n    data: {\n      getProject: {}\n    },\n    loading: false,\n    error: false\n  };\n  const [isPreviewCharacteristics, setIsPreviewCharacteristics] = useState((project === null || project === void 0 ? void 0 : (_project$characterist = project.characteristics) === null || _project$characterist === void 0 ? void 0 : _project$characterist.length) > 0);\n  const {\n    members,\n    screenshots,\n    files\n  } = useSelector(state => ({\n    members: state.root.members,\n    screenshots: state.root.screenshots,\n    files: state.root.files\n  }));\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!loadingData && data) {\n      var _data$getProject, _data$getProject2, _data$getProject3;\n\n      if ((_data$getProject = data.getProject) !== null && _data$getProject !== void 0 && _data$getProject.members) {\n        dispatch(setProjectMembers(data.getProject.members));\n      }\n\n      if ((_data$getProject2 = data.getProject) !== null && _data$getProject2 !== void 0 && _data$getProject2.screenshots) {\n        dispatch(setProjectScreenshots(data.getProject.screenshots));\n      }\n\n      if ((_data$getProject3 = data.getProject) !== null && _data$getProject3 !== void 0 && _data$getProject3.files) {\n        dispatch(setProjectFiles(data.getProject.files));\n      }\n    }\n  }, [loadingData, data]);\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: (form, action) => onSubmit({ ...form,\n      members,\n      screenshots,\n      files\n    }, action)\n  }, ({\n    register,\n    loading,\n    errors,\n    control,\n    getValues\n  }) => {\n    var _data$getProject4, _data$getProject5, _data$getProject6, _data$getProject7, _data$getProject8, _data$getProject9, _data$getProject10, _data$getProject11, _data$getProject12, _data$getProject13;\n\n    return !loading && !loadingData && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(AdaptiveRow, null, errors && errors.preview && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u043F\\u0440\\u0435\\u0432\\u044C\\u044E\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'preview',\n      control: control,\n      rules: {\n        required: true\n      },\n      defaultValue: getValues('preview') || ((_data$getProject4 = data.getProject) === null || _data$getProject4 === void 0 ? void 0 : _data$getProject4.preview) || null,\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Preview, {\n        accept: 'image/*',\n        defaultValue: value,\n        onChange: onChange,\n        placeholder: 'Перетащите сюда изображение для превью',\n        tooltip: 'Разрешение: 700x600px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n      })\n    }), /*#__PURE__*/React.createElement(General, null, errors && errors.title && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      name: 'title',\n      ref: register({\n        required: true\n      }),\n      defaultValue: getValues('title') || ((_data$getProject5 = data.getProject) === null || _data$getProject5 === void 0 ? void 0 : _data$getProject5.title),\n      placeholder: 'Название',\n      appearance: 'ghost',\n      disabled: loading\n    }), /*#__PURE__*/React.createElement(Controller, {\n      name: 'company',\n      control: control,\n      defaultValue: getValues('company') || ((_data$getProject6 = data.getProject) !== null && _data$getProject6 !== void 0 && _data$getProject6.company ? {\n        value: data.getProject.company.id,\n        label: data.getProject.company.name\n      } : null),\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Select, {\n        options: !loading && companies ? companies.map(user => ({\n          value: user,\n          label: user.name\n        })) : [],\n        appearance: 'ghost',\n        defaultValue: value,\n        placeholder: 'Выберите компанию',\n        onChange: onChange,\n        isLoading: loading,\n        isSearchable: true\n      })\n    }), /*#__PURE__*/React.createElement(Controller, {\n      name: 'category',\n      control: control,\n      defaultValue: getValues('category') || ((_data$getProject7 = data.getProject) !== null && _data$getProject7 !== void 0 && _data$getProject7.category ? {\n        value: data.getProject.category.id,\n        label: getLabelCategory(data.getProject.category.name)\n      } : null),\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Select, {\n        appearance: 'ghost',\n        placeholder: 'Выберите раздел',\n        options: categories.filter(category => category.type === 'DIVISION').map(item => ({\n          value: item.id,\n          label: getLabelCategory(item.name)\n        })),\n        onChange: onChange,\n        defaultValue: value,\n        isLoading: loading,\n        isClearable: true\n      })\n    }), errors && errors.description && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), /*#__PURE__*/React.createElement(DescriptionArea, {\n      ref: register(),\n      name: 'description',\n      appearance: 'ghost',\n      defaultValue: getValues('description') || ((_data$getProject8 = data.getProject) === null || _data$getProject8 === void 0 ? void 0 : _data$getProject8.description),\n      placeholder: 'Описание',\n      disabled: loading\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(AdaptiveRow, {\n      style: {\n        justifyContent: 'space-between'\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u0425\\u0430\\u0440\\u0430\\u043A\\u0442\\u0435\\u0440\\u0438\\u0441\\u0442\\u0438\\u043A\\u0438\"), /*#__PURE__*/React.createElement(Checkbox, {\n      label: 'Превью' // disabled={\n      //   getValues('characteristics')?.length === 0 ||\n      //   data.getProject?.characteristics?.length === 0\n      // }\n      ,\n      defaultChecked: isPreviewCharacteristics,\n      onChecked: setIsPreviewCharacteristics,\n      rtl: true\n    })), isPreviewCharacteristics && /*#__PURE__*/React.createElement(CharacteristicEditor, {\n      appearance: 'ghost',\n      defaultValue: getValues('characteristics') || ((_data$getProject9 = data.getProject) === null || _data$getProject9 === void 0 ? void 0 : _data$getProject9.characteristics) || null,\n      readOnly: true\n    }), /*#__PURE__*/React.createElement(Controller, {\n      name: 'characteristics',\n      control: control,\n      defaultValue: getValues('characteristics') || ((_data$getProject10 = data.getProject) === null || _data$getProject10 === void 0 ? void 0 : _data$getProject10.characteristics) || null,\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(CharacteristicEditor, {\n        appearance: 'ghost',\n        defaultValue: value,\n        onChange: onChange\n      })\n    }), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u0421\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435\"), errors && errors.body && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'body',\n      control: control,\n      rules: {\n        required: true\n      },\n      defaultValue: getValues('body') || ((_data$getProject11 = data.getProject) === null || _data$getProject11 === void 0 ? void 0 : _data$getProject11.body) || null,\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(TextEditor, {\n        apiKey: config.get('tiny-key'),\n        appearance: 'ghost',\n        defaultValue: value,\n        onChange: onChange\n      })\n    }), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(Column, {\n      style: {\n        flexGrow: 1\n      }\n    }, /*#__PURE__*/React.createElement(ActionRow, {\n      title: 'Участники проeкта',\n      onAdd: onMemberAdd || (() => {}),\n      action: true\n    }), (members === null || members === void 0 ? void 0 : members.length) > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      percentage: 'minmax(320px, 1fr)'\n    }, members.map(member => {\n      var _member$value, _member$value2, _member$value2$avatar, _member$avatar, _member$value3, _member$value4;\n\n      return /*#__PURE__*/React.createElement(AlignmentRow, {\n        key: v4()\n      }, /*#__PURE__*/React.createElement(Difinition, {\n        key: ((_member$value = member.value) === null || _member$value === void 0 ? void 0 : _member$value.email) || (member === null || member === void 0 ? void 0 : member.email),\n        img: ((_member$value2 = member.value) === null || _member$value2 === void 0 ? void 0 : (_member$value2$avatar = _member$value2.avatar) === null || _member$value2$avatar === void 0 ? void 0 : _member$value2$avatar.path) || ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n        label: getLabelRole((member === null || member === void 0 ? void 0 : (_member$value3 = member.value) === null || _member$value3 === void 0 ? void 0 : _member$value3.account) || (member === null || member === void 0 ? void 0 : member.account)),\n        text: ((_member$value4 = member.value) === null || _member$value4 === void 0 ? void 0 : _member$value4.name) || (member === null || member === void 0 ? void 0 : member.name)\n      }), /*#__PURE__*/React.createElement(RemoveTooltip, {\n        place: 'left',\n        text: 'Удалить'\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: 'button',\n        kind: 'icon',\n        size: 'xs',\n        onClick: () => {\n          var _member$value5;\n\n          return onMemberRemove((member === null || member === void 0 ? void 0 : (_member$value5 = member.value) === null || _member$value5 === void 0 ? void 0 : _member$value5.email) || (member === null || member === void 0 ? void 0 : member.email));\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        size: 'xs',\n        icon: 'delete',\n        stroke: 'white'\n      }))));\n    })) : /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        textAlign: 'center'\n      },\n      width: '100%'\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432\")), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(ActionRow, {\n      title: 'Изображения',\n      info: 'Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB',\n      onAdd: !project && onScreenshotAdd || (() => {}),\n      action: true\n    }), (screenshots === null || screenshots === void 0 ? void 0 : screenshots.length) > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      percentage: 'minmax(196px, 1fr)'\n    }, screenshots.map(screenshot => {\n      var _screenshot$file, _screenshot$file2, _screenshot$file3, _screenshot$file4;\n\n      return /*#__PURE__*/React.createElement(AlignmentRow, {\n        key: v4()\n      }, /*#__PURE__*/React.createElement(Difinition, {\n        key: screenshot.id,\n        img: screenshot.blob || ((_screenshot$file = screenshot.file) === null || _screenshot$file === void 0 ? void 0 : _screenshot$file.path) || screenshot.path,\n        label: (((_screenshot$file2 = screenshot.file) === null || _screenshot$file2 === void 0 ? void 0 : _screenshot$file2.name) || ((_screenshot$file3 = screenshot.file) === null || _screenshot$file3 === void 0 ? void 0 : _screenshot$file3.path) || (screenshot === null || screenshot === void 0 ? void 0 : screenshot.name) || (screenshot === null || screenshot === void 0 ? void 0 : screenshot.path)).split('/').slice(-1)[0],\n        text: getFileSize(screenshot.size || ((_screenshot$file4 = screenshot.file) === null || _screenshot$file4 === void 0 ? void 0 : _screenshot$file4.size))\n      }), !project && /*#__PURE__*/React.createElement(RemoveTooltip, {\n        place: 'left',\n        text: 'Удалить'\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: 'button',\n        kind: 'icon',\n        size: 'xs',\n        onClick: () => onScreenshotRemove(screenshot.id)\n      }, /*#__PURE__*/React.createElement(Icon, {\n        size: 'xs',\n        icon: 'delete',\n        stroke: 'white'\n      }))));\n    })) : /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        textAlign: 'center'\n      },\n      width: '100%'\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(ActionRow, {\n      title: 'Файлы',\n      info: 'Допустимые форматы: pdf, docx, .doc. Макс. размер: 15 MB',\n      onAdd: onFileAdd || (() => {}),\n      action: true\n    }), (files === null || files === void 0 ? void 0 : files.length) > 0 ? /*#__PURE__*/React.createElement(Grid, {\n      percentage: 'minmax(196px, 1fr)'\n    }, files.map(file => {\n      var _file$file, _file$file2, _file$file3;\n\n      return /*#__PURE__*/React.createElement(AlignmentRow, {\n        key: v4()\n      }, /*#__PURE__*/React.createElement(Difinition, {\n        key: file.id,\n        icon: 'document',\n        label: (((_file$file = file.file) === null || _file$file === void 0 ? void 0 : _file$file.name) || ((_file$file2 = file.file) === null || _file$file2 === void 0 ? void 0 : _file$file2.path) || (file === null || file === void 0 ? void 0 : file.name) || (file === null || file === void 0 ? void 0 : file.path)).split('/').slice(-1)[0],\n        text: getFileSize(file.size || ((_file$file3 = file.file) === null || _file$file3 === void 0 ? void 0 : _file$file3.size))\n      }), !project && /*#__PURE__*/React.createElement(RemoveTooltip, {\n        place: 'left',\n        text: 'Удалить'\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: 'button',\n        kind: 'icon',\n        size: 'xs',\n        onClick: () => onFileRemove(file.id)\n      }, /*#__PURE__*/React.createElement(Icon, {\n        size: 'xs',\n        icon: 'delete',\n        stroke: 'white'\n      }))));\n    })) : /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        textAlign: 'center'\n      },\n      width: '100%'\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B\"), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), errors && errors.presentation && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0441\\u0442\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u0441\\u044B\\u043B\\u043A\\u0443 \\u043D\\u0430 \\u0432\\u0438\\u0434\\u0435\\u043E\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      ref: register(),\n      name: 'presentation',\n      defaultValue: getValues('presentation') || ((_data$getProject12 = data.getProject) === null || _data$getProject12 === void 0 ? void 0 : _data$getProject12.presentation),\n      placeholder: 'Вставьте ссылку на видео',\n      label: 'Видео-презентация',\n      appearance: 'ghost',\n      disabled: loading\n    }), canEditStatus && /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), canEditStatus && /*#__PURE__*/React.createElement(Controller, {\n      name: 'status',\n      control: control,\n      defaultValue: getValues('status') || ((_data$getProject13 = data.getProject) !== null && _data$getProject13 !== void 0 && _data$getProject13.status ? {\n        value: data.getProject.status,\n        label: getLabelStatus(data.getProject.status)\n      } : null),\n      render: ({\n        value,\n        onChange\n      }) => /*#__PURE__*/React.createElement(Select, {\n        appearance: 'ghost',\n        placeholder: 'Выберите статус',\n        options: statuses.map(item => ({\n          value: item,\n          label: getLabelStatus(item)\n        })),\n        onChange: onChange,\n        defaultValue: value,\n        menuPlacement: 'top',\n        isLoading: loading,\n        isClearable: true\n      })\n    }), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'submit',\n      disabled: loading\n    }, isPurpose ? 'Предложить' : project ? 'Сохранить' : 'Создать'))) : error ? /*#__PURE__*/React.createElement(Alert, {\n      appearance: 'error',\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  });\n};\n\n_s(Project, \"ZS2ytKRR7ll5mSGgVEod34DpJmU=\", false, function () {\n  return [useQuery, useSelector, useDispatch];\n});\n\n_c7 = Project;\nexport default Project;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"AdaptiveRow\");\n$RefreshReg$(_c2, \"Preview\");\n$RefreshReg$(_c3, \"General\");\n$RefreshReg$(_c4, \"DescriptionArea\");\n$RefreshReg$(_c5, \"RemoveTooltip\");\n$RefreshReg$(_c6, \"AlignmentRow\");\n$RefreshReg$(_c7, \"Project\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormProject/index.js"],"names":["React","useState","useEffect","styled","Controller","useQuery","useSelector","useDispatch","v4","Row","Column","Grid","Title","Input","Button","Select","TextArea","TextEditor","CharacteristicEditor","Dropzone","ActionRow","Difinition","Checkbox","Spinner","Divider","Tooltip","Alert","Icon","getLabelStatus","getLabelCategory","getLabelRole","getFileSize","Form","Loader","setProjectMembers","setProjectScreenshots","setProjectFiles","queries","config","AdaptiveRow","Preview","General","DescriptionArea","RemoveTooltip","AlignmentRow","Project","project","companies","categories","statuses","mutation","appearance","className","canEditStatus","onMemberAdd","onScreenshotAdd","onFileAdd","onMemberRemove","onScreenshotRemove","onFileRemove","onSubmit","isPurpose","data","loading","loadingData","error","GET_PROJECT","variables","id","getProject","isPreviewCharacteristics","setIsPreviewCharacteristics","characteristics","length","members","screenshots","files","state","root","dispatch","form","action","register","errors","control","getValues","preview","width","required","value","onChange","title","company","label","name","map","user","category","filter","type","item","description","justifyContent","body","get","flexGrow","member","email","avatar","path","account","textAlign","screenshot","blob","file","split","slice","size","presentation","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,oBAAP,MAAiC,iDAAjC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,iCALP;AAOA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,EAAmDC,eAAnD,QAA0E,0BAA1E;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,MAAMC,WAAW,GAAGpC,MAAM,CAACM,GAAD,CAAT;AAAA;AAAA;AAAA,6FAAjB;KAAM8B,W;AAQb,OAAO,MAAMC,OAAO,GAAGrC,MAAM,CAACgB,QAAD,CAAT;AAAA;AAAA;AAAA,iGAAb;MAAMqB,O;AAUb,OAAO,MAAMC,OAAO,GAAGtC,MAAM,CAACO,MAAD,CAAT;AAAA;AAAA;AAAA,uEAAb;MAAM+B,O;AAQb,OAAO,MAAMC,eAAe,GAAGvC,MAAM,CAACa,QAAD,CAAT;AAAA;AAAA;AAAA,oBAArB;MAAM0B,e;AAIb,OAAO,MAAMC,aAAa,GAAGxC,MAAM,CAACsB,OAAD,CAAT;AAAA;AAAA;AAAA,qBAAnB;MAAMkB,a;AAIb,OAAO,MAAMC,YAAY,GAAGzC,MAAM,CAACM,GAAD,CAAT;AAAA;AAAA;AAAA,wGAMnBkC,aANmB,CAAlB;MAAMC,Y;AAYb,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,OADsB;AAEtBC,EAAAA,SAFsB;AAGtBC,EAAAA,UAHsB;AAItBC,EAAAA,QAJsB;AAKtBC,EAAAA,QALsB;AAMtBC,EAAAA,UANsB;AAOtBC,EAAAA,SAPsB;AAQtBC,EAAAA,aARsB;AAStBC,EAAAA,WATsB;AAUtBC,EAAAA,eAVsB;AAWtBC,EAAAA,SAXsB;AAYtBC,EAAAA,cAZsB;AAatBC,EAAAA,kBAbsB;AActBC,EAAAA,YAdsB;AAetBC,EAAAA,QAfsB;AAgBtBC,EAAAA;AAhBsB,CAAD,KAiBjB;AAAA;;AAAA;;AACJ,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAO,EAAEC,WAAjB;AAA8BC,IAAAA;AAA9B,MAAwCnB,OAAO,GACjDzC,QAAQ,CAACgC,OAAO,CAAC6B,WAAT,EAAsB;AAC5BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAEtB;AADK;AADiB,GAAtB,CADyC,GAMjD;AAAEgB,IAAAA,IAAI,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd,KAAR;AAA4BN,IAAAA,OAAO,EAAE,KAArC;AAA4CE,IAAAA,KAAK,EAAE;AAAnD,GANJ;AAQA,QAAM,CAACK,wBAAD,EAA2BC,2BAA3B,IAA0DtE,QAAQ,CACtE,CAAA6C,OAAO,SAAP,IAAAA,OAAO,WAAP,qCAAAA,OAAO,CAAE0B,eAAT,gFAA0BC,MAA1B,IAAmC,CADmC,CAAxE;AAGA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAkCtE,WAAW,CAAEuE,KAAD,KAAY;AAC9DH,IAAAA,OAAO,EAAEG,KAAK,CAACC,IAAN,CAAWJ,OAD0C;AAE9DC,IAAAA,WAAW,EAAEE,KAAK,CAACC,IAAN,CAAWH,WAFsC;AAG9DC,IAAAA,KAAK,EAAEC,KAAK,CAACC,IAAN,CAAWF;AAH4C,GAAZ,CAAD,CAAnD;AAKA,QAAMG,QAAQ,GAAGxE,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC8D,WAAD,IAAgBF,IAApB,EAA0B;AAAA;;AACxB,8BAAIA,IAAI,CAACO,UAAT,6CAAI,iBAAiBK,OAArB,EAA8B;AAC5BK,QAAAA,QAAQ,CAAC7C,iBAAiB,CAAC4B,IAAI,CAACO,UAAL,CAAgBK,OAAjB,CAAlB,CAAR;AACD;;AACD,+BAAIZ,IAAI,CAACO,UAAT,8CAAI,kBAAiBM,WAArB,EAAkC;AAChCI,QAAAA,QAAQ,CAAC5C,qBAAqB,CAAC2B,IAAI,CAACO,UAAL,CAAgBM,WAAjB,CAAtB,CAAR;AACD;;AACD,+BAAIb,IAAI,CAACO,UAAT,8CAAI,kBAAiBO,KAArB,EAA4B;AAC1BG,QAAAA,QAAQ,CAAC3C,eAAe,CAAC0B,IAAI,CAACO,UAAL,CAAgBO,KAAjB,CAAhB,CAAR;AACD;AACF;AACF,GAZQ,EAYN,CAACZ,WAAD,EAAcF,IAAd,CAZM,CAAT;AAcA,sBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEV,SADb;AAEE,IAAA,UAAU,EAAED,UAFd;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAIE,IAAA,QAAQ,EAAE,CAAC8B,IAAD,EAAOC,MAAP,KAAkBrB,QAAQ,CAAC,EAAE,GAAGoB,IAAL;AAAWN,MAAAA,OAAX;AAAoBC,MAAAA,WAApB;AAAiCC,MAAAA;AAAjC,KAAD,EAA2CK,MAA3C;AAJtC,KAKG,CAAC;AAAEC,IAAAA,QAAF;AAAYnB,IAAAA,OAAZ;AAAqBoB,IAAAA,MAArB;AAA6BC,IAAAA,OAA7B;AAAsCC,IAAAA;AAAtC,GAAD;AAAA;;AAAA,WACC,CAACtB,OAAD,IAAY,CAACC,WAAb,IAA4BF,IAA5B,gBACE,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAAZ,0DADF,eAGE,oBAAC,WAAD,QACGqB,MAAM,IAAIA,MAAM,CAACG,OAAjB,iBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,MAAA,UAAU,EAAE;AAA7C,qLAFJ,eAME,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,SADR;AAEE,MAAA,OAAO,EAAEH,OAFX;AAGE,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAHT;AAIE,MAAA,YAAY,EAAEH,SAAS,CAAC,SAAD,CAAT,0BAAwBvB,IAAI,CAACO,UAA7B,sDAAwB,kBAAiBiB,OAAzC,KAAoD,IAJpE;AAKE,MAAA,MAAM,EAAE,CAAC;AAAEG,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,OAAD;AACE,QAAA,MAAM,EAAE,SADV;AAEE,QAAA,YAAY,EAAED,KAFhB;AAGE,QAAA,QAAQ,EAAEC,QAHZ;AAIE,QAAA,WAAW,EAAE,wCAJf;AAKE,QAAA,OAAO,EACL;AANJ;AANJ,MANF,eAwBE,oBAAC,OAAD,QACGP,MAAM,IAAIA,MAAM,CAACQ,KAAjB,iBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,MAAA,UAAU,EAAE;AAA7C,gJAFJ,eAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,IAAI,EAAE,OAFR;AAGE,MAAA,GAAG,EAAEL,QAAQ,CAAC;AAAEM,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAHf;AAIE,MAAA,YAAY,EAAEH,SAAS,CAAC,OAAD,CAAT,0BAAsBvB,IAAI,CAACO,UAA3B,sDAAsB,kBAAiBsB,KAAvC,CAJhB;AAKE,MAAA,WAAW,EAAE,UALf;AAME,MAAA,UAAU,EAAE,OANd;AAOE,MAAA,QAAQ,EAAE5B;AAPZ,MANF,eAgBE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,SADR;AAEE,MAAA,OAAO,EAAEqB,OAFX;AAGE,MAAA,YAAY,EACVC,SAAS,CAAC,SAAD,CAAT,KACC,qBAAAvB,IAAI,CAACO,UAAL,gEAAiBuB,OAAjB,GACG;AACEH,QAAAA,KAAK,EAAE3B,IAAI,CAACO,UAAL,CAAgBuB,OAAhB,CAAwBxB,EADjC;AAEEyB,QAAAA,KAAK,EAAE/B,IAAI,CAACO,UAAL,CAAgBuB,OAAhB,CAAwBE;AAFjC,OADH,GAKG,IANJ,CAJJ;AAYE,MAAA,MAAM,EAAE,CAAC;AAAEL,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,MAAD;AACE,QAAA,OAAO,EACL,CAAC3B,OAAD,IAAYhB,SAAZ,GACIA,SAAS,CAACgD,GAAV,CAAeC,IAAD,KAAW;AACvBP,UAAAA,KAAK,EAAEO,IADgB;AAEvBH,UAAAA,KAAK,EAAEG,IAAI,CAACF;AAFW,SAAX,CAAd,CADJ,GAKI,EAPR;AASE,QAAA,UAAU,EAAE,OATd;AAUE,QAAA,YAAY,EAAEL,KAVhB;AAWE,QAAA,WAAW,EAAE,mBAXf;AAYE,QAAA,QAAQ,EAAEC,QAZZ;AAaE,QAAA,SAAS,EAAE3B,OAbb;AAcE,QAAA,YAAY;AAdd;AAbJ,MAhBF,eAgDE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,UADR;AAEE,MAAA,OAAO,EAAEqB,OAFX;AAGE,MAAA,YAAY,EACVC,SAAS,CAAC,UAAD,CAAT,KACC,qBAAAvB,IAAI,CAACO,UAAL,gEAAiB4B,QAAjB,GACG;AACER,QAAAA,KAAK,EAAE3B,IAAI,CAACO,UAAL,CAAgB4B,QAAhB,CAAyB7B,EADlC;AAEEyB,QAAAA,KAAK,EAAEhE,gBAAgB,CAACiC,IAAI,CAACO,UAAL,CAAgB4B,QAAhB,CAAyBH,IAA1B;AAFzB,OADH,GAKG,IANJ,CAJJ;AAYE,MAAA,MAAM,EAAE,CAAC;AAAEL,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE,OADd;AAEE,QAAA,WAAW,EAAE,iBAFf;AAGE,QAAA,OAAO,EAAE1C,UAAU,CAChBkD,MADM,CACED,QAAD,IAAcA,QAAQ,CAACE,IAAT,KAAkB,UADjC,EAENJ,GAFM,CAEDK,IAAD,KAAW;AACdX,UAAAA,KAAK,EAAEW,IAAI,CAAChC,EADE;AAEdyB,UAAAA,KAAK,EAAEhE,gBAAgB,CAACuE,IAAI,CAACN,IAAN;AAFT,SAAX,CAFE,CAHX;AASE,QAAA,QAAQ,EAAEJ,QATZ;AAUE,QAAA,YAAY,EAAED,KAVhB;AAWE,QAAA,SAAS,EAAE1B,OAXb;AAYE,QAAA,WAAW;AAZb;AAbJ,MAhDF,EA8EGoB,MAAM,IAAIA,MAAM,CAACkB,WAAjB,iBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,MAAA,UAAU,EAAE;AAA7C,gJA/EJ,eAmFE,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEL,QAAQ,EADf;AAEE,MAAA,IAAI,EAAE,aAFR;AAGE,MAAA,UAAU,EAAE,OAHd;AAIE,MAAA,YAAY,EAAEG,SAAS,CAAC,aAAD,CAAT,0BAA4BvB,IAAI,CAACO,UAAjC,sDAA4B,kBAAiBgC,WAA7C,CAJhB;AAKE,MAAA,WAAW,EAAE,UALf;AAME,MAAA,QAAQ,EAAEtC;AANZ,MAnFF,CAxBF,CAHF,eAyHE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MAzHF,eA2HE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEuC,QAAAA,cAAc,EAAE;AAAlB;AAApB,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAAZ,8FADF,eAEE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,QADT,CAEE;AACA;AACA;AACA;AALF;AAME,MAAA,cAAc,EAAEhC,wBANlB;AAOE,MAAA,SAAS,EAAEC,2BAPb;AAQE,MAAA,GAAG;AARL,MAFF,CA3HF,EAwIGD,wBAAwB,iBACvB,oBAAC,oBAAD;AACE,MAAA,UAAU,EAAE,OADd;AAEE,MAAA,YAAY,EACVe,SAAS,CAAC,iBAAD,CAAT,0BAAgCvB,IAAI,CAACO,UAArC,sDAAgC,kBAAiBG,eAAjD,KAAoE,IAHxE;AAKE,MAAA,QAAQ;AALV,MAzIJ,eAiJE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,iBADR;AAEE,MAAA,OAAO,EAAEY,OAFX;AAGE,MAAA,YAAY,EACVC,SAAS,CAAC,iBAAD,CAAT,2BAAgCvB,IAAI,CAACO,UAArC,uDAAgC,mBAAiBG,eAAjD,KAAoE,IAJxE;AAME,MAAA,MAAM,EAAE,CAAC;AAAEiB,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,oBAAD;AACE,QAAA,UAAU,EAAE,OADd;AAEE,QAAA,YAAY,EAAED,KAFhB;AAGE,QAAA,QAAQ,EAAEC;AAHZ;AAPJ,MAjJF,eAgKE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MAhKF,eAkKE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE;AAAZ,sEAlKF,EAmKGP,MAAM,IAAIA,MAAM,CAACoB,IAAjB,iBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEhB,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,MAAA,UAAU,EAAE;AAA7C,sJApKJ,eAwKE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,OAAO,EAAEH,OAFX;AAGE,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAHT;AAIE,MAAA,YAAY,EAAEH,SAAS,CAAC,MAAD,CAAT,2BAAqBvB,IAAI,CAACO,UAA1B,uDAAqB,mBAAiBkC,IAAtC,KAA8C,IAJ9D;AAKE,MAAA,MAAM,EAAE,CAAC;AAAEd,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,UAAD;AACE,QAAA,MAAM,EAAEpD,MAAM,CAACkE,GAAP,CAAW,UAAX,CADV;AAEE,QAAA,UAAU,EAAE,OAFd;AAGE,QAAA,YAAY,EAAEf,KAHhB;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AANJ,MAxKF,eAuLE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MAvLF,eAyLE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEe,QAAAA,QAAQ,EAAE;AAAZ;AAAf,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,mBAAlB;AAAuC,MAAA,KAAK,EAAEnD,WAAW,KAAK,MAAM,CAAE,CAAb,CAAzD;AAAyE,MAAA,MAAM;AAA/E,MADF,EAGG,CAAAoB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAED,MAAT,IAAkB,CAAlB,gBACC,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE;AAAlB,OACGC,OAAO,CAACqB,GAAR,CAAaW,MAAD;AAAA;;AAAA,0BACX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAElG,EAAE;AAArB,sBACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAE,kBAAAkG,MAAM,CAACjB,KAAP,gEAAckB,KAAd,MAAuBD,MAAvB,aAAuBA,MAAvB,uBAAuBA,MAAM,CAAEC,KAA/B,CADP;AAEE,QAAA,GAAG,EACD,mBAAAD,MAAM,CAACjB,KAAP,2FAAcmB,MAAd,gFAAsBC,IAAtB,wBACAH,MAAM,CAACE,MADP,mDACA,eAAeC,IADf,KAEA,4BALJ;AAOE,QAAA,KAAK,EAAE/E,YAAY,CAAC,CAAA4E,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEjB,KAAR,kEAAeqB,OAAf,MAA0BJ,MAA1B,aAA0BA,MAA1B,uBAA0BA,MAAM,CAAEI,OAAlC,CAAD,CAPrB;AAQE,QAAA,IAAI,EAAE,mBAAAJ,MAAM,CAACjB,KAAP,kEAAcK,IAAd,MAAsBY,MAAtB,aAAsBA,MAAtB,uBAAsBA,MAAM,CAAEZ,IAA9B;AARR,QADF,eAWE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,MAAtB;AAA8B,QAAA,IAAI,EAAE;AAApC,sBACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,OAAO,EAAE;AAAA;;AAAA,iBAAMrC,cAAc,CAAC,CAAAiD,MAAM,SAAN,IAAAA,MAAM,WAAN,8BAAAA,MAAM,CAAEjB,KAAR,kEAAekB,KAAf,MAAwBD,MAAxB,aAAwBA,MAAxB,uBAAwBA,MAAM,CAAEC,KAAhC,CAAD,CAApB;AAAA;AAJX,sBAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,IAAZ;AAAkB,QAAA,IAAI,EAAE,QAAxB;AAAkC,QAAA,MAAM,EAAE;AAA1C,QALF,CADF,CAXF,CADW;AAAA,KAAZ,CADH,CADD,gBA2BC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE;AAAb,OAAd;AAAuC,MAAA,KAAK,EAAE;AAA9C,uHA9BJ,CAzLF,eA6NE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MA7NF,eA+NE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,aADT;AAEE,MAAA,IAAI,EAAE,yDAFR;AAGE,MAAA,KAAK,EAAG,CAACjE,OAAD,IAAYS,eAAb,KAAkC,MAAM,CAAE,CAA1C,CAHT;AAIE,MAAA,MAAM;AAJR,MA/NF,EAsOG,CAAAoB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEF,MAAb,IAAsB,CAAtB,gBACC,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE;AAAlB,OACGE,WAAW,CAACoB,GAAZ,CAAiBiB,UAAD;AAAA;;AAAA,0BACf,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAExG,EAAE;AAArB,sBACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAEwG,UAAU,CAAC5C,EADlB;AAEE,QAAA,GAAG,EAAE4C,UAAU,CAACC,IAAX,yBAAmBD,UAAU,CAACE,IAA9B,qDAAmB,iBAAiBL,IAApC,KAA4CG,UAAU,CAACH,IAF9D;AAGE,QAAA,KAAK,EACH,CACE,sBAAAG,UAAU,CAACE,IAAX,wEAAiBpB,IAAjB,2BACAkB,UAAU,CAACE,IADX,sDACA,kBAAiBL,IADjB,MAEAG,UAFA,aAEAA,UAFA,uBAEAA,UAAU,CAAElB,IAFZ,MAGAkB,UAHA,aAGAA,UAHA,uBAGAA,UAAU,CAAEH,IAHZ,CADF,EAMGM,KANH,CAMS,GANT,EAOGC,KAPH,CAOS,CAAC,CAPV,EAOa,CAPb,CAJJ;AAaE,QAAA,IAAI,EAAErF,WAAW,CAACiF,UAAU,CAACK,IAAX,0BAAmBL,UAAU,CAACE,IAA9B,sDAAmB,kBAAiBG,IAApC,CAAD;AAbnB,QADF,EAgBG,CAACvE,OAAD,iBACC,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,MAAtB;AAA8B,QAAA,IAAI,EAAE;AAApC,sBACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,OAAO,EAAE,MAAMY,kBAAkB,CAACsD,UAAU,CAAC5C,EAAZ;AAJnC,sBAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,IAAZ;AAAkB,QAAA,IAAI,EAAE,QAAxB;AAAkC,QAAA,MAAM,EAAE;AAA1C,QALF,CADF,CAjBJ,CADe;AAAA,KAAhB,CADH,CADD,gBAkCC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE2C,QAAAA,SAAS,EAAE;AAAb,OAAd;AAAuC,MAAA,KAAK,EAAE;AAA9C,6HAxQJ,eA6QE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MA7QF,eA+QE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,OADT;AAEE,MAAA,IAAI,EAAE,0DAFR;AAGE,MAAA,KAAK,EAAEvD,SAAS,KAAK,MAAM,CAAE,CAAb,CAHlB;AAIE,MAAA,MAAM;AAJR,MA/QF,EAsRG,CAAAoB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEH,MAAP,IAAgB,CAAhB,gBACC,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE;AAAlB,OACGG,KAAK,CAACmB,GAAN,CAAWmB,IAAD;AAAA;;AAAA,0BACT,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE1G,EAAE;AAArB,sBACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAE0G,IAAI,CAAC9C,EADZ;AAEE,QAAA,IAAI,EAAE,UAFR;AAGE,QAAA,KAAK,EACH,CAAC,eAAA8C,IAAI,CAACA,IAAL,0DAAWpB,IAAX,qBAAmBoB,IAAI,CAACA,IAAxB,gDAAmB,YAAWL,IAA9B,MAAsCK,IAAtC,aAAsCA,IAAtC,uBAAsCA,IAAI,CAAEpB,IAA5C,MAAoDoB,IAApD,aAAoDA,IAApD,uBAAoDA,IAAI,CAAEL,IAA1D,CAAD,EACGM,KADH,CACS,GADT,EAEGC,KAFH,CAES,CAAC,CAFV,EAEa,CAFb,CAJJ;AAQE,QAAA,IAAI,EAAErF,WAAW,CAACmF,IAAI,CAACG,IAAL,oBAAaH,IAAI,CAACA,IAAlB,gDAAa,YAAWG,IAAxB,CAAD;AARnB,QADF,EAWG,CAACvE,OAAD,iBACC,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,MAAtB;AAA8B,QAAA,IAAI,EAAE;AAApC,sBACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,IAAI,EAAE,MAFR;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,OAAO,EAAE,MAAMa,YAAY,CAACuD,IAAI,CAAC9C,EAAN;AAJ7B,sBAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,IAAZ;AAAkB,QAAA,IAAI,EAAE,QAAxB;AAAkC,QAAA,MAAM,EAAE;AAA1C,QALF,CADF,CAZJ,CADS;AAAA,KAAV,CADH,CADD,gBA6BC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE2C,QAAAA,SAAS,EAAE;AAAb,OAAd;AAAuC,MAAA,KAAK,EAAE;AAA9C,yFAnTJ,eAwTE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MAxTF,EA0TG5B,MAAM,IAAIA,MAAM,CAACmC,YAAjB,iBACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE/B,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAiC,MAAA,UAAU,EAAE;AAA7C,2IA3TJ,eA+TE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,GAAG,EAAEL,QAAQ,EAFf;AAGE,MAAA,IAAI,EAAE,cAHR;AAIE,MAAA,YAAY,EAAEG,SAAS,CAAC,cAAD,CAAT,2BAA6BvB,IAAI,CAACO,UAAlC,uDAA6B,mBAAiBiD,YAA9C,CAJhB;AAKE,MAAA,WAAW,EAAE,0BALf;AAME,MAAA,KAAK,EAAE,mBANT;AAOE,MAAA,UAAU,EAAE,OAPd;AAQE,MAAA,QAAQ,EAAEvD;AARZ,MA/TF,EA0UGV,aAAa,iBAAI,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MA1UpB,EA4UGA,aAAa,iBACZ,oBAAC,UAAD;AACE,MAAA,IAAI,EAAE,QADR;AAEE,MAAA,OAAO,EAAE+B,OAFX;AAGE,MAAA,YAAY,EACVC,SAAS,CAAC,QAAD,CAAT,KACC,sBAAAvB,IAAI,CAACO,UAAL,kEAAiBkD,MAAjB,GACG;AACE9B,QAAAA,KAAK,EAAE3B,IAAI,CAACO,UAAL,CAAgBkD,MADzB;AAEE1B,QAAAA,KAAK,EAAEjE,cAAc,CAACkC,IAAI,CAACO,UAAL,CAAgBkD,MAAjB;AAFvB,OADH,GAKG,IANJ,CAJJ;AAYE,MAAA,MAAM,EAAE,CAAC;AAAE9B,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBACN,oBAAC,MAAD;AACE,QAAA,UAAU,EAAE,OADd;AAEE,QAAA,WAAW,EAAE,iBAFf;AAGE,QAAA,OAAO,EAAEzC,QAAQ,CAAC8C,GAAT,CAAcK,IAAD,KAAW;AAC/BX,UAAAA,KAAK,EAAEW,IADwB;AAE/BP,UAAAA,KAAK,EAAEjE,cAAc,CAACwE,IAAD;AAFU,SAAX,CAAb,CAHX;AAOE,QAAA,QAAQ,EAAEV,QAPZ;AAQE,QAAA,YAAY,EAAED,KARhB;AASE,QAAA,aAAa,EAAE,KATjB;AAUE,QAAA,SAAS,EAAE1B,OAVb;AAWE,QAAA,WAAW;AAXb;AAbJ,MA7UJ,eA2WE,oBAAC,OAAD;AAAS,MAAA,KAAK;AAAd,MA3WF,eA6WE,oBAAC,GAAD,qBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAE0C,QAAAA,QAAQ,EAAE;AAAZ,OAAf;AAAgC,MAAA,IAAI,EAAE,QAAtC;AAAgD,MAAA,QAAQ,EAAE1C;AAA1D,OACGF,SAAS,GAAG,YAAH,GAAkBf,OAAO,GAAG,WAAH,GAAiB,SADtD,CADF,CA7WF,CADF,GAoXImB,KAAK,gBACP,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,OAAnB;AAA4B,MAAA,KAAK,EAAE;AAAEsB,QAAAA,KAAK,EAAE,MAAT;AAAiBwB,QAAAA,SAAS,EAAE;AAA5B;AAAnC,2PADO,gBAKP,oBAAC,MAAD,qBACE,oBAAC,OAAD,OADF,CA1XH;AAAA,GALH,CADF;AAuYD,CAzbM;;GAAMlE,O;UAmBPxC,Q,EAUoCC,W,EAKvBC,W;;;MAlCNsC,O;AA2bb,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Controller } from 'react-hook-form'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Title from '../../atomic-ui/components/Title'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Select from '../../atomic-ui/components/Select'\nimport TextArea from '../../atomic-ui/components/TextArea'\nimport TextEditor from '../../atomic-ui/components/TextEditor'\nimport CharacteristicEditor from '../../atomic-ui/components/CharacteristicEditor'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport ActionRow from '../../atomic-ui/components/ActionRow'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Icon from '../../atomic-ui/components/Icon'\nimport {\n  getLabelStatus,\n  getLabelCategory,\n  getLabelRole,\n  getFileSize\n} from '../../atomic-ui/utils/functions'\n\nimport Form from '../Form'\nimport { Loader } from '../Styled'\nimport { setProjectMembers, setProjectScreenshots, setProjectFiles } from '../../store/actions/root'\nimport queries from '../../graphql/queries'\nimport config from '../../config'\n\nexport const AdaptiveRow = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`\n\nexport const Preview = styled(Dropzone)`\n  width: 40%;\n  height: 289px;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    height: 256px;\n  }\n`\n\nexport const General = styled(Column)`\n  width: 60%;\n\n  @media only screen and (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nexport const DescriptionArea = styled(TextArea)`\n  height: 100%;\n`\n\nexport const RemoveTooltip = styled(Tooltip)`\n  display: none;\n`\n\nexport const AlignmentRow = styled(Row)`\n  position: relative;\n  justify-content: space-between;\n  align-items: center;\n\n  &:hover {\n    ${RemoveTooltip} {\n      display: flex;\n    }\n  }\n`\n\nexport const Project = ({\n  project,\n  companies,\n  categories,\n  statuses,\n  mutation,\n  appearance,\n  className,\n  canEditStatus,\n  onMemberAdd,\n  onScreenshotAdd,\n  onFileAdd,\n  onMemberRemove,\n  onScreenshotRemove,\n  onFileRemove,\n  onSubmit,\n  isPurpose\n}) => {\n  const { data, loading: loadingData, error } = project\n    ? useQuery(queries.GET_PROJECT, {\n        variables: {\n          id: project\n        }\n      })\n    : { data: { getProject: {} }, loading: false, error: false }\n\n  const [isPreviewCharacteristics, setIsPreviewCharacteristics] = useState(\n    project?.characteristics?.length > 0\n  )\n  const { members, screenshots, files } = useSelector((state) => ({\n    members: state.root.members,\n    screenshots: state.root.screenshots,\n    files: state.root.files\n  }))\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!loadingData && data) {\n      if (data.getProject?.members) {\n        dispatch(setProjectMembers(data.getProject.members))\n      }\n      if (data.getProject?.screenshots) {\n        dispatch(setProjectScreenshots(data.getProject.screenshots))\n      }\n      if (data.getProject?.files) {\n        dispatch(setProjectFiles(data.getProject.files))\n      }\n    }\n  }, [loadingData, data])\n\n  return (\n    <Form\n      className={className}\n      appearance={appearance}\n      mutation={mutation}\n      onSubmit={(form, action) => onSubmit({ ...form, members, screenshots, files }, action)}>\n      {({ register, loading, errors, control, getValues }) =>\n        !loading && !loadingData && data ? (\n          <React.Fragment>\n            <Title tag={'h4'}>Основное</Title>\n\n            <AdaptiveRow>\n              {errors && errors.preview && (\n                <Alert style={{ width: '100%' }} appearance={'error'}>\n                  Выберите изображение для превью\n                </Alert>\n              )}\n              <Controller\n                name={'preview'}\n                control={control}\n                rules={{ required: true }}\n                defaultValue={getValues('preview') || data.getProject?.preview || null}\n                render={({ value, onChange }) => (\n                  <Preview\n                    accept={'image/*'}\n                    defaultValue={value}\n                    onChange={onChange}\n                    placeholder={'Перетащите сюда изображение для превью'}\n                    tooltip={\n                      'Разрешение: 700x600px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n                    }\n                  />\n                )}\n              />\n\n              <General>\n                {errors && errors.title && (\n                  <Alert style={{ width: '100%' }} appearance={'error'}>\n                    Введите название проекта\n                  </Alert>\n                )}\n                <Input\n                  type={'text'}\n                  name={'title'}\n                  ref={register({ required: true })}\n                  defaultValue={getValues('title') || data.getProject?.title}\n                  placeholder={'Название'}\n                  appearance={'ghost'}\n                  disabled={loading}\n                />\n\n                <Controller\n                  name={'company'}\n                  control={control}\n                  defaultValue={\n                    getValues('company') ||\n                    (data.getProject?.company\n                      ? {\n                          value: data.getProject.company.id,\n                          label: data.getProject.company.name\n                        }\n                      : null)\n                  }\n                  render={({ value, onChange }) => (\n                    <Select\n                      options={\n                        !loading && companies\n                          ? companies.map((user) => ({\n                              value: user,\n                              label: user.name\n                            }))\n                          : []\n                      }\n                      appearance={'ghost'}\n                      defaultValue={value}\n                      placeholder={'Выберите компанию'}\n                      onChange={onChange}\n                      isLoading={loading}\n                      isSearchable\n                    />\n                  )}\n                />\n\n                <Controller\n                  name={'category'}\n                  control={control}\n                  defaultValue={\n                    getValues('category') ||\n                    (data.getProject?.category\n                      ? {\n                          value: data.getProject.category.id,\n                          label: getLabelCategory(data.getProject.category.name)\n                        }\n                      : null)\n                  }\n                  render={({ value, onChange }) => (\n                    <Select\n                      appearance={'ghost'}\n                      placeholder={'Выберите раздел'}\n                      options={categories\n                        .filter((category) => category.type === 'DIVISION')\n                        .map((item) => ({\n                          value: item.id,\n                          label: getLabelCategory(item.name)\n                        }))}\n                      onChange={onChange}\n                      defaultValue={value}\n                      isLoading={loading}\n                      isClearable\n                    />\n                  )}\n                />\n\n                {errors && errors.description && (\n                  <Alert style={{ width: '100%' }} appearance={'error'}>\n                    Введите описание проекта\n                  </Alert>\n                )}\n                <DescriptionArea\n                  ref={register()}\n                  name={'description'}\n                  appearance={'ghost'}\n                  defaultValue={getValues('description') || data.getProject?.description}\n                  placeholder={'Описание'}\n                  disabled={loading}\n                />\n              </General>\n            </AdaptiveRow>\n\n            <Divider clear />\n\n            <AdaptiveRow style={{ justifyContent: 'space-between' }}>\n              <Title tag={'h4'}>Характеристики</Title>\n              <Checkbox\n                label={'Превью'}\n                // disabled={\n                //   getValues('characteristics')?.length === 0 ||\n                //   data.getProject?.characteristics?.length === 0\n                // }\n                defaultChecked={isPreviewCharacteristics}\n                onChecked={setIsPreviewCharacteristics}\n                rtl\n              />\n            </AdaptiveRow>\n            {isPreviewCharacteristics && (\n              <CharacteristicEditor\n                appearance={'ghost'}\n                defaultValue={\n                  getValues('characteristics') || data.getProject?.characteristics || null\n                }\n                readOnly\n              />\n            )}\n            <Controller\n              name={'characteristics'}\n              control={control}\n              defaultValue={\n                getValues('characteristics') || data.getProject?.characteristics || null\n              }\n              render={({ value, onChange }) => (\n                <CharacteristicEditor\n                  appearance={'ghost'}\n                  defaultValue={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n\n            <Divider clear />\n\n            <Title tag={'h4'}>Содержание</Title>\n            {errors && errors.body && (\n              <Alert style={{ width: '100%' }} appearance={'error'}>\n                Введите содержание статьи\n              </Alert>\n            )}\n            <Controller\n              name={'body'}\n              control={control}\n              rules={{ required: true }}\n              defaultValue={getValues('body') || data.getProject?.body || null}\n              render={({ value, onChange }) => (\n                <TextEditor\n                  apiKey={config.get('tiny-key')}\n                  appearance={'ghost'}\n                  defaultValue={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n\n            <Divider clear />\n\n            <Column style={{ flexGrow: 1 }}>\n              <ActionRow title={'Участники проeкта'} onAdd={onMemberAdd || (() => {})} action />\n\n              {members?.length > 0 ? (\n                <Grid percentage={'minmax(320px, 1fr)'}>\n                  {members.map((member) => (\n                    <AlignmentRow key={v4()}>\n                      <Difinition\n                        key={member.value?.email || member?.email}\n                        img={\n                          member.value?.avatar?.path ||\n                          member.avatar?.path ||\n                          '/images/avatar-default.png'\n                        }\n                        label={getLabelRole(member?.value?.account || member?.account)}\n                        text={member.value?.name || member?.name}\n                      />\n                      <RemoveTooltip place={'left'} text={'Удалить'}>\n                        <Button\n                          type={'button'}\n                          kind={'icon'}\n                          size={'xs'}\n                          onClick={() => onMemberRemove(member?.value?.email || member?.email)}>\n                          <Icon size={'xs'} icon={'delete'} stroke={'white'} />\n                        </Button>\n                      </RemoveTooltip>\n                    </AlignmentRow>\n                  ))}\n                </Grid>\n              ) : (\n                <Alert style={{ textAlign: 'center' }} width={'100%'}>\n                  Добавьте участников\n                </Alert>\n              )}\n            </Column>\n\n            <Divider clear />\n\n            <ActionRow\n              title={'Изображения'}\n              info={'Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'}\n              onAdd={(!project && onScreenshotAdd) || (() => {})}\n              action\n            />\n\n            {screenshots?.length > 0 ? (\n              <Grid percentage={'minmax(196px, 1fr)'}>\n                {screenshots.map((screenshot) => (\n                  <AlignmentRow key={v4()}>\n                    <Difinition\n                      key={screenshot.id}\n                      img={screenshot.blob || screenshot.file?.path || screenshot.path}\n                      label={\n                        (\n                          screenshot.file?.name ||\n                          screenshot.file?.path ||\n                          screenshot?.name ||\n                          screenshot?.path\n                        )\n                          .split('/')\n                          .slice(-1)[0]\n                      }\n                      text={getFileSize(screenshot.size || screenshot.file?.size)}\n                    />\n                    {!project && (\n                      <RemoveTooltip place={'left'} text={'Удалить'}>\n                        <Button\n                          type={'button'}\n                          kind={'icon'}\n                          size={'xs'}\n                          onClick={() => onScreenshotRemove(screenshot.id)}>\n                          <Icon size={'xs'} icon={'delete'} stroke={'white'} />\n                        </Button>\n                      </RemoveTooltip>\n                    )}\n                  </AlignmentRow>\n                ))}\n              </Grid>\n            ) : (\n              <Alert style={{ textAlign: 'center' }} width={'100%'}>\n                Добавьте изображения\n              </Alert>\n            )}\n\n            <Divider clear />\n\n            <ActionRow\n              title={'Файлы'}\n              info={'Допустимые форматы: pdf, docx, .doc. Макс. размер: 15 MB'}\n              onAdd={onFileAdd || (() => {})}\n              action\n            />\n\n            {files?.length > 0 ? (\n              <Grid percentage={'minmax(196px, 1fr)'}>\n                {files.map((file) => (\n                  <AlignmentRow key={v4()}>\n                    <Difinition\n                      key={file.id}\n                      icon={'document'}\n                      label={\n                        (file.file?.name || file.file?.path || file?.name || file?.path)\n                          .split('/')\n                          .slice(-1)[0]\n                      }\n                      text={getFileSize(file.size || file.file?.size)}\n                    />\n                    {!project && (\n                      <RemoveTooltip place={'left'} text={'Удалить'}>\n                        <Button\n                          type={'button'}\n                          kind={'icon'}\n                          size={'xs'}\n                          onClick={() => onFileRemove(file.id)}>\n                          <Icon size={'xs'} icon={'delete'} stroke={'white'} />\n                        </Button>\n                      </RemoveTooltip>\n                    )}\n                  </AlignmentRow>\n                ))}\n              </Grid>\n            ) : (\n              <Alert style={{ textAlign: 'center' }} width={'100%'}>\n                Добавьте файлы\n              </Alert>\n            )}\n\n            <Divider clear />\n\n            {errors && errors.presentation && (\n              <Alert style={{ width: '100%' }} appearance={'error'}>\n                Вставьте ссылку на видео\n              </Alert>\n            )}\n            <Input\n              type={'text'}\n              ref={register()}\n              name={'presentation'}\n              defaultValue={getValues('presentation') || data.getProject?.presentation}\n              placeholder={'Вставьте ссылку на видео'}\n              label={'Видео-презентация'}\n              appearance={'ghost'}\n              disabled={loading}\n            />\n\n            {canEditStatus && <Divider clear />}\n\n            {canEditStatus && (\n              <Controller\n                name={'status'}\n                control={control}\n                defaultValue={\n                  getValues('status') ||\n                  (data.getProject?.status\n                    ? {\n                        value: data.getProject.status,\n                        label: getLabelStatus(data.getProject.status)\n                      }\n                    : null)\n                }\n                render={({ value, onChange }) => (\n                  <Select\n                    appearance={'ghost'}\n                    placeholder={'Выберите статус'}\n                    options={statuses.map((item) => ({\n                      value: item,\n                      label: getLabelStatus(item)\n                    }))}\n                    onChange={onChange}\n                    defaultValue={value}\n                    menuPlacement={'top'}\n                    isLoading={loading}\n                    isClearable\n                  />\n                )}\n              />\n            )}\n\n            <Divider clear />\n\n            <Row>\n              <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n                {isPurpose ? 'Предложить' : project ? 'Сохранить' : 'Создать'}\n              </Button>\n            </Row>\n          </React.Fragment>\n        ) : error ? (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию о проекте\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )\n      }\n    </Form>\n  )\n}\n\nexport default Project\n"]},"metadata":{},"sourceType":"module"}