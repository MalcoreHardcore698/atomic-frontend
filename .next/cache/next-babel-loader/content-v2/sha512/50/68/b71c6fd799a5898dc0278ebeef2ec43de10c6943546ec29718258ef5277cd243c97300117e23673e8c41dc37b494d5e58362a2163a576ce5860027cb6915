{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentPage, setVisibleFilters } from '../store/actions/root';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { useHelper } from './useHelper';\nimport { useUser } from './useUser';\nimport queries from '../graphql/queries';\nimport { onUserClientEdit } from '../store/helpers/user';\nexport const useProfile = ({\n  isManage\n} = {}) => {\n  _s();\n\n  const recall = useHelper();\n  const {\n    user,\n    visibleFilter\n  } = useSelector(state => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }));\n  const dispatch = useDispatch();\n  const {\n    onAboutMore,\n    onMembers,\n    onCompanyLink\n  } = useUser({\n    isManage\n  });\n\n  const onChangePage = item => dispatch(setCurrentPage(item.value));\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter));\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onEdit = useCallback(() => {\n    recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    })();\n  }, [user, recall]);\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onAboutMore,\n    onMembers,\n    onEdit\n  };\n};\n\n_s(useProfile, \"NJZYab59k/uG7CeCO9T5ZFz7ECY=\", false, function () {\n  return [useHelper, useSelector, useDispatch, useUser];\n});","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/hooks/useProfile.js"],"names":["useCallback","useDispatch","useSelector","setCurrentPage","setVisibleFilters","onArticleCreate","onProjectCreate","useHelper","useUser","queries","onUserClientEdit","useProfile","isManage","recall","user","visibleFilter","state","root","dispatch","onAboutMore","onMembers","onCompanyLink","onChangePage","item","value","onChangeVisibleFilters","onAddProject","mutation","CREATE_PROJECT","query","GET_USERS","isPurpose","onAddArticle","CREATE_ARTICLE","onEdit","email","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update"],"mappings":"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","sourcesContent":["import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setCurrentPage, setVisibleFilters } from '../store/actions/root'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { useHelper } from './useHelper'\nimport { useUser } from './useUser'\nimport queries from '../graphql/queries'\nimport { onUserClientEdit } from '../store/helpers/user'\n\nexport const useProfile = ({ isManage } = {}) => {\n  const recall = useHelper()\n  const { user, visibleFilter } = useSelector((state) => ({\n    user: state.root.user,\n    visibleFilter: state.root.visibleFilter\n  }))\n  const dispatch = useDispatch()\n\n  const { onAboutMore, onMembers, onCompanyLink } = useUser({ isManage })\n\n  const onChangePage = (item) => dispatch(setCurrentPage(item.value))\n\n  const onChangeVisibleFilters = () => dispatch(setVisibleFilters(!visibleFilter))\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onEdit = useCallback(() => {\n    recall(onUserClientEdit, {\n      user: user?.email,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    })()\n  }, [user, recall])\n\n  return {\n    user,\n    onChangePage,\n    onChangeVisibleFilters,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onAboutMore,\n    onMembers,\n    onEdit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}