{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Search\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Input from '../Input';\nimport Button from '../Button';\nimport Icon from '../Icon';\nexport const Wrap = styled(Row)`\n  width: 100%;\n`;\nexport const Search = (_ref) => {\n  let {\n    className,\n    defaultValue,\n    onSubmit,\n    onClick\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"defaultValue\", \"onSubmit\", \"onClick\"]);\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue || '');\n  return __jsx(Wrap, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Input, _extends({\n    type: 'text',\n    placeholder: 'Поиск'\n  }, props, {\n    readOnly: !!onClick,\n    onClick: onClick && (() => onClick()),\n    onChange: e => !onClick && setValue(e.target.value),\n    onKeyDown: e => !onClick && e.key === 'Enter' && onSubmit(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  })), __jsx(Button, {\n    kind: 'icon',\n    onClick: () => onClick ? onClick : onSubmit(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    icon: 'search',\n    stroke: 'white',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Search;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Search/index.js"],"names":["React","useState","styled","Row","Input","Button","Icon","Wrap","Search","className","defaultValue","onSubmit","onClick","props","value","setValue","e","target","key"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGL,MAAM,CAACC,GAAD,CAAM;AAChC;AACA,CAFO;AAIP,OAAO,MAAMK,MAAM,GAAG,UAA8D;AAAA,MAA7D;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,GAA6D;AAAA,MAAZC,KAAY;;AAClF,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAACS,YAAY,IAAI,EAAjB,CAAlC;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,WAAW,EAAE;AAFf,KAGMI,KAHN;AAIE,IAAA,QAAQ,EAAE,CAAC,CAACD,OAJd;AAKE,IAAA,OAAO,EAAEA,OAAO,KAAK,MAAMA,OAAO,EAAlB,CALlB;AAME,IAAA,QAAQ,EAAGI,CAAD,IAAO,CAACJ,OAAD,IAAYG,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASH,KAAV,CANvC;AAOE,IAAA,SAAS,EAAGE,CAAD,IAAO,CAACJ,OAAD,IAAYI,CAAC,CAACE,GAAF,KAAU,OAAtB,IAAiCP,QAAQ,CAACG,KAAD,CAP7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAUE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,MAAd;AAAsB,IAAA,OAAO,EAAE,MAAOF,OAAO,GAAGA,OAAH,GAAaD,QAAQ,CAACG,KAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,QAAZ;AAAsB,IAAA,MAAM,EAAE,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AAgBD,CAnBM;AAqBP,eAAeN,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../Row'\nimport Input from '../Input'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nexport const Wrap = styled(Row)`\n  width: 100%;\n`\n\nexport const Search = ({ className, defaultValue, onSubmit, onClick, ...props }) => {\n  const [value, setValue] = useState(defaultValue || '')\n\n  return (\n    <Wrap className={className}>\n      <Input\n        type={'text'}\n        placeholder={'Поиск'}\n        {...props}\n        readOnly={!!onClick}\n        onClick={onClick && (() => onClick())}\n        onChange={(e) => !onClick && setValue(e.target.value)}\n        onKeyDown={(e) => !onClick && e.key === 'Enter' && onSubmit(value)}\n      />\n      <Button kind={'icon'} onClick={() => (onClick ? onClick : onSubmit(value))}>\n        <Icon icon={'search'} stroke={'white'} />\n      </Button>\n    </Wrap>\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}