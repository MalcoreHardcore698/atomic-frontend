{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport LazyLoad from 'react-lazyload';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 } from 'uuid';\nimport Alert from '../atomic-ui/components/Alert';\nimport Title from '../atomic-ui/components/Title';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport ContentLayout from '../layouts/content';\nimport ProjectCard from '../components/ProjectCard';\nimport ArticleCard from '../components/ArticleCard';\nimport UserCard from '../components/UserCard';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 13;\nconst LIMIT = 5;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;@media only screen and (max-width:1196px){grid-template-columns:1fr;}\"]);\n_c = Container;\nconst Projects = styled.aside.withConfig({\n  displayName: \"pages__Projects\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c2 = Projects;\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-2\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c3 = Aside;\n\nconst Home = ({\n  store\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState(null);\n  const {\n    articles,\n    users\n  } = store;\n  const scaffold = useMemo(() => ({\n    title: 'Создавай школу будущего с нами',\n    background: '/images/main-background.png',\n    primary: store.projects.length > 0 && store.projects[0],\n    residue: store.projects.length > 4 && store.projects.slice(1, 3),\n    onLink: (project, owned) => recall(onProjectLink, {\n      id: project.id,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      project,\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      owned\n    })(),\n    onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n      id: project.id\n    }, response => dispatch(updateUser(response.data.likeProject)))()),\n    onAdd: user.email && (project => recall(onProjectAdd, {\n      id: project.id,\n      project,\n      folders: user === null || user === void 0 ? void 0 : user.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      }\n    })()),\n    onSearch: value => setSearch(value),\n    onAboutMore: project => recall(onUserAboutMore, {\n      user: project\n    }),\n    onCompanyLink: project => {\n      var _project$company;\n\n      return recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user\n      })();\n    },\n    onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n      screenshots: [project.preview, ...project.screenshots],\n      key\n    })()\n  }), [store]);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    research: search,\n    scaffold: scaffold,\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS,\n    variables: {\n      status: 'PUBLISHED'\n    },\n    store: {\n      documents: store === null || store === void 0 ? void 0 : store.projects\n    }\n  }, ({\n    documents\n  }) => /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Projects, null, documents.map(project => {\n    var _user$projects, _user$folders, _project$company2;\n\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n    return /*#__PURE__*/React.createElement(LazyLoad, {\n      key: v4(),\n      height: 485,\n      offset: window.innerHeight\n    }, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      owned: owned,\n      added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item.id === project.id)))),\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      }),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: project\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_project$company2 = project.company) === null || _project$company2 === void 0 ? void 0 : _project$company2.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        recipient: project.author,\n        query: queries.GET_USER_CHATS,\n        mutation: queries.SEND_MESSAGE\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    }));\n  })), /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), users.length > 0 ? users.slice(0, 3).map(author => {\n    var _author$company;\n\n    const owned = author.name === (user === null || user === void 0 ? void 0 : user.name);\n    return /*#__PURE__*/React.createElement(LazyLoad, {\n      key: v4(),\n      height: 395,\n      offset: 100\n    }, /*#__PURE__*/React.createElement(UserCard, {\n      user: author,\n      owned: owned,\n      onChat: user.email && recall(onChat, {\n        email: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onLink: recall(onUserLink, {\n        id: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: author\n      }),\n      onMembers: recall(onUserMembers, {\n        id: author === null || author === void 0 ? void 0 : author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_author$company = author.company) === null || _author$company === void 0 ? void 0 : _author$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      })\n    }));\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), articles.length > 0 ? articles.slice(0, 2).map(article => {\n    var _user$articles;\n\n    return /*#__PURE__*/React.createElement(LazyLoad, {\n      key: v4(),\n      height: 395,\n      offset: 100\n    }, /*#__PURE__*/React.createElement(ArticleCard, {\n      layout: 'column',\n      article: article,\n      owned: user === null || user === void 0 ? void 0 : (_user$articles = user.articles) === null || _user$articles === void 0 ? void 0 : _user$articles.find(candidate => candidate.id === article.id),\n      onLink: recall(onArticleLink, {\n        id: article.id,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      })\n    }));\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\"))));\n};\n\n_s(Home, \"47DEyILuEkrAuU6MAInOwkNKCcA=\", false, function () {\n  return [useHelper, useMutate, useSelector, useDispatch];\n});\n\n_c4 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Projects\");\n$RefreshReg$(_c3, \"Aside\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useMemo","useState","styled","LazyLoad","useSelector","useDispatch","v4","Alert","Title","useHelper","useMutate","ContentLayout","ProjectCard","ArticleCard","UserCard","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserAboutMore","onUserLink","onUserMembers","onArticleLink","onChat","queries","TITLE","START_OFFSET","LIMIT","Container","div","Projects","aside","Aside","Home","store","recall","mutate","user","state","dispatch","search","setSearch","articles","users","scaffold","title","background","primary","projects","length","residue","slice","onLink","project","owned","id","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","onSearch","value","onAboutMore","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","GET_PROJECTS","status","documents","map","candidate","window","innerHeight","folder","recipient","author","query","GET_USER_CHATS","mutation","SEND_MESSAGE","_","name","userChats","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","width","textAlign","article"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport LazyLoad from 'react-lazyload'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { v4 } from 'uuid'\n\nimport Alert from '../atomic-ui/components/Alert'\nimport Title from '../atomic-ui/components/Title'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport ContentLayout from '../layouts/content'\nimport ProjectCard from '../components/ProjectCard'\nimport ArticleCard from '../components/ArticleCard'\nimport UserCard from '../components/UserCard'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 13\nconst LIMIT = 5\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Projects = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Home = ({ store }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const [search, setSearch] = useState(null)\n  const { articles, users } = store\n\n  const scaffold = useMemo(\n    () => ({\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: store.projects.length > 0 && store.projects[0],\n      residue: store.projects.length > 4 && store.projects.slice(1, 3),\n      onLink: (project, owned) =>\n        recall(onProjectLink, {\n          id: project.id,\n          auth: user?.email,\n          project,\n          liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n          onLike:\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            ),\n          onAdd:\n            user.email &&\n            recall(onProjectAdd, {\n              id: project.id,\n              project,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              }\n            }),\n          owned\n        })(),\n      onLike:\n        user.email &&\n        ((project) =>\n          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n            dispatch(updateUser(response.data.likeProject))\n          )()),\n      onAdd:\n        user.email &&\n        ((project) =>\n          recall(onProjectAdd, {\n            id: project.id,\n            project,\n            folders: user?.folders,\n            mutations: {\n              addProject: queries.ADD_USER_PROJECT,\n              createFolder: queries.ADD_USER_FOLDER\n            }\n          })()),\n      onSearch: (value) => setSearch(value),\n      onAboutMore: (project) => recall(onUserAboutMore, { user: project }),\n      onCompanyLink: (project) => recall(onUserLink, { id: project.company?.email, auth: user })(),\n      onScreenshotClick: (project, key) =>\n        recall(onProjectScreenshot, {\n          screenshots: [project.preview, ...project.screenshots],\n          key\n        })()\n    }),\n    [store]\n  )\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      research={search}\n      scaffold={scaffold}\n      startOffset={START_OFFSET}\n      query={queries.GET_PROJECTS}\n      variables={{ status: 'PUBLISHED' }}\n      store={{ documents: store?.projects }}>\n      {({ documents }) => (\n        <Container>\n          <Projects>\n            {documents.map((project) => {\n              const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n\n              return (\n                <LazyLoad key={v4()} height={485} offset={window.innerHeight}>\n                  <ProjectCard\n                    project={project}\n                    owned={owned}\n                    added={\n                      !!user?.folders?.find(\n                        (folder) => !!folder?.projects.find((item) => item.id === project.id)\n                      )\n                    }\n                    liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n                    onLink={recall(onProjectLink, {\n                      id: project.id,\n                      auth: user?.email,\n                      liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n                      onLike:\n                        user.email &&\n                        mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                          dispatch(updateUser(response.data.likeProject))\n                        ),\n                      onAdd:\n                        user.email &&\n                        recall(onProjectAdd, {\n                          id: project.id,\n                          project,\n                          folders: user?.folders,\n                          mutations: {\n                            addProject: queries.ADD_USER_PROJECT,\n                            createFolder: queries.ADD_USER_FOLDER\n                          }\n                        }),\n                      owned\n                    })}\n                    onLike={\n                      user.email &&\n                      mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                        dispatch(updateUser(response.data.likeProject))\n                      )\n                    }\n                    onAdd={\n                      user.email &&\n                      recall(onProjectAdd, {\n                        id: project.id,\n                        project,\n                        folders: user?.folders,\n                        mutations: {\n                          addProject: queries.ADD_USER_PROJECT,\n                          createFolder: queries.ADD_USER_FOLDER\n                        }\n                      })\n                    }\n                    onAboutMore={recall(onUserAboutMore, { user: project })}\n                    onCompanyLink={recall(onUserLink, {\n                      id: project.company?.email,\n                      auth: user?.email,\n                      recipient: project.author,\n                      query: queries.GET_USER_CHATS,\n                      mutation: queries.SEND_MESSAGE\n                    })}\n                    onScreenshotClick={(_, key) =>\n                      recall(onProjectScreenshot, {\n                        screenshots: [project.preview, ...project.screenshots],\n                        key\n                      })()\n                    }\n                  />\n                </LazyLoad>\n              )\n            })}\n          </Projects>\n\n          <Aside>\n            <Title tag={'h4'}>Авторы</Title>\n            {users.length > 0 ? (\n              users.slice(0, 3).map((author) => {\n                const owned = author.name === user?.name\n\n                return (\n                  <LazyLoad key={v4()} height={395} offset={100}>\n                    <UserCard\n                      user={author}\n                      owned={owned}\n                      onChat={\n                        user.email &&\n                        recall(onChat, {\n                          email: author.email,\n                          auth: user?.email,\n                          queries: {\n                            userChats: queries.GET_USER_CHATS,\n                            chat: queries.GET_CHAT\n                          },\n                          mutations: {\n                            addUserChat: queries.ADD_USER_CHAT,\n                            sendMessage: queries.SEND_MESSAGE\n                          }\n                        })\n                      }\n                      onLink={recall(onUserLink, {\n                        id: author.email,\n                        auth: user?.email,\n                        owned,\n                        queries: {\n                          userChats: queries.GET_USER_CHATS,\n                          chat: queries.GET_CHAT\n                        },\n                        mutations: {\n                          addUserChat: queries.ADD_USER_CHAT,\n                          sendMessage: queries.SEND_MESSAGE\n                        }\n                      })}\n                      onAboutMore={recall(onUserAboutMore, { user: author })}\n                      onMembers={recall(onUserMembers, { id: author?.email, auth: user?.email })}\n                      onCompanyLink={recall(onUserLink, {\n                        id: author.company?.email,\n                        auth: user?.email,\n                        queries: {\n                          userChats: queries.GET_USER_CHATS,\n                          chat: queries.GET_CHAT\n                        },\n                        mutations: {\n                          addUserChat: queries.ADD_USER_CHAT,\n                          sendMessage: queries.SEND_MESSAGE\n                        }\n                      })}\n                    />\n                  </LazyLoad>\n                )\n              })\n            ) : (\n              <Alert style={{ width: '100%', textAlign: 'center' }}>Авторов нет</Alert>\n            )}\n\n            <Title tag={'h4'}>Новости</Title>\n            {articles.length > 0 ? (\n              articles.slice(0, 2).map((article) => (\n                <LazyLoad key={v4()} height={395} offset={100}>\n                  <ArticleCard\n                    layout={'column'}\n                    article={article}\n                    owned={user?.articles?.find((candidate) => candidate.id === article.id)}\n                    onLink={recall(onArticleLink, { id: article.id, auth: user?.email })}\n                  />\n                </LazyLoad>\n              ))\n            ) : (\n              <Alert style={{ width: '100%', textAlign: 'center' }}>Новостей нет</Alert>\n            )}\n          </Aside>\n        </Container>\n      )}\n    </ContentLayout>\n  )\n}\n\nexport const getServerSideProps = async () => {\n  const client = initializeApollo()\n\n  let articles = []\n  let projects = []\n  let users = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_INDEX,\n      variables: {\n        offset: 0,\n        limit: START_OFFSET,\n        status: 'PUBLISHED'\n      }\n    })\n\n    if (response && response.data) {\n      articles = response.data.getArticles\n      projects = response.data.getProjects\n      users = response.data.getUsers\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        articles,\n        projects,\n        users\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}