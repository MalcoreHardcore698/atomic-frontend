{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"CategoryCard__Wrap\",\n  componentId: \"sc-10psc0b-0\"\n})([\"height:100%;\", \" \", \" \", \" \", \"\"], ({\n  checked\n}) => checked && css([\"opacity:0.45;\"]), ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Poster = styled(Image).withConfig({\n  displayName: \"CategoryCard__Poster\",\n  componentId: \"sc-10psc0b-1\"\n})([\"object-fit:cover;width:100%;height:512px;border-radius:var(--surface-border-radius);\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"CategoryCard__Header\",\n  componentId: \"sc-10psc0b-2\"\n})([\"justify-content:space-between;align-items:center;\"]);\nexport const Actions = styled(Row).withConfig({\n  displayName: \"CategoryCard__Actions\",\n  componentId: \"sc-10psc0b-3\"\n})([\"grid-gap:5px;height:100%;\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"CategoryCard__Content\",\n  componentId: \"sc-10psc0b-4\"\n})([\"grid-gap:0;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"CategoryCard__Name\",\n  componentId: \"sc-10psc0b-5\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\nexport const Card = ({\n  category,\n  checked,\n  appearance,\n  className,\n  style,\n  onLink,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const {\n    setQuery\n  } = useEntityQuery();\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    checked: checked,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n    date: category.createdAt,\n    category: getLabelCategory(category.type)\n  }), onChecked && onEdit && onDelete && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удалить категорию'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    appearance: 'red',\n    disabled: checked,\n    onClick: onDelete\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white'\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Редактировать категорию'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    disabled: checked,\n    onClick: onEdit\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white'\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Отметить категорию',\n    self: true\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked,\n    onChange: onChecked\n  })))), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: () => setQuery(category.id, 'category', onLink)\n  }, category.name), /*#__PURE__*/React.createElement(Text, null, category.description)));\n};\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/CategoryCard/index.js"],"names":["React","styled","css","Row","Column","Title","Text","Image","Meta","Button","Icon","Checkbox","Tooltip","getLabelCategory","useEntityQuery","Wrap","checked","appearance","Poster","Header","Actions","Content","Name","onClick","Card","category","className","style","onLink","onChecked","onDelete","onEdit","setQuery","createdAt","type","id","name","description","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport { getLabelCategory } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\n\nexport const Wrap = styled(Column)`\n  height: 100%;\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      opacity: 0.45;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Poster = styled(Image)`\n  object-fit: cover;\n  width: 100%;\n  height: 512px;\n  border-radius: var(--surface-border-radius);\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n  height: 100%;\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const Card = ({\n  category,\n  checked,\n  appearance,\n  className,\n  style,\n  onLink,\n  onChecked,\n  onDelete,\n  onEdit\n}) => {\n  const { setQuery } = useEntityQuery()\n\n  return (\n    <Wrap className={className} style={style} checked={checked} appearance={appearance}>\n      <Content>\n        <Header>\n          <Meta date={category.createdAt} category={getLabelCategory(category.type)} />\n\n          {onChecked && onEdit && onDelete && (\n            <Actions>\n              <Tooltip text={'Удалить категорию'}>\n                <Button\n                  kind={'icon'}\n                  size={'xs'}\n                  appearance={'red'}\n                  disabled={checked}\n                  onClick={onDelete}>\n                  <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n                </Button>\n              </Tooltip>\n              <Tooltip text={'Редактировать категорию'}>\n                <Button kind={'icon'} size={'xs'} disabled={checked} onClick={onEdit}>\n                  <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n                </Button>\n              </Tooltip>\n              <Tooltip text={'Отметить категорию'} self>\n                <Checkbox checked={checked} onChange={onChecked} />\n              </Tooltip>\n            </Actions>\n          )}\n        </Header>\n\n        <Name tag={'h4'} onClick={() => setQuery(category.id, 'category', onLink)}>\n          {category.name}\n        </Name>\n\n        <Text>{category.description}</Text>\n      </Content>\n    </Wrap>\n  )\n}\n\nCard.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}