{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../../atomic-ui/utils/functions';\nimport { useHelper } from './useHelper';\nimport { useMutate } from './useMutate';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onCategoryLink } from '../store/helpers/category';\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project';\nimport { onRoleLink } from '../store/helpers/role';\nimport { onUserLink } from '../store/helpers/user';\nimport { onTicketLink } from '../store/helpers/ticket';\nimport { updateUser } from '../store/actions/user';\nimport queries from '../graphql/queries';\n\nvar getProjectLinkProps = function getProjectLinkProps(id, user, owned, dispatch, mutate, recall) {\n  return {\n    id: id,\n    auth: user === null || user === void 0 ? void 0 : user.email,\n    liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(function (item) {\n      return item.id === id;\n    }),\n    onLike: user.email && mutate(queries.LIKE_PROJECT, {\n      id: id\n    }, function (response) {\n      return dispatch(updateUser(response.data.likeProject));\n    }),\n    onAdd: user.email && recall(onProjectAdd, {\n      id: id,\n      folders: user === null || user === void 0 ? void 0 : user.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      }\n    }),\n    owned: owned\n  };\n};\n\nvar getUserLinkProps = function getUserLinkProps(id, user, owned) {\n  return {\n    id: id,\n    auth: user === null || user === void 0 ? void 0 : user.email,\n    owned: owned,\n    queries: {\n      userChats: queries.GET_USER_CHATS,\n      chat: queries.GET_CHAT\n    },\n    mutations: {\n      addUserChat: queries.ADD_USER_CHAT,\n      sendMessage: queries.SEND_MESSAGE\n    }\n  };\n};\n\nexport var useEntityQuery = function useEntityQuery() {\n  var recall = useHelper();\n  var mutate = useMutate();\n  var router = useRouter();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n\n  var setQuery = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(str, entity, callback) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return router.push({\n                pathname: router.pathname,\n                query: _defineProperty({}, entity, b64EncodeUnicode(str))\n              }, undefined, {\n                shallow: true\n              });\n\n            case 2:\n              if (callback) callback(str);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setQuery(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var useDetectQuery = function useDetectQuery() {\n    useEffect(function () {\n      var query = router.query;\n\n      if (query.article) {\n        var id = b64DecodeUnicode(query.article);\n        recall(onArticleLink, {\n          id: id\n        })();\n      }\n\n      if (query.category) {\n        var _id = b64DecodeUnicode(query.category);\n\n        recall(onCategoryLink, {\n          id: _id\n        })();\n      }\n\n      if (query.project) {\n        var _user$projects;\n\n        var _id2 = b64DecodeUnicode(query.project);\n\n        var owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(function (candidate) {\n          return candidate.id === _id2;\n        });\n        recall(onProjectLink, getProjectLinkProps(_id2, user, owned, dispatch, mutate, recall))();\n      }\n\n      if (query.role) {\n        var _id3 = b64DecodeUnicode(query.role);\n\n        recall(onRoleLink, {\n          id: _id3\n        })();\n      }\n\n      if (query.user) {\n        var _id4 = b64DecodeUnicode(query.user);\n\n        var _owned = _id4 === (user === null || user === void 0 ? void 0 : user.name);\n\n        recall(onUserLink, getUserLinkProps(_id4, user, _owned))();\n      }\n\n      if (query.ticket) {\n        var _id5 = b64DecodeUnicode(query.ticket);\n\n        recall(onTicketLink, {\n          id: _id5,\n          auth: user === null || user === void 0 ? void 0 : user.email\n        })();\n      }\n    }, [router]);\n  };\n\n  return {\n    setQuery: setQuery,\n    useDetectQuery: useDetectQuery\n  };\n};\nexport default useEntityQuery;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useEntityQuery.js"],"names":["useEffect","useRouter","useDispatch","useSelector","b64DecodeUnicode","b64EncodeUnicode","useHelper","useMutate","onArticleLink","onCategoryLink","onProjectAdd","onProjectLink","onRoleLink","onUserLink","onTicketLink","updateUser","queries","getProjectLinkProps","id","user","owned","dispatch","mutate","recall","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","getUserLinkProps","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","useEntityQuery","router","state","setQuery","str","entity","callback","push","pathname","query","undefined","shallow","useDetectQuery","article","category","project","projects","candidate","role","name","ticket"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { b64DecodeUnicode, b64EncodeUnicode } from '../../atomic-ui/utils/functions'\n\nimport { useHelper } from './useHelper'\nimport { useMutate } from './useMutate'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onCategoryLink } from '../store/helpers/category'\nimport { onProjectAdd, onProjectLink } from '../store/helpers/project'\nimport { onRoleLink } from '../store/helpers/role'\nimport { onUserLink } from '../store/helpers/user'\nimport { onTicketLink } from '../store/helpers/ticket'\nimport { updateUser } from '../store/actions/user'\nimport queries from '../graphql/queries'\n\nconst getProjectLinkProps = (id, user, owned, dispatch, mutate, recall) => ({\n  id,\n  auth: user?.email,\n  liked: !!(user?.likedProjects || []).find((item) => item.id === id),\n  onLike:\n    user.email &&\n    mutate(queries.LIKE_PROJECT, { id }, (response) =>\n      dispatch(updateUser(response.data.likeProject))\n    ),\n  onAdd:\n    user.email &&\n    recall(onProjectAdd, {\n      id,\n      folders: user?.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      }\n    }),\n  owned\n})\n\nconst getUserLinkProps = (id, user, owned) => ({\n  id,\n  auth: user?.email,\n  owned,\n  queries: {\n    userChats: queries.GET_USER_CHATS,\n    chat: queries.GET_CHAT\n  },\n  mutations: {\n    addUserChat: queries.ADD_USER_CHAT,\n    sendMessage: queries.SEND_MESSAGE\n  }\n})\n\nexport const useEntityQuery = () => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const router = useRouter()\n\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  const setQuery = async (str, entity, callback) => {\n    await router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          [entity]: b64EncodeUnicode(str)\n        }\n      },\n      undefined,\n      { shallow: true }\n    )\n    if (callback) callback(str)\n  }\n\n  const useDetectQuery = () => {\n    useEffect(() => {\n      const query = router.query\n\n      if (query.article) {\n        const id = b64DecodeUnicode(query.article)\n        recall(onArticleLink, { id })()\n      }\n\n      if (query.category) {\n        const id = b64DecodeUnicode(query.category)\n        recall(onCategoryLink, { id })()\n      }\n\n      if (query.project) {\n        const id = b64DecodeUnicode(query.project)\n        const owned = user?.projects?.find((candidate) => candidate.id === id)\n        recall(onProjectLink, getProjectLinkProps(id, user, owned, dispatch, mutate, recall))()\n      }\n\n      if (query.role) {\n        const id = b64DecodeUnicode(query.role)\n        recall(onRoleLink, { id })()\n      }\n\n      if (query.user) {\n        const id = b64DecodeUnicode(query.user)\n        const owned = id === user?.name\n        recall(onUserLink, getUserLinkProps(id, user, owned))()\n      }\n\n      if (query.ticket) {\n        const id = b64DecodeUnicode(query.ticket)\n        recall(onTicketLink, { id, auth: user?.email })()\n      }\n    }, [router])\n  }\n\n  return { setQuery, useDetectQuery }\n}\n\nexport default useEntityQuery\n"]},"metadata":{},"sourceType":"module"}