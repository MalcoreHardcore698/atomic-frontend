{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport YouTube from 'react-youtube';\nimport Column from '../../atomic-ui/components/Column';\nimport Button from '../../atomic-ui/components/Button';\nimport Dash from '../../atomic-ui/components/Menu/Dash';\nimport Text from '../../atomic-ui/components/Text';\nimport TicketForm from '../../components/FormTicket';\nimport Notifications from '../../components/Notifications';\nimport Messenger from '../../components/Messenger';\nimport { setDrawer } from '../actions/drawer';\nimport { setModal } from '../actions/modal';\nimport { onUserLink } from './user';\nimport { setDocuments } from '../actions/documents';\nimport { setItem } from '../actions/snacks';\nexport const Presentation = styled(YouTube).withConfig({\n  displayName: \"helpers__Presentation\",\n  componentId: \"t5pxc3-0\"\n})([\"display:flex;flex-grow:1;width:100%;height:80vh;border-radius:var(--surface-border-radius);overflow:hidden;iframe{width:100%;height:100%;}\"]);\n_c = Presentation;\nexport function onMenu(dispatch, props) {\n  const {\n    links\n  } = props;\n  dispatch(setDrawer({\n    side: 'left',\n    half: true,\n    content: /*#__PURE__*/React.createElement(Dash, {\n      links: links\n    })\n  }));\n}\nexport function onHelp(dispatch, props) {\n  const {\n    mutation\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Поддержка',\n    component: () => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(TicketForm, {\n      title: false,\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$category;\n\n          const tickets = await action({\n            variables: {\n              input: {\n                title: form.title,\n                message: form.message,\n                category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.createTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно создано'\n          }));\n        } catch (err) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать обращение'\n          }));\n        }\n      },\n      isClient: true\n    }))\n  }]));\n}\nexport function onNotification(dispatch, props) {\n  const {\n    notifications\n  } = props;\n  dispatch(setDrawer({\n    icon: 'notification',\n    title: 'Уведомления',\n    content: /*#__PURE__*/React.createElement(Notifications, {\n      notifications: notifications,\n      appearance: 'clear'\n    })\n  }));\n}\nexport function onChat(dispatch, props) {\n  const {\n    sender,\n    recipient,\n    queries,\n    mutations\n  } = props;\n  dispatch(setDrawer({\n    icon: 'chat',\n    title: 'Мессенджер',\n    content: /*#__PURE__*/React.createElement(Messenger, {\n      queries: queries,\n      mutations: mutations,\n      recipient: recipient,\n      sender: sender,\n      appearance: 'clear',\n      onMemberLink: () => onUserLink(dispatch, props),\n      onSubmit: async (form, action, recipient) => {\n        try {\n          const response = await action({\n            variables: {\n              recipient: recipient.email,\n              text: form.text\n            }\n          });\n          return response.data.sendMessage;\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    })\n  }));\n}\nexport function onFileLink(dispatch) {\n  dispatch(setModal([{\n    path: '/',\n    title: 'Информация о файле',\n    component: () => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(Text, null, \"Bechtel \\u043E\\u0442\\u0432\\u0435\\u0447\\u0430\\u043B \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435, \\u0437\\u0430\\u043A\\u0443\\u043F\\u043A\\u0438, \\u0441\\u0442\\u0440\\u043E\\u0438\\u0442\\u0435\\u043B\\u044C\\u0441\\u0442\\u0432\\u043E, \\u0437\\u0430\\u043F\\u0443\\u0441\\u043A \\u0438 \\u0432\\u0432\\u043E\\u0434 \\u0432 \\u044D\\u043A\\u0441\\u043F\\u043B\\u0443\\u0430\\u0442\\u0430\\u0446\\u0438\\u044E \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u043E\\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\\u0430 \\u043C\\u043E\\u0449\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E 700 \\u043C\\u0435\\u0433\\u0430\\u0432\\u0430\\u0442\\u0442 \\u0432 \\u041E\\u0433\\u0430\\u0439\\u043E, \\u0421\\u0428\\u0410 \\u0438 \\u0432\\u0432\\u043E\\u0434 \\u0432 \\u044D\\u043A\\u0441\\u043F\\u043B\\u0443\\u0430\\u0442\\u0430\\u0446\\u0438\\u044E \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u043E\\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\\u0430 \\u043C\\u043E\\u0449\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E 700 \\u043C\\u0435\\u0433\\u0430\\u0432\\u0430\\u0442\\u0442 \\u0432 \\u041E\\u0433\\u0430\\u0439\\u043E, \\u0421\\u0428\\u0410\"), /*#__PURE__*/React.createElement(Button, null, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"))\n  }]));\n}\nexport function onIndexVideoLink(dispatch, props) {\n  const {\n    video\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: '',\n    component: () => /*#__PURE__*/React.createElement(Presentation, {\n      videoId: video\n    })\n  }], 'l'));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentation\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/index.js"],"names":["React","styled","YouTube","Column","Button","Dash","Text","TicketForm","Notifications","Messenger","setDrawer","setModal","onUserLink","setDocuments","setItem","Presentation","onMenu","dispatch","props","links","side","half","content","onHelp","mutation","path","title","component","padding","form","action","tickets","variables","input","message","category","value","data","createTicket","type","err","onNotification","notifications","icon","onChat","sender","recipient","queries","mutations","response","email","text","sendMessage","console","log","onFileLink","onIndexVideoLink","video"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Button from '../../atomic-ui/components/Button'\nimport Dash from '../../atomic-ui/components/Menu/Dash'\nimport Text from '../../atomic-ui/components/Text'\n\nimport TicketForm from '../../components/FormTicket'\nimport Notifications from '../../components/Notifications'\nimport Messenger from '../../components/Messenger'\nimport { setDrawer } from '../actions/drawer'\nimport { setModal } from '../actions/modal'\nimport { onUserLink } from './user'\nimport { setDocuments } from '../actions/documents'\nimport { setItem } from '../actions/snacks'\n\nexport const Presentation = styled(YouTube)`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  height: 80vh;\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nexport function onMenu(dispatch, props) {\n  const { links } = props\n\n  dispatch(\n    setDrawer({\n      side: 'left',\n      half: true,\n      content: <Dash links={links} />\n    })\n  )\n}\n\nexport function onHelp(dispatch, props) {\n  const { mutation } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Поддержка',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            <TicketForm\n              title={false}\n              mutation={mutation}\n              appearance={'clear'}\n              onSubmit={async (form, action) => {\n                try {\n                  const tickets = await action({\n                    variables: {\n                      input: {\n                        title: form.title,\n                        message: form.message,\n                        category: form.category?.value\n                      }\n                    }\n                  })\n                  dispatch(setDocuments(tickets.data.createTicket))\n                  dispatch(setDrawer(null))\n                  dispatch(\n                    setItem({\n                      type: 'success',\n                      message: 'Обращение успешно создано'\n                    })\n                  )\n                } catch (err) {\n                  dispatch(setDrawer(null))\n                  dispatch(\n                    setItem({\n                      type: 'error',\n                      message: 'Не удалось создать обращение'\n                    })\n                  )\n                }\n              }}\n              isClient\n            />\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onNotification(dispatch, props) {\n  const { notifications } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'notification',\n      title: 'Уведомления',\n      content: <Notifications notifications={notifications} appearance={'clear'} />\n    })\n  )\n}\n\nexport function onChat(dispatch, props) {\n  const { sender, recipient, queries, mutations } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'chat',\n      title: 'Мессенджер',\n      content: (\n        <Messenger\n          queries={queries}\n          mutations={mutations}\n          recipient={recipient}\n          sender={sender}\n          appearance={'clear'}\n          onMemberLink={() => onUserLink(dispatch, props)}\n          onSubmit={async (form, action, recipient) => {\n            try {\n              const response = await action({\n                variables: {\n                  recipient: recipient.email,\n                  text: form.text\n                }\n              })\n              return response.data.sendMessage\n            } catch (err) {\n              console.log(err)\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onFileLink(dispatch) {\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Информация о файле',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            <Text>\n              Bechtel отвечал за проектирование, закупки, строительство, запуск и ввод в\n              эксплуатацию нового газового парогазового комплекса мощностью 700 мегаватт в Огайо,\n              США и ввод в эксплуатацию нового газового парогазового комплекса мощностью 700\n              мегаватт в Огайо, США\n            </Text>\n            <Button>Скачать файл</Button>\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onIndexVideoLink(dispatch, props) {\n  const { video } = props\n\n  dispatch(\n    setModal(\n      [\n        {\n          path: '/',\n          title: '',\n          component: () => <Presentation videoId={video} />\n        }\n      ],\n      'l'\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}