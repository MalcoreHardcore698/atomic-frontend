{"ast":null,"code":"import React, { useEffect, useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport PageRouter from '../components/Profile/PageRouter';\nimport { hasResponsibleMember } from '../components/Members';\nimport { Loader } from '../components/Styled';\nimport { setSearch } from '../store/actions/root';\nimport { useProfile } from '../hooks/useProfile';\nimport { profilePages } from '../__mock__';\nconst TITLE = 'Профиль';\nconst DISABLED_FILTERS = true;\n\nconst Profile = () => {\n  const router = useRouter();\n  const {\n    onAddProject,\n    onAddArticle,\n    ...methods\n  } = useProfile();\n  const {\n    user,\n    search,\n    currentPage,\n    visibleFilter\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    currentPage: state.root.currentPage,\n    visibleFilters: state.root.visibleFilters\n  }));\n  const dispatch = useDispatch();\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage]);\n  const buttonCreateText = useMemo(() => isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '', [isProjects, isArticles]);\n  const pages = useMemo(() => profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== '/articles' : true), [user, profilePages]);\n  const getCreateMethod = useCallback(() => {\n    if (isProjects && hasAccess(user, 'PURPOSE_PROJECT')) return onAddProject;\n    if (isArticles && hasAccess(user, 'PURPOSE_ARTICLE')) return onAddArticle;\n  }, [user, isProjects, isArticles, onAddProject, onAddArticle]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, methods), /*#__PURE__*/React.createElement(Switch, {\n    options: pages,\n    defaultValue: currentPage,\n    onChange: onChangePage,\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: buttonCreateText,\n    onChangeFilter: !DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter)),\n    onCreate: getCreateMethod()\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [],\n    options: []\n  }), /*#__PURE__*/React.createElement(PageRouter, {\n    page: currentPage.value\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useEffect","useMemo","useCallback","useSelector","useDispatch","useRouter","Column","Switch","Spinner","hasAccess","DefaultLayout","UserBar","FilterBar","SearchBar","PageRouter","hasResponsibleMember","Loader","setSearch","useProfile","profilePages","TITLE","DISABLED_FILTERS","Profile","router","onAddProject","onAddArticle","methods","user","search","currentPage","visibleFilter","state","root","visibleFilters","dispatch","isProjects","value","isArticles","buttonCreateText","pages","filter","page","getCreateMethod","authenticated","push","name","onChangePage","setVisibleFilter"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouter } from 'next/router'\n\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport PageRouter from '../components/Profile/PageRouter'\nimport { hasResponsibleMember } from '../components/Members'\nimport { Loader } from '../components/Styled'\nimport { setSearch } from '../store/actions/root'\nimport { useProfile } from '../hooks/useProfile'\nimport { profilePages } from '../__mock__'\n\nconst TITLE = 'Профиль'\n\nconst DISABLED_FILTERS = true\n\nconst Profile = () => {\n  const router = useRouter()\n  const { onAddProject, onAddArticle, ...methods } = useProfile()\n  const { user, search, currentPage, visibleFilter } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search,\n    currentPage: state.root.currentPage,\n    visibleFilters: state.root.visibleFilters\n  }))\n  const dispatch = useDispatch()\n\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage])\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage])\n\n  const buttonCreateText = useMemo(\n    () => (isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''),\n    [isProjects, isArticles]\n  )\n\n  const pages = useMemo(\n    () =>\n      profilePages.filter((page) =>\n        !hasResponsibleMember(user) ? page.value !== '/articles' : true\n      ),\n    [user, profilePages]\n  )\n\n  const getCreateMethod = useCallback(() => {\n    if (isProjects && hasAccess(user, 'PURPOSE_PROJECT')) return onAddProject\n    if (isArticles && hasAccess(user, 'PURPOSE_ARTICLE')) return onAddArticle\n  }, [user, isProjects, isArticles, onAddProject, onAddArticle])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar {...methods} />\n\n        <Switch options={pages} defaultValue={currentPage} onChange={onChangePage} stretch />\n\n        <SearchBar\n          defaultValue={search}\n          buttonCreateText={buttonCreateText}\n          onChangeFilter={!DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter))}\n          onCreate={getCreateMethod()}\n        />\n\n        <FilterBar isOpen={visibleFilter} filters={[]} options={[]} />\n\n        <PageRouter page={currentPage.value} />\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}