{"ast":null,"code":"import gql from 'graphql-tag';\nimport { ProjectFields, UserFields, DashboardSettingsFields } from '../../fragments';\nexport const GET_STATUS_TICKET_TYPES = gql`\n  query getStatusTicketTypes {\n    getStatusTicketTypes\n  }\n`;\nexport const GET_STATUS_CHAT_TYPES = gql`\n  query getStatusChatTypes {\n    getStatusChatTypes\n  }\n`;\nexport const GET_GENDER_TYPES = gql`\n  query getGenderTypes {\n    getGenderTypes\n  }\n`;\nexport const GET_ACCOUNT_TYPES = gql`\n  query getAccountTypes {\n    getAccountTypes\n  }\n`;\nexport const GET_NOTICE_TYPES = gql`\n  query getNoticeTypes {\n    getNoticeTypes\n  }\n`;\nexport const GET_CATEGORY_TYPES = gql`\n  query getCategoryTypes {\n    getCategoryTypes\n  }\n`;\nexport const GET_PERMISSIONS = gql`\n  query getPermissions {\n    getPermissions\n  }\n`;\nexport const GET_POST_STATUSES = gql`\n  query getPostStatus {\n    getPostStatus\n  }\n`;\nexport const GET_META = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      general {\n        logotype {\n          path\n        }\n      }\n      meta {\n        title\n        description\n      }\n    }\n  }\n`;\nexport const GET_META_SCAFFOLD = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      scaffold {\n        title\n        primary {\n          ...ProjectFields\n        }\n        residues {\n          ...ProjectFields\n        }\n        background {\n          id\n          filename\n          size\n          path\n        }\n      }\n    }\n  }\n  ${ProjectFields}\n`;\nexport const GET_META_AUTHORS = gql`\n  query getMetaAuthors($offset: Int, $limit: Int, $search: String, $role: String) {\n    getUsers(offset: $offset, limit: $limit, search: $search, role: $role) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const GET_META_SETTINGS_PROJECTS = gql`\n  query getProjects(\n    $offset: Int\n    $limit: Int\n    $search: String\n    $category: ID\n    $status: [PostStatus]\n  ) {\n    getProjects(\n      offset: $offset\n      limit: $limit\n      search: $search\n      category: $category\n      status: $status\n    ) {\n      id\n      title\n      status\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_STATISTICS = gql`\n  query getDashboardStatistics {\n    getDashboardStatistics {\n      title\n      total\n      graph {\n        count\n        createdAt\n      }\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_ACTIVITIES = gql`\n  query getDashboardActivities {\n    getDashboardActivities {\n      id\n      user {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      message\n      entityType\n      identityString\n      createdAt\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_SETTINGS = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      ...DashboardSettingsFields\n    }\n  }\n  ${DashboardSettingsFields}\n`;\nexport const GET_META_DASHBOARD_PREVIEW_ARTICLES = gql`\n  query getMetaDashboardPreviewArticles($offset: Int, $limit: Int, $status: [PostStatus]) {\n    getArticles(offset: $offset, limit: $limit, status: $status) {\n      id\n      author {\n        name\n        avatar {\n          path\n        }\n      }\n      title\n      body\n      category {\n        id\n        name\n      }\n      status\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_PREVIEW_PROJECTS = gql`\n  query getMetaDashboardPreviewProjects($offset: Int, $limit: Int, $status: [PostStatus]) {\n    getProjects(offset: $offset, limit: $limit, status: $status) {\n      id\n      title\n      description\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      category {\n        id\n        name\n      }\n      status\n    }\n  }\n`;\nexport const UPDATE_META_DASHBOARD_SETTINGS = gql`\n  mutation updateMetaDashboardSettings($input: DashboardSettingsInput!) {\n    updateDashboardSettings(input: $input) {\n      ...DashboardSettingsFields\n    }\n  }\n  ${DashboardSettingsFields}\n`;","map":null,"metadata":{},"sourceType":"module"}