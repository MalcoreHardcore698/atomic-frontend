{"ast":null,"code":"import React from 'react';\nimport Container from '../../atomic-ui/components/Container';\nimport Column from '../../atomic-ui/components/Column';\nimport Row from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Form from '../Form';\nexport var AddUserFolder = function AddUserFolder(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? true : _ref$title,\n      mutation = _ref.mutation,\n      appearance = _ref.appearance,\n      className = _ref.className,\n      onCancel = _ref.onCancel,\n      onSubmit = _ref.onSubmit;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, function (_ref2) {\n    var register = _ref2.register,\n        loading = _ref2.loading;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, title && /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Title, {\n      style: {\n        textAlign: 'center'\n      },\n      tag: 'h4'\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0438\")), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      name: 'name',\n      inputRef: register({\n        required: true\n      }),\n      placeholder: 'Введите название папки',\n      appearance: 'ghost',\n      loading: loading.toString(),\n      autoComplete: 'off',\n      required: true\n    })), /*#__PURE__*/React.createElement(Row, null, onCancel && /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'button',\n      appearance: 'ghost',\n      loading: loading.toString(),\n      onClick: onCancel\n    }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'submit',\n      loading: loading.toString()\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\")));\n  });\n};\n_c = AddUserFolder;\nexport default AddUserFolder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserFolder\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormAddUserFolder/index.js"],"names":["React","Container","Column","Row","Title","Input","Button","Form","AddUserFolder","title","mutation","appearance","className","onCancel","onSubmit","register","loading","textAlign","required","toString","flexGrow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAOvB;AAAA,wBANJC,KAMI;AAAA,MANJA,KAMI,2BANI,IAMJ;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,QACI,QADJA,QACI;AACJ,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEF,SAAjB;AAA4B,IAAA,UAAU,EAAED,UAAxC;AAAoD,IAAA,QAAQ,EAAED,QAA9D;AAAwE,IAAA,QAAQ,EAAEI;AAAlF,KACG;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,QAAaC,OAAb,SAAaA,OAAb;AAAA,wBACC,oBAAC,KAAD,CAAO,QAAP,QACGP,KAAK,iBACJ,oBAAC,SAAD,qBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAd;AAAuC,MAAA,GAAG,EAAE;AAA5C,yFADF,CAFJ,eASE,oBAAC,MAAD,qBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,QAAQ,EAAEF,QAAQ,CAAC;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,wBAJf;AAKE,MAAA,UAAU,EAAE,OALd;AAME,MAAA,OAAO,EAAEF,OAAO,CAACG,QAAR,EANX;AAOE,MAAA,YAAY,EAAE,KAPhB;AAQE,MAAA,QAAQ;AARV,MADF,CATF,eAsBE,oBAAC,GAAD,QACGN,QAAQ,iBACP,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,IAAI,EAAE,QAFR;AAGE,MAAA,UAAU,EAAE,OAHd;AAIE,MAAA,OAAO,EAAEJ,OAAO,CAACG,QAAR,EAJX;AAKE,MAAA,OAAO,EAAEN;AALX,8CAFJ,eAWE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE;AAAZ,OAAf;AAAgC,MAAA,IAAI,EAAE,QAAtC;AAAgD,MAAA,OAAO,EAAEJ,OAAO,CAACG,QAAR;AAAzD,oDAXF,CAtBF,CADD;AAAA,GADH,CADF;AA4CD,CApDM;KAAMX,a;AAsDb,eAAeA,aAAf","sourcesContent":["import React from 'react'\n\nimport Container from '../../atomic-ui/components/Container'\nimport Column from '../../atomic-ui/components/Column'\nimport Row from '../../atomic-ui/components/Row'\nimport Title from '../../atomic-ui/components/Title'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\n\nimport Form from '../Form'\n\nexport const AddUserFolder = ({\n  title = true,\n  mutation,\n  appearance,\n  className,\n  onCancel,\n  onSubmit\n}) => {\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading }) => (\n        <React.Fragment>\n          {title && (\n            <Container>\n              <Title style={{ textAlign: 'center' }} tag={'h4'}>\n                Создание папки\n              </Title>\n            </Container>\n          )}\n\n          <Column>\n            <Input\n              type={'text'}\n              name={'name'}\n              inputRef={register({ required: true })}\n              placeholder={'Введите название папки'}\n              appearance={'ghost'}\n              loading={loading.toString()}\n              autoComplete={'off'}\n              required\n            />\n          </Column>\n\n          <Row>\n            {onCancel && (\n              <Button\n                style={{ flexGrow: 1 }}\n                type={'button'}\n                appearance={'ghost'}\n                loading={loading.toString()}\n                onClick={onCancel}>\n                Отмена\n              </Button>\n            )}\n            <Button style={{ flexGrow: 1 }} type={'submit'} loading={loading.toString()}>\n              Создать\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default AddUserFolder\n"]},"metadata":{},"sourceType":"module"}