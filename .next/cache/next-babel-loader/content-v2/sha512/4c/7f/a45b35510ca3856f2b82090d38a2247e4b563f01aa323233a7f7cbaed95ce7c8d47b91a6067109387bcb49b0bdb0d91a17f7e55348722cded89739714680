{"ast":null,"code":"import gql from 'graphql-tag';\nimport { ProjectFields } from '../../fragments';\nexport const GET_PROJECT = gql`\n  query getProject($id: ID!) {\n    getProject(id: $id) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const GET_PROJECTS = gql`\n  query getProjects(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $category: ID\n    $rating: [String]\n    $author: String\n    $search: String\n    $company: String\n    $status: [PostStatus]\n    $createdAt: String\n  ) {\n    getProjects(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      category: $category\n      rating: $rating\n      author: $author\n      search: $search\n      company: $company\n      status: $status\n      createdAt: $createdAt\n    ) {\n      id\n      title\n      description\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      preview {\n        id\n        path\n      }\n      screenshots {\n        id\n        path\n      }\n      category {\n        id\n        name\n      }\n      rating {\n        email\n        phone\n      }\n      status\n    }\n  }\n`;\nexport const GET_PROJECTS_BY_IDS = gql`\n  query getProjectsByIds($projects: [ID]!, $status: [PostStatus]) {\n    getProjectsByIds(projects: $projects, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const LIKE_PROJECT = gql`\n  mutation likeProject($id: ID!) {\n    likeProject(id: $id) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const CREATE_PROJECT = gql`\n  mutation createProject($input: ProjectCreateInput!, $status: PostStatus) {\n    createProject(input: $input, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const UPDATE_PROJECT = gql`\n  mutation updateProject($id: ID!, $input: ProjectUpdateInput!, $status: PostStatus) {\n    updateProject(id: $id, input: $input, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const DELETE_PROJECT = gql`\n  mutation deleteProject($id: [ID]!, $status: PostStatus) {\n    deleteProject(id: $id, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;","map":null,"metadata":{},"sourceType":"module"}