{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Row from '../../atomic-ui/components/Row';\nimport Switch from '../../atomic-ui/components/Switch';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Transition from '../../atomic-ui/components/Transition';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"FilterBar__Wrap\",\n  componentId: \"sc-1lvfs1u-0\"\n})([\"display:flex;width:100%;&.fade-enter{opacity:0;}&.fade-enter-active{opacity:1;transition:opacity 100ms,blur 100ms;}&.fade-exit{opacity:1;}&.fade-exit-active{opacity:0;transition:opacity 100ms,blur 100ms;}\"]);\n_c = Wrap;\nexport var List = styled(Row).withConfig({\n  displayName: \"FilterBar__List\",\n  componentId: \"sc-1lvfs1u-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(256px,1fr));@media only screen and (max-width:480px){grid-gap:var(--default-gap);}\"]);\n_c2 = List;\nexport var Filter = function Filter(_ref) {\n  var _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? true : _ref$isOpen,\n      filters = _ref.filters,\n      options = _ref.options,\n      duration = _ref.duration;\n  return /*#__PURE__*/React.createElement(Transition, {\n    in: isOpen,\n    animation: 'fade',\n    timeout: duration\n  }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), filters && filters.length > 0 && /*#__PURE__*/React.createElement(List, null, filters.map(function (filter) {\n    return filter;\n  })), options && options.length > 0 && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: options[0],\n    options: options,\n    stretch: true\n  })), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  })));\n};\n_c3 = Filter;\nFilter.defaultProps = {\n  duration: 150\n};\nexport default Filter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"Filter\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FilterBar/index.js"],"names":["React","styled","Column","Row","Switch","Divider","Transition","Wrap","List","Filter","isOpen","filters","options","duration","length","map","filter","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AAEA,OAAO,IAAMC,IAAI,GAAGN,MAAM,CAACC,MAAD,CAAT;AAAA;AAAA;AAAA,oNAAV;KAAMK,I;AAuBb,OAAO,IAAMC,IAAI,GAAGP,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,oJAAV;MAAMK,I;AASb,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmD;AAAA,yBAAhDC,MAAgD;AAAA,MAAhDA,MAAgD,4BAAvC,IAAuC;AAAA,MAAjCC,OAAiC,QAAjCA,OAAiC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACvE,sBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEH,MAAhB;AAAwB,IAAA,SAAS,EAAE,MAAnC;AAA2C,IAAA,OAAO,EAAEG;AAApD,kBACE,oBAAC,IAAD,qBACE,oBAAC,OAAD;AAAS,IAAA,KAAK;AAAd,IADF,EAEGF,OAAO,IAAIA,OAAO,CAACG,MAAR,GAAiB,CAA5B,iBAAiC,oBAAC,IAAD,QAAOH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD;AAAA,WAAYA,MAAZ;AAAA,GAAZ,CAAP,CAFpC,EAGGJ,OAAO,IAAIA,OAAO,CAACE,MAAR,GAAiB,CAA5B,iBACC,oBAAC,GAAD,qBACE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEF,OAAO,CAAC,CAAD,CAA7B;AAAkC,IAAA,OAAO,EAAEA,OAA3C;AAAoD,IAAA,OAAO;AAA3D,IADF,CAJJ,eAQE,oBAAC,OAAD;AAAS,IAAA,KAAK;AAAd,IARF,CADF,CADF;AAcD,CAfM;MAAMH,M;AAiBbA,MAAM,CAACQ,YAAP,GAAsB;AACpBJ,EAAAA,QAAQ,EAAE;AADU,CAAtB;AAIA,eAAeJ,MAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Row from '../../atomic-ui/components/Row'\nimport Switch from '../../atomic-ui/components/Switch'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Transition from '../../atomic-ui/components/Transition'\n\nexport const Wrap = styled(Column)`\n  display: flex;\n  width: 100%;\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const List = styled(Row)`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n\n  @media only screen and (max-width: 480px) {\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Filter = ({ isOpen = true, filters, options, duration }) => {\n  return (\n    <Transition in={isOpen} animation={'fade'} timeout={duration}>\n      <Wrap>\n        <Divider clear />\n        {filters && filters.length > 0 && <List>{filters.map((filter) => filter)}</List>}\n        {options && options.length > 0 && (\n          <Row>\n            <Switch defaultValue={options[0]} options={options} stretch />\n          </Row>\n        )}\n        <Divider clear />\n      </Wrap>\n    </Transition>\n  )\n}\n\nFilter.defaultProps = {\n  duration: 150\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}