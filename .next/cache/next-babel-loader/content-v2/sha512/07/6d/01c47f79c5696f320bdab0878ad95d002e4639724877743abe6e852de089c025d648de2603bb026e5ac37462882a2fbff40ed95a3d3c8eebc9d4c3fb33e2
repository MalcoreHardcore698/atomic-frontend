{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Snacks\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  left: calc(50% - 185px);\\n  bottom: 0;\\n  z-index: var(--z-override);\\n  padding: 25px;\\n  max-height: 768px;\\n  overflow-y: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Column from '../Column';\nimport Snack from '../Snack';\nexport var Wrap = styled(Column)(_templateObject());\n_c = Wrap;\nexport var Snacks = function Snacks(_ref) {\n  _s();\n\n  var snacks = _ref.snacks,\n      onRemove = _ref.onRemove;\n\n  var _useState = useState([]),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var onItemRemove = function onItemRemove(item) {\n    if (onRemove) onRemove(item);\n    setList(function (prev) {\n      return prev.filter(function (el) {\n        return el.id !== item.id;\n      });\n    });\n  };\n\n  return __jsx(Wrap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, (snacks || list).map(function (item) {\n    return __jsx(Snack, {\n      key: item.id,\n      type: item.type,\n      message: item.message,\n      onRemove: function onRemove() {\n        return onItemRemove(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(Snacks, \"5B5creADs30R66wN/2t9GZl+br4=\");\n\n_c2 = Snacks;\nSnacks.defaultProps = {\n  snacks: []\n};\nexport default Snacks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Snacks\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Snacks/index.js"],"names":["React","useState","styled","Column","Snack","Wrap","Snacks","snacks","onRemove","list","setList","onItemRemove","item","prev","filter","el","id","map","type","message","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,IAAMC,IAAI,GAAGH,MAAM,CAACC,MAAD,CAAT,mBAAV;KAAME,I;AAUb,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA0B;AAAA;;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACtBP,QAAQ,CAAC,EAAD,CADc;AAAA,MACvCQ,IADuC;AAAA,MACjCC,OADiC;;AAG9C,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,QAAIJ,QAAJ,EAAcA,QAAQ,CAACI,IAAD,CAAR;AACdF,IAAAA,OAAO,CAAC,UAACG,IAAD;AAAA,aAAUA,IAAI,CAACC,MAAL,CAAY,UAACC,EAAD;AAAA,eAAQA,EAAE,CAACC,EAAH,KAAUJ,IAAI,CAACI,EAAvB;AAAA,OAAZ,CAAV;AAAA,KAAD,CAAP;AACD,GAHD;;AAKA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACT,MAAM,IAAIE,IAAX,EAAiBQ,GAAjB,CAAqB,UAACL,IAAD;AAAA,WACpB,MAAC,KAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACI,EADZ;AAEE,MAAA,IAAI,EAAEJ,IAAI,CAACM,IAFb;AAGE,MAAA,OAAO,EAAEN,IAAI,CAACO,OAHhB;AAIE,MAAA,QAAQ,EAAE;AAAA,eAAMR,YAAY,CAACC,IAAD,CAAlB;AAAA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAArB,CADH,CADF;AAYD,CApBM;;GAAMN,M;;MAAAA,M;AAsBbA,MAAM,CAACc,YAAP,GAAsB;AACpBb,EAAAA,MAAM,EAAE;AADY,CAAtB;AAIA,eAAeD,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Column from '../Column'\nimport Snack from '../Snack'\n\nexport const Wrap = styled(Column)`\n  position: fixed;\n  left: calc(50% - 185px);\n  bottom: 0;\n  z-index: var(--z-override);\n  padding: 25px;\n  max-height: 768px;\n  overflow-y: auto;\n`\n\nexport const Snacks = ({ snacks, onRemove }) => {\n  const [list, setList] = useState([])\n\n  const onItemRemove = (item) => {\n    if (onRemove) onRemove(item)\n    setList((prev) => prev.filter((el) => el.id !== item.id))\n  }\n\n  return (\n    <Wrap>\n      {(snacks || list).map((item) => (\n        <Snack\n          key={item.id}\n          type={item.type}\n          message={item.message}\n          onRemove={() => onItemRemove(item)}\n        />\n      ))}\n    </Wrap>\n  )\n}\n\nSnacks.defaultProps = {\n  snacks: []\n}\n\nexport default Snacks\n"]},"metadata":{},"sourceType":"module"}