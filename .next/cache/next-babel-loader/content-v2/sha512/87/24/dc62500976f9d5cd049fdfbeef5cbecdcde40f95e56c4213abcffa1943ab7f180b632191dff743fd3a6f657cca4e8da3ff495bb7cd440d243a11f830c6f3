{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Title from '../Title';\nimport Tooltip from '../Tooltip';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Checkbox from '../Checkbox';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"ActionRow__Wrap\",\n  componentId: \"sc-2j9izg-0\"\n})([\"justify-content:space-between;\"]);\nexport const InfoIcon = styled(Icon).withConfig({\n  displayName: \"ActionRow__InfoIcon\",\n  componentId: \"sc-2j9izg-1\"\n})([\"opacity:0.25;cursor:pointer;transition:opacity 450ms ease;&:hover{opacity:0.65;}\"]);\nexport const AddTooltip = styled(Tooltip).withConfig({\n  displayName: \"ActionRow__AddTooltip\",\n  componentId: \"sc-2j9izg-2\"\n})([\"flex-grow:initial;\"]);\nexport const Name = styled(Row).withConfig({\n  displayName: \"ActionRow__Name\",\n  componentId: \"sc-2j9izg-3\"\n})([\"grid-gap:5px;\"]);\nexport const ActionRow = ({\n  title,\n  info,\n  action,\n  checkbox,\n  labelChecked,\n  disabledChecked,\n  defaultChecked,\n  rtlChecked,\n  onChecked,\n  onAdd\n}) => /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Name, null, /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, title), info && /*#__PURE__*/React.createElement(Tooltip, {\n  text: info\n}, /*#__PURE__*/React.createElement(InfoIcon, {\n  size: 's',\n  icon: 'infoCircle',\n  stroke: 'black'\n}))), /*#__PURE__*/React.createElement(Row, {\n  style: {\n    gridGap: 5\n  }\n}, checkbox && /*#__PURE__*/React.createElement(Checkbox, {\n  label: labelChecked,\n  disabled: disabledChecked,\n  defaultChecked: defaultChecked,\n  onChange: onChecked,\n  rtl: rtlChecked\n}), action && /*#__PURE__*/React.createElement(AddTooltip, {\n  place: 'left',\n  text: 'Добавить'\n}, /*#__PURE__*/React.createElement(Button, {\n  type: 'button',\n  kind: 'icon',\n  size: 'xs',\n  onClick: onAdd\n}, /*#__PURE__*/React.createElement(Icon, {\n  size: 'xs',\n  icon: 'add',\n  stroke: 'white'\n})))));\nexport default ActionRow;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/atomic-ui/components/ActionRow/index.js"],"names":["React","styled","Row","Title","Tooltip","Button","Icon","Checkbox","Wrap","InfoIcon","AddTooltip","Name","ActionRow","title","info","action","checkbox","labelChecked","disabledChecked","defaultChecked","rtlChecked","onChecked","onAdd","gridGap"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAO,MAAMC,IAAI,GAAGP,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,sCAAV;AAIP,OAAO,MAAMO,QAAQ,GAAGR,MAAM,CAACK,IAAD,CAAT;AAAA;AAAA;AAAA,wFAAd;AAUP,OAAO,MAAMI,UAAU,GAAGT,MAAM,CAACG,OAAD,CAAT;AAAA;AAAA;AAAA,0BAAhB;AAIP,OAAO,MAAMO,IAAI,GAAGV,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,qBAAV;AAIP,OAAO,MAAMU,SAAS,GAAG,CAAC;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,IAFwB;AAGxBC,EAAAA,MAHwB;AAIxBC,EAAAA,QAJwB;AAKxBC,EAAAA,YALwB;AAMxBC,EAAAA,eANwB;AAOxBC,EAAAA,cAPwB;AAQxBC,EAAAA,UARwB;AASxBC,EAAAA,SATwB;AAUxBC,EAAAA;AAVwB,CAAD,kBAYvB,oBAAC,IAAD,qBACE,oBAAC,IAAD,qBACE,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAE;AAAZ,GAAmBT,KAAnB,CADF,EAEGC,IAAI,iBACH,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAEA;AAAf,gBACE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAE,GAAhB;AAAqB,EAAA,IAAI,EAAE,YAA3B;AAAyC,EAAA,MAAM,EAAE;AAAjD,EADF,CAHJ,CADF,eAUE,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAE;AAAES,IAAAA,OAAO,EAAE;AAAX;AAAZ,GACGP,QAAQ,iBACP,oBAAC,QAAD;AACE,EAAA,KAAK,EAAEC,YADT;AAEE,EAAA,QAAQ,EAAEC,eAFZ;AAGE,EAAA,cAAc,EAAEC,cAHlB;AAIE,EAAA,QAAQ,EAAEE,SAJZ;AAKE,EAAA,GAAG,EAAED;AALP,EAFJ,EAUGL,MAAM,iBACL,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAE,MAAnB;AAA2B,EAAA,IAAI,EAAE;AAAjC,gBACE,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,QAAd;AAAwB,EAAA,IAAI,EAAE,MAA9B;AAAsC,EAAA,IAAI,EAAE,IAA5C;AAAkD,EAAA,OAAO,EAAEO;AAA3D,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,IAAZ;AAAkB,EAAA,IAAI,EAAE,KAAxB;AAA+B,EAAA,MAAM,EAAE;AAAvC,EADF,CADF,CAXJ,CAVF,CAZK;AA2CP,eAAeV,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../Row'\nimport Title from '../Title'\nimport Tooltip from '../Tooltip'\nimport Button from '../Button'\nimport Icon from '../Icon'\nimport Checkbox from '../Checkbox'\n\nexport const Wrap = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const InfoIcon = styled(Icon)`\n  opacity: 0.25;\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nexport const AddTooltip = styled(Tooltip)`\n  flex-grow: initial;\n`\n\nexport const Name = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const ActionRow = ({\n  title,\n  info,\n  action,\n  checkbox,\n  labelChecked,\n  disabledChecked,\n  defaultChecked,\n  rtlChecked,\n  onChecked,\n  onAdd\n}) => (\n  <Wrap>\n    <Name>\n      <Title tag={'h4'}>{title}</Title>\n      {info && (\n        <Tooltip text={info}>\n          <InfoIcon size={'s'} icon={'infoCircle'} stroke={'black'} />\n        </Tooltip>\n      )}\n    </Name>\n\n    <Row style={{ gridGap: 5 }}>\n      {checkbox && (\n        <Checkbox\n          label={labelChecked}\n          disabled={disabledChecked}\n          defaultChecked={defaultChecked}\n          onChange={onChecked}\n          rtl={rtlChecked}\n        />\n      )}\n      {action && (\n        <AddTooltip place={'left'} text={'Добавить'}>\n          <Button type={'button'} kind={'icon'} size={'xs'} onClick={onAdd}>\n            <Icon size={'xs'} icon={'add'} stroke={'white'} />\n          </Button>\n        </AddTooltip>\n      )}\n    </Row>\n  </Wrap>\n)\n\nexport default ActionRow\n"]},"metadata":{},"sourceType":"module"}