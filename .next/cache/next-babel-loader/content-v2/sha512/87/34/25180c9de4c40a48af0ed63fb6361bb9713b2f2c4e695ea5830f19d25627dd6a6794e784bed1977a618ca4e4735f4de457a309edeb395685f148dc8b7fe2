{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Button from '../../atomic-ui/components/Button';\nimport Tabs, { Tab } from '../../atomic-ui/components/Tabs';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Input from '../../atomic-ui/components/Input';\nimport Text from '../../atomic-ui/components/Text';\nimport Form from '../Form';\nimport { getLabelCategory } from '../../atomic-ui/utils/functions';\nimport Select from '../../atomic-ui/components/Select';\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:128px !important;height:30px !important;\"]);\nexport const Settings = ({\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading,\n    getValues\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n    label: 'Основное'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'title',\n    ref: register(),\n    defaultValue: getValues('title') || '/',\n    placeholder: 'Домашняя страница',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"), /*#__PURE__*/React.createElement(Logotype, {\n    name: 'preview',\n    accept: 'image/*',\n    defaultValue: getValues('preview') || null,\n    placeholder: 'Перетащите сюда изображение размером 128x30px',\n    tooltip: 'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n  }))), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Scaffold'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Select, {\n    appearance: 'ghost',\n    placeholder: 'Выберите первый проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    appearance: 'ghost',\n    placeholder: 'Выберите второй проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    appearance: 'ghost',\n    placeholder: 'Выберите третий проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Logotype, {\n    name: 'preview',\n    accept: 'image/*',\n    defaultValue: getValues('preview') || null,\n    placeholder: 'Перетащите сюда изображение размером 128x30px',\n    tooltip: 'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n  }))), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Мета'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-title',\n    ref: register(),\n    defaultValue: getValues('title') || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-description',\n    ref: register(),\n    defaultValue: getValues('title'),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n};\nexport default Settings;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormSettings/index.js"],"names":["React","styled","Row","Column","Title","Button","Tabs","Tab","Dropzone","Divider","Input","Text","Form","getLabelCategory","Select","Logotype","Settings","mutation","appearance","className","onSubmit","register","loading","getValues","flexGrow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Button from '../../atomic-ui/components/Button'\nimport Tabs, { Tab } from '../../atomic-ui/components/Tabs'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Input from '../../atomic-ui/components/Input'\nimport Text from '../../atomic-ui/components/Text'\n\nimport Form from '../Form'\nimport { getLabelCategory } from '../../atomic-ui/utils/functions'\nimport Select from '../../atomic-ui/components/Select'\n\nexport const Logotype = styled(Dropzone)`\n  width: 128px !important;\n  height: 30px !important;\n`\n\nexport const Settings = ({ mutation, appearance, className, onSubmit }) => {\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading, getValues }) => (\n        <React.Fragment>\n          <Tabs>\n            <Tab label={'Основное'}>\n              <Column>\n                <Title tag={'h4'}>Основное</Title>\n                <Input\n                  type={'text'}\n                  name={'title'}\n                  ref={register()}\n                  defaultValue={getValues('title') || '/'}\n                  placeholder={'Домашняя страница'}\n                  appearance={'ghost'}\n                  disabled={loading}\n                />\n\n                <Title tag={'h4'}>Логотип</Title>\n                <Logotype\n                  name={'preview'}\n                  accept={'image/*'}\n                  defaultValue={getValues('preview') || null}\n                  placeholder={'Перетащите сюда изображение размером 128x30px'}\n                  tooltip={\n                    'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n                  }\n                />\n              </Column>\n            </Tab>\n            <Tab label={'Scaffold'}>\n              <Column>\n                <Title tag={'h4'}>Проекты</Title>\n                <Select\n                  appearance={'ghost'}\n                  placeholder={'Выберите первый проект'}\n                  options={[]}\n                  isClearable\n                />\n                <Select\n                  appearance={'ghost'}\n                  placeholder={'Выберите второй проект'}\n                  options={[]}\n                  isClearable\n                />\n                <Select\n                  appearance={'ghost'}\n                  placeholder={'Выберите третий проект'}\n                  options={[]}\n                  isClearable\n                />\n\n                <Title tag={'h4'}>Фон</Title>\n                <Logotype\n                  name={'preview'}\n                  accept={'image/*'}\n                  defaultValue={getValues('preview') || null}\n                  placeholder={'Перетащите сюда изображение размером 128x30px'}\n                  tooltip={\n                    'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n                  }\n                />\n              </Column>\n            </Tab>\n            <Tab label={'Мета'}>\n              <Column>\n                <Title tag={'h4'}>Мета теги</Title>\n\n                <Input\n                  type={'text'}\n                  name={'meta-title'}\n                  ref={register()}\n                  defaultValue={getValues('title') || 'Atomic'}\n                  placeholder={'Мета-название'}\n                  appearance={'ghost'}\n                  disabled={loading}\n                />\n\n                <Input\n                  type={'text'}\n                  name={'meta-description'}\n                  ref={register()}\n                  defaultValue={getValues('title')}\n                  placeholder={'Мета-описание'}\n                  appearance={'ghost'}\n                  disabled={loading}\n                />\n              </Column>\n            </Tab>\n          </Tabs>\n\n          <Divider clear />\n\n          <Row>\n            <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n              Сохранить\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}