{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport PageRouter from '../components/Profile/PageRouter';\nimport { hasResponsibleMember } from '../components/Members';\nimport { Loader } from '../components/Styled';\nimport { useProfile } from '../hooks/useProfile';\nimport { profilePages } from '../__mock__';\nimport { articles as articlesFilterConfig, projects as projectsFilterConfig } from '../components/FilterBar/config';\nconst TITLE = 'Профиль';\n\nconst Profile = () => {\n  const router = useRouter();\n  const {\n    onChangePage,\n    onAddProject,\n    onAddArticle,\n    onCompanyLink,\n    onAboutMore,\n    onMembers,\n    onEdit\n  } = useProfile();\n  console.log(onMembers);\n  const {\n    user,\n    search,\n    currentPage,\n    visibleFilters\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    currentPage: state.root.currentPage,\n    visibleFilters: state.root.visibleFilters\n  }));\n  const isProjects = useMemo(() => currentPage === 'projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage === 'articles', [currentPage]);\n  const isFeed = useMemo(() => currentPage === 'feed', [currentPage]);\n  const defaultCurrentPage = useMemo(() => profilePages.find(page => page.value === currentPage), [currentPage]);\n  const buttonCreateText = useMemo(() => isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '', [isProjects, isArticles]);\n  const filterConfig = useMemo(() => {\n    if (isArticles) return articlesFilterConfig;\n    return projectsFilterConfig;\n  }, [isArticles]);\n  const pages = useMemo(() => profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== 'articles' : true), [user, profilePages]);\n  const getCreateMethod = useCallback(() => {\n    if (isProjects && hasAccess(user, 'PURPOSE_PROJECT')) return onAddProject;\n    if (isArticles && hasAccess(user, 'PURPOSE_ARTICLE')) return onAddArticle;\n  }, [user, isProjects, isArticles, onAddProject, onAddArticle]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push({\n        pathname: '/auth',\n        query: router.query\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    const {\n      page\n    } = router.query;\n    if (page) onChangePage({\n      value: page\n    });\n  }, [router]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onAboutMore: onAboutMore,\n    onCompanyLink: onCompanyLink,\n    onMembers: onMembers,\n    onEdit: onEdit\n  }), /*#__PURE__*/React.createElement(Switch, {\n    options: pages,\n    defaultValue: defaultCurrentPage,\n    onChange: onChangePage,\n    stretch: true\n  }), !isFeed && /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: buttonCreateText,\n    onCreate: getCreateMethod()\n  }), !isFeed && /*#__PURE__*/React.createElement(FilterBar, _extends({}, filterConfig, {\n    isOpen: visibleFilters\n  })), /*#__PURE__*/React.createElement(PageRouter, {\n    page: currentPage\n  })));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/profile.js"],"names":["React","useEffect","useMemo","useCallback","useSelector","useRouter","Column","Switch","Spinner","hasAccess","DefaultLayout","UserBar","FilterBar","SearchBar","PageRouter","hasResponsibleMember","Loader","useProfile","profilePages","articles","articlesFilterConfig","projects","projectsFilterConfig","TITLE","Profile","router","onChangePage","onAddProject","onAddArticle","onCompanyLink","onAboutMore","onMembers","onEdit","console","log","user","search","currentPage","visibleFilters","state","root","isProjects","isArticles","isFeed","defaultCurrentPage","find","page","value","buttonCreateText","filterConfig","pages","filter","getCreateMethod","authenticated","push","pathname","query","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useRouter } from 'next/router'\n\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport PageRouter from '../components/Profile/PageRouter'\nimport { hasResponsibleMember } from '../components/Members'\nimport { Loader } from '../components/Styled'\nimport { useProfile } from '../hooks/useProfile'\nimport { profilePages } from '../__mock__'\nimport {\n  articles as articlesFilterConfig,\n  projects as projectsFilterConfig\n} from '../components/FilterBar/config'\n\nconst TITLE = 'Профиль'\n\nconst Profile = () => {\n  const router = useRouter()\n\n  const {\n    onChangePage,\n    onAddProject,\n    onAddArticle,\n    onCompanyLink,\n    onAboutMore,\n    onMembers,\n    onEdit\n  } = useProfile()\n\n  console.log(onMembers)\n\n  const { user, search, currentPage, visibleFilters } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search,\n    currentPage: state.root.currentPage,\n    visibleFilters: state.root.visibleFilters\n  }))\n\n  const isProjects = useMemo(() => currentPage === 'projects', [currentPage])\n  const isArticles = useMemo(() => currentPage === 'articles', [currentPage])\n  const isFeed = useMemo(() => currentPage === 'feed', [currentPage])\n\n  const defaultCurrentPage = useMemo(\n    () => profilePages.find((page) => page.value === currentPage),\n    [currentPage]\n  )\n\n  const buttonCreateText = useMemo(\n    () => (isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''),\n    [isProjects, isArticles]\n  )\n\n  const filterConfig = useMemo(() => {\n    if (isArticles) return articlesFilterConfig\n    return projectsFilterConfig\n  }, [isArticles])\n\n  const pages = useMemo(\n    () =>\n      profilePages.filter((page) =>\n        !hasResponsibleMember(user) ? page.value !== 'articles' : true\n      ),\n    [user, profilePages]\n  )\n\n  const getCreateMethod = useCallback(() => {\n    if (isProjects && hasAccess(user, 'PURPOSE_PROJECT')) return onAddProject\n    if (isArticles && hasAccess(user, 'PURPOSE_ARTICLE')) return onAddArticle\n  }, [user, isProjects, isArticles, onAddProject, onAddArticle])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push({ pathname: '/auth', query: router.query })\n    }\n  }, [user])\n\n  useEffect(() => {\n    const { page } = router.query\n    if (page) onChangePage({ value: page })\n  }, [router])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onAboutMore={onAboutMore}\n          onCompanyLink={onCompanyLink}\n          onMembers={onMembers}\n          onEdit={onEdit}\n        />\n\n        <Switch options={pages} defaultValue={defaultCurrentPage} onChange={onChangePage} stretch />\n\n        {!isFeed && (\n          <SearchBar\n            defaultValue={search}\n            buttonCreateText={buttonCreateText}\n            onCreate={getCreateMethod()}\n          />\n        )}\n\n        {!isFeed && (\n          <FilterBar {...filterConfig} isOpen={visibleFilters} />\n        )}\n\n        <PageRouter page={currentPage} />\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}