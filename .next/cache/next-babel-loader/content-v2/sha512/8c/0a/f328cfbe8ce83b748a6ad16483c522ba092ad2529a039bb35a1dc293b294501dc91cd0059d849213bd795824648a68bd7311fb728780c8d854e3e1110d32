{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Alert from '../atomic-ui/components/Alert';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Select from '../atomic-ui/components/Select';\nimport Button from '../atomic-ui/components/Button';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Tooltip from '../atomic-ui/components/Tooltip';\nimport Text, { Wrap as WrapText } from '../atomic-ui/components/Text';\nimport Icon from '../atomic-ui/components/Icon';\nimport templates from '../atomic-ui/components/Table/templates';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport ProjectCard from '../components/ProjectCard';\nimport { setFolder } from '../store/actions/root';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserLink, onUserClientEdit, onUserAboutMore, onUserFolderAdd, onUserFolderDelete } from '../store/helpers/user';\nimport queries from '../graphql/queries';\nimport { profilePages } from '../__mock__';\nconst TITLE = 'Профиль';\nconst Container = styled.aside.withConfig({\n  displayName: \"profile__Container\",\n  componentId: \"sc-84d5hd-0\"\n})([\"display:grid;grid-template-columns:repeat(auto-fill,minmax(442px,1fr));grid-gap:var(--default-gap);@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fill,minmax(285px,1fr));}\"]);\n_c = Container;\nconst ContainerInProgress = styled(Row).withConfig({\n  displayName: \"profile__ContainerInProgress\",\n  componentId: \"sc-84d5hd-1\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\n_c2 = ContainerInProgress;\nconst CreateButton = styled(Button).withConfig({\n  displayName: \"profile__CreateButton\",\n  componentId: \"sc-84d5hd-2\"\n})([\"display:flex;justify-content:center;align-items:center;grid-gap:10px;span{white-space:nowrap;}\"]);\n_c3 = CreateButton;\nconst Orginizer = styled(Column).withConfig({\n  displayName: \"profile__Orginizer\",\n  componentId: \"sc-84d5hd-3\"\n})([\"width:265px;\"]);\n_c4 = Orginizer;\nconst RemoveTooltip = styled(Tooltip).withConfig({\n  displayName: \"profile__RemoveTooltip\",\n  componentId: \"sc-84d5hd-4\"\n})([\"position:absolute;right:5px;display:none;\"]);\n_c5 = RemoveTooltip;\nconst ListItem = styled.div.withConfig({\n  displayName: \"profile__ListItem\",\n  componentId: \"sc-84d5hd-5\"\n})([\"position:relative;display:flex;justify-content:space-between;align-items:center;height:var(--input-height-s);cursor:pointer;transition:all 150ms ease;\", \"{display:flex;align-items:center;border-radius:var(--surface-border-radius);background:var(--ghost-color-background);width:100%;height:var(--input-height-s);padding:0 10px;transition:all 150ms ease;}&:hover{\", \"{display:flex;}\", \"{color:black;}}\", \"\"], WrapText, RemoveTooltip, WrapText, ({\n  active\n}) => active && css([\"\", \"{color:var(--default-color-accent);background:var(--default-color-accent-dim);}&:hover{\", \"{color:var(--default-color-accent);}}\"], WrapText, WrapText));\n_c6 = ListItem;\nconst AlertEmpty = styled(Alert).withConfig({\n  displayName: \"profile__AlertEmpty\",\n  componentId: \"sc-84d5hd-6\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;\"]);\n_c7 = AlertEmpty;\nconst Loader = styled.div.withConfig({\n  displayName: \"profile__Loader\",\n  componentId: \"sc-84d5hd-7\"\n})([\"display:flex;justify-content:center;width:100%;height:80px;\"]);\n_c8 = Loader;\n\nconst Projects = ({\n  projects\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  if (projects && projects.length === 0) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\");\n  }\n\n  return /*#__PURE__*/React.createElement(Container, null, projects && projects.length > 0 && projects.map(project => {\n    var _project$company;\n\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      owned: true,\n      key: project.id,\n      project: project,\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLike: mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        project,\n        owned: true\n      }),\n      onAdd: recall(onProjectAdd, {\n        id: project.id,\n        project\n      }),\n      onCompanyLink: project.company && recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    });\n  }));\n};\n\n_s(Projects, \"PWIuIW72k5bwumnZivfpDW8DWto=\", false, function () {\n  return [useHelper, useMutate, useSelector, useDispatch];\n});\n\n_c9 = Projects;\n\nconst InProgress = () => {\n  _s2();\n\n  const recall = useHelper();\n  const {\n    user,\n    folder\n  } = useSelector(state => ({\n    user: state.user,\n    folder: state.root.folder\n  }));\n  const dispatch = useDispatch();\n  const [getProjects, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS);\n\n  const onFolderClick = async item => {\n    if (refetch) await refetch({\n      projects: item.projects.map(project => project.id)\n    });\n    dispatch(setFolder(item));\n  };\n\n  useEffect(() => {\n    if (!folder && user !== null && user !== void 0 && user.folders && user.folders.length > 0) {\n      const defaultFolder = user.folders[0];\n\n      if (defaultFolder.projects.length > 0) {\n        getProjects({\n          variables: {\n            projects: defaultFolder.projects.map(project => project.id)\n          }\n        });\n      }\n\n      dispatch(setFolder(defaultFolder));\n    }\n  }, [folder, user, dispatch, getProjects]);\n  return /*#__PURE__*/React.createElement(ContainerInProgress, null, /*#__PURE__*/React.createElement(Orginizer, null, user.folders && user.folders.length > 0 ? /*#__PURE__*/React.createElement(Column, null, user.folders.map(item => /*#__PURE__*/React.createElement(ListItem, {\n    key: item.id,\n    active: folder && item.id === folder.id,\n    onClick: () => onFolderClick(item)\n  }, /*#__PURE__*/React.createElement(Text, null, item.name), /*#__PURE__*/React.createElement(RemoveTooltip, {\n    place: 'left',\n    text: 'Удалить'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    size: 'xs',\n    disabled: loading,\n    onClick: recall(onUserFolderDelete, {\n      id: item.id,\n      mutation: queries.DELETE_USER_FOLDER\n    })\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: 'xs',\n    icon: 'delete',\n    stroke: 'white'\n  })))))) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0430\\u043F\\u043E\\u043A \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(CreateButton, {\n    onClick: recall(onUserFolderAdd, {\n      mutation: queries.ADD_USER_FOLDER\n    })\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\"), /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'white'\n  }))), loading && /*#__PURE__*/React.createElement(Spinner, null), data && data.getProjectsByIds.length > 0 && data.getProjectsByIds.map(project => {\n    var _project$company2;\n\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      owned: true,\n      key: project.id,\n      project: project,\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        project,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned: true\n      }),\n      onAdd: recall(onProjectAdd, {\n        project\n      }),\n      onCompanyLink: project.company && recall(onUserLink, {\n        id: (_project$company2 = project.company) === null || _project$company2 === void 0 ? void 0 : _project$company2.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    });\n  }), (data && data.getProjectsByIds.length === 0 || !data) && /*#__PURE__*/React.createElement(AlertEmpty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0443 \\u0441 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\\u043C\\u0438\"));\n};\n\n_s2(InProgress, \"hap/LX8eTkgDgLoGDH3cDgnKYCg=\", false, function () {\n  return [useHelper, useSelector, useDispatch, useLazyQuery];\n});\n\n_c10 = InProgress;\n\nconst Profile = ({\n  categories\n}) => {\n  _s3();\n\n  const recall = useHelper();\n  const router = useRouter();\n  const user = useSelector(state => state.user);\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [currentPage, setCurrentPage] = useState(profilePages[0]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const isAdmin = useMemo(() => (user === null || user === void 0 ? void 0 : user.account) === 'ADMIN', [user]);\n  const renderContentPage = useCallback(() => {\n    switch (currentPage.value) {\n      case '/projects':\n        return /*#__PURE__*/React.createElement(Projects, {\n          projects: user.projects\n        });\n\n      case '/liked':\n        return /*#__PURE__*/React.createElement(Projects, {\n          projects: user.likedProjects\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(InProgress, null);\n    }\n  }, [currentPage]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onEdit: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      canEditAccount: !isAdmin,\n      mutations: {\n        update: queries.UPDATE_CLIENT_USER,\n        del: queries.DELETE_USER,\n        changePassword: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user\n    })\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: currentPage,\n    options: profilePages,\n    onChange: item => setCurrentPage(item),\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    onChangeFilter: () => setVisibleFilter(!visibleFilter)\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [/*#__PURE__*/React.createElement(DatePicker, {\n      key: 'publishedAt',\n      value: date,\n      placeholder: 'Дата публикации',\n      onChange: onChangeDate,\n      withNavigate: true\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: 'categories',\n      options: categories.map(category => ({\n        value: category.id,\n        label: category.name\n      })),\n      placeholder: 'Раздел',\n      selected: select,\n      onChange: item => onChangeSelect(item)\n    })],\n    options: templates.project.map((item, index) => ({\n      label: item.header,\n      value: index\n    }))\n  }), renderContentPage()));\n};\n\n_s3(Profile, \"sK6DPOnI4LeoiBZLPr9xIv11Bc4=\", false, function () {\n  return [useHelper, useRouter, useSelector];\n});\n\n_c11 = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ContainerInProgress\");\n$RefreshReg$(_c3, \"CreateButton\");\n$RefreshReg$(_c4, \"Orginizer\");\n$RefreshReg$(_c5, \"RemoveTooltip\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"AlertEmpty\");\n$RefreshReg$(_c8, \"Loader\");\n$RefreshReg$(_c9, \"Projects\");\n$RefreshReg$(_c10, \"InProgress\");\n$RefreshReg$(_c11, \"Profile\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useState","useEffect","useCallback","useMemo","useRouter","styled","css","useSelector","useDispatch","useLazyQuery","Row","Column","Switch","Alert","DatePicker","Select","Button","Spinner","Tooltip","Text","Wrap","WrapText","Icon","templates","useHelper","useMutate","DefaultLayout","UserBar","FilterBar","SearchBar","ProjectCard","setFolder","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserLink","onUserClientEdit","onUserAboutMore","onUserFolderAdd","onUserFolderDelete","queries","profilePages","TITLE","Container","aside","ContainerInProgress","CreateButton","Orginizer","RemoveTooltip","ListItem","div","active","AlertEmpty","Loader","Projects","projects","recall","mutate","user","state","dispatch","length","width","textAlign","map","project","id","likedProjects","find","item","LIKE_PROJECT","response","data","likeProject","auth","email","owned","company","_","key","screenshots","preview","InProgress","folder","root","getProjects","loading","refetch","GET_PROJECTS_BY_IDS","onFolderClick","folders","defaultFolder","variables","name","mutation","DELETE_USER_FOLDER","ADD_USER_FOLDER","getProjectsByIds","Profile","categories","router","date","onChangeDate","select","onChangeSelect","currentPage","setCurrentPage","visibleFilter","setVisibleFilter","isAdmin","account","renderContentPage","value","authenticated","push","canEditAccount","mutations","update","UPDATE_CLIENT_USER","del","DELETE_USER","changePassword","category","label","index","header"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Alert from '../atomic-ui/components/Alert'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Select from '../atomic-ui/components/Select'\nimport Button from '../atomic-ui/components/Button'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Tooltip from '../atomic-ui/components/Tooltip'\nimport Text, { Wrap as WrapText } from '../atomic-ui/components/Text'\nimport Icon from '../atomic-ui/components/Icon'\nimport templates from '../atomic-ui/components/Table/templates'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport ProjectCard from '../components/ProjectCard'\nimport { setFolder } from '../store/actions/root'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport {\n  onUserLink,\n  onUserClientEdit,\n  onUserAboutMore,\n  onUserFolderAdd,\n  onUserFolderDelete\n} from '../store/helpers/user'\nimport queries from '../graphql/queries'\nimport { profilePages } from '../__mock__'\n\nconst TITLE = 'Профиль'\n\nconst Container = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fill, minmax(285px, 1fr));\n  }\n`\n\nconst ContainerInProgress = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst CreateButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 10px;\n\n  span {\n    white-space: nowrap;\n  }\n`\n\nconst Orginizer = styled(Column)`\n  width: 265px;\n`\n\nconst RemoveTooltip = styled(Tooltip)`\n  position: absolute;\n  right: 5px;\n  display: none;\n`\n\nconst ListItem = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: var(--input-height-s);\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${WrapText} {\n    display: flex;\n    align-items: center;\n    border-radius: var(--surface-border-radius);\n    background: var(--ghost-color-background);\n    width: 100%;\n    height: var(--input-height-s);\n    padding: 0 10px;\n    transition: all 150ms ease;\n  }\n\n  &:hover {\n    ${RemoveTooltip} {\n      display: flex;\n    }\n\n    ${WrapText} {\n      color: black;\n    }\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      ${WrapText} {\n        color: var(--default-color-accent);\n        background: var(--default-color-accent-dim);\n      }\n\n      &:hover {\n        ${WrapText} {\n          color: var(--default-color-accent);\n        }\n      }\n    `}\n`\n\nconst AlertEmpty = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 80px;\n`\n\nconst Projects = ({ projects }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  if (projects && projects.length === 0) {\n    return <Alert style={{ width: '100%', textAlign: 'center' }}>Проектов нет</Alert>\n  }\n\n  return (\n    <Container>\n      {projects &&\n        projects.length > 0 &&\n        projects.map((project) => (\n          <ProjectCard\n            owned\n            key={project.id}\n            project={project}\n            liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n            onLike={mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            )}\n            onLink={recall(onProjectLink, {\n              id: project.id,\n              auth: user?.email,\n              project,\n              owned: true\n            })}\n            onAdd={recall(onProjectAdd, { id: project.id, project })}\n            onCompanyLink={\n              project.company &&\n              recall(onUserLink, { id: project.company?.email, auth: user?.email })\n            }\n            onScreenshotClick={(_, key) =>\n              recall(onProjectScreenshot, {\n                screenshots: [project.preview, ...project.screenshots],\n                key\n              })()\n            }\n          />\n        ))}\n    </Container>\n  )\n}\n\nconst InProgress = () => {\n  const recall = useHelper()\n  const { user, folder } = useSelector((state) => ({\n    user: state.user,\n    folder: state.root.folder\n  }))\n  const dispatch = useDispatch()\n\n  const [getProjects, { data, loading, refetch }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS)\n\n  const onFolderClick = async (item) => {\n    if (refetch) await refetch({ projects: item.projects.map((project) => project.id) })\n    dispatch(setFolder(item))\n  }\n\n  useEffect(() => {\n    if (!folder && user?.folders && user.folders.length > 0) {\n      const defaultFolder = user.folders[0]\n\n      if (defaultFolder.projects.length > 0) {\n        getProjects({\n          variables: { projects: defaultFolder.projects.map((project) => project.id) }\n        })\n      }\n\n      dispatch(setFolder(defaultFolder))\n    }\n  }, [folder, user, dispatch, getProjects])\n\n  return (\n    <ContainerInProgress>\n      <Orginizer>\n        {user.folders && user.folders.length > 0 ? (\n          <Column>\n            {user.folders.map((item) => (\n              <ListItem\n                key={item.id}\n                active={folder && item.id === folder.id}\n                onClick={() => onFolderClick(item)}>\n                <Text>{item.name}</Text>\n\n                <RemoveTooltip place={'left'} text={'Удалить'}>\n                  <Button\n                    type={'button'}\n                    kind={'icon'}\n                    size={'xs'}\n                    disabled={loading}\n                    onClick={recall(onUserFolderDelete, {\n                      id: item.id,\n                      mutation: queries.DELETE_USER_FOLDER\n                    })}>\n                    <Icon size={'xs'} icon={'delete'} stroke={'white'} />\n                  </Button>\n                </RemoveTooltip>\n              </ListItem>\n            ))}\n          </Column>\n        ) : (\n          <Alert style={{ width: '100%', textAlign: 'center' }}>Папок нет</Alert>\n        )}\n        <CreateButton onClick={recall(onUserFolderAdd, { mutation: queries.ADD_USER_FOLDER })}>\n          <span>Новая папка</span>\n          <Icon icon={'add'} stroke={'white'} />\n        </CreateButton>\n      </Orginizer>\n\n      {loading && <Spinner />}\n\n      {data &&\n        data.getProjectsByIds.length > 0 &&\n        data.getProjectsByIds.map((project) => (\n          <ProjectCard\n            owned\n            key={project.id}\n            project={project}\n            onLink={recall(onProjectLink, {\n              id: project.id,\n              project,\n              auth: user?.email,\n              owned: true\n            })}\n            onAdd={recall(onProjectAdd, { project })}\n            onCompanyLink={\n              project.company &&\n              recall(onUserLink, { id: project.company?.email, auth: user?.email })\n            }\n            onScreenshotClick={(_, key) =>\n              recall(onProjectScreenshot, {\n                screenshots: [project.preview, ...project.screenshots],\n                key\n              })()\n            }\n          />\n        ))}\n\n      {((data && data.getProjectsByIds.length === 0) || !data) && (\n        <AlertEmpty>Выберите папку с проектами</AlertEmpty>\n      )}\n    </ContainerInProgress>\n  )\n}\n\nconst Profile = ({ categories }) => {\n  const recall = useHelper()\n  const router = useRouter()\n  const user = useSelector((state) => state.user)\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [currentPage, setCurrentPage] = useState(profilePages[0])\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const isAdmin = useMemo(() => user?.account === 'ADMIN', [user])\n\n  const renderContentPage = useCallback(() => {\n    switch (currentPage.value) {\n      case '/projects':\n        return <Projects projects={user.projects} />\n      case '/liked':\n        return <Projects projects={user.likedProjects} />\n      default:\n        return <InProgress />\n    }\n  }, [currentPage])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onEdit={recall(onUserClientEdit, {\n            user: user?.email,\n            canEditAccount: !isAdmin,\n            mutations: {\n              update: queries.UPDATE_CLIENT_USER,\n              del: queries.DELETE_USER,\n              changePassword: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onAboutMore={recall(onUserAboutMore, { user })}\n        />\n\n        <Switch\n          defaultValue={currentPage}\n          options={profilePages}\n          onChange={(item) => setCurrentPage(item)}\n          stretch\n        />\n\n        <SearchBar onChangeFilter={() => setVisibleFilter(!visibleFilter)} />\n\n        <FilterBar\n          isOpen={visibleFilter}\n          filters={[\n            <DatePicker\n              key={'publishedAt'}\n              value={date}\n              placeholder={'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />,\n            <Select\n              key={'categories'}\n              options={categories.map((category) => ({\n                value: category.id,\n                label: category.name\n              }))}\n              placeholder={'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          ]}\n          options={templates.project.map((item, index) => ({\n            label: item.header,\n            value: index\n          }))}\n        />\n\n        {renderContentPage()}\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let categories = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_PROFILE\n    })\n\n    if (response && response.data) {\n      categories = response.data.getCategories\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      categories\n    }\n  }\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}