{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nexport const Wrap = styled.time`\n  font-size: var(--font-size-s);\n`;\nexport const DateText = (_ref) => {\n  var _Date$toLocaleString;\n\n  let {\n    text,\n    locales,\n    options\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"text\", \"locales\", \"options\"]);\n\n  return __jsx(Wrap, props, (_Date$toLocaleString = new Date(parseInt(text) || text).toLocaleString(locales, options)) !== null && _Date$toLocaleString !== void 0 ? _Date$toLocaleString : 'Date Invalid');\n};\nDateText.defaultProps = {\n  text: new Date(),\n  locales: 'ru-RU',\n  options: {\n    hour: 'numeric',\n    minute: '2-digit'\n  }\n};\nexport default DateText;","map":null,"metadata":{},"sourceType":"module"}