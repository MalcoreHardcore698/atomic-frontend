{"ast":null,"code":"import React from 'react';\nimport TicketForm from '../../components/FormTicket';\nimport DeleteForm from '../../components/FormDelete';\nimport TicketCard from '../../components/TicketCard';\nimport TicketView from '../../components/TicketView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink } from './user';\nimport { onFileLink } from '.';\nexport function onTicketLink(dispatch, props) {\n  const {\n    ticket\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Обращение',\n    content: /*#__PURE__*/React.createElement(TicketView, {\n      ticket: ticket,\n      appearance: 'clear',\n      onFileLink: () => onFileLink(dispatch),\n      onMemberLink: () => onUserLink(dispatch)\n    })\n  }));\n}\nexport function onTicketCreate(dispatch, props) {\n  const {\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Создание обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          var _form$author, _form$author$value, _form$counsellor, _form$counsellor$valu;\n\n          const tickets = await action({\n            variables: {\n              input: {\n                title: form.title,\n                author: (_form$author = form.author) === null || _form$author === void 0 ? void 0 : (_form$author$value = _form$author.value) === null || _form$author$value === void 0 ? void 0 : _form$author$value.email,\n                counsellor: (_form$counsellor = form.counsellor) === null || _form$counsellor === void 0 ? void 0 : (_form$counsellor$valu = _form$counsellor.value) === null || _form$counsellor$valu === void 0 ? void 0 : _form$counsellor$valu.email,\n                category: form.category.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.createTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно создано'\n          }));\n        } catch (err) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось создать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketEdit(dispatch, props) {\n  const {\n    ticket,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Редактирование обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      ticket: ticket,\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: async (form, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              id: ticket.id,\n              input: {\n                title: form.title,\n                body: form.body || 'Содержимое отсутствует',\n                status: form.status.value\n              }\n            }\n          });\n          dispatch(setDocuments(tickets.data.updateTicket));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно отредактировано'\n          }));\n        } catch (_unused) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать обращение'\n          }));\n        }\n      }\n    })\n  }));\n}\nexport function onTicketDelete(dispatch, props) {\n  const {\n    ticket,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление обращения',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const tickets = await action({\n            variables: {\n              id: ticket.id\n            }\n          });\n          dispatch(setDocuments(tickets.data.deleteTicket));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Обращение успешно удалено'\n          }));\n        } catch (_unused2) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить обращение'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(TicketCard, {\n      ticket: ticket,\n      appearance: 'clear'\n    }))\n  }));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/ticket.js"],"names":["React","TicketForm","DeleteForm","TicketCard","TicketView","setDocuments","setDrawer","setItem","onUserLink","onFileLink","onTicketLink","dispatch","props","ticket","icon","title","content","onTicketCreate","mutation","form","action","tickets","variables","input","author","value","email","counsellor","category","data","createTicket","type","message","err","onTicketEdit","id","body","status","updateTicket","onTicketDelete","color","_","deleteTicket"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport TicketForm from '../../components/FormTicket'\nimport DeleteForm from '../../components/FormDelete'\nimport TicketCard from '../../components/TicketCard'\nimport TicketView from '../../components/TicketView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\nimport { onUserLink } from './user'\nimport { onFileLink } from '.'\n\nexport function onTicketLink(dispatch, props) {\n  const { ticket } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Обращение',\n      content: (\n        <TicketView\n          ticket={ticket}\n          appearance={'clear'}\n          onFileLink={() => onFileLink(dispatch)}\n          onMemberLink={() => onUserLink(dispatch)}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketCreate(dispatch, props) {\n  const { mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Создание обращения',\n      content: (\n        <TicketForm\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  input: {\n                    title: form.title,\n                    author: form.author?.value?.email,\n                    counsellor: form.counsellor?.value?.email,\n                    category: form.category.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.createTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно создано'\n                })\n              )\n            } catch (err) {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketEdit(dispatch, props) {\n  const { ticket, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Редактирование обращения',\n      content: (\n        <TicketForm\n          ticket={ticket}\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  id: ticket.id,\n                  input: {\n                    title: form.title,\n                    body: form.body || 'Содержимое отсутствует',\n                    status: form.status.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.updateTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно отредактировано'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketDelete(dispatch, props) {\n  const { ticket, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление обращения',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const tickets = await action({\n                variables: { id: ticket.id }\n              })\n              dispatch(setDocuments(tickets.data.deleteTicket))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно удалено'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить обращение'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <TicketCard ticket={ticket} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}