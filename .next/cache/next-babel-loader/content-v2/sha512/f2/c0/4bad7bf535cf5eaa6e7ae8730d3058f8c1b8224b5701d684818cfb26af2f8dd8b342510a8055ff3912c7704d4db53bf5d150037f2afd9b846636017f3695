{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector } from 'react-redux';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Loader } from '../Styled';\nimport LazyLoad from '../LazyLoad';\nimport ArticleCard from '../ArticleCard';\nimport { useHelper } from '../../hooks/useHelper';\nimport { onArticleLink } from '../../store/helpers/article';\nimport queries from '../../graphql/queries';\nexport var ArticleList = function ArticleList(_ref) {\n  _s2();\n\n  var variables = _ref.variables,\n      layout = _ref.layout,\n      initialList = _ref.initialList;\n  var recall = useHelper();\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState = useState(initialList || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      articles = _useState2[0],\n      setArticles = _useState2[1];\n\n  var _ref2 = initialList ? {\n    data: null,\n    loading: false,\n    error: false\n  } : useQuery(queries.GET_ARTICLES, {\n    variables: variables\n  }),\n      data = _ref2.data,\n      loading = _ref2.loading,\n      error = _ref2.error;\n\n  useEffect(function () {\n    if (!loading && data) {\n      setArticles(data.getArticles);\n    }\n  }, [data, loading]);\n  useEffect(function () {\n    if ((initialList === null || initialList === void 0 ? void 0 : initialList.length) > 0) setArticles(initialList);\n  }, [initialList]);\n  return !loading && data || articles.length > 0 ? articles.map(function (article) {\n    var _user$articles;\n\n    return /*#__PURE__*/React.createElement(LazyLoad, {\n      key: article.id\n    }, /*#__PURE__*/React.createElement(ArticleCard, {\n      article: article,\n      layout: layout || 'column',\n      owned: user === null || user === void 0 ? void 0 : (_user$articles = user.articles) === null || _user$articles === void 0 ? void 0 : _user$articles.find(function (candidate) {\n        return candidate.id === article.id;\n      }),\n      onLink: recall(onArticleLink, {\n        id: article.id,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      })\n    }));\n  }) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\") : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\");\n};\n\n_s2(ArticleList, \"hzzGNEKOFRN0Flr/vxOZ6r5V8Ts=\", false, function () {\n  return [useHelper, useSelector, useQuery];\n});\n\n_c = ArticleList;\nexport default ArticleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleList\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ArticleList/index.js"],"names":["React","useState","useEffect","useQuery","useSelector","Alert","Spinner","Loader","LazyLoad","ArticleCard","useHelper","onArticleLink","queries","ArticleList","variables","layout","initialList","recall","user","state","articles","setArticles","data","loading","error","GET_ARTICLES","getArticles","length","map","article","id","find","candidate","auth","email","width","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector } from 'react-redux'\n\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport { Loader } from '../Styled'\nimport LazyLoad from '../LazyLoad'\nimport ArticleCard from '../ArticleCard'\nimport { useHelper } from '../../hooks/useHelper'\nimport { onArticleLink } from '../../store/helpers/article'\nimport queries from '../../graphql/queries'\n\nexport const ArticleList = ({ variables, layout, initialList }) => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.user)\n  const [articles, setArticles] = useState(initialList || [])\n\n  const { data, loading, error } = initialList\n    ? { data: null, loading: false, error: false }\n    : useQuery(queries.GET_ARTICLES, { variables })\n\n  useEffect(() => {\n    if (!loading && data) {\n      setArticles(data.getArticles)\n    }\n  }, [data, loading])\n\n  useEffect(() => {\n    if (initialList?.length > 0) setArticles(initialList)\n  }, [initialList])\n\n  return (!loading && data) || articles.length > 0 ? (\n    articles.map((article) => (\n      <LazyLoad key={article.id}>\n        <ArticleCard\n          article={article}\n          layout={layout || 'column'}\n          owned={user?.articles?.find((candidate) => candidate.id === article.id)}\n          onLink={recall(onArticleLink, { id: article.id, auth: user?.email })}\n        />\n      </LazyLoad>\n    ))\n  ) : error ? (\n    <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n      Не удалось загрузить данные\n    </Alert>\n  ) : loading ? (\n    <Loader>\n      <Spinner />\n    </Loader>\n  ) : (\n    <Alert style={{ width: '100%', textAlign: 'center' }}>Новостей нет</Alert>\n  )\n}\n\nexport default ArticleList\n"]},"metadata":{},"sourceType":"module"}