{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport TicketForm from '../../components/FormTicket';\nimport DeleteForm from '../../components/FormDelete';\nimport TicketCard from '../../components/TicketCard';\nimport TicketView from '../../components/TicketView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink } from './user';\nimport { onFileLink } from '.';\nexport function onTicketLink(dispatch, props) {\n  var id = props.id,\n      auth = props.auth;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Обращение',\n    content: /*#__PURE__*/React.createElement(TicketView, {\n      auth: auth,\n      ticket: id,\n      appearance: 'clear',\n      onAttach: function onAttach() {\n        return onFileLink(dispatch);\n      },\n      onMemberLink: function onMemberLink(member) {\n        return onUserLink(dispatch, {\n          id: member.email,\n          auth: auth\n        });\n      }\n    })\n  }));\n}\nexport function onTicketCreate(dispatch, props) {\n  var mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Создание обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(form, action) {\n          var _form$author, _form$author$value, _form$counsellor, _form$counsellor$valu, _form$category, tickets;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return action({\n                    variables: {\n                      input: {\n                        title: form.title,\n                        message: form.message,\n                        author: (_form$author = form.author) === null || _form$author === void 0 ? void 0 : (_form$author$value = _form$author.value) === null || _form$author$value === void 0 ? void 0 : _form$author$value.email,\n                        counsellor: (_form$counsellor = form.counsellor) === null || _form$counsellor === void 0 ? void 0 : (_form$counsellor$valu = _form$counsellor.value) === null || _form$counsellor$valu === void 0 ? void 0 : _form$counsellor$valu.email,\n                        category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value\n                      }\n                    }\n                  });\n\n                case 3:\n                  tickets = _context.sent;\n                  dispatch(setDocuments(tickets.data.createTicket));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Обращение успешно создано'\n                  }));\n                  _context.next = 13;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось создать обращение'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onTicketEdit(dispatch, props) {\n  var id = props.id,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'ticket',\n    title: 'Редактирование обращения',\n    content: /*#__PURE__*/React.createElement(TicketForm, {\n      ticket: id,\n      mutation: mutation,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(form, action) {\n          var _form$author2, _form$author2$value, _form$counsellor2, _form$counsellor2$val, _form$category2, tickets;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return action({\n                    variables: {\n                      id: id,\n                      input: {\n                        title: form.title,\n                        message: form.message,\n                        messages: form.messages.map(function (message) {\n                          return {\n                            id: message.id,\n                            text: message.text\n                          };\n                        }),\n                        author: (_form$author2 = form.author) === null || _form$author2 === void 0 ? void 0 : (_form$author2$value = _form$author2.value) === null || _form$author2$value === void 0 ? void 0 : _form$author2$value.email,\n                        counsellor: (_form$counsellor2 = form.counsellor) === null || _form$counsellor2 === void 0 ? void 0 : (_form$counsellor2$val = _form$counsellor2.value) === null || _form$counsellor2$val === void 0 ? void 0 : _form$counsellor2$val.email,\n                        category: (_form$category2 = form.category) === null || _form$category2 === void 0 ? void 0 : _form$category2.value\n                      }\n                    }\n                  });\n\n                case 3:\n                  tickets = _context2.sent;\n                  dispatch(setDocuments(tickets.data.updateTicket));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Обращение успешно отредактировано'\n                  }));\n                  _context2.next = 13;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось отредактировать обращение'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 9]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onTicketDelete(dispatch, props) {\n  var ticket = props.ticket,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление обращения',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: function onCancel() {\n        return dispatch(setDrawer(null));\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_, action) {\n          var tickets;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return action({\n                    variables: {\n                      id: ticket.id\n                    }\n                  });\n\n                case 3:\n                  tickets = _context3.sent;\n                  dispatch(setDocuments(tickets.data.deleteTicket));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Обращение успешно удалено'\n                  }));\n                  _context3.next = 11;\n                  break;\n\n                case 8:\n                  _context3.prev = 8;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось удалить обращение'\n                  }));\n\n                case 11:\n                  _context3.prev = 11;\n                  dispatch(setDrawer(null));\n                  return _context3.finish(11);\n\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 8, 11, 14]]);\n        }));\n\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, /*#__PURE__*/React.createElement(TicketCard, {\n      ticket: ticket,\n      appearance: 'clear'\n    }))\n  }));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/ticket.js"],"names":["React","TicketForm","DeleteForm","TicketCard","TicketView","setDocuments","setDrawer","setItem","onUserLink","onFileLink","onTicketLink","dispatch","props","id","auth","icon","title","content","member","email","onTicketCreate","mutation","form","action","variables","input","message","author","value","counsellor","category","tickets","data","createTicket","type","onTicketEdit","messages","map","text","updateTicket","onTicketDelete","ticket","color","_","deleteTicket"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport TicketForm from '../../components/FormTicket'\nimport DeleteForm from '../../components/FormDelete'\nimport TicketCard from '../../components/TicketCard'\nimport TicketView from '../../components/TicketView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\nimport { onUserLink } from './user'\nimport { onFileLink } from '.'\n\nexport function onTicketLink(dispatch, props) {\n  const { id, auth } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Обращение',\n      content: (\n        <TicketView\n          auth={auth}\n          ticket={id}\n          appearance={'clear'}\n          onAttach={() => onFileLink(dispatch)}\n          onMemberLink={(member) => onUserLink(dispatch, { id: member.email, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketCreate(dispatch, props) {\n  const { mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Создание обращения',\n      content: (\n        <TicketForm\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  input: {\n                    title: form.title,\n                    message: form.message,\n                    author: form.author?.value?.email,\n                    counsellor: form.counsellor?.value?.email,\n                    category: form.category?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.createTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно создано'\n                })\n              )\n            } catch (err) {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketEdit(dispatch, props) {\n  const { id, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'ticket',\n      title: 'Редактирование обращения',\n      content: (\n        <TicketForm\n          ticket={id}\n          mutation={mutation}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const tickets = await action({\n                variables: {\n                  id,\n                  input: {\n                    title: form.title,\n                    message: form.message,\n                    messages: form.messages.map((message) => ({\n                      id: message.id,\n                      text: message.text\n                    })),\n                    author: form.author?.value?.email,\n                    counsellor: form.counsellor?.value?.email,\n                    category: form.category?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(tickets.data.updateTicket))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно отредактировано'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать обращение'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onTicketDelete(dispatch, props) {\n  const { ticket, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление обращения',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const tickets = await action({\n                variables: { id: ticket.id }\n              })\n              dispatch(setDocuments(tickets.data.deleteTicket))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Обращение успешно удалено'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить обращение'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <TicketCard ticket={ticket} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}