{"ast":null,"code":"var _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport gql from 'graphql-tag';\nimport { TicketMessageFields } from '../../fragments';\nexport var SEND_TICKET_MESSAGE = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation sendTicketMessage(\\n    $ticket: ID!\\n    $recipient: String!\\n    $text: String!\\n    $isClient: Boolean\\n  ) {\\n    sendTicketMessage(ticket: $ticket, recipient: $recipient, text: $text, isClient: $isClient) {\\n      ...TicketMessageFields\\n    }\\n  }\\n  \", \"\\n\"])), TicketMessageFields);","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/TicketMessage/index.js"],"names":["gql","TicketMessageFields","SEND_TICKET_MESSAGE"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AAEA,OAAO,IAAMC,mBAAmB,GAAGF,GAAH,0VAW5BC,mBAX4B,CAAzB","sourcesContent":["import gql from 'graphql-tag'\nimport { TicketMessageFields } from '../../fragments'\n\nexport const SEND_TICKET_MESSAGE = gql`\n  mutation sendTicketMessage(\n    $ticket: ID!\n    $recipient: String!\n    $text: String!\n    $isClient: Boolean\n  ) {\n    sendTicketMessage(ticket: $ticket, recipient: $recipient, text: $text, isClient: $isClient) {\n      ...TicketMessageFields\n    }\n  }\n  ${TicketMessageFields}\n`\n"]},"metadata":{},"sourceType":"module"}