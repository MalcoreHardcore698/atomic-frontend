{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Row, { Wrap as WrapRow } from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Image from '../../atomic-ui/components/Image';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Button from '../../atomic-ui/components/Button';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition';\nimport { getLabelRole } from '../../atomic-ui/utils/functions';\nimport { CardContent, Surface, More } from '../Styled';\nimport CardActions from '../CardActions';\nimport { ResponsibleMark, hasResponsibleMember } from '../Members';\nimport { onUserDelete, onUserEdit } from '../../store/helpers/user';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { useHelper } from '../../hooks/useHelper';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nconst HOST_URL = config.get('host-url');\nexport const Wrap = styled(Surface).withConfig({\n  displayName: \"UserCard__Wrap\",\n  componentId: \"bx733i-0\"\n})([\"grid-gap:var(--default-gap);\", \"\"], ({\n  layout\n}) => layout === 'column' && css([\"display:flex;flex-wrap:wrap;\"]));\n_c = Wrap;\nexport const Content = styled(Row).withConfig({\n  displayName: \"UserCard__Content\",\n  componentId: \"bx733i-1\"\n})([\"display:grid;grid-template-columns:120px 1fr;grid-template-rows:175px;@media only screen and (max-width:480px){display:flex;flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c2 = Content;\nexport const Avatar = styled(Image).withConfig({\n  displayName: \"UserCard__Avatar\",\n  componentId: \"bx733i-2\"\n})([\"position:relative;width:100%;height:100%;border-radius:var(--surface-border-radius);border:1px solid var(--ghost-color-background);overflow:hidden;object-fit:cover;\"]);\n_c3 = Avatar;\nexport const Header = styled(Row).withConfig({\n  displayName: \"UserCard__Header\",\n  componentId: \"bx733i-3\"\n})([\"justify-content:space-between;align-items:center;\"]);\n_c4 = Header;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"UserCard__Actions\",\n  componentId: \"bx733i-4\"\n})([\"grid-gap:5px;height:100%;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"UserCard__Name\",\n  componentId: \"bx733i-5\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\n_c5 = Name;\nexport const About = styled.div.withConfig({\n  displayName: \"UserCard__About\",\n  componentId: \"bx733i-6\"\n})([\"font-size:var(--font-size-m);\"]);\n_c6 = About;\nexport const Indicator = styled(Difinition).withConfig({\n  displayName: \"UserCard__Indicator\",\n  componentId: \"bx733i-7\"\n})([\"align-items:flex-end;flex-grow:10;height:100%;\"]);\n_c7 = Indicator;\nexport const Footer = styled(Row).withConfig({\n  displayName: \"UserCard__Footer\",\n  componentId: \"bx733i-8\"\n})([\"justify-content:space-between;grid-column:1 / 3;@media only screen and (max-width:480px){display:flex;flex-direction:column;grid-gap:var(--default-gap);\", \"{flex-grow:1;\", \"{flex-grow:1;button{width:100%;}}}}\"], WrapRow, WrapTooltip);\n_c8 = Footer;\nexport const Card = ({\n  user,\n  preview,\n  owned,\n  added,\n  style,\n  checked,\n  className,\n  appearance,\n  onAdd,\n  onLink,\n  onChat,\n  onMembers,\n  onAboutMore,\n  onCompanyLink,\n  onChecked,\n  onEdit,\n  onDelete,\n  withSocials\n}) => {\n  _s();\n\n  var _user$avatar, _user$about, _user$projects, _user$company, _user$company$avatar, _user$company2;\n\n  const recall = useHelper();\n  const {\n    setQuery\n  } = useEntityQuery();\n  const auth = useSelector(state => state.user);\n  const [isAdded, setAdded] = useState(added);\n  const canEditRole = useMemo(() => {\n    var _auth$role;\n\n    return auth && (auth === null || auth === void 0 ? void 0 : (_auth$role = auth.role) === null || _auth$role === void 0 ? void 0 : _auth$role.name) === 'ADMIN';\n  }, [auth]);\n\n  const onClickAdd = () => {\n    if (onAdd) onAdd();\n    setAdded(!isAdded);\n  };\n\n  const handleEdit = () => {\n    recall(onUserEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      auth: auth === null || auth === void 0 ? void 0 : auth.email,\n      canEditRole,\n      mutations: {\n        update: queries.UPDATE_USER,\n        del: queries.DELETE_USER,\n        changePassword: queries.UPDATE_USER\n      }\n    })();\n    if (onEdit) onEdit();\n  };\n\n  const handleDelete = () => {\n    recall(onUserDelete, {\n      id: user === null || user === void 0 ? void 0 : user.email,\n      user,\n      auth: auth === null || auth === void 0 ? void 0 : auth.email,\n      mutation: queries.DELETE_USER\n    })();\n    if (onDelete) onDelete();\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    checked: checked,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Content, {\n    editable: onEdit || onDelete || onChecked\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: (user === null || user === void 0 ? void 0 : (_user$avatar = user.avatar) === null || _user$avatar === void 0 ? void 0 : _user$avatar.path) || '/images/avatar-default.png',\n    alt: user === null || user === void 0 ? void 0 : user.name,\n    effect: 'opacity',\n    layout: 'fill'\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    style: {\n      gridGap: 0\n    },\n    editable: onEdit || onDelete || onChecked\n  }, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(MarkedText, null, /*#__PURE__*/React.createElement(Meta, {\n    shareTitle: withSocials && (user === null || user === void 0 ? void 0 : user.name),\n    shareUrl: true && withSocials ? location.href : HOST_URL,\n    category: getLabelRole(user === null || user === void 0 ? void 0 : user.account)\n  }), hasResponsibleMember(user) && /*#__PURE__*/React.createElement(ResponsibleMark, null)), /*#__PURE__*/React.createElement(CardActions, {\n    typeText: 'категорию',\n    checked: checked,\n    onEdit: onEdit && handleEdit,\n    onDelete: onDelete && handleDelete,\n    onChecked: onChecked\n  })), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: () => setQuery(user === null || user === void 0 ? void 0 : user.email, 'user', onLink)\n  }, user === null || user === void 0 ? void 0 : user.name), /*#__PURE__*/React.createElement(About, null, (user === null || user === void 0 ? void 0 : (_user$about = user.about) === null || _user$about === void 0 ? void 0 : _user$about.length) > 135 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, user === null || user === void 0 ? void 0 : user.about.slice(0, 100), \"...\"), /*#__PURE__*/React.createElement(More, {\n    onClick: onAboutMore\n  }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")) : /*#__PURE__*/React.createElement(Text, null, (user === null || user === void 0 ? void 0 : user.about) || 'Информация о себе не заполнена')), (user === null || user === void 0 ? void 0 : user.projects) && /*#__PURE__*/React.createElement(Indicator, {\n    icon: 'work',\n    label: 'Проекты',\n    text: user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.length\n  }))), !preview && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Footer, null, (user === null || user === void 0 ? void 0 : user.account) === 'ENTITY' ? /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'user2',\n    label: 'Участники',\n    text: user === null || user === void 0 ? void 0 : user.members,\n    onLink: (user === null || user === void 0 ? void 0 : user.members) && onMembers\n  }) : /*#__PURE__*/React.createElement(Difinition, _extends({}, user !== null && user !== void 0 && user.company ? {\n    img: user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : (_user$company$avatar = _user$company.avatar) === null || _user$company$avatar === void 0 ? void 0 : _user$company$avatar.path\n  } : {\n    icon: 'work'\n  }, {\n    label: 'Компания',\n    text: (user === null || user === void 0 ? void 0 : (_user$company2 = user.company) === null || _user$company2 === void 0 ? void 0 : _user$company2.name) || '-',\n    onLink: (user === null || user === void 0 ? void 0 : user.company) && onCompanyLink && (() => {\n      var _user$company3;\n\n      return setQuery(user === null || user === void 0 ? void 0 : (_user$company3 = user.company) === null || _user$company3 === void 0 ? void 0 : _user$company3.email, 'user', onCompanyLink);\n    })\n  })), !owned && (onChat || onAdd) && /*#__PURE__*/React.createElement(Row, null, onChat && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Написать пользователю'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    appearance: 'green',\n    onClick: onChat,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'chat',\n    stroke: 'var(--default-color-green)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Подписаться на пользователя'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickAdd,\n    revert: !isAdded\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: isAdded ? 'check' : 'add',\n    stroke: isAdded ? 'white' : 'var(--default-color-accent)'\n  })))))));\n};\n\n_s(Card, \"MDbg5yvuKfGy031eJTUf6aKckY4=\", false, function () {\n  return [useHelper, useEntityQuery, useSelector];\n});\n\n_c9 = Card;\nCard.defaultProps = {\n  appearance: 'default'\n};\nexport default Card;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Avatar\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"Name\");\n$RefreshReg$(_c6, \"About\");\n$RefreshReg$(_c7, \"Indicator\");\n$RefreshReg$(_c8, \"Footer\");\n$RefreshReg$(_c9, \"Card\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/UserCard/index.js"],"names":["React","useMemo","useState","useSelector","styled","css","Row","Wrap","WrapRow","Title","Text","Icon","Meta","Image","Divider","Button","Tooltip","WrapTooltip","Difinition","MarkedText","getLabelRole","CardContent","Surface","More","CardActions","ResponsibleMark","hasResponsibleMember","onUserDelete","onUserEdit","useEntityQuery","useHelper","queries","config","HOST_URL","get","layout","Content","Avatar","Header","Actions","Name","onClick","About","div","Indicator","Footer","Card","user","preview","owned","added","style","checked","className","appearance","onAdd","onLink","onChat","onMembers","onAboutMore","onCompanyLink","onChecked","onEdit","onDelete","withSocials","recall","setQuery","auth","state","isAdded","setAdded","canEditRole","role","name","onClickAdd","handleEdit","email","mutations","update","UPDATE_USER","del","DELETE_USER","changePassword","handleDelete","id","mutation","avatar","path","gridGap","location","href","account","about","length","slice","projects","members","company","img","icon","defaultProps"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled, { css } from 'styled-components'\n\nimport Row, { Wrap as WrapRow } from '../../atomic-ui/components/Row'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Image from '../../atomic-ui/components/Image'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Button from '../../atomic-ui/components/Button'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport Difinition, { MarkedText } from '../../atomic-ui/components/Difinition'\nimport { getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { CardContent, Surface, More } from '../Styled'\nimport CardActions from '../CardActions'\nimport { ResponsibleMark, hasResponsibleMember } from '../Members'\nimport { onUserDelete, onUserEdit } from '../../store/helpers/user'\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { useHelper } from '../../hooks/useHelper'\nimport queries from '../../graphql/queries'\nimport config from '../../config'\n\nconst HOST_URL = config.get('host-url')\n\nexport const Wrap = styled(Surface)`\n  grid-gap: var(--default-gap);\n\n  ${({ layout }) =>\n    layout === 'column' &&\n    css`\n      display: flex;\n      flex-wrap: wrap;\n    `}\n`\n\nexport const Content = styled(Row)`\n  display: grid;\n  grid-template-columns: 120px 1fr;\n  grid-template-rows: 175px;\n\n  @media only screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Avatar = styled(Image)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: var(--surface-border-radius);\n  border: 1px solid var(--ghost-color-background);\n  overflow: hidden;\n  object-fit: cover;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n  height: 100%;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const About = styled.div`\n  font-size: var(--font-size-m);\n`\n\nexport const Indicator = styled(Difinition)`\n  align-items: flex-end;\n  flex-grow: 10;\n  height: 100%;\n`\n\nexport const Footer = styled(Row)`\n  justify-content: space-between;\n  grid-column: 1 / 3;\n\n  @media only screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n\n    ${WrapRow} {\n      flex-grow: 1;\n\n      ${WrapTooltip} {\n        flex-grow: 1;\n\n        button {\n          width: 100%;\n        }\n      }\n    }\n  }\n`\n\nexport const Card = ({\n  user,\n  preview,\n  owned,\n  added,\n  style,\n  checked,\n  className,\n  appearance,\n  onAdd,\n  onLink,\n  onChat,\n  onMembers,\n  onAboutMore,\n  onCompanyLink,\n  onChecked,\n  onEdit,\n  onDelete,\n  withSocials\n}) => {\n  const recall = useHelper()\n  const { setQuery } = useEntityQuery()\n  const auth = useSelector((state) => state.user)\n  const [isAdded, setAdded] = useState(added)\n\n  const canEditRole = useMemo(() => auth && auth?.role?.name === 'ADMIN', [auth])\n\n  const onClickAdd = () => {\n    if (onAdd) onAdd()\n    setAdded(!isAdded)\n  }\n\n  const handleEdit = () => {\n    recall(onUserEdit, {\n      user: user?.email,\n      auth: auth?.email,\n      canEditRole,\n      mutations: {\n        update: queries.UPDATE_USER,\n        del: queries.DELETE_USER,\n        changePassword: queries.UPDATE_USER\n      }\n    })()\n    if (onEdit) onEdit()\n  }\n\n  const handleDelete = () => {\n    recall(onUserDelete, {\n      id: user?.email,\n      user,\n      auth: auth?.email,\n      mutation: queries.DELETE_USER\n    })()\n    if (onDelete) onDelete()\n  }\n\n  return (\n    <Wrap className={className} style={style} checked={checked} appearance={appearance}>\n      <Content editable={onEdit || onDelete || onChecked}>\n        <Avatar\n          src={user?.avatar?.path || '/images/avatar-default.png'}\n          alt={user?.name}\n          effect={'opacity'}\n          layout={'fill'}\n        />\n        <CardContent style={{ gridGap: 0 }} editable={onEdit || onDelete || onChecked}>\n          <Header>\n            <MarkedText>\n              <Meta\n                shareTitle={withSocials && user?.name}\n                shareUrl={typeof window !== 'undefined' && withSocials ? location.href : HOST_URL}\n                category={getLabelRole(user?.account)}\n              />\n              {hasResponsibleMember(user) && <ResponsibleMark />}\n            </MarkedText>\n\n            <CardActions\n              typeText={'категорию'}\n              checked={checked}\n              onEdit={onEdit && handleEdit}\n              onDelete={onDelete && handleDelete}\n              onChecked={onChecked}\n            />\n          </Header>\n\n          <Name tag={'h4'} onClick={() => setQuery(user?.email, 'user', onLink)}>\n            {user?.name}\n          </Name>\n\n          <About>\n            {user?.about?.length > 135 ? (\n              <React.Fragment>\n                <Text>{user?.about.slice(0, 100)}...</Text>\n                <More onClick={onAboutMore}>Подробнее</More>\n              </React.Fragment>\n            ) : (\n              <Text>{user?.about || 'Информация о себе не заполнена'}</Text>\n            )}\n          </About>\n          {user?.projects && (\n            <Indicator icon={'work'} label={'Проекты'} text={user?.projects?.length} />\n          )}\n        </CardContent>\n      </Content>\n\n      {!preview && (\n        <React.Fragment>\n          <Divider clear />\n\n          <Footer>\n            {user?.account === 'ENTITY' ? (\n              <Difinition\n                icon={'user2'}\n                label={'Участники'}\n                text={user?.members}\n                onLink={user?.members && onMembers}\n              />\n            ) : (\n              <Difinition\n                {...(user?.company\n                  ? {\n                      img: user?.company?.avatar?.path\n                    }\n                  : {\n                      icon: 'work'\n                    })}\n                label={'Компания'}\n                text={user?.company?.name || '-'}\n                onLink={\n                  user?.company &&\n                  onCompanyLink &&\n                  (() => setQuery(user?.company?.email, 'user', onCompanyLink))\n                }\n              />\n            )}\n\n            {!owned && (onChat || onAdd) && (\n              <Row>\n                {onChat && (\n                  <Tooltip text={'Написать пользователю'}>\n                    <Button\n                      type={'button'}\n                      kind={'icon'}\n                      appearance={'green'}\n                      onClick={onChat}\n                      revert>\n                      <Icon icon={'chat'} stroke={'var(--default-color-green)'} />\n                    </Button>\n                  </Tooltip>\n                )}\n                {onAdd && (\n                  <Tooltip text={'Подписаться на пользователя'}>\n                    <Button type={'button'} kind={'icon'} onClick={onClickAdd} revert={!isAdded}>\n                      <Icon\n                        icon={isAdded ? 'check' : 'add'}\n                        stroke={isAdded ? 'white' : 'var(--default-color-accent)'}\n                      />\n                    </Button>\n                  </Tooltip>\n                )}\n              </Row>\n            )}\n          </Footer>\n        </React.Fragment>\n      )}\n    </Wrap>\n  )\n}\n\nCard.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}