{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { omit } from '../atomic-ui/utils/functions';\nimport { setSearch, setParams } from '../store/actions/root';\nexport const parseParams = params => omit(params, ['search']);\nexport const useSearch = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const root = useSelector(state => state.root);\n  const onSearch = useCallback((search, params) => {\n    if (search) dispatch(setSearch(search));\n    if (params) dispatch(setParams(parseParams(params)));\n    router.push({\n      pathname: router.pathname,\n      query: { ...(search ? {\n          search\n        } : {}),\n        ...(params || root.params || {})\n      }\n    }, undefined, {\n      shallow: true\n    });\n  }, [root, router, dispatch]);\n  useEffect(() => {\n    const query = router.query;\n\n    if (query) {\n      dispatch(setParams(parseParams(query)));\n    }\n  }, [router, dispatch]);\n  return [onSearch];\n};","map":null,"metadata":{},"sourceType":"module"}