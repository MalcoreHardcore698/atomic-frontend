{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Tabs\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children, isValidElement, useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\nexport const TabList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n  margin-bottom: 20px;\n`;\nexport const TabListItem = styled.li`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({\n  isActive\n}) => isActive && css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`;\nexport const TabPanel = styled.div`\n  flex: 1;\n  flex-direction: column;\n  display: ${({\n  isActive\n}) => isActive ? 'flex' : 'none'};\n`;\nexport const getKey = key => {\n  if (key === 'Right' || key === 'ArrowRight') {\n    return 'ArrowRight';\n  } else if (key === 'Left' || key === 'ArrowLeft') {\n    return 'ArrowLeft';\n  } else {\n    return key;\n  }\n};\nexport const direction = {\n  ArrowLeft: -1,\n  ArrowRight: 1\n};\nexport const Tab = ({\n  children\n}) => __jsx(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 38\n  }\n}, children);\nexport const Tabs = (_ref) => {\n  let {\n    active,\n    onActivate,\n    label: ariaLabel,\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"active\", \"onActivate\", \"label\", \"children\"]);\n\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(0);\n  const tabsCount = Children.count(children);\n  const tabs = [...new Array(tabsCount)].map(() => /*#__PURE__*/React.createRef());\n  const {\n    0: isFocus,\n    1: setFocus\n  } = useState(false);\n\n  const activateTab = (index, focus = true) => {\n    if (activeTab === index) return;\n    if (onActivate) onActivate(index);\n    setActiveTab(index);\n    setFocus(focus);\n  };\n\n  const activateFirstTab = () => {\n    activateTab(0);\n  };\n\n  const activateLastTab = () => {\n    activateTab(tabs.length - 1);\n  };\n\n  const switchTab = (index, e) => {\n    const key = getKey(e.key);\n\n    if (tabs[index + direction[key]]) {\n      activateTab(index + direction[key]);\n    } else if (key === 'ArrowLeft') {\n      activateLastTab();\n    } else if (key === 'ArrowRight') {\n      activateFirstTab();\n    }\n  };\n\n  const handleClick = index => () => {\n    activateTab(index);\n  };\n\n  const handleKeyDown = index => e => {\n    const key = getKey(e.key);\n\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      switchTab(index, e);\n    } else if (key === 'Home') {\n      e.preventDefault();\n      activateFirstTab();\n    } else if (key === 'End') {\n      e.preventDefault();\n      activateLastTab();\n    }\n  };\n\n  useEffect(() => {\n    if (active === undefined) return;\n\n    if (active !== activeTab) {\n      activateTab(active, false);\n    }\n  }, [active]);\n  useEffect(() => {\n    if (isFocus) {\n      tabs[activeTab].current.focus();\n      setFocus(false);\n    }\n  }, [isFocus]);\n  return __jsx(Container, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }), __jsx(TabList, {\n    role: 'tablist',\n    \"aria-label\": ariaLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, Children.map(children, (child, index) => {\n    const isActive = index === activeTab;\n\n    if ( /*#__PURE__*/isValidElement(child)) {\n      const {\n        label,\n        count\n      } = child.props;\n      return __jsx(TabListItem, {\n        ref: tabs[index],\n        key: `tab-${v4()}`,\n        id: `tab-${v4()}`,\n        role: \"tab\",\n        \"aria-controls\": `panel-${v4()}`,\n        \"aria-selected\": isActive,\n        tabIndex: isActive ? 0 : undefined,\n        isActive: isActive,\n        onClick: handleClick(index),\n        onKeyDown: handleKeyDown(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, label, count !== undefined && count > 0 && ` (${count})`);\n    }\n\n    return null;\n  })), Children.map(children, (child, index) => {\n    const isActive = index === activeTab;\n\n    if ( /*#__PURE__*/isValidElement(child)) {\n      return __jsx(TabPanel, {\n        key: `tabpanel-${v4()}`,\n        id: `tabpanel-${v4()}`,\n        role: \"tabpanel\",\n        \"aria-labelledby\": `tab-${v4()}`,\n        isActive: isActive,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, child);\n    }\n\n    return null;\n  }));\n};\nexport default Tabs;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Tabs/index.js"],"names":["React","Children","isValidElement","useEffect","useState","styled","css","v4","Container","div","TabList","ul","TabListItem","li","isActive","TabPanel","getKey","key","direction","ArrowLeft","ArrowRight","Tab","children","Tabs","active","onActivate","label","ariaLabel","props","activeTab","setActiveTab","tabsCount","count","tabs","Array","map","createRef","isFocus","setFocus","activateTab","index","focus","activateFirstTab","activateLastTab","length","switchTab","e","handleClick","handleKeyDown","preventDefault","undefined","current","child"],"mappings":"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","sourcesContent":["import React, { Children, isValidElement, useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { v4 } from 'uuid'\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const TabList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n  margin-bottom: 20px;\n`\n\nexport const TabListItem = styled.li`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`\n\nexport const TabPanel = styled.div`\n  flex: 1;\n  flex-direction: column;\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\n`\n\nexport const getKey = (key) => {\n  if (key === 'Right' || key === 'ArrowRight') {\n    return 'ArrowRight'\n  } else if (key === 'Left' || key === 'ArrowLeft') {\n    return 'ArrowLeft'\n  } else {\n    return key\n  }\n}\n\nexport const direction = {\n  ArrowLeft: -1,\n  ArrowRight: 1\n}\n\nexport const Tab = ({ children }) => <React.Fragment>{children}</React.Fragment>\n\nexport const Tabs = ({ active, onActivate, label: ariaLabel, children, ...props }) => {\n  const [activeTab, setActiveTab] = useState(0)\n  const tabsCount = Children.count(children)\n  const tabs = [...new Array(tabsCount)].map(() => React.createRef())\n  const [isFocus, setFocus] = useState(false)\n\n  const activateTab = (index, focus = true) => {\n    if (activeTab === index) return\n    if (onActivate) onActivate(index)\n    setActiveTab(index)\n    setFocus(focus)\n  }\n\n  const activateFirstTab = () => {\n    activateTab(0)\n  }\n\n  const activateLastTab = () => {\n    activateTab(tabs.length - 1)\n  }\n\n  const switchTab = (index, e) => {\n    const key = getKey(e.key)\n\n    if (tabs[index + direction[key]]) {\n      activateTab(index + direction[key])\n    } else if (key === 'ArrowLeft') {\n      activateLastTab()\n    } else if (key === 'ArrowRight') {\n      activateFirstTab()\n    }\n  }\n\n  const handleClick = (index) => () => {\n    activateTab(index)\n  }\n\n  const handleKeyDown = (index) => (e) => {\n    const key = getKey(e.key)\n\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      switchTab(index, e)\n    } else if (key === 'Home') {\n      e.preventDefault()\n      activateFirstTab()\n    } else if (key === 'End') {\n      e.preventDefault()\n      activateLastTab()\n    }\n  }\n\n  useEffect(() => {\n    if (active === undefined) return\n\n    if (active !== activeTab) {\n      activateTab(active, false)\n    }\n  }, [active])\n\n  useEffect(() => {\n    if (isFocus) {\n      tabs[activeTab].current.focus()\n      setFocus(false)\n    }\n  }, [isFocus])\n\n  return (\n    <Container {...props}>\n      <TabList role={'tablist'} aria-label={ariaLabel}>\n        {Children.map(children, (child, index) => {\n          const isActive = index === activeTab\n\n          if (isValidElement(child)) {\n            const { label, count } = child.props\n            return (\n              <TabListItem\n                ref={tabs[index]}\n                key={`tab-${v4()}`}\n                id={`tab-${v4()}`}\n                role=\"tab\"\n                aria-controls={`panel-${v4()}`}\n                aria-selected={isActive}\n                tabIndex={isActive ? 0 : undefined}\n                isActive={isActive}\n                onClick={handleClick(index)}\n                onKeyDown={handleKeyDown(index)}>\n                {label}\n                {count !== undefined && count > 0 && ` (${count})`}\n              </TabListItem>\n            )\n          }\n          return null\n        })}\n      </TabList>\n\n      {Children.map(children, (child, index) => {\n        const isActive = index === activeTab\n\n        if (isValidElement(child)) {\n          return (\n            <TabPanel\n              key={`tabpanel-${v4()}`}\n              id={`tabpanel-${v4()}`}\n              role=\"tabpanel\"\n              aria-labelledby={`tab-${v4()}`}\n              isActive={isActive}>\n              {child}\n            </TabPanel>\n          )\n        }\n        return null\n      })}\n    </Container>\n  )\n}\n\nexport default Tabs\n"]},"metadata":{},"sourceType":"module"}