{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from 'react-redux';\nimport { omit, b64EncodeUnicode, b64DecodeUnicode } from '../atomic-ui/utils/functions';\nimport { setSearch, setParams } from '../store/actions/root';\nexport const useSearch = () => {\n  _s();\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const onSearch = useCallback((search, params) => {\n    if (search) dispatch(setSearch(search));\n    if (params) dispatch(setParams(params));\n    router.push({\n      pathname: router.pathname,\n      query: { ...(params || {}),\n        ...(search ? {\n          search\n        } : {}),\n        ...(params.email ? {\n          email: b64EncodeUnicode(params.email)\n        } : {})\n      }\n    }, undefined, {\n      shallow: true\n    });\n  }, [router, dispatch]);\n  useEffect(() => {\n    const query = router.query;\n\n    if (query) {\n      dispatch(setParams({ ...omit(query, ['search']),\n        ...(query.email ? {\n          email: b64DecodeUnicode(query.email)\n        } : {})\n      }));\n    }\n  }, [router, dispatch]);\n  return [onSearch];\n};\n\n_s(useSearch, \"W3PZ3+GL1XFjAfQg8blnEL6iggU=\", false, function () {\n  return [useRouter, useDispatch];\n});","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/hooks/useSearch.js"],"names":["useCallback","useEffect","useRouter","useDispatch","omit","b64EncodeUnicode","b64DecodeUnicode","setSearch","setParams","useSearch","router","dispatch","onSearch","search","params","push","pathname","query","email","undefined","shallow"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,IAAT,EAAeC,gBAAf,EAAiCC,gBAAjC,QAAyD,8BAAzD;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,uBAArC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,QAAQ,GAAGZ,WAAW,CAC3B,CAACa,MAAD,EAASC,MAAT,KAAoB;AAClB,QAAID,MAAJ,EAAYF,QAAQ,CAACJ,SAAS,CAACM,MAAD,CAAV,CAAR;AACZ,QAAIC,MAAJ,EAAYH,QAAQ,CAACH,SAAS,CAACM,MAAD,CAAV,CAAR;AAEZJ,IAAAA,MAAM,CAACK,IAAP,CACC;AACEC,MAAAA,QAAQ,EAAEN,MAAM,CAACM,QADnB;AAEEC,MAAAA,KAAK,EAAE,EACL,IAAIH,MAAM,IAAI,EAAd,CADK;AAEL,YAAID,MAAM,GAAG;AAAEA,UAAAA;AAAF,SAAH,GAAgB,EAA1B,CAFK;AAGL,YAAIC,MAAM,CAACI,KAAP,GAAe;AAAEA,UAAAA,KAAK,EAAEb,gBAAgB,CAACS,MAAM,CAACI,KAAR;AAAzB,SAAf,GAA2D,EAA/D;AAHK;AAFT,KADD,EASCC,SATD,EAUC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAVD;AAYD,GAjB0B,EAkB3B,CAACV,MAAD,EAASC,QAAT,CAlB2B,CAA5B;AAqBAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAGP,MAAM,CAACO,KAArB;;AACA,QAAIA,KAAJ,EAAW;AACTN,MAAAA,QAAQ,CACPH,SAAS,CAAC,EACR,GAAGJ,IAAI,CAACa,KAAD,EAAQ,CAAC,QAAD,CAAR,CADC;AAER,YAAIA,KAAK,CAACC,KAAN,GAAc;AAAEA,UAAAA,KAAK,EAAEZ,gBAAgB,CAACW,KAAK,CAACC,KAAP;AAAzB,SAAd,GAAyD,EAA7D;AAFQ,OAAD,CADF,CAAR;AAMD;AACF,GAVQ,EAUN,CAACR,MAAD,EAASC,QAAT,CAVM,CAAT;AAYA,SAAO,CAACC,QAAD,CAAP;AACD,CAtCM;;GAAMH,S;UACIP,S,EACEC,W","sourcesContent":["import { useCallback, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { useDispatch } from 'react-redux'\n\nimport { omit, b64EncodeUnicode, b64DecodeUnicode } from '../atomic-ui/utils/functions'\n\nimport { setSearch, setParams } from '../store/actions/root'\n\nexport const useSearch = () => {\n  const router = useRouter()\n  const dispatch = useDispatch()\n\n  const onSearch = useCallback(\n   (search, params) => {\n     if (search) dispatch(setSearch(search))\n     if (params) dispatch(setParams(params))\n\n     router.push(\n      {\n        pathname: router.pathname,\n        query: {\n          ...(params || {}),\n          ...(search ? { search } : {}),\n          ...(params.email ? { email: b64EncodeUnicode(params.email) } : {})\n        }\n      },\n      undefined,\n      { shallow: true }\n     )\n   },\n   [router, dispatch]\n  )\n\n  useEffect(() => {\n    const query = router.query\n    if (query) {\n      dispatch(\n       setParams({\n         ...omit(query, ['search']),\n         ...(query.email ? { email: b64DecodeUnicode(query.email) } : {})\n       })\n      )\n    }\n  }, [router, dispatch])\n\n  return [onSearch]\n}\n"]},"metadata":{},"sourceType":"module"}