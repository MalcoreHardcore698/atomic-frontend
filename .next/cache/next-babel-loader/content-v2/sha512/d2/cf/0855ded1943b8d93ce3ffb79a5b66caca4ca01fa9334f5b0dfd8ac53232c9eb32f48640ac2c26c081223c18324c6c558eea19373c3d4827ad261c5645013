{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport template from '../../atomic-ui/components/Table/templates/category';\nimport { useHelper } from '../../hooks/useHelper';\nimport { categories as filterConfig } from '../../components/FilterBar/config';\nimport { onCategoryCreate, onCategoryEdit, onCategoryLink } from '../../store/helpers/category';\nimport CategoryCard from '../../components/CategoryCard';\nimport ContentLayout from '../../layouts/dashboard/content';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Категории';\nconst LIMIT = 32;\nconst START_OFFSET = 0;\n\nconst Categories = () => {\n  _s();\n\n  const recall = useHelper();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setDocuments(null));\n  }, []);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    icon: 'folder',\n    template: template,\n    startOffset: START_OFFSET,\n    filterConfig: filterConfig,\n    emptyMessage: 'Категорий нет',\n    buttonCreateText: 'Создать категорию',\n    entityType: 'category',\n    getType: 'getCategories',\n    getQuery: queries.GET_CATEGORIES,\n    deleteQuery: queries.DELETE_CATEGORY,\n    deleteEntityMultiText: 'категории',\n    deleteEntitySingleText: 'категорию',\n    onLink: category => recall(onCategoryLink, {\n      id: category.id,\n      category\n    })(),\n    onEdit: (category, onAfter) => recall(onCategoryEdit, {\n      id: category.id,\n      category,\n      mutation: queries.UPDATE_CATEGORY,\n      onAfter\n    })(),\n    onCreate: onAfter => recall(onCategoryCreate, {\n      mutation: queries.CREATE_CATEGORY,\n      onAfter\n    })(),\n    render: document => /*#__PURE__*/React.createElement(CategoryCard, {\n      category: document\n    })\n  });\n};\n\n_s(Categories, \"+AhuUFCwRGRe/B96tJ9iu8AcwFc=\", false, function () {\n  return [useHelper, useDispatch];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/pages/dashboard/categories.js"],"names":["React","useEffect","useDispatch","template","useHelper","categories","filterConfig","onCategoryCreate","onCategoryEdit","onCategoryLink","CategoryCard","ContentLayout","setDocuments","queries","TITLE","LIMIT","START_OFFSET","Categories","recall","dispatch","GET_CATEGORIES","DELETE_CATEGORY","category","id","onAfter","mutation","UPDATE_CATEGORY","CREATE_CATEGORY","document"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,QAAP,MAAqB,qDAArB;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,mCAA3C;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,cAA3C,QAAiE,8BAAjE;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,KAAK,GAAG,WAAd;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,YAAY,GAAG,CAArB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,MAAM,GAAGd,SAAS,EAAxB;AACA,QAAMe,QAAQ,GAAGjB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACP,YAAY,CAAC,IAAD,CAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEE,KADT;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,IAAI,EAAE,QAHR;AAIE,IAAA,QAAQ,EAAEZ,QAJZ;AAKE,IAAA,WAAW,EAAEa,YALf;AAME,IAAA,YAAY,EAAEV,YANhB;AAOE,IAAA,YAAY,EAAE,eAPhB;AAQE,IAAA,gBAAgB,EAAE,mBARpB;AASE,IAAA,UAAU,EAAE,UATd;AAUE,IAAA,OAAO,EAAE,eAVX;AAWE,IAAA,QAAQ,EAAEO,OAAO,CAACO,cAXpB;AAYE,IAAA,WAAW,EAAEP,OAAO,CAACQ,eAZvB;AAaE,IAAA,qBAAqB,EAAE,WAbzB;AAcE,IAAA,sBAAsB,EAAE,WAd1B;AAeE,IAAA,MAAM,EAAGC,QAAD,IAAcJ,MAAM,CAACT,cAAD,EAAiB;AAAEc,MAAAA,EAAE,EAAED,QAAQ,CAACC,EAAf;AAAmBD,MAAAA;AAAnB,KAAjB,CAAN,EAfxB;AAgBE,IAAA,MAAM,EAAE,CAACA,QAAD,EAAWE,OAAX,KACNN,MAAM,CAACV,cAAD,EAAiB;AACrBe,MAAAA,EAAE,EAAED,QAAQ,CAACC,EADQ;AAErBD,MAAAA,QAFqB;AAGrBG,MAAAA,QAAQ,EAAEZ,OAAO,CAACa,eAHG;AAIrBF,MAAAA;AAJqB,KAAjB,CAAN,EAjBJ;AAwBE,IAAA,QAAQ,EAAGA,OAAD,IACRN,MAAM,CAACX,gBAAD,EAAmB;AAAEkB,MAAAA,QAAQ,EAAEZ,OAAO,CAACc,eAApB;AAAqCH,MAAAA;AAArC,KAAnB,CAAN,EAzBJ;AA2BE,IAAA,MAAM,EAAGI,QAAD,iBAAc,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA;AAAxB;AA3BxB,IADF;AA+BD,CAvCD;;GAAMX,U;UACWb,S,EACEF,W;;;KAFbe,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport template from '../../atomic-ui/components/Table/templates/category'\n\nimport { useHelper } from '../../hooks/useHelper'\nimport { categories as filterConfig } from '../../components/FilterBar/config'\nimport { onCategoryCreate, onCategoryEdit, onCategoryLink } from '../../store/helpers/category'\nimport CategoryCard from '../../components/CategoryCard'\nimport ContentLayout from '../../layouts/dashboard/content'\nimport { setDocuments } from '../../store/actions/documents'\nimport queries from '../../graphql/queries'\n\nconst TITLE = 'Категории'\n\nconst LIMIT = 32\nconst START_OFFSET = 0\n\nconst Categories = () => {\n  const recall = useHelper()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(setDocuments(null))\n  }, [])\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      icon={'folder'}\n      template={template}\n      startOffset={START_OFFSET}\n      filterConfig={filterConfig}\n      emptyMessage={'Категорий нет'}\n      buttonCreateText={'Создать категорию'}\n      entityType={'category'}\n      getType={'getCategories'}\n      getQuery={queries.GET_CATEGORIES}\n      deleteQuery={queries.DELETE_CATEGORY}\n      deleteEntityMultiText={'категории'}\n      deleteEntitySingleText={'категорию'}\n      onLink={(category) => recall(onCategoryLink, { id: category.id, category })()}\n      onEdit={(category, onAfter) =>\n        recall(onCategoryEdit, {\n          id: category.id,\n          category,\n          mutation: queries.UPDATE_CATEGORY,\n          onAfter\n        })()\n      }\n      onCreate={(onAfter) =>\n        recall(onCategoryCreate, { mutation: queries.CREATE_CATEGORY, onAfter })()\n      }\n      render={(document) => <CategoryCard category={document} />}\n    />\n  )\n}\n\nexport default Categories\n"]},"metadata":{},"sourceType":"module"}