{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Form from '../Form';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormChat__Wrap\",\n  componentId: \"sc-1iy8oe9-0\"\n})([\"width:100%;flex-grow:1;\"]);\nexport const Messages = styled(Column).withConfig({\n  displayName: \"FormChat__Messages\",\n  componentId: \"sc-1iy8oe9-1\"\n})([\"background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);flex-grow:1;\"]);\n_c = Messages;\nexport const Empty = styled(Text).withConfig({\n  displayName: \"FormChat__Empty\",\n  componentId: \"sc-1iy8oe9-2\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;flex-grow:1;\"]);\n_c2 = Empty;\nexport const Chat = ({\n  mutation,\n  messages,\n  appearance,\n  className,\n  onLink,\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Messages, null, messages && messages.map(message => {\n    var _message$user, _message$user$avatar;\n\n    return /*#__PURE__*/React.createElement(Message, {\n      key: message.id,\n      avatar: (_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$avatar = _message$user.avatar) === null || _message$user$avatar === void 0 ? void 0 : _message$user$avatar.path,\n      side: message.side,\n      name: message.name,\n      text: message.text,\n      time: message.createdAt,\n      onLink: onLink\n    });\n  }), !messages && !loading && /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0447\\u0430\\u0442\"), loading && /*#__PURE__*/React.createElement(Spinner, null)), messages && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    name: 'text',\n    placeholder: 'Отправьте сообщенение...',\n    inputRef: register({\n      required: true\n    }),\n    loading: loading.toString(),\n    appearance: appearance,\n    required: true\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    type: 'submit'\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  })))));\n};\n_c3 = Chat;\nexport default Chat;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Messages\");\n$RefreshReg$(_c2, \"Empty\");\n$RefreshReg$(_c3, \"Chat\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormChat/index.js"],"names":["React","styled","Row","Column","Message","Input","Button","Icon","Text","Spinner","Form","Wrap","Messages","Empty","Chat","mutation","messages","appearance","className","onLink","onSubmit","register","loading","map","message","id","user","avatar","path","side","name","text","createdAt","required","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,gCAAhB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGV,MAAM,CAACE,MAAD,CAAT;AAAA;AAAA;AAAA,+BAAV;AAKP,OAAO,MAAMS,QAAQ,GAAGX,MAAM,CAACE,MAAD,CAAT;AAAA;AAAA;AAAA,6GAAd;KAAMS,Q;AAOb,OAAO,MAAMC,KAAK,GAAGZ,MAAM,CAACO,IAAD,CAAT;AAAA;AAAA;AAAA,kGAAX;MAAMK,K;AASb,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA,MAA7C;AAAqDC,EAAAA;AAArD,CAAD,KAAqE;AACvF,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEF,SAAjB;AAA4B,IAAA,UAAU,EAAED,UAAxC;AAAoD,IAAA,QAAQ,EAAEF,QAA9D;AAAwE,IAAA,QAAQ,EAAEK;AAAlF,KACG,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,kBACC,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,QAAD,QACGN,QAAQ,IACPA,QAAQ,CAACO,GAAT,CAAcC,OAAD;AAAA;;AAAA,wBACX,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,MAAM,mBAAED,OAAO,CAACE,IAAV,0EAAE,cAAcC,MAAhB,yDAAE,qBAAsBC,IAFhC;AAGE,MAAA,IAAI,EAAEJ,OAAO,CAACK,IAHhB;AAIE,MAAA,IAAI,EAAEL,OAAO,CAACM,IAJhB;AAKE,MAAA,IAAI,EAAEN,OAAO,CAACO,IALhB;AAME,MAAA,IAAI,EAAEP,OAAO,CAACQ,SANhB;AAOE,MAAA,MAAM,EAAEb;AAPV,MADW;AAAA,GAAb,CAFJ,EAaG,CAACH,QAAD,IAAa,CAACM,OAAd,iBAAyB,oBAAC,KAAD,8EAb5B,EAcGA,OAAO,iBAAI,oBAAC,OAAD,OAdd,CADF,EAkBGN,QAAQ,iBACP,oBAAC,GAAD,qBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,MADR;AAEE,IAAA,WAAW,EAAE,0BAFf;AAGE,IAAA,QAAQ,EAAEK,QAAQ,CAAC;AAAEY,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHpB;AAIE,IAAA,OAAO,EAAEX,OAAO,CAACY,QAAR,EAJX;AAKE,IAAA,UAAU,EAAEjB,UALd;AAME,IAAA,QAAQ;AANV,IADF,eASE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,MAAd;AAAsB,IAAA,IAAI,EAAE;AAA5B,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,MAAZ;AAAoB,IAAA,MAAM,EAAE;AAA5B,IADF,CATF,CAnBJ,CAFJ,CADF;AAwCD,CAzCM;MAAMH,I;AA2Cb,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport Form from '../Form'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n  flex-grow: 1;\n`\n\nexport const Messages = styled(Column)`\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  flex-grow: 1;\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n`\n\nexport const Chat = ({ mutation, messages, appearance, className, onLink, onSubmit }) => {\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading }) => (\n        <React.Fragment>\n          <Messages>\n            {messages &&\n              messages.map((message) => (\n                <Message\n                  key={message.id}\n                  avatar={message.user?.avatar?.path}\n                  side={message.side}\n                  name={message.name}\n                  text={message.text}\n                  time={message.createdAt}\n                  onLink={onLink}\n                />\n              ))}\n            {!messages && !loading && <Empty>Выберите чат</Empty>}\n            {loading && <Spinner />}\n          </Messages>\n\n          {messages && (\n            <Row>\n              <Input\n                name={'text'}\n                placeholder={'Отправьте сообщенение...'}\n                inputRef={register({ required: true })}\n                loading={loading.toString()}\n                appearance={appearance}\n                required\n              />\n              <Button kind={'icon'} type={'submit'}>\n                <Icon icon={'send'} stroke={'white'} />\n              </Button>\n            </Row>\n          )}\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}