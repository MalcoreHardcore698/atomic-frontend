{"ast":null,"code":"import _extends from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      max-width: \", \"px !important;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 7px 10px !important;\\n  font-size: var(--font-size-s) !important;\\n  line-height: 14px !important;\\n  background: rgba(0, 0, 0, 0.7) !important;\\n  border-radius: var(--surface-border-radius) !important;\\n  border: none !important;\\n  color: white !important;\\n  opacity: 0.9;\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport ReactTooltip from 'react-tooltip';\nimport { v4 } from 'uuid';\nexport var Wrap = styled.div(_templateObject());\nexport var Content = styled(ReactTooltip)(_templateObject2(), function (_ref) {\n  var maxWidth = _ref.maxWidth;\n  return maxWidth && css(_templateObject3(), maxWidth);\n});\nexport var Tooltip = function Tooltip(_ref2) {\n  var text = _ref2.text,\n      self = _ref2.self,\n      children = _ref2.children,\n      style = _ref2.style,\n      className = _ref2.className,\n      maxWidth = _ref2.maxWidth,\n      props = _objectWithoutProperties(_ref2, [\"text\", \"self\", \"children\", \"style\", \"className\", \"maxWidth\"]);\n\n  var id = \"tooltip-\".concat(v4());\n  return __jsx(Wrap, {\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.cloneElement(self ? __jsx(\"div\", null, children) : children, _objectSpread({}, {\n    'data-arrow-color': 'rgba(0, 0, 0, .7)',\n    'data-tip': true,\n    'data-for': id\n  })), __jsx(Content, _extends({\n    id: id\n  }, props, {\n    maxWidth: maxWidth\n  }), __jsx(\"span\", null, text)));\n};\nTooltip.defaultProps = {\n  place: 'top',\n  effect: 'solid',\n  delayShow: 500\n};\nexport default Tooltip;","map":null,"metadata":{},"sourceType":"module"}