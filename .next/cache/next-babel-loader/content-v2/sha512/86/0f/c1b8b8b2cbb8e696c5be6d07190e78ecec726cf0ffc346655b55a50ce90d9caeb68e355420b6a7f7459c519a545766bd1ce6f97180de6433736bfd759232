{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Button\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nexport const clearProperties = css`\n  color: black;\n  background: none;\n  border: none;\n  height: auto;\n  padding: 0;\n\n  &:hover {\n    background: none;\n    border: none;\n    color: var(--default-color-accent);\n  }\n`;\nexport const Wrap = styled.button`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: none;\n\n  margin: 0;\n  padding: var(--input-offset-${({\n  size\n}) => size});\n  width: auto;\n  height: var(--input-height-${({\n  size\n}) => size});\n\n  transition: all 150ms ease;\n\n  ${({\n  kind,\n  size\n}) => kind === 'icon' && css`\n      padding: 0;\n      width: var(--input-height-${size});\n      min-width: var(--input-height-${size});\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      color: white;\n      background: var(--default-color-accent);\n      border: 1px solid var(--default-color-accent);\n\n      &:hover {\n        background: var(--default-color-accent__hover);\n        border: 1px solid var(--default-color-accent__hover);\n      }\n\n      ${({\n  revert\n}) => revert && css`\n          color: var(--default-color-accent);\n          background: var(--default-color-accent-dim);\n          border: 1px solid var(--default-color-accent-dim);\n\n          &:hover {\n            background: var(--default-color-accent-dim__hover);\n            border: 1px solid var(--default-color-accent-dim__hover);\n          }\n        `}\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'green' && css`\n      color: white;\n      background: var(--default-color-green);\n      border: 1px solid var(--default-color-green)\n\n      &:hover {\n        background: var(--default-color-green__hover);\n        border: 1px solid var(--default-color-green__hover);\n      }\n\n      ${({\n  revert\n}) => revert && css`\n          color: var(--default-color-green);\n          background: var(--default-color-green-dim);\n          border: 1px solid var(--default-color-green-dim);\n\n          &:hover {\n            background: var(--default-color-green-dim__hover);\n            border: 1px solid var(--default-color-green-dim__hover);\n          }\n        `}\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'red' && css`\n      color: white;\n      background: var(--default-color-red);\n      border: 1px solid var(--default-color-red)\n\n      &:hover {\n        background: var(--default-color-red__hover);\n        border: 1px solid var(--default-color-red__hover);\n      }\n\n      ${({\n  revert\n}) => revert && css`\n          color: var(--default-color-red);\n          background: var(--default-color-red-dim);\n          border: 1px solid var(--default-color-red-dim);\n\n          &:hover {\n            background: var(--default-color-red-dim__hover);\n            border: 1px solid var(--default-color-red-dim__hover);\n          }\n        `}\n    `}\n    \n  ${({\n  appearance\n}) => appearance === 'ghost' && css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n\n      &:hover {\n        opacity: 0.75;\n      }\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'outlined' && css`\n      color: gray;\n      border: 1px solid rgba(0, 0, 0, 15%);\n\n      &:hover {\n        color: var(--default-color-accent);\n        border: 1px solid var(--default-color-accent);\n      }\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && clearProperties}\n\n  ${({\n  appearance\n}) => appearance === 'link' && css`\n      ${clearProperties}\n      color: var(--default-color-accent);\n      text-align: left;\n      padding: 0;\n    `}\n\n  ${({\n  disabled\n}) => disabled && css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n      cursor: default;\n\n      &:hover {\n        background: var(--ghost-color-background);\n        border: 1px solid var(--ghost-color-background);\n        opacity: 1;\n      }\n    `}\n`;\nexport const Button = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(Wrap, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 51\n    }\n  }), children);\n};\nButton.defaultProps = {\n  appearance: 'default',\n  kind: 'default',\n  size: 'm'\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Button/index.js"],"names":["React","styled","css","clearProperties","Wrap","button","size","kind","appearance","revert","disabled","Button","children","props","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nexport const clearProperties = css`\n  color: black;\n  background: none;\n  border: none;\n  height: auto;\n  padding: 0;\n\n  &:hover {\n    background: none;\n    border: none;\n    color: var(--default-color-accent);\n  }\n`\n\nexport const Wrap = styled.button`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: none;\n\n  margin: 0;\n  padding: var(--input-offset-${({ size }) => size});\n  width: auto;\n  height: var(--input-height-${({ size }) => size});\n\n  transition: all 150ms ease;\n\n  ${({ kind, size }) =>\n    kind === 'icon' &&\n    css`\n      padding: 0;\n      width: var(--input-height-${size});\n      min-width: var(--input-height-${size});\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      color: white;\n      background: var(--default-color-accent);\n      border: 1px solid var(--default-color-accent);\n\n      &:hover {\n        background: var(--default-color-accent__hover);\n        border: 1px solid var(--default-color-accent__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-accent);\n          background: var(--default-color-accent-dim);\n          border: 1px solid var(--default-color-accent-dim);\n\n          &:hover {\n            background: var(--default-color-accent-dim__hover);\n            border: 1px solid var(--default-color-accent-dim__hover);\n          }\n        `}\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'green' &&\n    css`\n      color: white;\n      background: var(--default-color-green);\n      border: 1px solid var(--default-color-green)\n\n      &:hover {\n        background: var(--default-color-green__hover);\n        border: 1px solid var(--default-color-green__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-green);\n          background: var(--default-color-green-dim);\n          border: 1px solid var(--default-color-green-dim);\n\n          &:hover {\n            background: var(--default-color-green-dim__hover);\n            border: 1px solid var(--default-color-green-dim__hover);\n          }\n        `}\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'red' &&\n    css`\n      color: white;\n      background: var(--default-color-red);\n      border: 1px solid var(--default-color-red)\n\n      &:hover {\n        background: var(--default-color-red__hover);\n        border: 1px solid var(--default-color-red__hover);\n      }\n\n      ${({ revert }) =>\n        revert &&\n        css`\n          color: var(--default-color-red);\n          background: var(--default-color-red-dim);\n          border: 1px solid var(--default-color-red-dim);\n\n          &:hover {\n            background: var(--default-color-red-dim__hover);\n            border: 1px solid var(--default-color-red-dim__hover);\n          }\n        `}\n    `}\n    \n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n\n      &:hover {\n        opacity: 0.75;\n      }\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'outlined' &&\n    css`\n      color: gray;\n      border: 1px solid rgba(0, 0, 0, 15%);\n\n      &:hover {\n        color: var(--default-color-accent);\n        border: 1px solid var(--default-color-accent);\n      }\n    `}\n\n  ${({ appearance }) => appearance === 'clear' && clearProperties}\n\n  ${({ appearance }) =>\n    appearance === 'link' &&\n    css`\n      ${clearProperties}\n      color: var(--default-color-accent);\n      text-align: left;\n      padding: 0;\n    `}\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: var(--ghost-color-text);\n      background: var(--ghost-color-background);\n      border: 1px solid var(--ghost-color-background);\n      cursor: default;\n\n      &:hover {\n        background: var(--ghost-color-background);\n        border: 1px solid var(--ghost-color-background);\n        opacity: 1;\n      }\n    `}\n`\n\nexport const Button = ({ children, ...props }) => <Wrap {...props}>{children}</Wrap>\n\nButton.defaultProps = {\n  appearance: 'default',\n  kind: 'default',\n  size: 'm'\n}\n\nexport default Button\n"]},"metadata":{},"sourceType":"module"}