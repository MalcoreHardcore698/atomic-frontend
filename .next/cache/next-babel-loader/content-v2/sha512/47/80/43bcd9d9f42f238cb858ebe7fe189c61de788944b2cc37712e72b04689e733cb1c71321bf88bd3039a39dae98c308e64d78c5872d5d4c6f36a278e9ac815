{"ast":null,"code":"import React from 'react';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Row from '../../atomic-ui/components/Row';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"TicketChat__Wrap\",\n  componentId: \"sc-3e5jur-0\"\n})([\"width:100%;\"]);\nexport const Header = styled(Row).withConfig({\n  displayName: \"TicketChat__Header\",\n  componentId: \"sc-3e5jur-1\"\n})([\"justify-content:space-between;width:100%;\"]);\nexport const Messages = styled(Column).withConfig({\n  displayName: \"TicketChat__Messages\",\n  componentId: \"sc-3e5jur-2\"\n})([\"position:relative;background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);padding-top:55px;flex-grow:1;\"]);\nexport const Meta = styled(Row).withConfig({\n  displayName: \"TicketChat__Meta\",\n  componentId: \"sc-3e5jur-3\"\n})([\"position:absolute;top:0;left:0;width:100%;justify-content:space-between;padding:8px var(--default-gap);border-radius:var(--surface-border-radius) var(--surface-border-radius) 0 0;background:var(--ghost-color-background);\"]);\nexport const Empty = styled(Text).withConfig({\n  displayName: \"TicketChat__Empty\",\n  componentId: \"sc-3e5jur-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;\"]);\nexport const TicketChat = ({\n  ticket,\n  onLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, props, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n  label: 'Номер обращения',\n  text: (ticket === null || ticket === void 0 ? void 0 : ticket.token) || '-'\n}), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n  onClick: onFinish,\n  disabled: !ticket\n}, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n  onClick: onReport,\n  kind: 'icon',\n  appearance: 'red',\n  disabled: !ticket\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'flag',\n  stroke: 'white'\n})))), /*#__PURE__*/React.createElement(Messages, null, /*#__PURE__*/React.createElement(Meta, null, /*#__PURE__*/React.createElement(Text, null, \"\\u0422\\u0435\\u043C\\u0430: \", ticket.title), /*#__PURE__*/React.createElement(Text, null, ticket.createdAt)), ticket && ticket.messages && ticket.messages.length > 0 ? ticket.messages.map(message => /*#__PURE__*/React.createElement(Message, {\n  key: message.id,\n  avatar: message.avatar,\n  side: message.side,\n  name: message.name,\n  text: message.text,\n  time: message.time,\n  onLink: onLink\n})) : /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n  kind: 'icon',\n  onSubmit: onAttach\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'attach',\n  stroke: 'white'\n})), /*#__PURE__*/React.createElement(Input, {\n  placeholder: 'Отправьте сообщенение...',\n  appearance: 'ghost'\n}), /*#__PURE__*/React.createElement(Button, {\n  kind: 'icon',\n  onSubmit: onSubmit\n}, /*#__PURE__*/React.createElement(Icon, {\n  icon: 'send',\n  stroke: 'white'\n}))));\nexport default TicketChat;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketChat/index.js"],"names":["React","Difinition","Row","Button","Icon","Text","Message","Input","styled","Column","Wrap","Header","Messages","Meta","Empty","TicketChat","ticket","onLink","onFinish","onReport","onAttach","onSubmit","props","token","title","createdAt","messages","length","map","message","id","avatar","side","name","text","time"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Row from '../../atomic-ui/components/Row'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport styled from 'styled-components'\nimport Column from '../../atomic-ui/components/Column'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const Messages = styled(Column)`\n  position: relative;\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  padding-top: 55px;\n  flex-grow: 1;\n`\n\nexport const Meta = styled(Row)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  justify-content: space-between;\n  padding: 8px var(--default-gap);\n  border-radius: var(--surface-border-radius) var(--surface-border-radius) 0 0;\n  background: var(--ghost-color-background);\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`\n\nexport const TicketChat = ({\n  ticket,\n  onLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => (\n  <Wrap {...props}>\n    <Header>\n      <Difinition label={'Номер обращения'} text={ticket?.token || '-'} />\n\n      <Row>\n        <Button onClick={onFinish} disabled={!ticket}>\n          Закрыть обращение\n        </Button>\n        <Button onClick={onReport} kind={'icon'} appearance={'red'} disabled={!ticket}>\n          <Icon icon={'flag'} stroke={'white'} />\n        </Button>\n      </Row>\n    </Header>\n\n    <Messages>\n      <Meta>\n        <Text>Тема: {ticket.title}</Text>\n        <Text>{ticket.createdAt}</Text>\n      </Meta>\n\n      {ticket && ticket.messages && ticket.messages.length > 0 ? (\n        ticket.messages.map((message) => (\n          <Message\n            key={message.id}\n            avatar={message.avatar}\n            side={message.side}\n            name={message.name}\n            text={message.text}\n            time={message.time}\n            onLink={onLink}\n          />\n        ))\n      ) : (\n        <Empty>Выберите обращение</Empty>\n      )}\n    </Messages>\n\n    <Row>\n      <Button kind={'icon'} onSubmit={onAttach}>\n        <Icon icon={'attach'} stroke={'white'} />\n      </Button>\n      <Input placeholder={'Отправьте сообщенение...'} appearance={'ghost'} />\n      <Button kind={'icon'} onSubmit={onSubmit}>\n        <Icon icon={'send'} stroke={'white'} />\n      </Button>\n    </Row>\n  </Wrap>\n)\n\nexport default TicketChat\n"]},"metadata":{},"sourceType":"module"}