{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport Row from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Button from '../../atomic-ui/components/Button';\nimport Tabs, { Tab } from '../../atomic-ui/components/Tabs';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Input from '../../atomic-ui/components/Input';\nimport Text from '../../atomic-ui/components/Text';\nimport Form from '../Form';\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:128px;height:30px;\"]);\nexport const Settings = ({\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading,\n    control,\n    getValues\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, {\n    label: 'Основное'\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: 'Вкладка 1'\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'title',\n    ref: register(),\n    defaultValue: getValues('title') || '/',\n    placeholder: 'Домашняя страница',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: 'preview',\n    control: control,\n    rules: {\n      required: true\n    },\n    defaultValue: getValues('preview') || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Logotype, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: 'Логотип',\n      tooltip: 'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n    })\n  })), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Scaffold'\n  }, /*#__PURE__*/React.createElement(Text, null, \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Natus recusandae amet minus sit. Itaque, dicta soluta corporis deleniti minus, reiciendis quaerat, aspernatur iure eligendi quasi voluptate temporibus fugiat eaque quae enim omnis numquam. Rerum quasi modi animi nisi labore iusto dignissimos vel dolor architecto blanditiis.\")), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Мета'\n  }, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-title',\n    ref: register(),\n    defaultValue: getValues('title') || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-description',\n    ref: register(),\n    defaultValue: getValues('title'),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n};\nexport default Settings;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormSettings/index.js"],"names":["React","styled","Controller","Row","Title","Button","Tabs","Tab","Dropzone","Divider","Input","Text","Form","Logotype","Settings","mutation","appearance","className","onSubmit","register","loading","control","getValues","required","value","onChange","flexGrow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Controller } from 'react-hook-form'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Title from '../../atomic-ui/components/Title'\nimport Button from '../../atomic-ui/components/Button'\nimport Tabs, { Tab } from '../../atomic-ui/components/Tabs'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Input from '../../atomic-ui/components/Input'\nimport Text from '../../atomic-ui/components/Text'\n\nimport Form from '../Form'\n\nexport const Logotype = styled(Dropzone)`\n  width: 128px;\n  height: 30px;\n`\n\nexport const Settings = ({ mutation, appearance, className, onSubmit }) => {\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading, control, getValues }) => (\n        <React.Fragment>\n          <Tabs label={'Основное'}>\n            <Tab label={'Вкладка 1'}>\n              <Title tag={'h4'}>Основное</Title>\n\n              <Input\n                type={'text'}\n                name={'title'}\n                ref={register()}\n                defaultValue={getValues('title') || '/'}\n                placeholder={'Домашняя страница'}\n                appearance={'ghost'}\n                disabled={loading}\n              />\n\n              <Controller\n                name={'preview'}\n                control={control}\n                rules={{ required: true }}\n                defaultValue={getValues('preview') || null}\n                render={({ value, onChange }) => (\n                  <Logotype\n                    accept={'image/*'}\n                    defaultValue={value}\n                    onChange={onChange}\n                    placeholder={'Логотип'}\n                    tooltip={\n                      'Разрешение: 128x30px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n                    }\n                  />\n                )}\n              />\n            </Tab>\n            <Tab label={'Scaffold'}>\n              <Text>\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Natus recusandae amet\n                minus sit. Itaque, dicta soluta corporis deleniti minus, reiciendis quaerat,\n                aspernatur iure eligendi quasi voluptate temporibus fugiat eaque quae enim omnis\n                numquam. Rerum quasi modi animi nisi labore iusto dignissimos vel dolor architecto\n                blanditiis.\n              </Text>\n            </Tab>\n            <Tab label={'Мета'}>\n              <Title tag={'h4'}>Мета теги</Title>\n\n              <Input\n                type={'text'}\n                name={'meta-title'}\n                ref={register()}\n                defaultValue={getValues('title') || 'Atomic'}\n                placeholder={'Мета-название'}\n                appearance={'ghost'}\n                disabled={loading}\n              />\n\n              <Input\n                type={'text'}\n                name={'meta-description'}\n                ref={register()}\n                defaultValue={getValues('title')}\n                placeholder={'Мета-описание'}\n                appearance={'ghost'}\n                disabled={loading}\n              />\n            </Tab>\n          </Tabs>\n\n          <Divider clear />\n\n          <Row>\n            <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n              Сохранить\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}