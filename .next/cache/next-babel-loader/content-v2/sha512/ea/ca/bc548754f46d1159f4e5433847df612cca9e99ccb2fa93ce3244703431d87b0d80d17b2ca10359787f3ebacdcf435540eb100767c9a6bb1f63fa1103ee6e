{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Column from '../../atomic-ui/components/Column';\nimport Select from '../../atomic-ui/components/Select';\nimport Button from '../../atomic-ui/components/Button';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormAddMember__Wrap\",\n  componentId: \"kre4m5-0\"\n})([\"padding:var(--default-gap);\"]);\nexport const AddMember = ({\n  query,\n  onSubmit\n}) => {\n  const members = useSelector(state => state.root.members);\n  const [selected, setSelected] = useState(null);\n  const [load, {\n    data,\n    loading\n  }] = useLazyQuery(query, {\n    variables: {\n      email: members.map(member => {\n        var _member$value;\n\n        return (member === null || member === void 0 ? void 0 : member.email) || ((_member$value = member.value) === null || _member$value === void 0 ? void 0 : _member$value.email);\n      }),\n      account: ['INDIVIDUAL', 'OFICIAL']\n    }\n  });\n  useEffect(() => load(), []);\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Select, {\n    options: !loading && data ? data.getUsers.map(user => ({\n      value: user,\n      label: user.name\n    })) : [],\n    appearance: 'ghost',\n    defaultValue: selected,\n    placeholder: 'Введите ФИО, Эл. почту или телефон',\n    onChange: item => setSelected(item),\n    isLoading: loading,\n    isSearchable: true\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => selected && onSubmit(selected),\n    disabled: !selected || loading\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\"));\n};\nexport default AddMember;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/FormAddMember/index.js"],"names":["React","useState","useEffect","styled","useSelector","useLazyQuery","Column","Select","Button","Wrap","AddMember","query","onSubmit","members","state","root","selected","setSelected","load","data","loading","variables","email","map","member","value","account","getUsers","user","label","name","item"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGN,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,mCAAV;AAIP,OAAO,MAAMI,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAChD,QAAMC,OAAO,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACiB,IAAD,EAAO;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP,IAA4Bf,YAAY,CAACM,KAAD,EAAQ;AACpDU,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAET,OAAO,CAACU,GAAR,CAAaC,MAAD;AAAA;;AAAA,eAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEF,KAAR,uBAAiBE,MAAM,CAACC,KAAxB,kDAAiB,cAAcH,KAA/B,CAAZ;AAAA,OAAZ,CADE;AAETI,MAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,SAAf;AAFA;AADyC,GAAR,CAA9C;AAOAxB,EAAAA,SAAS,CAAC,MAAMgB,IAAI,EAAX,EAAe,EAAf,CAAT;AAEA,sBACE,oBAAC,IAAD,qBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EACL,CAACE,OAAD,IAAYD,IAAZ,GACIA,IAAI,CAACQ,QAAL,CAAcJ,GAAd,CAAmBK,IAAD,KAAW;AAC3BH,MAAAA,KAAK,EAAEG,IADoB;AAE3BC,MAAAA,KAAK,EAAED,IAAI,CAACE;AAFe,KAAX,CAAlB,CADJ,GAKI,EAPR;AASE,IAAA,UAAU,EAAE,OATd;AAUE,IAAA,YAAY,EAAEd,QAVhB;AAWE,IAAA,WAAW,EAAE,oCAXf;AAYE,IAAA,QAAQ,EAAGe,IAAD,IAAUd,WAAW,CAACc,IAAD,CAZjC;AAaE,IAAA,SAAS,EAAEX,OAbb;AAcE,IAAA,YAAY;AAdd,IADF,eAiBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMJ,QAAQ,IAAIJ,QAAQ,CAACI,QAAD,CAA3C;AAAuD,IAAA,QAAQ,EAAE,CAACA,QAAD,IAAaI;AAA9E,+GAjBF,CADF;AAuBD,CAnCM;AAqCP,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Select from '../../atomic-ui/components/Select'\nimport Button from '../../atomic-ui/components/Button'\n\nexport const Wrap = styled(Column)`\n  padding: var(--default-gap);\n`\n\nexport const AddMember = ({ query, onSubmit }) => {\n  const members = useSelector((state) => state.root.members)\n  const [selected, setSelected] = useState(null)\n  const [load, { data, loading }] = useLazyQuery(query, {\n    variables: {\n      email: members.map((member) => member?.email || member.value?.email),\n      account: ['INDIVIDUAL', 'OFICIAL']\n    }\n  })\n\n  useEffect(() => load(), [])\n\n  return (\n    <Wrap>\n      <Select\n        options={\n          !loading && data\n            ? data.getUsers.map((user) => ({\n                value: user,\n                label: user.name\n              }))\n            : []\n        }\n        appearance={'ghost'}\n        defaultValue={selected}\n        placeholder={'Введите ФИО, Эл. почту или телефон'}\n        onChange={(item) => setSelected(item)}\n        isLoading={loading}\n        isSearchable\n      />\n      <Button onClick={() => selected && onSubmit(selected)} disabled={!selected || loading}>\n        Добавить участника\n      </Button>\n    </Wrap>\n  )\n}\n\nexport default AddMember\n"]},"metadata":{},"sourceType":"module"}