{"ast":null,"code":"import gql from 'graphql-tag';\nimport { UserFields, UserMemberFields, MessageFields, ProjectFields, NoticeFields, UserForReset } from \"../../fragments\";\nexport const GOOGLE_AUTH = gql`\n  mutation googleAuth($accessToken: String!) {\n    googleAuth(accessToken: $accessToken) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const FACEBOOK_AUTH = gql`\n  mutation facebookAuth($accessToken: String!) {\n    facebookAuth(accessToken: $accessToken) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const CHECKIN = gql`\n  mutation checkin($login: String!) {\n    checkin(login: $login)\n  }\n`;\nexport const LOGIN = gql`\n  mutation login($login: String!, $password: String!) {\n    login(login: $login, password: $password) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const REGISTER = gql`\n  mutation register($input: RegisterInput) {\n    register(input: $input) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const RESET = gql`\n  mutation updateUserPasswordResetStatus($email: String!) {\n    updateUserPasswordResetStatus(email: $email) {\n      ...UserForReset\n    }\n  }\n  ${UserForReset}\n`;\nexport const CHECK_EMAIL = gql`\n  query getResetTokenByEmail($email: String, $token: String) {\n    ...UserForReset\n  }\n  ${UserForReset}\n`;\nexport const CHECK_RESET_TOKEN = gql`\n  mutation checkTokenAndResetPassword($email: String!, $token: String!, $password: String!) {\n    checkTokenAndResetPassword(email: $email, token: $token, password: $password) {\n      ...UserForReset\n    }\n  }\n  ${UserForReset}\n`;\nexport const LOGOUT = gql`\n  mutation logout {\n    logout\n  }\n`;\nexport const CHECK_USER = gql`\n  query checkUser($search: String!) {\n    checkUser(search: $search) {\n      status\n      message\n    }\n  }\n`;\nexport const GET_USER = gql`\n  query getUser($email: String) {\n    getUser(email: $email) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const GET_USERS = gql`\n  query getUsers(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $search: String\n    $email: [String]\n    $account: [AccountType]\n    $company: String\n    $createdAt: String\n  ) {\n    getUsers(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      search: $search\n      email: $email\n      account: $account\n      company: $company\n      createdAt: $createdAt\n    ) {\n      name\n      about\n      email\n      avatar {\n        path\n      }\n      account\n      members\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      role {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const GET_USERS_FOR_TICKET = gql`\n  query getUsers(\n    $sort: String\n    $offset: Int\n    $limit: Int\n    $search: String\n    $email: [String]\n    $account: [AccountType]\n    $company: String\n  ) {\n    getUsers(\n      sort: $sort\n      offset: $offset\n      limit: $limit\n      search: $search\n      email: $email\n      account: $account\n      company: $company\n    ) {\n      name\n      email\n    }\n  }\n`;\nexport const GET_USER_MEMBERS = gql`\n  query getUserMembers($email: String!) {\n    getUserMembers(email: $email) {\n      ...UserMemberFields\n    }\n  }\n  ${UserMemberFields}\n`;\nexport const GET_USER_PARTICIPANT_PROJECTS = gql`\n  query getProjects($member: String) {\n    getProjects(member: $member) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const GET_USER_PROJECTS = gql`\n  query getProjects($author: String) {\n    getProjects(author: $author) {\n      ...ProjectFields\n    }\n  }\n  ${ProjectFields}\n`;\nexport const CREATE_USER = gql`\n  mutation createUser($input: UserCreateInput!) {\n    createUser(input: $input) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const UPDATE_CLIENT_USER = gql`\n  mutation updateClientUser($input: UserUpdateInput!) {\n    updateClientUser(input: $input) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const UPDATE_USER = gql`\n  mutation updateUser($email: String!, $input: UserUpdateInput!) {\n    updateUser(email: $email, input: $input) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const DELETE_USER = gql`\n  mutation deleteUser($email: [String]!) {\n    deleteUser(email: $email) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const INVITE_USER_MEMBER = gql`\n  mutation inviteUserMember($email: String!) {\n    inviteUserMember(email: $email)\n  }\n`;\nexport const APPLY_INVITE_USER_MEMBER = gql`\n  mutation applyInviteUserMember($id: ID!, $email: String!) {\n    applyInviteUserMember(id: $id, email: $email) {\n      ...NoticeFields\n    }\n  }\n  ${NoticeFields}\n`;\nexport const REJECT_INVITE_USER_MEMBER = gql`\n  mutation rejectInviteUserMember($id: ID!, $email: String!) {\n    rejectInviteUserMember(id: $id, email: $email) {\n      ...NoticeFields\n    }\n  }\n  ${NoticeFields}\n`;\nexport const APPOINT_USER_MEMBER = gql`\n  mutation appointUserMember($email: String!) {\n    appointUserMember(email: $email) {\n      ...UserMemberFields\n    }\n  }\n  ${UserMemberFields}\n`;\nexport const EXCLUDE_USER_MEMBER = gql`\n  mutation excludeUserMember($email: String!) {\n    excludeUserMember(email: $email) {\n      ...UserMemberFields\n    }\n  }\n  ${UserMemberFields}\n`;\nexport const DISMISS_USER_MEMBER = gql`\n  mutation dismissUserMember($email: String!) {\n    dismissUserMember(email: $email) {\n      ...UserMemberFields\n    }\n  }\n  ${UserMemberFields}\n`;\nexport const ADD_USER_PROJECT = gql`\n  mutation addUserProject($project: ID!, $folder: ID!) {\n    addUserProject(project: $project, folder: $folder)\n  }\n`;\nexport const REMOVE_USER_PROJECT = gql`\n  mutation removeUserProject($project: ID!, $folder: ID!) {\n    removeUserProject(project: $project, folder: $folder)\n  }\n`;\nexport const ADD_USER_FOLDER = gql`\n  mutation addUserFolder($name: String!) {\n    addUserFolder(name: $name) {\n      id\n      name\n      projects\n    }\n  }\n`;\nexport const DELETE_USER_FOLDER = gql`\n  mutation deleteUserFolder($id: ID!) {\n    deleteUserFolder(id: $id) {\n      id\n      name\n      projects\n    }\n  }\n`;","map":null,"metadata":{},"sourceType":"module"}