{"ast":null,"code":"import React from 'react';\nimport ArticleForm from '../../components/FormArticle';\nimport DeleteForm from '../../components/FormDelete';\nimport ArticleCard from '../../components/ArticleCard';\nimport ArticleView from '../../components/ArticleView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink } from './user';\nexport function onArticleLink(dispatch, props) {\n  const {\n    id,\n    auth\n  } = props;\n  dispatch(setDrawer({\n    icon: 'document',\n    title: 'Статья',\n    content: /*#__PURE__*/React.createElement(ArticleView, {\n      article: id,\n      appearance: 'clear',\n      onCommentLink: user => onUserLink(dispatch, {\n        email: user,\n        auth\n      })\n    })\n  }));\n}\nexport function onArticleCreate(dispatch, props) {\n  const {\n    categories,\n    statuses,\n    canEditStatus,\n    mutation,\n    isPurpose,\n    onAfter\n  } = props;\n  dispatch(setDrawer({\n    icon: 'document',\n    title: `${isPurpose ? 'Предложение' : 'Создание'} статьи`,\n    content: /*#__PURE__*/React.createElement(ArticleForm, {\n      mutation: mutation,\n      categories: categories,\n      statuses: statuses,\n      appearance: 'clear',\n      canEditStatus: canEditStatus,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$preview, _form$preview2, _form$category, _form$status;\n\n          const articles = await action({\n            variables: {\n              input: {\n                title: form.title,\n                body: form.body,\n                preview: (_form$preview = form.preview) === null || _form$preview === void 0 ? void 0 : _form$preview.file,\n                previewSize: (_form$preview2 = form.preview) === null || _form$preview2 === void 0 ? void 0 : _form$preview2.file.size,\n                category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value,\n                status: (_form$status = form.status) === null || _form$status === void 0 ? void 0 : _form$status.value\n              }\n            }\n          });\n          dispatch(setDocuments(articles.data.createArticle));\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'success',\n            message: `Статья успешно ${isPurpose ? 'предложена' : 'создана'}`\n          }));\n          if (onAfter) onAfter();\n        } catch (err) {\n          dispatch(setDrawer(null));\n          dispatch(setItem({\n            type: 'error',\n            message: `Не удалось ${isPurpose ? 'предложить' : 'создана'} статью`\n          }));\n        }\n      },\n      isPurpose: isPurpose\n    })\n  }));\n}\nexport function onArticleEdit(dispatch, props) {\n  const {\n    id,\n    auth,\n    categories,\n    statuses,\n    canEditStatus,\n    mutation,\n    onAfter\n  } = props;\n  dispatch(setDrawer({\n    icon: 'document',\n    title: 'Редактирование статьи',\n    content: /*#__PURE__*/React.createElement(ArticleForm, {\n      article: id,\n      mutation: mutation,\n      categories: categories,\n      statuses: statuses,\n      appearance: 'clear',\n      canEditStatus: canEditStatus,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$preview3, _form$preview4, _form$preview4$file, _form$category2, _form$status2;\n\n          const articles = await action({\n            variables: {\n              id,\n              input: {\n                title: form.title,\n                body: form.body,\n                preview: (_form$preview3 = form.preview) === null || _form$preview3 === void 0 ? void 0 : _form$preview3.file,\n                previewSize: (_form$preview4 = form.preview) === null || _form$preview4 === void 0 ? void 0 : (_form$preview4$file = _form$preview4.file) === null || _form$preview4$file === void 0 ? void 0 : _form$preview4$file.size,\n                category: (_form$category2 = form.category) === null || _form$category2 === void 0 ? void 0 : _form$category2.value,\n                status: (_form$status2 = form.status) === null || _form$status2 === void 0 ? void 0 : _form$status2.value\n              }\n            }\n          });\n          dispatch(setDocuments(articles.data.updateArticle));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Статья успешно отредактирована'\n          }));\n          if (onAfter) onAfter();\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отредактировать статью'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      },\n      onCommentLink: user => onUserLink(dispatch, {\n        email: user,\n        auth\n      })\n    })\n  }));\n}\nexport function onArticleDelete(dispatch, props) {\n  const {\n    id,\n    article,\n    auth,\n    mutation\n  } = props;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление статьи',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: () => dispatch(setDrawer(null)),\n      onSubmit: async (_, action) => {\n        try {\n          const articles = await action({\n            variables: {\n              id\n            }\n          });\n          dispatch(setDocuments(articles.data.deleteArticle));\n          dispatch(setItem({\n            type: 'success',\n            message: 'Статья успешно удалена'\n          }));\n        } catch (_unused) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось удалить статью'\n          }));\n        } finally {\n          dispatch(setDrawer(null));\n        }\n      }\n    }, /*#__PURE__*/React.createElement(ArticleCard, {\n      article: article,\n      appearance: 'clear',\n      onLink: () => onArticleLink(dispatch, {\n        id: article.id\n      }),\n      onCommentLink: user => onUserLink(dispatch, {\n        email: user,\n        auth\n      })\n    }))\n  }));\n}","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/store/helpers/article.js"],"names":["React","ArticleForm","DeleteForm","ArticleCard","ArticleView","setDocuments","setDrawer","setItem","onUserLink","onArticleLink","dispatch","props","id","auth","icon","title","content","user","email","onArticleCreate","categories","statuses","canEditStatus","mutation","isPurpose","onAfter","form","action","articles","variables","input","body","preview","file","previewSize","size","category","value","status","data","createArticle","type","message","err","onArticleEdit","updateArticle","onArticleDelete","article","color","_","deleteArticle"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport ArticleForm from '../../components/FormArticle'\nimport DeleteForm from '../../components/FormDelete'\nimport ArticleCard from '../../components/ArticleCard'\nimport ArticleView from '../../components/ArticleView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\nimport { onUserLink } from './user'\n\nexport function onArticleLink(dispatch, props) {\n  const { id, auth } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'document',\n      title: 'Статья',\n      content: (\n        <ArticleView\n          article={id}\n          appearance={'clear'}\n          onCommentLink={(user) => onUserLink(dispatch, { email: user, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onArticleCreate(dispatch, props) {\n  const { categories, statuses, canEditStatus, mutation, isPurpose, onAfter } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'document',\n      title: `${isPurpose ? 'Предложение' : 'Создание'} статьи`,\n      content: (\n        <ArticleForm\n          mutation={mutation}\n          categories={categories}\n          statuses={statuses}\n          appearance={'clear'}\n          canEditStatus={canEditStatus}\n          onSubmit={async (form, action) => {\n            try {\n              const articles = await action({\n                variables: {\n                  input: {\n                    title: form.title,\n                    body: form.body,\n                    preview: form.preview?.file,\n                    previewSize: form.preview?.file.size,\n                    category: form.category?.value,\n                    status: form.status?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(articles.data.createArticle))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: `Статья успешно ${isPurpose ? 'предложена' : 'создана'}`\n                })\n              )\n              if (onAfter) onAfter()\n            } catch (err) {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: `Не удалось ${isPurpose ? 'предложить' : 'создана'} статью`\n                })\n              )\n            }\n          }}\n          isPurpose={isPurpose}\n        />\n      )\n    })\n  )\n}\n\nexport function onArticleEdit(dispatch, props) {\n  const { id, auth, categories, statuses, canEditStatus, mutation, onAfter } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'document',\n      title: 'Редактирование статьи',\n      content: (\n        <ArticleForm\n          article={id}\n          mutation={mutation}\n          categories={categories}\n          statuses={statuses}\n          appearance={'clear'}\n          canEditStatus={canEditStatus}\n          onSubmit={async (form, action) => {\n            try {\n              const articles = await action({\n                variables: {\n                  id,\n                  input: {\n                    title: form.title,\n                    body: form.body,\n                    preview: form.preview?.file,\n                    previewSize: form.preview?.file?.size,\n                    category: form.category?.value,\n                    status: form.status?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(articles.data.updateArticle))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Статья успешно отредактирована'\n                })\n              )\n              if (onAfter) onAfter()\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать статью'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}\n          onCommentLink={(user) => onUserLink(dispatch, { email: user, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onArticleDelete(dispatch, props) {\n  const { id, article, auth, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление статьи',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const articles = await action({\n                variables: { id }\n              })\n              dispatch(setDocuments(articles.data.deleteArticle))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Статья успешно удалена'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить статью'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <ArticleCard\n            article={article}\n            appearance={'clear'}\n            onLink={() => onArticleLink(dispatch, { id: article.id })}\n            onCommentLink={(user) => onUserLink(dispatch, { email: user, auth })}\n          />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}