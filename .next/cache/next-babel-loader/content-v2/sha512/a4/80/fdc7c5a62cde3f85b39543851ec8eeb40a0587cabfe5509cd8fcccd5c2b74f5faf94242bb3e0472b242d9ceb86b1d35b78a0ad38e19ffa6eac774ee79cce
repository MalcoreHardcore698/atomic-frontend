{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Chip from '../../atomic-ui/components/Chip';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nimport Title from '../../atomic-ui/components/Title';\nimport Tooltip from '../../atomic-ui/components/Tooltip';\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { onRoleDelete, onRoleEdit } from '../../store/helpers/role';\nimport { useHelper } from '../../hooks/useHelper';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"RoleCard__Wrap\",\n  componentId: \"sc-1nltqyr-0\"\n})([\"grid-gap:var(--default-gap);height:100%;\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Header = styled(Row).withConfig({\n  displayName: \"RoleCard__Header\",\n  componentId: \"sc-1nltqyr-1\"\n})([\"justify-content:space-between;align-items:center;\"]);\nexport const Name = styled(Title).withConfig({\n  displayName: \"RoleCard__Name\",\n  componentId: \"sc-1nltqyr-2\"\n})([\"transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.45;}\"]));\nexport const Actions = styled(Row).withConfig({\n  displayName: \"RoleCard__Actions\",\n  componentId: \"sc-1nltqyr-3\"\n})([\"grid-gap:5px;height:100%;\"]);\nexport const Permissions = styled(Row).withConfig({\n  displayName: \"RoleCard__Permissions\",\n  componentId: \"sc-1nltqyr-4\"\n})([\"flex-wrap:wrap;grid-gap:10px;\"]);\nexport const Card = ({\n  role,\n  style,\n  appearance,\n  className,\n  limitPermissions,\n  onLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  const recall = useHelper();\n  const {\n    setQuery\n  } = useEntityQuery();\n  const permissions = role.permissions.slice(0, limitPermissions);\n  const residue = role.permissions.length - limitPermissions;\n\n  const handleEdit = () => {\n    recall(onRoleEdit, {\n      id: role.id,\n      role,\n      permissions,\n      mutation: queries.UPDATE_ROLE\n    })();\n    if (onEdit) onEdit();\n  };\n\n  const handleDelete = () => {\n    recall(onRoleDelete, {\n      id: role.id,\n      role,\n      mutation: queries.DELETE_ROLE\n    })();\n    if (onDelete) onDelete();\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Meta, {\n    date: role.createdAt\n  }), onChecked && onEdit && onDelete && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удалить роль'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    appearance: 'red',\n    onClick: handleDelete\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    size: 'xs',\n    stroke: 'white'\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Редактировать роль'\n  }, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    size: 'xs',\n    onClick: handleEdit\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'edit',\n    size: 'xs',\n    stroke: 'white'\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Отметить роль',\n    self: true\n  }, /*#__PURE__*/React.createElement(Checkbox, null)))), /*#__PURE__*/React.createElement(Name, {\n    tag: 'h4',\n    onClick: () => setQuery(role.id, 'role', onLink)\n  }, getLabelRole(role.name))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), role && role.permissions.length > 0 ? /*#__PURE__*/React.createElement(Permissions, null, permissions.map(permission => /*#__PURE__*/React.createElement(Chip, {\n    key: permission,\n    color: 'ghost',\n    appearance: 'outlined'\n  }, getLabelPermission(permission))), residue > 0 && /*#__PURE__*/React.createElement(Chip, {\n    color: 'ghost',\n    appearance: 'outlined'\n  }, \"+\", residue)) : /*#__PURE__*/React.createElement(Alert, null, \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u043B\\u0435\\u0433\\u0438\\u0438 \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442\"));\n};\nCard.defaultProps = {\n  appearance: 'default',\n  limitPermissions: 5\n};\nexport default Card;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/RoleCard/index.js"],"names":["React","styled","css","Row","Column","Meta","Divider","Chip","Alert","Button","Icon","Checkbox","Title","Tooltip","getLabelRole","getLabelPermission","useEntityQuery","onRoleDelete","onRoleEdit","useHelper","queries","Wrap","appearance","Header","Name","onClick","Actions","Permissions","Card","role","style","className","limitPermissions","onLink","onChecked","onEdit","onDelete","recall","setQuery","permissions","slice","residue","length","handleEdit","id","mutation","UPDATE_ROLE","handleDelete","DELETE_ROLE","gridGap","createdAt","name","map","permission","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Chip from '../../atomic-ui/components/Chip'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\nimport Title from '../../atomic-ui/components/Title'\nimport Tooltip from '../../atomic-ui/components/Tooltip'\nimport { getLabelRole, getLabelPermission } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { onRoleDelete, onRoleEdit } from '../../store/helpers/role'\nimport { useHelper } from '../../hooks/useHelper'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: var(--default-gap);\n  height: 100%;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const Name = styled(Title)`\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.45;\n      }\n    `}\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 5px;\n  height: 100%;\n`\n\nexport const Permissions = styled(Row)`\n  flex-wrap: wrap;\n  grid-gap: 10px;\n`\n\nexport const Card = ({\n  role,\n  style,\n  appearance,\n  className,\n  limitPermissions,\n  onLink,\n  onChecked,\n  onEdit,\n  onDelete\n}) => {\n  const recall = useHelper()\n  const { setQuery } = useEntityQuery()\n  const permissions = role.permissions.slice(0, limitPermissions)\n  const residue = role.permissions.length - limitPermissions\n\n  const handleEdit = () => {\n    recall(onRoleEdit, {\n      id: role.id,\n      role,\n      permissions,\n      mutation: queries.UPDATE_ROLE\n    })()\n    if (onEdit) onEdit()\n  }\n\n  const handleDelete = () => {\n    recall(onRoleDelete, {\n      id: role.id,\n      role,\n      mutation: queries.DELETE_ROLE\n    })()\n    if (onDelete) onDelete()\n  }\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      <Column style={{ gridGap: 5 }}>\n        <Header>\n          <Meta date={role.createdAt} />\n\n          {onChecked && onEdit && onDelete && (\n            <Actions>\n              <Tooltip text={'Удалить роль'}>\n                <Button kind={'icon'} size={'xs'} appearance={'red'} onClick={handleDelete}>\n                  <Icon icon={'delete'} size={'xs'} stroke={'white'} />\n                </Button>\n              </Tooltip>\n              <Tooltip text={'Редактировать роль'}>\n                <Button kind={'icon'} size={'xs'} onClick={handleEdit}>\n                  <Icon icon={'edit'} size={'xs'} stroke={'white'} />\n                </Button>\n              </Tooltip>\n              <Tooltip text={'Отметить роль'} self>\n                <Checkbox />\n              </Tooltip>\n            </Actions>\n          )}\n        </Header>\n\n        <Name tag={'h4'} onClick={() => setQuery(role.id, 'role', onLink)}>\n          {getLabelRole(role.name)}\n        </Name>\n      </Column>\n\n      <Divider clear />\n\n      {role && role.permissions.length > 0 ? (\n        <Permissions>\n          {permissions.map((permission) => (\n            <Chip key={permission} color={'ghost'} appearance={'outlined'}>\n              {getLabelPermission(permission)}\n            </Chip>\n          ))}\n          {residue > 0 && (\n            <Chip color={'ghost'} appearance={'outlined'}>\n              +{residue}\n            </Chip>\n          )}\n        </Permissions>\n      ) : (\n        <Alert>Привелегии отсутствует</Alert>\n      )}\n    </Wrap>\n  )\n}\n\nCard.defaultProps = {\n  appearance: 'default',\n  limitPermissions: 5\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}