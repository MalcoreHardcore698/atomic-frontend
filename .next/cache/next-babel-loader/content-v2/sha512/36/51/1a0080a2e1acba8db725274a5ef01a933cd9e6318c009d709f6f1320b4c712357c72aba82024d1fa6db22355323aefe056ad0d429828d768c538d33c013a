{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Column from '../../atomic-ui/components/Column';\nimport Row from '../../atomic-ui/components/Row';\nimport Switch from '../../atomic-ui/components/Switch';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Transition from '../../atomic-ui/components/Transition';\nimport DatePicker from '../../atomic-ui/components/DatePicker';\nimport { useSearch } from '../../hooks/useSearch';\nimport AsyncSelect from '../AsyncSelect';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FilterBar__Wrap\",\n  componentId: \"sc-1lvfs1u-0\"\n})([\"width:100%;&.fade-enter{opacity:0;}&.fade-enter-active{opacity:1;transition:opacity 100ms,blur 100ms;}&.fade-exit{opacity:1;}&.fade-exit-active{opacity:0;transition:opacity 100ms,blur 100ms;}\"]);\n_c = Wrap;\nexport const Form = styled.form.withConfig({\n  displayName: \"FilterBar__Form\",\n  componentId: \"sc-1lvfs1u-1\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:100%;\"]);\n_c2 = Form;\nexport const List = styled(Row).withConfig({\n  displayName: \"FilterBar__List\",\n  componentId: \"sc-1lvfs1u-2\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(256px,1fr));@media only screen and (max-width:480px){grid-gap:var(--default-gap);}\"]);\n_c3 = List;\nexport const parseToParams = params => Object.entries(params).filter(([_, value]) => value).reduce((acc, [key, value]) => ({ ...acc,\n  [key]: (value === null || value === void 0 ? void 0 : value.value) || value\n}), {});\nexport const Filter = ({\n  isOpen = true,\n  duration,\n  sort,\n  filter\n}) => {\n  _s();\n\n  const search = useSelector(state => state.root.search);\n  const {\n    control,\n    getValues\n  } = useForm();\n  const [onSearch] = useSearch();\n  const decorate = useCallback(callback => value => {\n    if (callback) callback(value);\n    onSearch(search, parseToParams(getValues()));\n  }, [search, getValues, onSearch]);\n  const filters = useMemo(() => (filter || []).map(item => {\n    switch (item.type) {\n      case 'DATEPICKER':\n        return /*#__PURE__*/React.createElement(Controller, {\n          key: item.name,\n          control: control,\n          name: item.name,\n          defaultValue: getValues(item.name) || null,\n          render: ({\n            value,\n            onChange\n          }) => /*#__PURE__*/React.createElement(DatePicker, {\n            defaultValue: value,\n            placeholder: item.label,\n            onChange: decorate(onChange),\n            withNavigate: true\n          })\n        });\n\n      case 'SELECT':\n        return /*#__PURE__*/React.createElement(Controller, {\n          key: item.name,\n          control: control,\n          name: item.name,\n          defaultValue: getValues(item.name) || null,\n          render: ({\n            value,\n            onChange\n          }) => /*#__PURE__*/React.createElement(AsyncSelect, {\n            defaultValue: value,\n            query: item.query,\n            type: item.queryType,\n            placeholder: item.label,\n            variables: item.variables,\n            selectValueField: item.selectValueField,\n            selectLabelField: item.selectLabelField,\n            selectRestrictions: item.selectRestrictions,\n            selectLabelDecorator: item.selectLabelDecorator,\n            onChange: decorate(onChange)\n          })\n        });\n\n      default:\n        return null;\n    }\n  }), [control, filter, decorate, getValues]);\n  const options = useMemo(() => sort || [], [sort]);\n  return /*#__PURE__*/React.createElement(Transition, {\n    in: isOpen,\n    animation: 'fade',\n    timeout: duration\n  }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), filters && filters.length > 0 && /*#__PURE__*/React.createElement(List, null, filters.map(filter => filter)), options && options.length > 0 && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Controller, {\n    name: 'sort',\n    control: control,\n    defaultValue: getValues('sort') || options[0] || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Switch, {\n      defaultValue: value,\n      onChange: decorate(onChange),\n      options: options,\n      stretch: true\n    })\n  })), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }))));\n};\n\n_s(Filter, \"efUeSaRJ2YV9vmh9b2778BvgH+E=\", false, function () {\n  return [useSelector, useForm, useSearch];\n});\n\n_c4 = Filter;\nFilter.defaultProps = {\n  duration: 150\n};\nexport default Filter;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"Filter\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/components/FilterBar/index.js"],"names":["React","useCallback","useMemo","Controller","useForm","useSelector","styled","Column","Row","Switch","Divider","Transition","DatePicker","useSearch","AsyncSelect","Wrap","Form","form","List","parseToParams","params","Object","entries","filter","_","value","reduce","acc","key","Filter","isOpen","duration","sort","search","state","root","control","getValues","onSearch","decorate","callback","filters","map","item","type","name","onChange","label","query","queryType","variables","selectValueField","selectLabelField","selectRestrictions","selectLabelDecorator","options","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Row from '../../atomic-ui/components/Row'\nimport Switch from '../../atomic-ui/components/Switch'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Transition from '../../atomic-ui/components/Transition'\nimport DatePicker from '../../atomic-ui/components/DatePicker'\nimport { useSearch } from '../../hooks/useSearch'\n\nimport AsyncSelect from '../AsyncSelect'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 100%;\n`\n\nexport const List = styled(Row)`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n\n  @media only screen and (max-width: 480px) {\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const parseToParams = (params) => (\n Object.entries(params)\n  .filter(([_, value]) => value)\n  .reduce(\n    (acc, [key, value]) => ({\n     ...acc, [key]: value?.value || value\n    }),\n    {}\n  )\n)\n\nexport const Filter = ({ isOpen = true, duration, sort, filter }) => {\n  const search = useSelector((state) => state.root.search)\n  const { control, getValues } = useForm()\n  const [onSearch] = useSearch()\n\n  const decorate = useCallback(\n   (callback) =>\n      (value) => {\n        if (callback) callback(value)\n        onSearch(search, parseToParams(getValues()))\n      },\n    [search, getValues, onSearch]\n  )\n\n  const filters = useMemo(() => (filter || []).map((item) => {\n    switch (item.type) {\n      case 'DATEPICKER':\n        return (\n          <Controller\n            key={item.name}\n            control={control}\n            name={item.name}\n            defaultValue={getValues(item.name) || null}\n            render={({ value, onChange }) => (\n              <DatePicker\n                defaultValue={value}\n                placeholder={item.label}\n                onChange={decorate(onChange)}\n                withNavigate\n              />\n            )}\n          />\n        )\n      case 'SELECT':\n        return (\n          <Controller\n            key={item.name}\n            control={control}\n            name={item.name}\n            defaultValue={getValues(item.name) || null}\n            render={({ value, onChange }) => (\n              <AsyncSelect\n               defaultValue={value}\n               query={item.query}\n               type={item.queryType}\n               placeholder={item.label}\n               variables={item.variables}\n               selectValueField={item.selectValueField}\n               selectLabelField={item.selectLabelField}\n               selectRestrictions={item.selectRestrictions}\n               selectLabelDecorator={item.selectLabelDecorator}\n               onChange={decorate(onChange)}\n              />\n            )}\n          />\n        )\n      default:\n        return null\n    }\n  }), [control, filter, decorate, getValues])\n\n  const options = useMemo(() => sort || [], [sort])\n\n  return (\n    <Transition in={isOpen} animation={'fade'} timeout={duration}>\n      <Wrap>\n        <Form>\n          <Divider clear />\n          {filters && filters.length > 0 && <List>{filters.map((filter) => filter)}</List>}\n          {options && options.length > 0 && (\n            <Row>\n              <Controller\n               name={'sort'}\n               control={control}\n               defaultValue={getValues('sort') || options[0] || null}\n               render={({ value, onChange }) => (\n                <Switch\n                  defaultValue={value}\n                  onChange={decorate(onChange)}\n                  options={options}\n                  stretch\n                />\n               )}\n              />\n            </Row>\n          )}\n          <Divider clear />\n        </Form>\n      </Wrap>\n    </Transition>\n  )\n}\n\nFilter.defaultProps = {\n  duration: 150\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}