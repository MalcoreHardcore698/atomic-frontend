{"ast":null,"code":"import React from 'react';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider } from 'react-redux';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport NextNprogress from 'nextjs-progressbar';\nimport { motion } from 'framer-motion';\nimport '../atomic-ui/theme/default.css';\nimport theme from '../atomic-ui/theme';\nimport { useApollo, initializeApollo } from '../apollo';\nimport { useStore, initializeStore } from '../store';\nimport '../assets/styles/styles.css';\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const client = useApollo(pageProps.initialApolloState);\n  const store = useStore(pageProps.initialReduxState);\n  const router = useRouter();\n  return <Provider store={store}>\n      <ApolloProvider client={client}>\n        <Head>\n          <meta charSet={'utf-8'} />\n          <meta name={'viewport'} content={'minimum-scale=1, initial-scale=1, width=device-width'} />\n          <meta name={'theme-color'} content={'#000000'} />\n          <meta name={'description'} content={'Атомик – портал для формирования новой сферы образования'} />\n          <title>Атомик</title>\n        </Head>\n\n        <ThemeProvider theme={theme}>\n          <motion.div key={router.route} initial={'pageInitial'} animate={'pageAnimate'} variants={{\n          pageInitial: {\n            opacity: 0\n          },\n          pageAnimate: {\n            opacity: 1\n          }\n        }}>\n            <Component {...pageProps} />\n          </motion.div>\n\n          <NextNprogress color={'var(--default-color-accent)'} startPosition={0.3} stopDelayMs={200} height={3} />\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>;\n};\n\nexport const getServerSideProps = async () => {\n  const store = initializeStore();\n  const client = initializeApollo();\n  return {\n    props: {\n      initialReduxState: store.getState(),\n      initialApolloState: client.cache.extract()\n    },\n    revalidate: 1\n  };\n};\nexport default App;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/_app.js"],"names":["React","Head","useRouter","ThemeProvider","Provider","ApolloProvider","NextNprogress","motion","theme","useApollo","initializeApollo","useStore","initializeStore","App","Component","pageProps","client","initialApolloState","store","initialReduxState","router","route","pageInitial","opacity","pageAnimate","getServerSideProps","props","getState","cache","extract","revalidate"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAO,gCAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,WAA5C;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,UAA1C;AACA,OAAO,6BAAP;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACxC,QAAMC,MAAM,GAAGP,SAAS,CAACM,SAAS,CAACE,kBAAX,CAAxB;AACA,QAAMC,KAAK,GAAGP,QAAQ,CAACI,SAAS,CAACI,iBAAX,CAAtB;AACA,QAAMC,MAAM,GAAGlB,SAAS,EAAxB;AAEA,SACE,CAAC,QAAD,CAAU,MAAM,CAACgB,KAAD,CAAhB;AACJ,MAAM,CAAC,cAAD,CAAgB,OAAO,CAACF,MAAD,CAAvB;AACN,QAAQ,CAAC,IAAD;AACR,UAAU,CAAC,IAAD,CAAM,QAAQ,CAAC,OAAD,CAAd;AACV,UAAU,CAAC,IAAD,CACE,KAAK,CAAC,UAAD,CADP,CAEE,QAAQ,CAAC,sDAAD,CAFV;AAIV,UAAU,CAAC,IAAD,CAAM,KAAK,CAAC,aAAD,CAAX,CAA2B,QAAQ,CAAC,SAAD,CAAnC;AACV,UAAU,CAAC,IAAD,CACE,KAAK,CAAC,aAAD,CADP,CAEE,QAAQ,CAAC,0DAAD,CAFV;AAIV,UAAU,CAAC,KAAD,CAAO,MAAM,EAAE,KAAF;AACvB,QAAQ,EAAE,IAAF;AACR;AACA,QAAQ,CAAC,aAAD,CAAe,MAAM,CAACR,KAAD,CAArB;AACR,UAAU,CAAC,OAAO,GAAR,CACE,IAAI,CAACY,MAAM,CAACC,KAAR,CADN,CAEE,QAAQ,CAAC,aAAD,CAFV,CAGE,QAAQ,CAAC,aAAD,CAHV,CAIE,SAAS,CAAC;AACRC,UAAAA,WAAW,EAAE;AACXC,YAAAA,OAAO,EAAE;AADE,WADL;AAIRC,UAAAA,WAAW,EAAE;AACXD,YAAAA,OAAO,EAAE;AADE;AAJL,SAAD,CAJX;AAYV,YAAY,CAAC,SAAD,CAAW,IAAIR,SAAJ,CAAX;AACZ,UAAU,EAAE,OAAO,GAAT;AACV;AACA,UAAU,CAAC,aAAD,CACE,MAAM,CAAC,6BAAD,CADR,CAEE,cAAc,CAAC,GAAD,CAFhB,CAGE,YAAY,CAAC,GAAD,CAHd,CAIE,OAAO,CAAC,CAAD,CAJT;AAMV,QAAQ,EAAE,aAAF;AACR,MAAM,EAAE,cAAF;AACN,IAAI,EAAE,QAAF,CAzCF;AA2CD,CAhDD;;AAkDA,OAAO,MAAMU,kBAAkB,GAAG,YAAY;AAC5C,QAAMP,KAAK,GAAGN,eAAe,EAA7B;AACA,QAAMI,MAAM,GAAGN,gBAAgB,EAA/B;AAEA,SAAO;AACLgB,IAAAA,KAAK,EAAE;AACLP,MAAAA,iBAAiB,EAAED,KAAK,CAACS,QAAN,EADd;AAELV,MAAAA,kBAAkB,EAAED,MAAM,CAACY,KAAP,CAAaC,OAAb;AAFf,KADF;AAKLC,IAAAA,UAAU,EAAE;AALP,GAAP;AAOD,CAXM;AAaP,eAAejB,GAAf","sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\nimport { ThemeProvider } from 'styled-components'\nimport { Provider } from 'react-redux'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport NextNprogress from 'nextjs-progressbar'\nimport { motion } from 'framer-motion'\n\nimport '../atomic-ui/theme/default.css'\nimport theme from '../atomic-ui/theme'\n\nimport { useApollo, initializeApollo } from '../apollo'\nimport { useStore, initializeStore } from '../store'\nimport '../assets/styles/styles.css'\n\nconst App = ({ Component, pageProps }) => {\n  const client = useApollo(pageProps.initialApolloState)\n  const store = useStore(pageProps.initialReduxState)\n  const router = useRouter()\n\n  return (\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <Head>\n          <meta charSet={'utf-8'} />\n          <meta\n            name={'viewport'}\n            content={'minimum-scale=1, initial-scale=1, width=device-width'}\n          />\n          <meta name={'theme-color'} content={'#000000'} />\n          <meta\n            name={'description'}\n            content={'Атомик – портал для формирования новой сферы образования'}\n          />\n          <title>Атомик</title>\n        </Head>\n\n        <ThemeProvider theme={theme}>\n          <motion.div\n            key={router.route}\n            initial={'pageInitial'}\n            animate={'pageAnimate'}\n            variants={{\n              pageInitial: {\n                opacity: 0\n              },\n              pageAnimate: {\n                opacity: 1\n              }\n            }}>\n            <Component {...pageProps} />\n          </motion.div>\n\n          <NextNprogress\n            color={'var(--default-color-accent)'}\n            startPosition={0.3}\n            stopDelayMs={200}\n            height={3}\n          />\n        </ThemeProvider>\n      </ApolloProvider>\n    </Provider>\n  )\n}\n\nexport const getServerSideProps = async () => {\n  const store = initializeStore()\n  const client = initializeApollo()\n\n  return {\n    props: {\n      initialReduxState: store.getState(),\n      initialApolloState: client.cache.extract()\n    },\n    revalidate: 1\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}