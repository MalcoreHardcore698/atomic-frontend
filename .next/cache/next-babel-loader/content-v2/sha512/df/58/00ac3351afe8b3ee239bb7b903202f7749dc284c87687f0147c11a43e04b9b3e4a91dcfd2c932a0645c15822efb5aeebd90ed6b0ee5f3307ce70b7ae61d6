{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Button from '../../atomic-ui/components/Button';\nimport Tabs, { Tab } from '../../atomic-ui/components/Tabs';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Input from '../../atomic-ui/components/Input';\nimport Form from '../Form';\nimport Select from '../../atomic-ui/components/Select';\nconst logotypeSize = {\n  width: 128,\n  height: 30\n};\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n};\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:320px;height:128px;min-height:128px;\"]);\nexport const Background = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Background\",\n  componentId: \"sc-13smq0j-1\"\n})([\"width:100%;height:100%;max-width:\", \"px;max-height:\", \"px;\"], backgroundSize.width, backgroundSize.height);\nexport const Settings = ({\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => {\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading,\n    getValues\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, null, /*#__PURE__*/React.createElement(Tab, {\n    label: 'Основное'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'title',\n    ref: register(),\n    defaultValue: getValues('title') || '/',\n    placeholder: 'Домашняя страница',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"), /*#__PURE__*/React.createElement(Logotype, {\n    name: 'logotype',\n    accept: 'image/*',\n    defaultValue: getValues('preview') || null,\n    placeholder: `Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`,\n    tooltip: `Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`\n  }))), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Scaffold'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'scaffold-title',\n    ref: register(),\n    defaultValue: getValues('title') || 'Создавай школу будущего с нами',\n    placeholder: 'Заголовок',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-primary-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите первый проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-residue-first-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите второй проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-residue-second-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите третий проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Background, {\n    name: 'background',\n    accept: 'image/*',\n    defaultValue: getValues('preview') || null,\n    placeholder: `Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`,\n    tooltip: `Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`\n  }))), /*#__PURE__*/React.createElement(Tab, {\n    label: 'Мета'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-title',\n    ref: register(),\n    defaultValue: getValues('title') || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-description',\n    ref: register(),\n    defaultValue: getValues('title'),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n};\nexport default Settings;","map":null,"metadata":{},"sourceType":"module"}