{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { InputLabel } from '../CharacteristicEditor';\nexport const InputContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  border: none;\n  background: none;\n  max-width: 100%;\n  flex-grow: 1;\n  grid-gap: 5px;\n`;\nexport const Wrap = styled.input`\n  font-family: var(--default-font-family);\n  font-size: 0.875rem;\n  color: black;\n\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  background: var(--surface-background);\n\n  margin: 0;\n  padding: 10px;\n\n  width: 100%;\n  height: var(--input-height-m);\n  max-width: 100%;\n\n  &::placeholder {\n    font-family: var(--default-font-family);\n    color: var(--input-placeholder-color);\n\n    ${({\n  horizontalAlignment\n}) => horizontalAlignment === 'center' && css`\n        text-align: center;\n      `}\n  }\n\n  ${({\n  horizontalAlignment\n}) => horizontalAlignment === 'center' && css`\n      text-align: center;\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      color: var(--surface-color);\n      background: var(--surface-background);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'ghost' && css`\n      color: var(--input-color);\n      background: var(--input-background);\n    `}\n\n  ${({\n  hidden\n}) => hidden && css`\n      position: absolute;\n      top: 0;\n      left: 0;\n\n      width: 100%;\n      height: 100%;\n\n      display: none;\n    `}\n`;\nexport const Input = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    label\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  return __jsx(InputContainer, null, label && __jsx(InputLabel, null, label), __jsx(Wrap, _extends({}, props, {\n    ref: ref\n  })));\n});\nInput.defaultProps = {\n  appearance: 'default'\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}