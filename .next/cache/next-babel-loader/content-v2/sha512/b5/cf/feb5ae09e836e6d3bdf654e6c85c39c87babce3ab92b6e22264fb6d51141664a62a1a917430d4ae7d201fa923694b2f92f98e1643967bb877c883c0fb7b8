{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Button from '../../atomic-ui/components/Button';\nimport Table, { Wrap as WrapTable } from '../../atomic-ui/components/Table';\nimport { CentralAlert, LowerLoader } from '../Styled';\nimport LazyLoad from '../LazyLoad';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"List__Wrap\",\n  componentId: \"sc-1jo6mxw-0\"\n})([\"\", \"{width:calc(100vw - 280px);}\"], WrapTable);\n_c = Wrap;\nexport const CenterAlert = styled(Alert).withConfig({\n  displayName: \"List__CenterAlert\",\n  componentId: \"sc-1jo6mxw-1\"\n})([\"width:100%;text-align:center;\"]);\nexport const Loader = () => /*#__PURE__*/React.createElement(LowerLoader, {\n  key: 'loader'\n}, /*#__PURE__*/React.createElement(Spinner, null));\n_c2 = Loader;\nexport const Content = ({\n  type,\n  search,\n  refetch,\n  loading,\n  template,\n  component,\n  variables,\n  limit = 6,\n  initialList,\n  initialDisplayMethod,\n  setCheckedList,\n  gridOptions,\n  withoutMore,\n  onChecked,\n  onClick,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n\n  var _router$query;\n\n  const router = useRouter();\n  const displayMethod = useSelector(state => state.root.displayMethod);\n  const [items, setItems] = useState(initialList || []);\n  const [page, setPage] = useState(Number((_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.page) || 1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isEnd, setIsEnd] = useState(false);\n\n  const loadMore = async () => {\n    if (!isEnd && !loading && refetch) {\n      setIsLoading(true);\n      const response = await refetch({ ...variables,\n        offset: limit * page,\n        search,\n        limit\n      });\n\n      if (response !== null && response !== void 0 && response.data) {\n        const list = response.data[type];\n        if (list.length === 0) setIsEnd(true);\n        if (list.length > 0) setItems(prev => [...prev, ...list]);\n        setPage(prev => prev + 1);\n      }\n\n      setIsLoading(false);\n    }\n  }; // Necessary for determination checkList outside [content]\n\n\n  useEffect(() => {\n    if ((items === null || items === void 0 ? void 0 : items.length) > 0 && setCheckedList) setCheckedList(items);\n  }, [items, setCheckedList]);\n  return /*#__PURE__*/React.createElement(Wrap, null, (initialDisplayMethod || displayMethod) === 'grid' && /*#__PURE__*/React.createElement(Grid, gridOptions, items.map(item => /*#__PURE__*/React.createElement(LazyLoad, {\n    key: item.id || item.email\n  }, component(item)))), (initialDisplayMethod || displayMethod) === 'list' && /*#__PURE__*/React.createElement(Table, {\n    data: items,\n    template: template,\n    onChecked: onChecked,\n    onClick: onClick,\n    onEdit: onEdit,\n    onDelete: onDelete\n  }), (loading || isLoading) && !withoutMore && /*#__PURE__*/React.createElement(Loader, null), !loading && !isLoading && items.length === 0 && /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"), items.length > 0 && !isEnd && !loading && !withoutMore && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    disabled: isLoading,\n    style: {\n      width: 245\n    },\n    onClick: loadMore\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0435\\u0449\\u0435\"))));\n};\n\n_s(Content, \"T9MBfifQ6F4hkWhB2SKZ4Tb3kaQ=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c3 = Content;\nexport const List = ({\n  type,\n  query,\n  limit,\n  template,\n  component,\n  variables,\n  startOffset,\n  initialDisplayMethod,\n  setCheckedList,\n  withoutSearch,\n  withoutMore,\n  gridOptions,\n  onChecked,\n  onDelete,\n  onClick,\n  onEdit\n}) => {\n  _s2();\n\n  const search = useSelector(state => withoutSearch ? '' : state.root.search);\n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(query, {\n    variables: { ...variables,\n      offset: startOffset,\n      search,\n      limit\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(Loader, null);\n  return /*#__PURE__*/React.createElement(Content, {\n    type: type,\n    limit: limit,\n    query: query,\n    search: search,\n    refetch: refetch,\n    template: template,\n    component: component,\n    initialList: type && data && data[type],\n    initialDisplayMethod: initialDisplayMethod,\n    setCheckedList: setCheckedList,\n    withoutMore: withoutMore,\n    gridOptions: gridOptions,\n    onChecked: onChecked,\n    onDelete: onDelete,\n    onClick: onClick,\n    onEdit: onEdit\n  });\n};\n\n_s2(List, \"IRvgsirdGKLGPjJMuZeiBnyhs5I=\", false, function () {\n  return [useSelector, useQuery];\n});\n\n_c4 = List;\nList.defaultProps = {\n  startOffset: 0\n};\nexport default List;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"List\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/List/index.js"],"names":["React","useState","useEffect","useQuery","useSelector","useRouter","styled","Row","Grid","Alert","Spinner","Divider","Button","Table","Wrap","WrapTable","CentralAlert","LowerLoader","LazyLoad","div","CenterAlert","Loader","Content","type","search","refetch","loading","template","component","variables","limit","initialList","initialDisplayMethod","setCheckedList","gridOptions","withoutMore","onChecked","onClick","onEdit","onDelete","router","displayMethod","state","root","items","setItems","page","setPage","Number","query","isLoading","setIsLoading","isEnd","setIsEnd","loadMore","response","offset","data","list","length","prev","map","item","id","email","justifyContent","width","List","startOffset","withoutSearch","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { useSelector } from 'react-redux'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Button from '../../atomic-ui/components/Button'\nimport Table, { Wrap as WrapTable } from '../../atomic-ui/components/Table'\n\nimport { CentralAlert, LowerLoader } from '../Styled'\nimport LazyLoad from '../LazyLoad'\n\nexport const Wrap = styled.div`\n  ${WrapTable} {\n    width: calc(100vw - 280px);\n  }\n`\n\nexport const CenterAlert = styled(Alert)`\n  width: 100%;\n  text-align: center;\n`\n\nexport const Loader = () => (\n  <LowerLoader key={'loader'}>\n    <Spinner />\n  </LowerLoader>\n)\n\nexport const Content = ({\n  type,\n  search,\n  refetch,\n  loading,\n  template,\n  component,\n  variables,\n  limit = 6,\n  initialList,\n  initialDisplayMethod,\n  setCheckedList,\n  gridOptions,\n  withoutMore,\n  onChecked,\n  onClick,\n  onEdit,\n  onDelete\n}) => {\n  const router = useRouter()\n  const displayMethod = useSelector((state) => state.root.displayMethod)\n\n  const [items, setItems] = useState(initialList || [])\n  const [page, setPage] = useState(Number(router.query?.page) || 1)\n  const [isLoading, setIsLoading] = useState(false)\n  const [isEnd, setIsEnd] = useState(false)\n\n  const loadMore = async () => {\n    if (!isEnd && !loading && refetch) {\n      setIsLoading(true)\n\n      const response = await refetch({\n        ...variables,\n        offset: limit * page,\n        search,\n        limit\n      })\n\n      if (response?.data) {\n        const list = response.data[type]\n        if (list.length === 0) setIsEnd(true)\n        if (list.length > 0) setItems((prev) => [...prev, ...list])\n        setPage((prev) => prev + 1)\n      }\n\n      setIsLoading(false)\n    }\n  }\n\n  // Necessary for determination checkList outside [content]\n  useEffect(() => {\n    if (items?.length > 0 && setCheckedList) setCheckedList(items)\n  }, [items, setCheckedList])\n\n  return (\n    <Wrap>\n      {(initialDisplayMethod || displayMethod) === 'grid' && (\n        <Grid {...gridOptions}>\n          {items.map((item) => (\n            <LazyLoad key={item.id || item.email}>{component(item)}</LazyLoad>\n          ))}\n        </Grid>\n      )}\n\n      {(initialDisplayMethod || displayMethod) === 'list' && (\n        <Table\n          data={items}\n          template={template}\n          onChecked={onChecked}\n          onClick={onClick}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      )}\n\n      {(loading || isLoading) && !withoutMore && <Loader />}\n\n      {!loading && !isLoading && items.length === 0 && <CentralAlert>Проектов нет</CentralAlert>}\n\n      {items.length > 0 && !isEnd && !loading && !withoutMore && (\n        <React.Fragment>\n          <Divider />\n          <Row style={{ justifyContent: 'center' }}>\n            <Button type={'button'} disabled={isLoading} style={{ width: 245 }} onClick={loadMore}>\n              Загрузить еще\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Wrap>\n  )\n}\n\nexport const List = ({\n  type,\n  query,\n  limit,\n  template,\n  component,\n  variables,\n  startOffset,\n  initialDisplayMethod,\n  setCheckedList,\n  withoutSearch,\n  withoutMore,\n  gridOptions,\n  onChecked,\n  onDelete,\n  onClick,\n  onEdit\n}) => {\n  const search = useSelector((state) => (withoutSearch ? '' : state.root.search))\n\n  const { data, loading, refetch } = useQuery(query, {\n    variables: {\n      ...variables,\n      offset: startOffset,\n      search,\n      limit\n    }\n  })\n\n  if (loading) return <Loader />\n\n  return (\n    <Content\n      type={type}\n      limit={limit}\n      query={query}\n      search={search}\n      refetch={refetch}\n      template={template}\n      component={component}\n      initialList={type && data && data[type]}\n      initialDisplayMethod={initialDisplayMethod}\n      setCheckedList={setCheckedList}\n      withoutMore={withoutMore}\n      gridOptions={gridOptions}\n      onChecked={onChecked}\n      onDelete={onDelete}\n      onClick={onClick}\n      onEdit={onEdit}\n    />\n  )\n}\n\nList.defaultProps = {\n  startOffset: 0\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}