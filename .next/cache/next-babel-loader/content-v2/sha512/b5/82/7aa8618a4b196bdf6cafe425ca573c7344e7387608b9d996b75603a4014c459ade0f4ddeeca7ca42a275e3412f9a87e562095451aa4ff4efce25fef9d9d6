{"ast":null,"code":"var _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport gql from 'graphql-tag';\nimport { ChatFields, MessageFields } from '../../fragments';\nexport var GET_CHAT = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query getChat($id: ID!) {\\n    getChat(id: $id) {\\n      ...ChatFields\\n      messages {\\n        ...MessageFields\\n      }\\n    }\\n  }\\n  \", \"\\n  \", \"\\n\"])), ChatFields, MessageFields);","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/Chat/index.js"],"names":["gql","ChatFields","MessageFields","GET_CHAT"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,iBAA1C;AAEA,OAAO,IAAMC,QAAQ,GAAGH,GAAH,mOASjBC,UATiB,EAUjBC,aAViB,CAAd","sourcesContent":["import gql from 'graphql-tag'\nimport { ChatFields, MessageFields } from '../../fragments'\n\nexport const GET_CHAT = gql`\n  query getChat($id: ID!) {\n    getChat(id: $id) {\n      ...ChatFields\n      messages {\n        ...MessageFields\n      }\n    }\n  }\n  ${ChatFields}\n  ${MessageFields}\n`\n"]},"metadata":{},"sourceType":"module"}