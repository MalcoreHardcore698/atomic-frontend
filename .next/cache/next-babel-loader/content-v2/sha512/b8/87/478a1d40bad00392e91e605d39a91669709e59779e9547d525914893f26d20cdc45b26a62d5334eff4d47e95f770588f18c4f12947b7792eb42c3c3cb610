{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport YouTube from 'react-youtube';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport HTMLView from '../HTMLView';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"ProjectView__Wrap\",\n  componentId: \"sc-1fg5jgh-0\"\n})([\"flex-grow:1;\", \" \", \" \", \"\"], function (_ref) {\n  var appearance = _ref.appearance;\n  return appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]);\n}, function (_ref2) {\n  var appearance = _ref2.appearance;\n  return appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n}, function (_ref3) {\n  var appearance = _ref3.appearance;\n  return appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n});\nexport var Container = styled(Row).withConfig({\n  displayName: \"ProjectView__Container\",\n  componentId: \"sc-1fg5jgh-1\"\n})([\"@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\nexport var Media = styled(Column).withConfig({\n  displayName: \"ProjectView__Media\",\n  componentId: \"sc-1fg5jgh-2\"\n})([\"grid-gap:5px;flex-basis:35%;& > span{display:flex;flex-grow:1;}@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport var Content = styled(Column).withConfig({\n  displayName: \"ProjectView__Content\",\n  componentId: \"sc-1fg5jgh-3\"\n})([\"justify-content:space-between;flex-basis:65%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport var Screenshots = styled(Row).withConfig({\n  displayName: \"ProjectView__Screenshots\",\n  componentId: \"sc-1fg5jgh-4\"\n})([\"justify-content:space-between;grid-gap:5px;\"]);\nexport var Screenshot = styled.div.withConfig({\n  displayName: \"ProjectView__Screenshot\",\n  componentId: \"sc-1fg5jgh-5\"\n})([\"position:relative;z-index:var(--z-12);width:auto;height:var(--input-height-s);min-width:var(--input-height-s);min-height:var(--input-height-s);border-radius:var(--surface-border-radius);overflow:hidden;transition:opacity 150ms ease;span,span > img{display:flex;justify-content:center;align-items:center;flex-grow:1;width:100%;height:100%;}img{width:100%;height:100%;object-fit:cover;}\", \"\"], function (_ref4) {\n  var onClick = _ref4.onClick;\n  return onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]);\n});\nexport var ScreenshotsCounter = styled(Text).withConfig({\n  displayName: \"ProjectView__ScreenshotsCounter\",\n  componentId: \"sc-1fg5jgh-6\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;span{position:relative;z-index:var(--z-12);color:white;}&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;background:var(--default-color-accent);border-radius:var(--surface-border-radius);opacity:0.65;}\"]);\nexport var CentralAlert = styled(Alert).withConfig({\n  displayName: \"ProjectView__CentralAlert\",\n  componentId: \"sc-1fg5jgh-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;text-align:center;\"]);\nexport var Poster = styled(Image).withConfig({\n  displayName: \"ProjectView__Poster\",\n  componentId: \"sc-1fg5jgh-8\"\n})([\"width:100%;height:100%;object-fit:cover;border-radius:var(--surface-border-radius);flex-grow:1;transition:opacity 150ms ease;\", \"\"], function (_ref5) {\n  var onClick = _ref5.onClick;\n  return onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]);\n});\nexport var Difinitions = styled(Row).withConfig({\n  displayName: \"ProjectView__Difinitions\",\n  componentId: \"sc-1fg5jgh-9\"\n})([\"flex-grow:100;justify-content:space-between;grid-gap:var(--default-gap);@media only screen and (max-width:480px){flex-direction:column;}\"]);\nexport var Presentation = styled(YouTube).withConfig({\n  displayName: \"ProjectView__Presentation\",\n  componentId: \"sc-1fg5jgh-10\"\n})([\"display:flex;flex-grow:1;width:100%;border-radius:var(--surface-border-radius);overflow:hidden;iframe{width:100%;}\"]);\nexport var Actions = styled(Row).withConfig({\n  displayName: \"ProjectView__Actions\",\n  componentId: \"sc-1fg5jgh-11\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\nexport var Files = styled(Grid).withConfig({\n  displayName: \"ProjectView__Files\",\n  componentId: \"sc-1fg5jgh-12\"\n})([\"\"]);\nexport var Members = styled(Grid).withConfig({\n  displayName: \"ProjectView__Members\",\n  componentId: \"sc-1fg5jgh-13\"\n})([\"\"]);\nexport var View = function View(_ref6) {\n  var _data$getProject$scre, _data$getProject$cate, _data$getProject$comp, _data$getProject$comp2, _data$getProject$comp3, _data$getProject$memb, _data$getProject$memb2, _data$getProject$file;\n\n  var project = _ref6.project,\n      appearance = _ref6.appearance,\n      className = _ref6.className,\n      style = _ref6.style,\n      _ref6$slicedFactor = _ref6.slicedFactor,\n      slicedFactor = _ref6$slicedFactor === void 0 ? 6 : _ref6$slicedFactor,\n      owned = _ref6.owned,\n      liked = _ref6.liked,\n      onAdd = _ref6.onAdd,\n      onLike = _ref6.onLike,\n      onScreenshotClick = _ref6.onScreenshotClick,\n      onFileLink = _ref6.onFileLink,\n      onMemberLink = _ref6.onMemberLink,\n      onCompanyLink = _ref6.onCompanyLink;\n\n  var _useEntityQuery = useEntityQuery(),\n      setQuery = _useEntityQuery.setQuery;\n\n  var _useQuery = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(liked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLiked = _useState2[0],\n      setLike = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screenshots = _useState4[0],\n      setScreenshots = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      residue = _useState6[0],\n      setResidue = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      videoId = _useState8[0],\n      setVideoId = _useState8[1];\n\n  var onClickLike = function onClickLike() {\n    if (onLike) onLike();\n    setLike(!isLiked);\n  };\n\n  useEffect(function () {\n    if (!loading && data.getProject) {\n      var _url$searchParams;\n\n      var response = data.getProject;\n      var images = [response.preview].concat(_toConsumableArray(response.screenshots));\n      var slicedImages = images.slice(0, slicedFactor);\n      var url = response.presentation && new URL(response.presentation);\n      setResidue((images.length || slicedFactor) - slicedFactor);\n      setVideoId(url === null || url === void 0 ? void 0 : (_url$searchParams = url.searchParams) === null || _url$searchParams === void 0 ? void 0 : _url$searchParams.get('v'));\n      setScreenshots(slicedImages);\n    }\n  }, [loading, data, slicedFactor]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && data.getProject ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Media, null, data.getProject.preview ? /*#__PURE__*/React.createElement(Poster, {\n    src: data.getProject.preview.path,\n    onClick: function onClick() {\n      return onScreenshotClick && onScreenshotClick(data.getProject.preview, data.getProject.preview.id, [data.getProject.preview].concat(_toConsumableArray(data.getProject.screenshots)));\n    }\n  }) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041F\\u0440\\u0435\\u0432\\u044C\\u044E \\u043D\\u0435\\u0442\"), data.getProject.screenshots && ((_data$getProject$scre = data.getProject.screenshots) === null || _data$getProject$scre === void 0 ? void 0 : _data$getProject$scre.length) > 0 && /*#__PURE__*/React.createElement(Screenshots, null, screenshots.map(function (screenshot, index) {\n    return /*#__PURE__*/React.createElement(Screenshot, {\n      key: screenshot.id,\n      onClick: function onClick() {\n        return onScreenshotClick && onScreenshotClick(screenshot, screenshot.id, [data.getProject.preview].concat(_toConsumableArray(data.getProject.screenshots)));\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: screenshot.path,\n      alt: screenshot.name\n    }), index === (screenshots === null || screenshots === void 0 ? void 0 : screenshots.length) - 1 && residue > 0 && /*#__PURE__*/React.createElement(ScreenshotsCounter, null, /*#__PURE__*/React.createElement(\"span\", null, \"+\", residue)));\n  }))), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Meta, {\n    category: (_data$getProject$cate = data.getProject.category) === null || _data$getProject$cate === void 0 ? void 0 : _data$getProject$cate.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data.getProject.title), /*#__PURE__*/React.createElement(Text, null, data.getProject.description)), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Difinitions, null, /*#__PURE__*/React.createElement(Difinition, _extends({}, data.getProject.company ? {\n    img: (_data$getProject$comp = data.getProject.company) === null || _data$getProject$comp === void 0 ? void 0 : (_data$getProject$comp2 = _data$getProject$comp.avatar) === null || _data$getProject$comp2 === void 0 ? void 0 : _data$getProject$comp2.path\n  } : {\n    icon: 'work'\n  }, {\n    label: 'Компания',\n    text: ((_data$getProject$comp3 = data.getProject.company) === null || _data$getProject$comp3 === void 0 ? void 0 : _data$getProject$comp3.name) || '-',\n    onLink: function onLink() {\n      var _data$getProject$comp4;\n\n      return setQuery((_data$getProject$comp4 = data.getProject.company) === null || _data$getProject$comp4 === void 0 ? void 0 : _data$getProject$comp4.email, 'user', onCompanyLink);\n    }\n  })), !owned && (onLike || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onLike && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Мне нравится'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickLike,\n    revert: !isLiked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'heart',\n    stroke: isLiked ? 'white' : 'var(--default-color-accent)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Добавить проект к себе'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onAdd,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'var(--default-color-accent)'\n  })))))))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.body && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data.getProject.body\n  }), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), data.getProject.presentation && videoId && /*#__PURE__*/React.createElement(Presentation, {\n    videoId: videoId\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), data.getProject.members && ((_data$getProject$memb = data.getProject.members) === null || _data$getProject$memb === void 0 ? void 0 : _data$getProject$memb.length) > 0 && /*#__PURE__*/React.createElement(Members, {\n    percentage: 'minmax(320px, 1fr)'\n  }, data.getProject.members.map(function (member) {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member.email,\n      img: ((_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: getLabelRole(member.account),\n      text: member.name,\n      onLink: onMemberLink && function () {\n        return setQuery(member.email, 'user', onMemberLink);\n      }\n    });\n  })), (!data.getProject.members || ((_data$getProject$memb2 = data.getProject.members) === null || _data$getProject$memb2 === void 0 ? void 0 : _data$getProject$memb2.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u044B\"), data.getProject.files && data.getProject.files.length > 0 && /*#__PURE__*/React.createElement(Files, {\n    percentage: 'minmax(256px, 1fr)'\n  }, data.getProject.files.map(function (file) {\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: file.id,\n      icon: 'paper',\n      label: file.filename,\n      text: getFileSize(file.size),\n      onLink: function onLink() {\n        return onFileLink && onFileLink(file);\n      }\n    });\n  })), (!data.getProject.files || ((_data$getProject$file = data.getProject.files) === null || _data$getProject$file === void 0 ? void 0 : _data$getProject$file.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u043E\\u0432 \\u043D\\u0435\\u0442\")) : error || !loading && !(data !== null && data !== void 0 && data.getProject) ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ProjectView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","YouTube","Row","Column","Grid","Title","Text","Image","Meta","Button","Icon","Alert","Divider","Spinner","Difinition","Tooltip","Wrap","WrapTooltip","getFileSize","getLabelRole","useEntityQuery","HTMLView","Loader","queries","appearance","Container","Media","Content","Screenshots","Screenshot","div","onClick","ScreenshotsCounter","CentralAlert","Poster","Difinitions","Presentation","Actions","Files","Members","View","project","className","style","slicedFactor","owned","liked","onAdd","onLike","onScreenshotClick","onFileLink","onMemberLink","onCompanyLink","setQuery","GET_PROJECT","variables","id","data","loading","error","isLiked","setLike","screenshots","setScreenshots","residue","setResidue","videoId","setVideoId","onClickLike","getProject","response","images","preview","slicedImages","slice","url","presentation","URL","length","searchParams","get","path","map","screenshot","index","name","category","marginTop","marginBottom","title","description","company","img","avatar","icon","email","body","members","member","account","width","textAlign","files","file","filename","size","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\nimport YouTube from 'react-youtube'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport HTMLView from '../HTMLView'\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Container = styled(Row)`\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Media = styled(Column)`\n  grid-gap: 5px;\n  flex-basis: 35%;\n\n  & > span {\n    display: flex;\n    flex-grow: 1;\n  }\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  flex-basis: 65%;\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Screenshots = styled(Row)`\n  justify-content: space-between;\n  grid-gap: 5px;\n`\n\nexport const Screenshot = styled.div`\n  position: relative;\n  z-index: var(--z-12);\n  width: auto;\n  height: var(--input-height-s);\n  min-width: var(--input-height-s);\n  min-height: var(--input-height-s);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n  transition: opacity 150ms ease;\n\n  span,\n  span > img {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n    height: 100%;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const ScreenshotsCounter = styled(Text)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: var(--z-10);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  span {\n    position: relative;\n    z-index: var(--z-12);\n    color: white;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: var(--z-10);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: var(--default-color-accent);\n    border-radius: var(--surface-border-radius);\n    opacity: 0.65;\n  }\n`\n\nexport const CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n`\n\nexport const Poster = styled(Image)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n  flex-grow: 1;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Difinitions = styled(Row)`\n  flex-grow: 100;\n  justify-content: space-between;\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`\n\nexport const Presentation = styled(YouTube)`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n  }\n`\n\nexport const Actions = styled(Row)`\n  @media only screen and (max-width: 480px) {\n    ${WrapTooltip} {\n      flex-grow: 1;\n\n      button {\n        flex-grow: 1;\n      }\n    }\n  }\n`\n\nexport const Files = styled(Grid)``\n\nexport const Members = styled(Grid)``\n\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  const { setQuery } = useEntityQuery()\n  const { data, loading, error } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  })\n\n  const [isLiked, setLike] = useState(liked)\n\n  const [screenshots, setScreenshots] = useState([])\n  const [residue, setResidue] = useState(0)\n  const [videoId, setVideoId] = useState(null)\n\n  const onClickLike = () => {\n    if (onLike) onLike()\n    setLike(!isLiked)\n  }\n\n  useEffect(() => {\n    if (!loading && data.getProject) {\n      const response = data.getProject\n      const images = [response.preview, ...response.screenshots]\n      const slicedImages = images.slice(0, slicedFactor)\n      const url = response.presentation && new URL(response.presentation)\n\n      setResidue((images.length || slicedFactor) - slicedFactor)\n      setVideoId(url?.searchParams?.get('v'))\n      setScreenshots(slicedImages)\n    }\n  }, [loading, data, slicedFactor])\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && data.getProject ? (\n        <React.Fragment>\n          <Container>\n            <Media>\n              {data.getProject.preview ? (\n                <Poster\n                  src={data.getProject.preview.path}\n                  onClick={() =>\n                    onScreenshotClick &&\n                    onScreenshotClick(data.getProject.preview, data.getProject.preview.id, [\n                      data.getProject.preview,\n                      ...data.getProject.screenshots\n                    ])\n                  }\n                />\n              ) : (\n                <CentralAlert>Превью нет</CentralAlert>\n              )}\n              {data.getProject.screenshots && data.getProject.screenshots?.length > 0 && (\n                <Screenshots>\n                  {screenshots.map((screenshot, index) => (\n                    <Screenshot\n                      key={screenshot.id}\n                      onClick={() =>\n                        onScreenshotClick &&\n                        onScreenshotClick(screenshot, screenshot.id, [\n                          data.getProject.preview,\n                          ...data.getProject.screenshots\n                        ])\n                      }>\n                      <Image src={screenshot.path} alt={screenshot.name} />\n                      {index === screenshots?.length - 1 && residue > 0 && (\n                        <ScreenshotsCounter>\n                          <span>+{residue}</span>\n                        </ScreenshotsCounter>\n                      )}\n                    </Screenshot>\n                  ))}\n                </Screenshots>\n              )}\n            </Media>\n\n            <Content>\n              <Column>\n                <Meta category={data.getProject.category?.name} />\n                <Title tag={'h3'} style={{ marginTop: -5, marginBottom: 5 }}>\n                  {data.getProject.title}\n                </Title>\n                <Text>{data.getProject.description}</Text>\n              </Column>\n\n              <Column>\n                <Divider clear />\n\n                <Difinitions>\n                  <Difinition\n                    {...(data.getProject.company\n                      ? {\n                          img: data.getProject.company?.avatar?.path\n                        }\n                      : {\n                          icon: 'work'\n                        })}\n                    label={'Компания'}\n                    text={data.getProject.company?.name || '-'}\n                    onLink={() => setQuery(data.getProject.company?.email, 'user', onCompanyLink)}\n                  />\n\n                  {!owned && (onLike || onAdd) && (\n                    <Actions>\n                      {onLike && (\n                        <Tooltip text={'Мне нравится'}>\n                          <Button\n                            type={'button'}\n                            kind={'icon'}\n                            onClick={onClickLike}\n                            revert={!isLiked}>\n                            <Icon\n                              icon={'heart'}\n                              stroke={isLiked ? 'white' : 'var(--default-color-accent)'}\n                            />\n                          </Button>\n                        </Tooltip>\n                      )}\n                      {onAdd && (\n                        <Tooltip text={'Добавить проект к себе'}>\n                          <Button type={'button'} kind={'icon'} onClick={onAdd} revert>\n                            <Icon icon={'add'} stroke={'var(--default-color-accent)'} />\n                          </Button>\n                        </Tooltip>\n                      )}\n                    </Actions>\n                  )}\n                </Difinitions>\n              </Column>\n            </Content>\n          </Container>\n\n          <Divider clear />\n\n          {data.getProject.body && <HTMLView content={data.getProject.body} />}\n\n          <Divider clear />\n\n          {data.getProject.presentation && videoId && <Presentation videoId={videoId} />}\n\n          <Title tag={'h4'}>Участники проекта</Title>\n          {data.getProject.members && data.getProject.members?.length > 0 && (\n            <Members percentage={'minmax(320px, 1fr)'}>\n              {data.getProject.members.map((member) => (\n                <Difinition\n                  key={member.email}\n                  img={member.avatar?.path || '/images/avatar-default.png'}\n                  label={getLabelRole(member.account)}\n                  text={member.name}\n                  onLink={onMemberLink && (() => setQuery(member.email, 'user', onMemberLink))}\n                />\n              ))}\n            </Members>\n          )}\n          {(!data.getProject.members || data.getProject.members?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Участников нет</Alert>\n          )}\n\n          <Divider clear />\n\n          <Title tag={'h4'}>Файлы</Title>\n          {data.getProject.files && data.getProject.files.length > 0 && (\n            <Files percentage={'minmax(256px, 1fr)'}>\n              {data.getProject.files.map((file) => (\n                <Difinition\n                  key={file.id}\n                  icon={'paper'}\n                  label={file.filename}\n                  text={getFileSize(file.size)}\n                  onLink={() => onFileLink && onFileLink(file)}\n                />\n              ))}\n            </Files>\n          )}\n          {(!data.getProject.files || data.getProject.files?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Файлов нет</Alert>\n          )}\n        </React.Fragment>\n      ) : error || (!loading && !data?.getProject) ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о проекте\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}