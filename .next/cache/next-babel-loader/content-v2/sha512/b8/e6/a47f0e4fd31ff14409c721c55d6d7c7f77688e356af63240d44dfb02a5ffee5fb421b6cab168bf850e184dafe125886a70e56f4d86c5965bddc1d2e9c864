{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport CountUp from 'react-countup';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"Indicator__Wrap\",\n  componentId: \"c9j021-0\"\n})([\"display:flex;flex-direction:column;grid-gap:5px;padding:var(--default-gap);flex-grow:1;\", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;padding:0;\"]));\nexport const Label = styled(Text).withConfig({\n  displayName: \"Indicator__Label\",\n  componentId: \"c9j021-1\"\n})([\"font-size:var(--font-size-s);font-weight:var(--font-weight-regular);color:var(--ghost-color-text);\"]);\nexport const Value = styled(Row).withConfig({\n  displayName: \"Indicator__Value\",\n  componentId: \"c9j021-2\"\n})([\"grid-gap:5px 10px;align-items:flex-end;p{font-size:36px;font-weight:var(--font-weight-bold);line-height:1;color:black;}\"]);\nexport const Movement = styled(Row).withConfig({\n  displayName: \"Indicator__Movement\",\n  componentId: \"c9j021-3\"\n})([\"grid-gap:0 8px;i{transform:scale(1.85);}span{font-size:inherit;font-weight:inherit;line-height:inherit;}p{display:flex;align-items:flex-end;font-size:var(--font-size-l);line-height:1.45;\", \"}\"], ({\n  positive\n}) => positive ? css([\"color:var(--default-color-green);\"]) : css([\"color:var(--default-color-red);\"]));\nexport const Indicator = ({\n  label,\n  value,\n  movement,\n  positive,\n  negative,\n  appearance,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n  appearance: appearance\n}), label && /*#__PURE__*/React.createElement(Label, null, label), (value || movement) && /*#__PURE__*/React.createElement(Value, null, value ? /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(CountUp, {\n  end: value,\n  duration: 2.75\n})) : null, movement ? /*#__PURE__*/React.createElement(Movement, {\n  positive: positive,\n  negative: negative\n}, positive && !negative && /*#__PURE__*/React.createElement(Icon, {\n  icon: 'arrowUpCarret',\n  fill: 'var(--default-color-green)'\n}), !positive && negative && /*#__PURE__*/React.createElement(Icon, {\n  icon: 'arrowDownCarret',\n  fill: 'var(--default-color-red)'\n}), /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(CountUp, {\n  end: movement,\n  duration: 3\n}))) : null));\nIndicator.defaultProps = {\n  appearance: 'default',\n  label: 'Пользователи',\n  value: 5621,\n  movement: 12\n};\nexport default Indicator;","map":null,"metadata":{},"sourceType":"module"}