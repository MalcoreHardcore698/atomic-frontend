{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Title from '../atomic-ui/components/Title';\nimport ProjectList from '../components/ProjectList';\nimport ArticleList from '../components/ArticleList';\nimport UserList from '../components/UserList';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport ContentLayout from '../layouts/content';\nimport { setUserFolder, updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;\", \" @media only screen and (max-width:1196px){grid-template-columns:1fr;}\"], ({\n  isSearch\n}) => isSearch && css([\"grid-template-columns:1fr;\"]));\n_c = Container;\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c2 = Aside;\n\nconst Home = ({\n  store\n}) => {\n  _s();\n\n  const router = useRouter();\n  const recall = useHelper();\n  const mutate = useMutate();\n  const {\n    user,\n    search\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search\n  }));\n  const dispatch = useDispatch();\n  const scaffold = useMemo(() => ({\n    title: store.scaffold.title,\n    background: store.scaffold.background.path,\n    primary: store.scaffold.primary,\n    residues: store.scaffold.residues,\n    onLink: (project, owned) => {\n      var _user$folders;\n\n      return recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item === project.id)))),\n        liked: !!(project.rating || []).find(item => item.email === user.email),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          },\n          callback: item => {\n            const result = { ...item,\n              projects: [...item.projects, project.id]\n            };\n            dispatch(setUserFolder(result));\n          }\n        }),\n        owned\n      })();\n    },\n    onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n      id: project.id\n    }, response => dispatch(updateUser(response.data.likeProject)))()),\n    onAdd: user.email && (project => recall(onProjectAdd, {\n      id: project.id,\n      folders: user === null || user === void 0 ? void 0 : user.folders,\n      mutations: {\n        addProject: queries.ADD_USER_PROJECT,\n        createFolder: queries.ADD_USER_FOLDER\n      },\n      callback: item => {\n        const result = { ...item,\n          projects: [...item.projects, project.id]\n        };\n        dispatch(setUserFolder(result));\n      }\n    })()),\n    onSearch: value => router.push({\n      pathname: router.pathname,\n      query: {\n        search: value\n      }\n    }, undefined, {\n      shallow: true\n    }),\n    onAboutMore: project => recall(onUserAboutMore, {\n      user: project\n    }),\n    onCompanyLink: project => {\n      var _project$company;\n\n      return recall(onUserLink, {\n        id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n        auth: user\n      })();\n    },\n    onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n      screenshots: [project.preview, ...project.screenshots],\n      key\n    })()\n  }), [user, store, recall, mutate, dispatch]);\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    limit: LIMIT,\n    scaffold: scaffold,\n    startOffset: START_OFFSET,\n    query: queries.GET_PROJECTS,\n    variables: {\n      status: 'PUBLISHED'\n    },\n    initialize: true\n  }, ({\n    documents\n  }) => /*#__PURE__*/React.createElement(Container, {\n    isSearch: search\n  }, /*#__PURE__*/React.createElement(ProjectList, {\n    initialList: documents,\n    layout: true\n  }), !search && /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), /*#__PURE__*/React.createElement(UserList, {\n    variables: {\n      offset: 0,\n      limit: 1\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), /*#__PURE__*/React.createElement(ArticleList, {\n    variables: {\n      offset: 0,\n      limit: 1\n    }\n  }))));\n};\n\n_s(Home, \"5z6SBJgQHwxVhz8JPNq76RQOOfI=\", false, function () {\n  return [useRouter, useHelper, useMutate, useSelector, useDispatch];\n});\n\n_c3 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Aside\");\n$RefreshReg$(_c3, \"Home\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useMemo","useRouter","styled","css","useSelector","useDispatch","Title","ProjectList","ArticleList","UserList","useHelper","useMutate","ContentLayout","setUserFolder","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserAboutMore","onUserLink","queries","TITLE","START_OFFSET","LIMIT","Container","div","isSearch","Aside","aside","Home","store","router","recall","mutate","user","search","state","root","dispatch","scaffold","title","background","path","primary","residues","onLink","project","owned","id","auth","email","added","folders","find","folder","projects","item","liked","rating","onLike","LIKE_PROJECT","response","data","likeProject","onAdd","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","callback","result","onSearch","value","push","pathname","query","undefined","shallow","onAboutMore","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","GET_PROJECTS","status","documents","offset","limit"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Title from '../atomic-ui/components/Title'\n\nimport ProjectList from '../components/ProjectList'\nimport ArticleList from '../components/ArticleList'\nimport UserList from '../components/UserList'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport ContentLayout from '../layouts/content'\nimport { setUserFolder, updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink } from '../store/helpers/user'\nimport queries from '../graphql/queries'\nimport { initializeApollo } from '../apollo'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  ${({ isSearch }) =>\n    isSearch &&\n    css`\n      grid-template-columns: 1fr;\n    `}\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Home = ({ store }) => {\n  const router = useRouter()\n  const recall = useHelper()\n  const mutate = useMutate()\n  const { user, search } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search\n  }))\n  const dispatch = useDispatch()\n\n  const scaffold = useMemo(\n    () => ({\n      title: store.scaffold.title,\n      background: store.scaffold.background.path,\n      primary: store.scaffold.primary,\n      residues: store.scaffold.residues,\n      onLink: (project, owned) =>\n        recall(onProjectLink, {\n          id: project.id,\n          auth: user?.email,\n          added: !!user?.folders?.find(\n            (folder) => !!folder?.projects.find((item) => item === project.id)\n          ),\n          liked: !!(project.rating || []).find((item) => item.email === user.email),\n          onLike:\n            user.email &&\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            ),\n          onAdd:\n            user.email &&\n            recall(onProjectAdd, {\n              id: project.id,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              },\n              callback: (item) => {\n                const result = { ...item, projects: [...item.projects, project.id] }\n                dispatch(setUserFolder(result))\n              }\n            }),\n          owned\n        })(),\n      onLike:\n        user.email &&\n        ((project) =>\n          mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n            dispatch(updateUser(response.data.likeProject))\n          )()),\n      onAdd:\n        user.email &&\n        ((project) =>\n          recall(onProjectAdd, {\n            id: project.id,\n            folders: user?.folders,\n            mutations: {\n              addProject: queries.ADD_USER_PROJECT,\n              createFolder: queries.ADD_USER_FOLDER\n            },\n            callback: (item) => {\n              const result = { ...item, projects: [...item.projects, project.id] }\n              dispatch(setUserFolder(result))\n            }\n          })()),\n      onSearch: (value) =>\n        router.push(\n          {\n            pathname: router.pathname,\n            query: {\n              search: value\n            }\n          },\n          undefined,\n          { shallow: true }\n        ),\n      onAboutMore: (project) => recall(onUserAboutMore, { user: project }),\n      onCompanyLink: (project) => recall(onUserLink, { id: project.company?.email, auth: user })(),\n      onScreenshotClick: (project, key) =>\n        recall(onProjectScreenshot, {\n          screenshots: [project.preview, ...project.screenshots],\n          key\n        })()\n    }),\n    [user, store, recall, mutate, dispatch]\n  )\n\n  return (\n    <ContentLayout\n      title={TITLE}\n      limit={LIMIT}\n      scaffold={scaffold}\n      startOffset={START_OFFSET}\n      query={queries.GET_PROJECTS}\n      variables={{ status: 'PUBLISHED' }}\n      initialize>\n      {({ documents }) => (\n        <Container isSearch={search}>\n          <ProjectList initialList={documents} layout />\n\n          {!search && (\n            <Aside>\n              <Title tag={'h4'}>Авторы</Title>\n              <UserList variables={{ offset: 0, limit: 1 }} />\n\n              <Title tag={'h4'}>Новости</Title>\n              <ArticleList variables={{ offset: 0, limit: 1 }} />\n            </Aside>\n          )}\n        </Container>\n      )}\n    </ContentLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let scaffold = null\n\n  try {\n    const response = await client.query({ query: queries.GET_META_SCAFFOLD })\n\n    if (response && response.data) {\n      scaffold = response.data.getDashboardSettings?.scaffold\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        scaffold\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}