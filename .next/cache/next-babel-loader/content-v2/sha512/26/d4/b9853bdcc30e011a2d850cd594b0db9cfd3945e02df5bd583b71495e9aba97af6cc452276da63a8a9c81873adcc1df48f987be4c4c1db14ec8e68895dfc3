{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useDispatch } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Search from '../SearchBar';\nimport TicketChat from '../TicketChat';\nimport { setDocuments } from '../../store/actions/documents';\nimport queries from '../../graphql/queries';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"TicketView__Wrap\",\n  componentId: \"sc-1wxiq0b-0\"\n})([\"height:100%;flex-grow:1;@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const Tickets = styled(Column).withConfig({\n  displayName: \"TicketView__Tickets\",\n  componentId: \"sc-1wxiq0b-1\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\n_c2 = Tickets;\nexport const Ticket = styled(Member).withConfig({\n  displayName: \"TicketView__Ticket\",\n  componentId: \"sc-1wxiq0b-2\"\n})([\"margin:10px 0 0 0;padding:10px;border-radius:var(--surface-border-radius);\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);\"]));\n_c3 = Ticket;\nexport const LIMIT_TICKETS = 36;\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  _s();\n\n  const [currentTicket, setCurrentTicket] = useState(null); // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n\n  const [offsetTickets, setOffsetTickets] = useState(0);\n  const [tickets, setTickets] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    data,\n    loading\n  } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy: 'no-cache'\n  });\n  const [closeTicket, {\n    data: dataCloseTicket,\n    loading: loadingCloseTicket,\n    error: errorCloseTicket\n  }] = useMutation(queries.CLOSE_TICKET);\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets // fetchMore: updateTickets\n\n  } = useQuery(queries.GET_TICKETS, {\n    variables: {\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    },\n    fetchPolicy: 'no-cache'\n  });\n  useEffect(() => {\n    if (!loading && data !== null && data !== void 0 && data.getTicket) {\n      setCurrentTicket(data.getTicket);\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket !== null && dataCloseTicket !== void 0 && dataCloseTicket.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket;\n      setCurrentTicket(candidate);\n      dispatch(setDocuments(prev => prev.map(document => document.id === candidate.id ? candidate : document)));\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket]);\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets(prev => [...prev, ...dataTickets.getTickets]);\n    }\n  }, [dataTickets, loadingTickets]);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Tickets, null, /*#__PURE__*/React.createElement(Search, {\n    appearance: 'ghost'\n  }), !loadingTickets ? tickets.map(item => {\n    var _item$author;\n\n    return /*#__PURE__*/React.createElement(Ticket, {\n      key: item.id,\n      name: item.title,\n      position: (_item$author = item.author) === null || _item$author === void 0 ? void 0 : _item$author.name,\n      active: currentTicket && currentTicket.id === item.id,\n      onClick: () => setCurrentTicket(item)\n    });\n  }) : errorTickets ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      marginTop: 15,\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(TicketChat, {\n    ticket: currentTicket,\n    loading: loading || errorCloseTicket,\n    onLink: onMemberLink,\n    onFinish: () => closeTicket({\n      variables: {\n        id: ticket\n      }\n    }),\n    onReport: onReport,\n    onAttach: onAttach,\n    onSubmit: onSubmit\n  }));\n};\n\n_s(View, \"oEU5CSsNCxCqiWavQFpaaqcHf00=\", false, function () {\n  return [useDispatch, useQuery, useMutation, useQuery];\n});\n\n_c4 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Tickets\");\n$RefreshReg$(_c3, \"Ticket\");\n$RefreshReg$(_c4, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","useMutation","useDispatch","Row","Column","Member","Alert","Spinner","Search","TicketChat","setDocuments","queries","Loader","Wrap","appearance","Tickets","Ticket","active","LIMIT_TICKETS","View","ticket","onMemberLink","onReport","onAttach","onSubmit","props","currentTicket","setCurrentTicket","offsetTickets","setOffsetTickets","tickets","setTickets","dispatch","data","loading","GET_TICKET","variables","id","fetchPolicy","closeTicket","dataCloseTicket","loadingCloseTicket","error","errorCloseTicket","CLOSE_TICKET","dataTickets","loadingTickets","errorTickets","GET_TICKETS","offset","limit","getTicket","candidate","prev","map","document","getTickets","item","title","author","name","marginTop","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { useDispatch } from 'react-redux'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport Search from '../SearchBar'\nimport TicketChat from '../TicketChat'\nimport { setDocuments } from '../../store/actions/documents'\nimport queries from '../../graphql/queries'\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Tickets = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Ticket = styled(Member)`\n  margin: 10px 0 0 0;\n  padding: 10px;\n  border-radius: var(--surface-border-radius);\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n    `}\n`\n\nexport const LIMIT_TICKETS = 36\n\nexport const View = ({\n  ticket,\n  appearance,\n  onMemberLink,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [currentTicket, setCurrentTicket] = useState(null)\n  // TODO: Fetch more tickets by scrolling\n  // eslint-disable-next-line no-unused-vars\n  const [offsetTickets, setOffsetTickets] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const dispatch = useDispatch()\n\n  const { data, loading } = useQuery(queries.GET_TICKET, {\n    variables: {\n      id: ticket\n    },\n    fetchPolicy: 'no-cache'\n  })\n\n  const [\n    closeTicket,\n    { data: dataCloseTicket, loading: loadingCloseTicket, error: errorCloseTicket }\n  ] = useMutation(queries.CLOSE_TICKET)\n\n  const {\n    data: dataTickets,\n    loading: loadingTickets,\n    error: errorTickets\n    // fetchMore: updateTickets\n  } = useQuery(queries.GET_TICKETS, {\n    variables: {\n      offset: offsetTickets,\n      limit: LIMIT_TICKETS\n    },\n    fetchPolicy: 'no-cache'\n  })\n\n  useEffect(() => {\n    if (!loading && data?.getTicket) {\n      setCurrentTicket(data.getTicket)\n    }\n\n    if (!loadingCloseTicket && dataCloseTicket?.closeTicket) {\n      const candidate = dataCloseTicket.closeTicket\n      setCurrentTicket(candidate)\n      dispatch(\n        setDocuments((prev) =>\n          prev.map((document) => (document.id === candidate.id ? candidate : document))\n        )\n      )\n    }\n  }, [data, dataCloseTicket, loading, loadingCloseTicket])\n\n  useEffect(() => {\n    if (!loadingTickets && dataTickets) {\n      setTickets((prev) => [...prev, ...dataTickets.getTickets])\n    }\n  }, [dataTickets, loadingTickets])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Tickets>\n        <Search appearance={'ghost'} />\n        {!loadingTickets ? (\n          tickets.map((item) => (\n            <Ticket\n              key={item.id}\n              name={item.title}\n              position={item.author?.name}\n              active={currentTicket && currentTicket.id === item.id}\n              onClick={() => setCurrentTicket(item)}\n            />\n          ))\n        ) : errorTickets ? (\n          <Alert appearance={'error'} style={{ marginTop: 15, width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )}\n      </Tickets>\n      <TicketChat\n        ticket={currentTicket}\n        loading={loading || errorCloseTicket}\n        onLink={onMemberLink}\n        onFinish={() =>\n          closeTicket({\n            variables: {\n              id: ticket\n            }\n          })\n        }\n        onReport={onReport}\n        onAttach={onAttach}\n        onSubmit={onSubmit}\n      />\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}