{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Member from '../../atomic-ui/components/Member';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Search from '../../atomic-ui/components/Search';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { Wrap as WrapForm } from '../Form';\nimport ChatForm from '../FormChat';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Messenger__Wrap\",\n  componentId: \"sc-1hnkbvn-0\"\n})([\"height:100%;flex-grow:1;\", \"{width:100%;padding:0;}@media only screen and (max-width:568px){flex-direction:column;}\", \" \", \" \", \"\"], WrapForm, ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\n_c = Wrap;\nexport const ChatsSearch = styled(Search).withConfig({\n  displayName: \"Messenger__ChatsSearch\",\n  componentId: \"sc-1hnkbvn-1\"\n})([\"margin-bottom:10px;\"]);\n_c2 = ChatsSearch;\nexport const Chats = styled(Column).withConfig({\n  displayName: \"Messenger__Chats\",\n  componentId: \"sc-1hnkbvn-2\"\n})([\"grid-gap:0;width:320px;@media only screen and (max-width:568px){width:100%;}\"]);\n_c3 = Chats;\nexport const Chat = styled(Member).withConfig({\n  displayName: \"Messenger__Chat\",\n  componentId: \"sc-1hnkbvn-3\"\n})([\"margin:0;padding:10px 0;border-radius:var(--surface-border-radius);transition:all 150ms ease;\", \"\"], ({\n  active\n}) => active && css([\"background:var(--input-background);padding:10px;\"]));\n_c4 = Chat;\nexport const Messenger = ({\n  appearance,\n  recipient,\n  sender,\n  onSubmit,\n  onMemberLink,\n  ...props\n}) => {\n  _s();\n\n  var _userChats$getUserCha2;\n\n  const [currentChat, setCurrentChat] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [getChat, {\n    data: chat,\n    loading: loadingChat,\n    refetch\n  }] = useLazyQuery(queries.GET_CHAT);\n  const {\n    data: userChats,\n    loading: loadingUserChats,\n    refetch: getUserChats\n  } = useQuery(queries.GET_USER_CHATS);\n  const {\n    data: userTickets,\n    loading: loadingUserTickets,\n    refetch: getUserTickets\n  } = useQuery(queries.GET_USER_TICKETS);\n  console.log(userTickets);\n  const [addUserChat] = useMutation(queries.ADD_USER_CHAT);\n  useEffect(() => {\n    if (recipient) {\n      addUserChat({\n        variables: {\n          recipient: recipient.email\n        }\n      }).then(() => {\n        getUserChats();\n        getUserTickets();\n      });\n    }\n  }, [recipient, addUserChat]);\n  useEffect(() => {\n    if (recipient && !currentChat && !loadingUserChats && userChats && userChats.getUserChats) {\n      var _userChats$getUserCha;\n\n      getChat({\n        variables: {\n          id: (_userChats$getUserCha = userChats.getUserChats.find(userChat => userChat.chat.members.find(member => member.name === recipient.name))) === null || _userChats$getUserCha === void 0 ? void 0 : _userChats$getUserCha.chat.id\n        }\n      });\n    }\n  }, [recipient, userChats, loadingUserChats]);\n  useEffect(() => {\n    if (!loadingChat && chat && chat.getChat) {\n      setCurrentChat(chat.getChat);\n    }\n  }, [chat, loadingChat]);\n  return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Chats, null, /*#__PURE__*/React.createElement(ChatsSearch, {\n    appearance: 'ghost'\n  }), loadingUserChats && !userChats && /*#__PURE__*/React.createElement(Spinner, null), userChats && ((_userChats$getUserCha2 = userChats.getUserChats) === null || _userChats$getUserCha2 === void 0 ? void 0 : _userChats$getUserCha2.length) > 0 ? userChats.getUserChats.map(chat => {\n    var _chat$chat, _chat$chat2, _chat$chat3, _chat$chat3$members$f, _chat$chat4, _chat$chat4$messages, _chat$chat5, _chat$chat5$messages, _chat$chat6, _chat$chat6$messages, _chat$chat7, _chat$chat7$messages, _chat$chat9;\n\n    return /*#__PURE__*/React.createElement(Chat, {\n      key: (_chat$chat = chat.chat) === null || _chat$chat === void 0 ? void 0 : _chat$chat.id,\n      name: (_chat$chat2 = chat.chat) === null || _chat$chat2 === void 0 ? void 0 : _chat$chat2.members.filter(member => member.name !== sender.name)[0].name,\n      avatar: ((_chat$chat3 = chat.chat) === null || _chat$chat3 === void 0 ? void 0 : (_chat$chat3$members$f = _chat$chat3.members.filter(member => member.name !== sender.name)[0].avatar) === null || _chat$chat3$members$f === void 0 ? void 0 : _chat$chat3$members$f.path) || '/images/avatar-default.png',\n      budge: ((_chat$chat4 = chat.chat) === null || _chat$chat4 === void 0 ? void 0 : (_chat$chat4$messages = _chat$chat4.messages[((_chat$chat5 = chat.chat) === null || _chat$chat5 === void 0 ? void 0 : (_chat$chat5$messages = _chat$chat5.messages) === null || _chat$chat5$messages === void 0 ? void 0 : _chat$chat5$messages.length) - 1]) === null || _chat$chat4$messages === void 0 ? void 0 : _chat$chat4$messages.user.name) !== sender.name && ((_chat$chat6 = chat.chat) === null || _chat$chat6 === void 0 ? void 0 : (_chat$chat6$messages = _chat$chat6.messages) === null || _chat$chat6$messages === void 0 ? void 0 : _chat$chat6$messages.reduce((acc, item) => acc + (item.type === 'UNREADED' && item.user.name !== sender.name ? 1 : 0), 0)) || null,\n      position: ((_chat$chat7 = chat.chat) === null || _chat$chat7 === void 0 ? void 0 : (_chat$chat7$messages = _chat$chat7.messages[chat.chat.messages.length - 1]) === null || _chat$chat7$messages === void 0 ? void 0 : _chat$chat7$messages.text) || null,\n      onClick: async () => {\n        var _chat$chat8;\n\n        setLoading(true);\n        await (refetch || getChat)({\n          id: (_chat$chat8 = chat.chat) === null || _chat$chat8 === void 0 ? void 0 : _chat$chat8.id\n        });\n        setCurrentChat(chat === null || chat === void 0 ? void 0 : chat.chat);\n        setLoading(false);\n      },\n      active: currentChat && currentChat.id === ((_chat$chat9 = chat.chat) === null || _chat$chat9 === void 0 ? void 0 : _chat$chat9.id)\n    });\n  }) : loadingUserChats || loadingUserTickets ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      marginTop: 15\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435 \\u0447\\u0430\\u0442\\u044B \\u043E\\u0442\\u0441\\u0443\\u0442\\u0441\\u0442\\u0432\\u0443\\u044E\\u0442\")), /*#__PURE__*/React.createElement(ChatForm, {\n    mutation: queries.SEND_MESSAGE,\n    messages: currentChat && currentChat.messages.map(message => ({ ...message,\n      side: sender.name === message.user.name ? 'owner' : 'observer'\n    })),\n    appearance: 'ghost',\n    loading: loading || loadingChat || loadingUserChats,\n    onLink: onMemberLink,\n    onSubmit: async (form, action) => {\n      await onSubmit(form, action, currentChat.members.find(member => sender.name !== member.name));\n      await refetch({\n        id: currentChat.id\n      });\n    }\n  }));\n};\n\n_s(Messenger, \"x9WtqV2J0rbZRIJU3Qmk+/UJcG8=\", false, function () {\n  return [useLazyQuery, useQuery, useQuery, useMutation];\n});\n\n_c5 = Messenger;\nMessenger.defaultProps = {\n  appearance: 'default'\n};\nexport default Messenger;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"ChatsSearch\");\n$RefreshReg$(_c3, \"Chats\");\n$RefreshReg$(_c4, \"Chat\");\n$RefreshReg$(_c5, \"Messenger\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/Messenger/index.js"],"names":["React","useEffect","useState","styled","css","useQuery","useLazyQuery","useMutation","Row","Column","Member","Alert","Search","Spinner","Wrap","WrapForm","ChatForm","Loader","queries","appearance","ChatsSearch","Chats","Chat","active","Messenger","recipient","sender","onSubmit","onMemberLink","props","currentChat","setCurrentChat","loading","setLoading","getChat","data","chat","loadingChat","refetch","GET_CHAT","userChats","loadingUserChats","getUserChats","GET_USER_CHATS","userTickets","loadingUserTickets","getUserTickets","GET_USER_TICKETS","console","log","addUserChat","ADD_USER_CHAT","variables","email","then","id","find","userChat","members","member","name","length","map","filter","avatar","path","messages","user","reduce","acc","item","type","text","marginTop","SEND_MESSAGE","message","side","form","action","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery, useLazyQuery, useMutation } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Member from '../../atomic-ui/components/Member'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Search from '../../atomic-ui/components/Search'\nimport Spinner from '../../atomic-ui/components/Spinner'\n\nimport { Wrap as WrapForm } from '../Form'\nimport ChatForm from '../FormChat'\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Row)`\n  height: 100%;\n  flex-grow: 1;\n\n  ${WrapForm} {\n    width: 100%;\n    padding: 0;\n  }\n\n  @media only screen and (max-width: 568px) {\n    flex-direction: column;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const ChatsSearch = styled(Search)`\n  margin-bottom: 10px;\n`\n\nexport const Chats = styled(Column)`\n  grid-gap: 0;\n  width: 320px;\n\n  @media only screen and (max-width: 568px) {\n    width: 100%;\n  }\n`\n\nexport const Chat = styled(Member)`\n  margin: 0;\n  padding: 10px 0;\n  border-radius: var(--surface-border-radius);\n  transition: all 150ms ease;\n\n  ${({ active }) =>\n    active &&\n    css`\n      background: var(--input-background);\n      padding: 10px;\n    `}\n`\n\nexport const Messenger = ({ appearance, recipient, sender, onSubmit, onMemberLink, ...props }) => {\n  const [currentChat, setCurrentChat] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  const [getChat, { data: chat, loading: loadingChat, refetch }] = useLazyQuery(queries.GET_CHAT)\n\n  const { data: userChats, loading: loadingUserChats, refetch: getUserChats } = useQuery(\n    queries.GET_USER_CHATS\n  )\n\n  const { data: userTickets, loading: loadingUserTickets, refetch: getUserTickets } = useQuery(\n    queries.GET_USER_TICKETS\n  )\n  console.log(userTickets)\n\n  const [addUserChat] = useMutation(queries.ADD_USER_CHAT)\n\n  useEffect(() => {\n    if (recipient) {\n      addUserChat({\n        variables: { recipient: recipient.email }\n      }).then(() => {\n        getUserChats()\n        getUserTickets()\n      })\n    }\n  }, [recipient, addUserChat])\n\n  useEffect(() => {\n    if (recipient && !currentChat && !loadingUserChats && userChats && userChats.getUserChats) {\n      getChat({\n        variables: {\n          id: userChats.getUserChats.find((userChat) =>\n            userChat.chat.members.find((member) => member.name === recipient.name)\n          )?.chat.id\n        }\n      })\n    }\n  }, [recipient, userChats, loadingUserChats])\n\n  useEffect(() => {\n    if (!loadingChat && chat && chat.getChat) {\n      setCurrentChat(chat.getChat)\n    }\n  }, [chat, loadingChat])\n\n  return (\n    <Wrap {...props} appearance={appearance}>\n      <Chats>\n        <ChatsSearch appearance={'ghost'} />\n        {loadingUserChats && !userChats && <Spinner />}\n        {userChats && userChats.getUserChats?.length > 0 ? (\n          userChats.getUserChats.map((chat) => (\n            <Chat\n              key={chat.chat?.id}\n              name={chat.chat?.members.filter((member) => member.name !== sender.name)[0].name}\n              avatar={\n                chat.chat?.members.filter((member) => member.name !== sender.name)[0].avatar\n                  ?.path || '/images/avatar-default.png'\n              }\n              budge={\n                (chat.chat?.messages[chat.chat?.messages?.length - 1]?.user.name !== sender.name &&\n                  chat.chat?.messages?.reduce(\n                    (acc, item) =>\n                      acc + (item.type === 'UNREADED' && item.user.name !== sender.name ? 1 : 0),\n                    0\n                  )) ||\n                null\n              }\n              position={chat.chat?.messages[chat.chat.messages.length - 1]?.text || null}\n              onClick={async () => {\n                setLoading(true)\n                await (refetch || getChat)({ id: chat.chat?.id })\n                setCurrentChat(chat?.chat)\n                setLoading(false)\n              }}\n              active={currentChat && currentChat.id === chat.chat?.id}\n            />\n          ))\n        ) : loadingUserChats || loadingUserTickets ? (\n          <Loader>\n            <Spinner />\n          </Loader>\n        ) : (\n          <Alert style={{ marginTop: 15 }}>Активные чаты отсутствуют</Alert>\n        )}\n      </Chats>\n      <ChatForm\n        mutation={queries.SEND_MESSAGE}\n        messages={\n          currentChat &&\n          currentChat.messages.map((message) => ({\n            ...message,\n            side: sender.name === message.user.name ? 'owner' : 'observer'\n          }))\n        }\n        appearance={'ghost'}\n        loading={loading || loadingChat || loadingUserChats}\n        onLink={onMemberLink}\n        onSubmit={async (form, action) => {\n          await onSubmit(\n            form,\n            action,\n            currentChat.members.find((member) => sender.name !== member.name)\n          )\n          await refetch({ id: currentChat.id })\n        }}\n      />\n    </Wrap>\n  )\n}\n\nMessenger.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Messenger\n"]},"metadata":{},"sourceType":"module"}