{"ast":null,"code":"/* eslint-disable */\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './reducers';\nlet store;\n\nfunction initStore(preloadedState = {}) {\n  return createStore(reducers, preloadedState, composeWithDevTools(applyMiddleware()));\n}\n\nexport const initializeStore = preloadedState => {\n  var _store2;\n\n  let _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState);\n\n  if (preloadedState && store) {\n    _store = initStore({ ...store.getState(),\n      ...preloadedState\n    });\n    store = undefined;\n  }\n\n  if (true) return _store;\n  if (!store) store = _store;\n  return _store;\n};\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState]);\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}