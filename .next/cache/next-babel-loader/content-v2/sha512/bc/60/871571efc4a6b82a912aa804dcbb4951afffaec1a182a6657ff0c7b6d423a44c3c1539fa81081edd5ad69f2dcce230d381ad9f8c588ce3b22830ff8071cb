{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport YouTube from 'react-youtube';\nimport Column from '../../atomic-ui/components/Column';\nimport Button from '../../atomic-ui/components/Button';\nimport Dash from '../../atomic-ui/components/Menu/Dash';\nimport Text from '../../atomic-ui/components/Text';\nimport Notifications from '../../components/Notifications';\nimport Messenger from '../../components/Messenger';\nimport { setDrawer } from '../actions/drawer';\nimport { setModal } from '../actions/modal';\nimport { onUserLink } from './user';\nexport const Presentation = styled(YouTube).withConfig({\n  displayName: \"helpers__Presentation\",\n  componentId: \"t5pxc3-0\"\n})([\"display:flex;flex-grow:1;width:100%;border-radius:var(--surface-border-radius);overflow:hidden;iframe{width:100%;}\"]);\nexport function onMenu(dispatch, props) {\n  const {\n    links\n  } = props;\n  dispatch(setDrawer({\n    side: 'left',\n    half: true,\n    content: /*#__PURE__*/React.createElement(Dash, {\n      links: links\n    })\n  }));\n}\nexport function onNotification(dispatch, props) {\n  const {\n    notifications\n  } = props;\n  dispatch(setDrawer({\n    icon: 'notification',\n    title: 'Уведомления',\n    content: /*#__PURE__*/React.createElement(Notifications, {\n      notifications: notifications,\n      appearance: 'clear'\n    })\n  }));\n}\nexport function onChat(dispatch, props) {\n  const {\n    sender,\n    recipient,\n    queries,\n    mutations\n  } = props;\n  dispatch(setDrawer({\n    icon: 'chat',\n    title: 'Мессенджер',\n    content: /*#__PURE__*/React.createElement(Messenger, {\n      queries: queries,\n      mutations: mutations,\n      recipient: recipient,\n      sender: sender,\n      appearance: 'clear',\n      onMemberLink: () => onUserLink(dispatch, props),\n      onSubmit: async (form, action, recipient) => {\n        try {\n          const response = await action({\n            variables: {\n              recipient: recipient.email,\n              text: form.text\n            }\n          });\n          return response.data.sendMessage;\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    })\n  }));\n}\nexport function onFileLink(dispatch) {\n  dispatch(setModal([{\n    path: '/',\n    title: 'Информация о файле',\n    component: () => /*#__PURE__*/React.createElement(Column, {\n      style: {\n        padding: '15px'\n      }\n    }, /*#__PURE__*/React.createElement(Text, null, \"Bechtel \\u043E\\u0442\\u0432\\u0435\\u0447\\u0430\\u043B \\u0437\\u0430 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435, \\u0437\\u0430\\u043A\\u0443\\u043F\\u043A\\u0438, \\u0441\\u0442\\u0440\\u043E\\u0438\\u0442\\u0435\\u043B\\u044C\\u0441\\u0442\\u0432\\u043E, \\u0437\\u0430\\u043F\\u0443\\u0441\\u043A \\u0438 \\u0432\\u0432\\u043E\\u0434 \\u0432 \\u044D\\u043A\\u0441\\u043F\\u043B\\u0443\\u0430\\u0442\\u0430\\u0446\\u0438\\u044E \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u043E\\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\\u0430 \\u043C\\u043E\\u0449\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E 700 \\u043C\\u0435\\u0433\\u0430\\u0432\\u0430\\u0442\\u0442 \\u0432 \\u041E\\u0433\\u0430\\u0439\\u043E, \\u0421\\u0428\\u0410 \\u0438 \\u0432\\u0432\\u043E\\u0434 \\u0432 \\u044D\\u043A\\u0441\\u043F\\u043B\\u0443\\u0430\\u0442\\u0430\\u0446\\u0438\\u044E \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u0430\\u0440\\u043E\\u0433\\u0430\\u0437\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\\u0430 \\u043C\\u043E\\u0449\\u043D\\u043E\\u0441\\u0442\\u044C\\u044E 700 \\u043C\\u0435\\u0433\\u0430\\u0432\\u0430\\u0442\\u0442 \\u0432 \\u041E\\u0433\\u0430\\u0439\\u043E, \\u0421\\u0428\\u0410\"), /*#__PURE__*/React.createElement(Button, null, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"))\n  }]));\n}\nexport function onIndexVideoLink(dispatch, props) {\n  const {\n    video\n  } = props;\n  dispatch(setModal([{\n    path: '/',\n    title: '',\n    component: () => /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Presentation, {\n      videoId: video\n    }))\n  }, 'l']));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/index.js"],"names":["React","styled","YouTube","Column","Button","Dash","Text","Notifications","Messenger","setDrawer","setModal","onUserLink","Presentation","onMenu","dispatch","props","links","side","half","content","onNotification","notifications","icon","title","onChat","sender","recipient","queries","mutations","form","action","response","variables","email","text","data","sendMessage","err","console","log","onFileLink","path","component","padding","onIndexVideoLink","video"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport YouTube from 'react-youtube'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Button from '../../atomic-ui/components/Button'\nimport Dash from '../../atomic-ui/components/Menu/Dash'\nimport Text from '../../atomic-ui/components/Text'\n\nimport Notifications from '../../components/Notifications'\nimport Messenger from '../../components/Messenger'\nimport { setDrawer } from '../actions/drawer'\nimport { setModal } from '../actions/modal'\nimport { onUserLink } from './user'\n\nexport const Presentation = styled(YouTube)`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n\n  iframe {\n    width: 100%;\n  }\n`\n\nexport function onMenu(dispatch, props) {\n  const { links } = props\n\n  dispatch(\n    setDrawer({\n      side: 'left',\n      half: true,\n      content: <Dash links={links} />\n    })\n  )\n}\n\nexport function onNotification(dispatch, props) {\n  const { notifications } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'notification',\n      title: 'Уведомления',\n      content: <Notifications notifications={notifications} appearance={'clear'} />\n    })\n  )\n}\n\nexport function onChat(dispatch, props) {\n  const { sender, recipient, queries, mutations } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'chat',\n      title: 'Мессенджер',\n      content: (\n        <Messenger\n          queries={queries}\n          mutations={mutations}\n          recipient={recipient}\n          sender={sender}\n          appearance={'clear'}\n          onMemberLink={() => onUserLink(dispatch, props)}\n          onSubmit={async (form, action, recipient) => {\n            try {\n              const response = await action({\n                variables: {\n                  recipient: recipient.email,\n                  text: form.text\n                }\n              })\n              return response.data.sendMessage\n            } catch (err) {\n              console.log(err)\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onFileLink(dispatch) {\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Информация о файле',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            <Text>\n              Bechtel отвечал за проектирование, закупки, строительство, запуск и ввод в\n              эксплуатацию нового газового парогазового комплекса мощностью 700 мегаватт в Огайо,\n              США и ввод в эксплуатацию нового газового парогазового комплекса мощностью 700\n              мегаватт в Огайо, США\n            </Text>\n            <Button>Скачать файл</Button>\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onIndexVideoLink(dispatch, props) {\n  const { video } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: '',\n        component: () => (\n          <Column>\n            <Presentation videoId={video} />\n          </Column>\n        )\n      },\n      'l'\n    ])\n  )\n}\n"]},"metadata":{},"sourceType":"module"}