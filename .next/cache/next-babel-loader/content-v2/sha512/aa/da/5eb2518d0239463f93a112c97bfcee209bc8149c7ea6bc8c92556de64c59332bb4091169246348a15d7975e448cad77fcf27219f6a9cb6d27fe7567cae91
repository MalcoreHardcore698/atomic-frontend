{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport Difinition from '../../atomic-ui/components/Difinition';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormTicket__Wrap\",\n  componentId: \"n5aw2g-0\"\n})([\"width:100%;\"]);\n_c = Wrap;\nexport const Header = styled(Row).withConfig({\n  displayName: \"FormTicket__Header\",\n  componentId: \"n5aw2g-1\"\n})([\"justify-content:space-between;width:100%;\"]);\n_c2 = Header;\nexport const Messages = styled(Column).withConfig({\n  displayName: \"FormTicket__Messages\",\n  componentId: \"n5aw2g-2\"\n})([\"position:relative;background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);padding-top:55px;flex-grow:1;\"]);\n_c3 = Messages;\nexport const Meta = styled(Row).withConfig({\n  displayName: \"FormTicket__Meta\",\n  componentId: \"n5aw2g-3\"\n})([\"position:absolute;top:0;left:0;width:100%;justify-content:space-between;padding:8px var(--default-gap);border-radius:var(--surface-border-radius) var(--surface-border-radius) 0 0;background:var(--ghost-color-background);\"]);\n_c4 = Meta;\nexport const Empty = styled(Text).withConfig({\n  displayName: \"FormTicket__Empty\",\n  componentId: \"n5aw2g-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;\"]);\n_c5 = Empty;\nexport const Ticket = ({\n  ticket,\n  appearance,\n  onFinish,\n  onReport,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(Wrap, props, ticket && /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n    label: 'Номер обращения',\n    text: (ticket === null || ticket === void 0 ? void 0 : ticket.token) || '-'\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: onFinish,\n    disabled: !ticket\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onReport,\n    kind: 'icon',\n    appearance: 'red',\n    disabled: !ticket\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'flag',\n    stroke: 'white'\n  })))), /*#__PURE__*/React.createElement(Messages, null, ticket && /*#__PURE__*/React.createElement(Meta, null, /*#__PURE__*/React.createElement(Text, null, \"\\u0422\\u0435\\u043C\\u0430: \", ticket.title), /*#__PURE__*/React.createElement(Text, null, ticket.createdAt)), ticket && ticket.messages && ticket.messages.length > 0 ? ticket.messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    key: message.id,\n    avatar: message.avatar,\n    side: message.side,\n    name: message.name,\n    text: message.text,\n    time: message.time,\n    onLink: onLink\n  })) : /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    placeholder: 'Отправьте сообщенение...',\n    appearance: appearance\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    onSubmit: onSubmit\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\n_c6 = Ticket;\nexport default Ticket;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"Meta\");\n$RefreshReg$(_c5, \"Empty\");\n$RefreshReg$(_c6, \"Ticket\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormTicket/index.js"],"names":["React","styled","Row","Column","Message","Input","Button","Icon","Text","Difinition","Wrap","Header","Messages","Meta","Empty","Ticket","ticket","appearance","onFinish","onReport","onLink","onAttach","onSubmit","props","token","title","createdAt","messages","length","map","message","id","avatar","side","name","text","time"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport Difinition from '../../atomic-ui/components/Difinition'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const Messages = styled(Column)`\n  position: relative;\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  padding-top: 55px;\n  flex-grow: 1;\n`\n\nexport const Meta = styled(Row)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  justify-content: space-between;\n  padding: 8px var(--default-gap);\n  border-radius: var(--surface-border-radius) var(--surface-border-radius) 0 0;\n  background: var(--ghost-color-background);\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`\n\nexport const Ticket = ({\n  ticket,\n  appearance,\n  onFinish,\n  onReport,\n  onLink,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  return (\n    <Wrap {...props}>\n      {ticket && (\n        <Header>\n          <Difinition label={'Номер обращения'} text={ticket?.token || '-'} />\n\n          <Row>\n            <Button onClick={onFinish} disabled={!ticket}>\n              Закрыть обращение\n            </Button>\n            <Button onClick={onReport} kind={'icon'} appearance={'red'} disabled={!ticket}>\n              <Icon icon={'flag'} stroke={'white'} />\n            </Button>\n          </Row>\n        </Header>\n      )}\n\n      <Messages>\n        {ticket && (\n          <Meta>\n            <Text>Тема: {ticket.title}</Text>\n            <Text>{ticket.createdAt}</Text>\n          </Meta>\n        )}\n\n        {ticket && ticket.messages && ticket.messages.length > 0 ? (\n          ticket.messages.map((message) => (\n            <Message\n              key={message.id}\n              avatar={message.avatar}\n              side={message.side}\n              name={message.name}\n              text={message.text}\n              time={message.time}\n              onLink={onLink}\n            />\n          ))\n        ) : (\n          <Empty>Выберите обращение</Empty>\n        )}\n      </Messages>\n\n      <Row>\n        <Button kind={'icon'} onSubmit={onAttach}>\n          <Icon icon={'attach'} stroke={'white'} />\n        </Button>\n        <Input placeholder={'Отправьте сообщенение...'} appearance={appearance} />\n        <Button kind={'icon'} onSubmit={onSubmit}>\n          <Icon icon={'send'} stroke={'white'} />\n        </Button>\n      </Row>\n    </Wrap>\n  )\n}\n\nexport default Ticket\n"]},"metadata":{},"sourceType":"module"}