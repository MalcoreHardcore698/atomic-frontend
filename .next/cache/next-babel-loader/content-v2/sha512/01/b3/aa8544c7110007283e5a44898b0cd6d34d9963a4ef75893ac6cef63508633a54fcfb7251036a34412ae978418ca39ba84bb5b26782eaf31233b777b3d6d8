{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Select from '../../atomic-ui/components/Select';\nimport Alert from '../../atomic-ui/components/Alert';\nimport { createSelectOptions, getLabelPermission } from '../../atomic-ui/utils/functions';\nimport Form from '../Form';\nexport var Role = function Role(_ref) {\n  var _role$permissions;\n\n  var role = _ref.role,\n      permissions = _ref.permissions,\n      mutation = _ref.mutation,\n      appearance = _ref.appearance,\n      className = _ref.className,\n      _onSubmit = _ref.onSubmit;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      permissionsError = _useState2[0],\n      setPermissionsError = _useState2[1];\n\n  var _useState3 = useState((role === null || role === void 0 ? void 0 : (_role$permissions = role.permissions) === null || _role$permissions === void 0 ? void 0 : _role$permissions.map(function (permission) {\n    return {\n      value: permission,\n      label: getLabelPermission(permission)\n    };\n  })) || null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedPermissions = _useState4[0],\n      setSelectedPermissions = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      disabled = _useState6[0],\n      setDisabled = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: function onSubmit(form, action) {\n      if ((selectedPermissions === null || selectedPermissions === void 0 ? void 0 : selectedPermissions.length) > 0) {\n        _onSubmit(_objectSpread(_objectSpread({}, form), {}, {\n          permissions: selectedPermissions\n        }), action);\n      } else {\n        setPermissionsError(true);\n      }\n    }\n  }, function (_ref2) {\n    var register = _ref2.register,\n        loading = _ref2.loading,\n        errors = _ref2.errors,\n        getValues = _ref2.getValues;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), errors && errors.name && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0440\\u043E\\u043B\\u0438 \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u043B\\u0430\\u0442\\u0438\\u043D\\u0441\\u043A\\u0438\\u0435 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u044B\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      name: 'name',\n      ref: register({\n        required: true,\n        pattern: /[A-Za-z]/\n      }),\n      onChange: function onChange(e) {\n        if (e.target.value === (role === null || role === void 0 ? void 0 : role.name)) {\n          setDisabled(true);\n        } else {\n          setDisabled(false);\n        }\n      },\n      defaultValue: (role === null || role === void 0 ? void 0 : role.name) || getValues('name'),\n      placeholder: 'Название',\n      appearance: 'ghost',\n      disabled: loading\n    }), permissionsError && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u0440\\u0438\\u0432\\u0438\\u043B\\u0435\\u0433\\u0438\\u0439 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u0445\\u043E\\u0442\\u044F \\u0431\\u044B \\u043E\\u0434\\u0438\\u043D \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\"), /*#__PURE__*/React.createElement(Select, {\n      name: 'permissions',\n      appearance: 'ghost',\n      defaultValue: selectedPermissions,\n      onChange: function onChange(value) {\n        var _role$permissions2;\n\n        setSelectedPermissions(value);\n        setPermissionsError(false);\n\n        if (value.value.length === (role === null || role === void 0 ? void 0 : (_role$permissions2 = role.permissions) === null || _role$permissions2 === void 0 ? void 0 : _role$permissions2.length)) {\n          setDisabled(true);\n        } else {\n          setDisabled(false);\n        }\n      },\n      placeholder: 'Выберите привелегии',\n      options: createSelectOptions(permissions).map(function (option) {\n        return _objectSpread(_objectSpread({}, option), {}, {\n          label: getLabelPermission(option.label)\n        });\n      }),\n      isLoading: loading,\n      isClearable: true,\n      isMulti: true\n    })), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'submit',\n      disabled: disabled || loading\n    }, role ? 'Сохранить' : 'Создать')));\n  });\n};\nexport default Role;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormRole/index.js"],"names":["React","useState","Row","Column","Title","Input","Button","Select","Alert","createSelectOptions","getLabelPermission","Form","Role","role","permissions","mutation","appearance","className","onSubmit","permissionsError","setPermissionsError","map","permission","value","label","selectedPermissions","setSelectedPermissions","disabled","setDisabled","form","action","length","register","loading","errors","getValues","name","width","required","pattern","e","target","option","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Select from '../../atomic-ui/components/Select'\nimport Alert from '../../atomic-ui/components/Alert'\nimport { createSelectOptions, getLabelPermission } from '../../atomic-ui/utils/functions'\n\nimport Form from '../Form'\n\nexport const Role = ({ role, permissions, mutation, appearance, className, onSubmit }) => {\n  const [permissionsError, setPermissionsError] = useState(false)\n  const [selectedPermissions, setSelectedPermissions] = useState(\n    role?.permissions?.map((permission) => ({\n      value: permission,\n      label: getLabelPermission(permission)\n    })) || null\n  )\n  const [disabled, setDisabled] = useState(true)\n\n  return (\n    <Form\n      className={className}\n      appearance={appearance}\n      mutation={mutation}\n      onSubmit={(form, action) => {\n        if (selectedPermissions?.length > 0) {\n          onSubmit({ ...form, permissions: selectedPermissions }, action)\n        } else {\n          setPermissionsError(true)\n        }\n      }}>\n      {({ register, loading, errors, getValues }) => (\n        <React.Fragment>\n          <Column>\n            <Title tag={'h4'}>Основное</Title>\n\n            {errors && errors.name && (\n              <Alert style={{ width: '100%' }} appearance={'error'}>\n                Название роли должно содержать только латинские символы\n              </Alert>\n            )}\n            <Input\n              type={'text'}\n              name={'name'}\n              ref={register({\n                required: true,\n                pattern: /[A-Za-z]/\n              })}\n              onChange={(e) => {\n                if (e.target.value === role?.name) {\n                  setDisabled(true)\n                } else {\n                  setDisabled(false)\n                }\n              }}\n              defaultValue={role?.name || getValues('name')}\n              placeholder={'Название'}\n              appearance={'ghost'}\n              disabled={loading}\n            />\n\n            {permissionsError && (\n              <Alert style={{ width: '100%' }} appearance={'error'}>\n                Список привилегий должен содержать хотя бы один элемент\n              </Alert>\n            )}\n            <Select\n              name={'permissions'}\n              appearance={'ghost'}\n              defaultValue={selectedPermissions}\n              onChange={(value) => {\n                setSelectedPermissions(value)\n                setPermissionsError(false)\n                if (value.value.length === role?.permissions?.length) {\n                  setDisabled(true)\n                } else {\n                  setDisabled(false)\n                }\n              }}\n              placeholder={'Выберите привелегии'}\n              options={createSelectOptions(permissions).map((option) => ({\n                ...option,\n                label: getLabelPermission(option.label)\n              }))}\n              isLoading={loading}\n              isClearable\n              isMulti\n            />\n          </Column>\n\n          <Row>\n            <Button style={{ flexGrow: 1 }} type={'submit'} disabled={disabled || loading}>\n              {role ? 'Сохранить' : 'Создать'}\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default Role\n"]},"metadata":{},"sourceType":"module"}