{"ast":null,"code":"import React from 'react';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useSelector } from 'react-redux';\nimport Row from '../../atomic-ui/components/Row';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Notice from '../../atomic-ui/components/Notice';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Indicator from '../../atomic-ui/components/Indicator';\nimport Chart from '../../atomic-ui/components/Chart';\nimport { useHelper } from '../../hooks/useHelper';\nimport DashboardLayout from '../../layouts/dashboard';\nimport Processed from '../../components/Processed';\nimport FadeLoad from '../../components/FadeLoad';\nimport LazyLoad from '../../components/LazyLoad';\nimport ProjectCard from '../../components/ProjectCard';\nimport ArticleCard from '../../components/ArticleCard';\nimport { onProjectLink } from '../../store/helpers/project';\nimport { onArticleLink } from '../../store/helpers/article';\nimport { onUserAboutMore } from '../../store/helpers/user';\nimport queries from '../../graphql/queries';\nconst TITLE = 'Панель администратора';\nconst GREETING_TEXT = 'Добро пожаловать!';\nconst Container = styled(Column).withConfig({\n  displayName: \"dashboard__Container\",\n  componentId: \"yu92ty-0\"\n})([\"grid-gap:10px;\"]);\nconst Statistics = styled(Row).withConfig({\n  displayName: \"dashboard__Statistics\",\n  componentId: \"yu92ty-1\"\n})([\"flex-wrap:wrap;\"]);\nconst Graph = styled(Chart).withConfig({\n  displayName: \"dashboard__Graph\",\n  componentId: \"yu92ty-2\"\n})([\"height:100%;flex-grow:1;\"]);\nconst Header = styled(Row).withConfig({\n  displayName: \"dashboard__Header\",\n  componentId: \"yu92ty-3\"\n})([\"flex-wrap:wrap;justify-content:space-between;align-items:center;a{color:var(--default-color-accent);}\"]);\n\nconst Dashboard = () => {\n  var _dataStatistics$getDa;\n\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  const {\n    data: dataStatistics,\n    loading: loadingStatistics,\n    error: errorStatistics\n  } = useQuery(queries.GET_META_DASHBOARD_STATISTICS);\n  const {\n    data: dataActivities,\n    loading: loadingActivities,\n    error: errorActivities\n  } = useQuery(queries.GET_META_DASHBOARD_ACTIVITIES);\n  const {\n    data: dataProjects,\n    loading: loadingProjects,\n    error: errorProjects\n  } = useQuery(queries.GET_META_DASHBOARD_PREVIEW_PROJECTS, {\n    variables: {\n      offset: 0,\n      limit: 4\n    }\n  });\n  const {\n    data: dataArticles,\n    loading: loadingArticles,\n    error: errorArticles\n  } = useQuery(queries.GET_META_DASHBOARD_PREVIEW_ARTICLES, {\n    variables: {\n      offset: 0,\n      limit: 4\n    }\n  });\n  return /*#__PURE__*/React.createElement(DashboardLayout, {\n    title: TITLE\n  }, /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'activity',\n    text: GREETING_TEXT\n  }), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Statistics, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataStatistics,\n    loading: loadingStatistics,\n    error: errorStatistics\n  }, dataStatistics === null || dataStatistics === void 0 ? void 0 : (_dataStatistics$getDa = dataStatistics.getDashboardStatistics) === null || _dataStatistics$getDa === void 0 ? void 0 : _dataStatistics$getDa.map(statistic => /*#__PURE__*/React.createElement(Indicator, {\n    key: statistic.title,\n    label: statistic.title,\n    value: statistic.total,\n    movement: 34,\n    positive: true\n  })))), /*#__PURE__*/React.createElement(Processed, {\n    data: dataStatistics,\n    loading: loadingStatistics,\n    error: errorStatistics\n  }, /*#__PURE__*/React.createElement(Graph, {\n    data: [{\n      label: dataStatistics === null || dataStatistics === void 0 ? void 0 : dataStatistics.getDashboardStatistics[0].title,\n      data: dataStatistics === null || dataStatistics === void 0 ? void 0 : dataStatistics.getDashboardStatistics[0].graph.map(item => ({\n        primary: item.createdAt,\n        secondary: item.count\n      }))\n    }],\n    axes: [{\n      primary: true,\n      type: 'linear',\n      position: 'bottom'\n    }, {\n      type: 'linear',\n      position: 'left'\n    }]\n  }))), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u043E\\u0441\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\")), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Processed, {\n    data: dataActivities,\n    loading: loadingActivities,\n    error: errorActivities\n  }, ((dataActivities === null || dataActivities === void 0 ? void 0 : dataActivities.getDashboardActivities) || []).map(activity => {\n    var _activity$user, _activity$user$avatar;\n\n    return /*#__PURE__*/React.createElement(FadeLoad, {\n      key: activity.id\n    }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(Notice, {\n      key: activity.id,\n      img: (_activity$user = activity.user) === null || _activity$user === void 0 ? void 0 : (_activity$user$avatar = _activity$user.avatar) === null || _activity$user$avatar === void 0 ? void 0 : _activity$user$avatar.path,\n      title: activity.user.name,\n      message: activity.message,\n      date: activity.createdAt,\n      appearance: 'clear'\n    })));\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit'\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Link, {\n    href: '/dashboard/projects'\n  }, /*#__PURE__*/React.createElement(\"a\", null, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit',\n    percentage: 'minmax(395px, 1fr)'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataProjects,\n    loading: loadingProjects,\n    error: errorProjects\n  }, ((dataProjects === null || dataProjects === void 0 ? void 0 : dataProjects.getProjects) || []).map(project => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: project.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ProjectCard, {\n    project: project,\n    onLink: recall(onProjectLink, {\n      id: project.id,\n      user\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user: project\n    })\n  }))))))), /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438\"), /*#__PURE__*/React.createElement(Link, {\n    href: '/dashboard/articles'\n  }, /*#__PURE__*/React.createElement(\"a\", null, \"\\u0411\\u043E\\u043B\\u044C\\u0448\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0435\\u0439\"))), /*#__PURE__*/React.createElement(Grid, {\n    length: 'auto-fit',\n    percentage: 'minmax(395px, 1fr)'\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: dataArticles,\n    loading: loadingArticles,\n    error: errorArticles\n  }, ((dataArticles === null || dataArticles === void 0 ? void 0 : dataArticles.getArticles) || []).map(article => /*#__PURE__*/React.createElement(FadeLoad, {\n    key: article.id\n  }, /*#__PURE__*/React.createElement(LazyLoad, null, /*#__PURE__*/React.createElement(ArticleCard, {\n    article: article,\n    onLink: recall(onArticleLink, {\n      id: article.id\n    })\n  })))))))));\n};\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}