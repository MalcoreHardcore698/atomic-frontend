{"ast":null,"code":"import _extends from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Tooltip\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      max-width: \", \"px !important;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 7px 10px !important;\\n  font-size: var(--font-size-s) !important;\\n  line-height: 14px !important;\\n  background: rgba(0, 0, 0, 0.7) !important;\\n  border-radius: var(--surface-border-radius) !important;\\n  border: none !important;\\n  color: white !important;\\n  opacity: 0.9;\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-flex;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport ReactTooltip from 'react-tooltip';\nimport { v4 } from 'uuid';\nexport var Wrap = styled.div(_templateObject());\n_c = Wrap;\nexport var Content = styled(ReactTooltip)(_templateObject2(), function (_ref) {\n  var maxWidth = _ref.maxWidth;\n  return maxWidth && css(_templateObject3(), maxWidth);\n});\n_c2 = Content;\nexport var Tooltip = function Tooltip(_ref2) {\n  var text = _ref2.text,\n      self = _ref2.self,\n      children = _ref2.children,\n      style = _ref2.style,\n      className = _ref2.className,\n      maxWidth = _ref2.maxWidth,\n      props = _objectWithoutProperties(_ref2, [\"text\", \"self\", \"children\", \"style\", \"className\", \"maxWidth\"]);\n\n  var id = \"tooltip-\".concat(v4());\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.cloneElement(self ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }\n  }, children) : children, _objectSpread({}, {\n    'data-arrow-color': 'rgba(0, 0, 0, .7)',\n    'data-tip': true,\n    'data-for': id\n  })), __jsx(Content, _extends({\n    id: id\n  }, props, {\n    maxWidth: maxWidth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, text)));\n};\n_c3 = Tooltip;\nTooltip.defaultProps = {\n  place: 'top',\n  effect: 'solid',\n  delayShow: 500\n};\nexport default Tooltip;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Tooltip\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Tooltip/index.js"],"names":["React","styled","css","ReactTooltip","v4","Wrap","div","Content","maxWidth","Tooltip","text","self","children","style","className","props","id","cloneElement","defaultProps","place","effect","delayShow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAO,IAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV,mBAAV;KAAMD,I;AAKb,OAAO,IAAME,OAAO,GAAGN,MAAM,CAACE,YAAD,CAAT,qBAUhB;AAAA,MAAGK,QAAH,QAAGA,QAAH;AAAA,SACAA,QAAQ,IACRN,GADQ,qBAEOM,QAFP,CADR;AAAA,CAVgB,CAAb;MAAMD,O;AAiBb,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,QAAoE;AAAA,MAAjEC,IAAiE,SAAjEA,IAAiE;AAAA,MAA3DC,IAA2D,SAA3DA,IAA2D;AAAA,MAArDC,QAAqD,SAArDA,QAAqD;AAAA,MAA3CC,KAA2C,SAA3CA,KAA2C;AAAA,MAApCC,SAAoC,SAApCA,SAAoC;AAAA,MAAzBN,QAAyB,SAAzBA,QAAyB;AAAA,MAAZO,KAAY;;AACzF,MAAMC,EAAE,qBAAcZ,EAAE,EAAhB,CAAR;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,SAAjB;AAA4B,IAAA,KAAK,EAAED,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACGb,KAAK,CAACiB,YAAN,CAAmBN,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,QAAN,CAAH,GAA2BA,QAAlD,oBACI;AACD,wBAAoB,mBADnB;AAED,gBAAY,IAFX;AAGD,gBAAYI;AAHX,GADJ,EADH,EAQE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAEA;AAAb,KAAqBD,KAArB;AAA4B,IAAA,QAAQ,EAAEP,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,IAAP,CADF,CARF,CADF;AAcD,CAjBM;MAAMD,O;AAmBbA,OAAO,CAACS,YAAR,GAAuB;AACrBC,EAAAA,KAAK,EAAE,KADc;AAErBC,EAAAA,MAAM,EAAE,OAFa;AAGrBC,EAAAA,SAAS,EAAE;AAHU,CAAvB;AAMA,eAAeZ,OAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport ReactTooltip from 'react-tooltip'\nimport { v4 } from 'uuid'\n\nexport const Wrap = styled.div`\n  position: relative;\n  display: inline-flex;\n`\n\nexport const Content = styled(ReactTooltip)`\n  padding: 7px 10px !important;\n  font-size: var(--font-size-s) !important;\n  line-height: 14px !important;\n  background: rgba(0, 0, 0, 0.7) !important;\n  border-radius: var(--surface-border-radius) !important;\n  border: none !important;\n  color: white !important;\n  opacity: 0.9;\n\n  ${({ maxWidth }) =>\n    maxWidth &&\n    css`\n      max-width: ${maxWidth}px !important;\n    `}\n`\n\nexport const Tooltip = ({ text, self, children, style, className, maxWidth, ...props }) => {\n  const id = `tooltip-${v4()}`\n\n  return (\n    <Wrap className={className} style={style}>\n      {React.cloneElement(self ? <div>{children}</div> : children, {\n        ...{\n          'data-arrow-color': 'rgba(0, 0, 0, .7)',\n          'data-tip': true,\n          'data-for': id\n        }\n      })}\n      <Content id={id} {...props} maxWidth={maxWidth}>\n        <span>{text}</span>\n      </Content>\n    </Wrap>\n  )\n}\n\nTooltip.defaultProps = {\n  place: 'top',\n  effect: 'solid',\n  delayShow: 500\n}\n\nexport default Tooltip\n"]},"metadata":{},"sourceType":"module"}