{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Tooltip from '../Tooltip';\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: min-content;\n  min-width: 240px;\n`;\nexport const Track = styled.div`\n  position: relative;\n  display: flex;\n  border-radius: var(--surface-border-radius);\n  background: var(--ghost-color-background);\n  padding: 3px;\n  width: 100%;\n  height: var(--input-height-m);\n\n  ${({\n  unary\n}) => unary && css`\n      width: 48px;\n      height: 24px;\n      border-radius: 25rem;\n      cursor: pointer;\n    `}\n\n  ${({\n  stretch\n}) => stretch && css`\n      flex-grow: 1;\n      width: 100%;\n    `}\n  \n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    height: auto;\n  }\n`;\nexport const Label = styled.p`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n`;\nexport const LabeledToggle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: var(--surface-border);\n  background: none;\n  box-shadow: none;\n  color: var(--ghost-color-text);\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-medium);\n  white-space: nowrap;\n  padding: 0 15px;\n  cursor: pointer;\n  flex-grow: 1;\n\n  width: ${({\n  width\n}) => width};\n\n  svg {\n    path,\n    circle {\n      stroke: var(--ghost-color-text);\n    }\n  }\n\n  ${({\n  active\n}) => active && css`\n      border-radius: var(--surface-border-radius);\n      background: var(--surface-background);\n      box-shadow: var(--surface-box-shadow);\n      color: var(--default-color-accent);\n\n      svg {\n        path,\n        circle {\n          stroke: var(--default-color-accent);\n        }\n      }\n    `}\n\n  @media only screen and (max-width: 480px) {\n    height: var(--input-height-m);\n  }\n`;\nexport const Toggle = styled.span`\n  position: absolute;\n  left: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n\n  border-radius: 50%;\n  background: var(--ghost-color-text);\n  box-shadow: var(--surface-box-shadow);\n  transition: left 150ms ease;\n\n  ${({\n  active\n}) => active && css`\n      left: 26px;\n      background: var(--default-color-accent);\n    `}\n`;\nexport const Switch = ({\n  label,\n  options,\n  ltr,\n  rtl,\n  defaultValue,\n  className,\n  style,\n  onChange\n}) => {\n  const list = options || [0, 1];\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(defaultValue);\n\n  const onClick = item => {\n    setSelected(item);\n    if (onChange) onChange(item);\n  };\n\n  const renderLabeledToggle = (item, key) => __jsx(LabeledToggle, {\n    key: key,\n    width: item.width || 'auto',\n    active: selected && item.value === selected.value,\n    onClick: () => onClick(item)\n  }, item.label);\n\n  return options && options.length > 0 ? __jsx(Track, {\n    className: className,\n    style: style\n  }, list.map((item, index) => item.tooltip ? __jsx(Tooltip, {\n    key: index,\n    style: {\n      flexGrow: 1\n    },\n    text: item.tooltip\n  }, renderLabeledToggle(item)) : renderLabeledToggle(item, index))) : __jsx(Wrap, {\n    className: className,\n    style: style,\n    onClick: () => onClick(!selected)\n  }, ltr && !rtl && __jsx(Label, null, label), __jsx(Track, {\n    unary: true\n  }, __jsx(Toggle, {\n    active: selected\n  })), rtl && __jsx(Label, null, label));\n};\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n};\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}