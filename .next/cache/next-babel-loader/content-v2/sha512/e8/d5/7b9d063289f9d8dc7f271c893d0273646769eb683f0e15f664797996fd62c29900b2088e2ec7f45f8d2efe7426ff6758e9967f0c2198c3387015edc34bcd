{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from 'react-hook-form';\nexport const Wrap = styled.form.withConfig({\n  displayName: \"Form__Wrap\",\n  componentId: \"wqhajt-0\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);padding:var(--default-gap);flex-grow:1;\", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"border:1px solid var(--surface-border);background:var(--surface-background);box-shadow:1px solid var(--surface-shadow);border-radius:var(--surface-border-radius);\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"border:none;background:none;box-shadow:none;border-radius:0;padding:0;\"]));\nexport const Form = ({\n  children,\n  onSubmit,\n  mutation,\n  ...props\n}) => {\n  if (mutation) {\n    const [action, {\n      data,\n      loading,\n      error\n    }] = useMutation(mutation);\n    const methods = useForm();\n    const Children = children;\n    return /*#__PURE__*/React.createElement(Wrap, _extends({}, props, {\n      onSubmit: methods.handleSubmit(form => onSubmit(form, action))\n    }), /*#__PURE__*/React.createElement(Children, _extends({}, methods, {\n      data: data,\n      loading: loading,\n      error: error\n    })));\n  }\n\n  return null;\n};\nForm.defaultProps = {\n  appearance: 'default'\n};\nexport default Form;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/components/Form/index.js"],"names":["React","styled","css","useMutation","useForm","Wrap","form","appearance","Form","children","onSubmit","mutation","props","action","data","loading","error","methods","Children","handleSubmit","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,MAAMC,IAAI,GAAGJ,MAAM,CAACK,IAAV;AAAA;AAAA;AAAA,wHAOb,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,SAAf,IACAL,GADA,wKARa,EAgBb,CAAC;AAAEK,EAAAA;AAAF,CAAD,KACAA,UAAU,KAAK,OAAf,IACAL,GADA,4EAjBa,CAAV;AA2BP,OAAO,MAAMM,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,QAAtB;AAAgC,KAAGC;AAAnC,CAAD,KAAgD;AAClE,MAAID,QAAJ,EAAc;AACZ,UAAM,CAACE,MAAD,EAAS;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAT,IAAqCb,WAAW,CAACQ,QAAD,CAAtD;AACA,UAAMM,OAAO,GAAGb,OAAO,EAAvB;AAEA,UAAMc,QAAQ,GAAGT,QAAjB;AAEA,wBACE,oBAAC,IAAD,eAAUG,KAAV;AAAiB,MAAA,QAAQ,EAAEK,OAAO,CAACE,YAAR,CAAsBb,IAAD,IAAUI,QAAQ,CAACJ,IAAD,EAAOO,MAAP,CAAvC;AAA3B,qBACE,oBAAC,QAAD,eAAcI,OAAd;AAAuB,MAAA,IAAI,EAAEH,IAA7B;AAAmC,MAAA,OAAO,EAAEC,OAA5C;AAAqD,MAAA,KAAK,EAAEC;AAA5D,OADF,CADF;AAKD;;AAED,SAAO,IAAP;AACD,CAfM;AAiBPR,IAAI,CAACY,YAAL,GAAoB;AAClBb,EAAAA,UAAU,EAAE;AADM,CAApB;AAIA,eAAeC,IAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { useMutation } from '@apollo/react-hooks'\nimport { useForm } from 'react-hook-form'\n\nexport const Wrap = styled.form`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  padding: var(--default-gap);\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`\n\nexport const Form = ({ children, onSubmit, mutation, ...props }) => {\n  if (mutation) {\n    const [action, { data, loading, error }] = useMutation(mutation)\n    const methods = useForm()\n\n    const Children = children\n\n    return (\n      <Wrap {...props} onSubmit={methods.handleSubmit((form) => onSubmit(form, action))}>\n        <Children {...methods} data={data} loading={loading} error={error} />\n      </Wrap>\n    )\n  }\n\n  return null\n}\n\nForm.defaultProps = {\n  appearance: 'default'\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}