{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Grid from '../../atomic-ui/components/Grid';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport RoomsEditor from '../../atomic-ui/components/RoomsEditor';\nimport VideoPresentation, { parseUrl } from '../../atomic-ui/components/VideoPresentation';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport HTMLView from '../HTMLView';\nimport Processed from '../Processed';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nconst HOST_URL = config.get('host-url');\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"ProjectView__Wrap\",\n  componentId: \"sc-1fg5jgh-0\"\n})([\"flex-grow:1;iframe{width:100%;}\", \" \", \" \", \"\"], ({\n  appearance\n}) => appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]), ({\n  appearance\n}) => appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]), ({\n  appearance\n}) => appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]));\nexport const Container = styled(Row).withConfig({\n  displayName: \"ProjectView__Container\",\n  componentId: \"sc-1fg5jgh-1\"\n})([\"@media only screen and (max-width:768px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\nexport const Media = styled(Column).withConfig({\n  displayName: \"ProjectView__Media\",\n  componentId: \"sc-1fg5jgh-2\"\n})([\"grid-gap:5px;flex-basis:35%;& > span{display:flex;flex-grow:1;}@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport const Content = styled(Column).withConfig({\n  displayName: \"ProjectView__Content\",\n  componentId: \"sc-1fg5jgh-3\"\n})([\"justify-content:space-between;flex-basis:65%;@media only screen and (max-width:480px){flex-basis:100%;}\"]);\nexport const Screenshots = styled(Row).withConfig({\n  displayName: \"ProjectView__Screenshots\",\n  componentId: \"sc-1fg5jgh-4\"\n})([\"justify-content:space-between;grid-gap:5px;\"]);\nexport const Screenshot = styled.div.withConfig({\n  displayName: \"ProjectView__Screenshot\",\n  componentId: \"sc-1fg5jgh-5\"\n})([\"position:relative;z-index:var(--z-12);width:auto;height:var(--input-height-s);min-width:var(--input-height-s);min-height:var(--input-height-s);border-radius:var(--surface-border-radius);overflow:hidden;transition:opacity 150ms ease;span,span > img{display:flex;justify-content:center;align-items:center;flex-grow:1;width:100%;height:100%;}img{width:100%;height:100%;object-fit:cover;}\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\nexport const ScreenshotsCounter = styled(Text).withConfig({\n  displayName: \"ProjectView__ScreenshotsCounter\",\n  componentId: \"sc-1fg5jgh-6\"\n})([\"position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;span{position:relative;z-index:var(--z-12);color:white;}&::before{content:'';position:absolute;top:0;left:0;z-index:var(--z-10);display:flex;justify-content:center;align-items:center;width:100%;height:100%;background:var(--default-color-accent);border-radius:var(--surface-border-radius);opacity:0.65;}\"]);\nexport const CentralAlert = styled(Alert).withConfig({\n  displayName: \"ProjectView__CentralAlert\",\n  componentId: \"sc-1fg5jgh-7\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;text-align:center;\"]);\nexport const Poster = styled(Image).withConfig({\n  displayName: \"ProjectView__Poster\",\n  componentId: \"sc-1fg5jgh-8\"\n})([\"width:100%;height:100%;max-height:285px;object-fit:cover;border-radius:var(--surface-border-radius);flex-grow:1;transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\nexport const Difinitions = styled(Row).withConfig({\n  displayName: \"ProjectView__Difinitions\",\n  componentId: \"sc-1fg5jgh-9\"\n})([\"flex-grow:100;justify-content:space-between;grid-gap:var(--default-gap);@media only screen and (max-width:480px){flex-direction:column;}\"]);\nexport const Presentation = styled(VideoPresentation).withConfig({\n  displayName: \"ProjectView__Presentation\",\n  componentId: \"sc-1fg5jgh-10\"\n})([\"display:flex;flex-grow:1;width:100%;border-radius:var(--surface-border-radius);overflow:hidden;\"]);\nexport const Actions = styled(Row).withConfig({\n  displayName: \"ProjectView__Actions\",\n  componentId: \"sc-1fg5jgh-11\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\nexport const Files = styled(Grid).withConfig({\n  displayName: \"ProjectView__Files\",\n  componentId: \"sc-1fg5jgh-12\"\n})([\"\"]);\nexport const Members = styled(Grid).withConfig({\n  displayName: \"ProjectView__Members\",\n  componentId: \"sc-1fg5jgh-13\"\n})([\"\"]);\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  var _data$getProject, _data$getProject2, _data$getProject2$pre, _data$getProject7, _data$getProject8, _data$getProject8$scr, _data$getProject11, _data$getProject12, _data$getProject12$ca, _data$getProject13, _data$getProject14, _data$getProject15, _data$getProject16, _data$getProject16$co, _data$getProject16$co2, _data$getProject17, _data$getProject17$co, _data$getProject19, _data$getProject20, _data$getProject21, _data$getProject22, _data$getProject23, _data$getProject24, _data$getProject24$me, _data$getProject25, _data$getProject26, _data$getProject27, _data$getProject27$me, _data$getProject28, _data$getProject29, _data$getProject29$fi, _data$getProject30, _data$getProject31, _data$getProject32, _data$getProject32$fi;\n\n  const {\n    setQuery\n  } = useEntityQuery();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  });\n  const [isLiked, setLike] = useState(liked);\n  const [screenshots, setScreenshots] = useState([]);\n  const [residue, setResidue] = useState(0);\n  const [videoPresentationObject, setVideoPresentationObject] = useState(null);\n\n  const onClickLike = () => {\n    if (onLike) onLike();\n    setLike(!isLiked);\n  };\n\n  useEffect(() => {\n    if (!loading && data.getProject) {\n      const response = data.getProject;\n      const images = [response.preview, ...response.screenshots];\n      const slicedImages = images.slice(0, slicedFactor);\n      const url = URL && response.presentation && new URL(response.presentation);\n      const videoPresentationObject = parseUrl(url);\n      setResidue((images.length || slicedFactor) - slicedFactor);\n      setVideoPresentationObject(videoPresentationObject);\n      setScreenshots(slicedImages);\n    }\n  }, [loading, data, slicedFactor]);\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, /*#__PURE__*/React.createElement(Processed, {\n    data: data === null || data === void 0 ? void 0 : data.getProject,\n    loading: loading,\n    error: error,\n    errorMessage: 'Упс! Не удалось загрузить информацию о проекте',\n    emptyMessage: 'Кажется такого проекта не существует'\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Media, null, data !== null && data !== void 0 && (_data$getProject = data.getProject) !== null && _data$getProject !== void 0 && _data$getProject.preview ? /*#__PURE__*/React.createElement(Poster, {\n    src: data === null || data === void 0 ? void 0 : (_data$getProject2 = data.getProject) === null || _data$getProject2 === void 0 ? void 0 : (_data$getProject2$pre = _data$getProject2.preview) === null || _data$getProject2$pre === void 0 ? void 0 : _data$getProject2$pre.path,\n    onClick: () => {\n      var _data$getProject3, _data$getProject4, _data$getProject4$pre, _data$getProject5, _data$getProject6;\n\n      return onScreenshotClick && onScreenshotClick(data === null || data === void 0 ? void 0 : (_data$getProject3 = data.getProject) === null || _data$getProject3 === void 0 ? void 0 : _data$getProject3.preview, data === null || data === void 0 ? void 0 : (_data$getProject4 = data.getProject) === null || _data$getProject4 === void 0 ? void 0 : (_data$getProject4$pre = _data$getProject4.preview) === null || _data$getProject4$pre === void 0 ? void 0 : _data$getProject4$pre.id, [data === null || data === void 0 ? void 0 : (_data$getProject5 = data.getProject) === null || _data$getProject5 === void 0 ? void 0 : _data$getProject5.preview, ...(data === null || data === void 0 ? void 0 : (_data$getProject6 = data.getProject) === null || _data$getProject6 === void 0 ? void 0 : _data$getProject6.screenshots)]);\n    }\n  }) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u041F\\u0440\\u0435\\u0432\\u044C\\u044E \\u043D\\u0435\\u0442\"), (data === null || data === void 0 ? void 0 : (_data$getProject7 = data.getProject) === null || _data$getProject7 === void 0 ? void 0 : _data$getProject7.screenshots) && (data === null || data === void 0 ? void 0 : (_data$getProject8 = data.getProject) === null || _data$getProject8 === void 0 ? void 0 : (_data$getProject8$scr = _data$getProject8.screenshots) === null || _data$getProject8$scr === void 0 ? void 0 : _data$getProject8$scr.length) > 0 && /*#__PURE__*/React.createElement(Screenshots, null, screenshots.map((screenshot, index) => /*#__PURE__*/React.createElement(Screenshot, {\n    key: screenshot.id,\n    onClick: () => {\n      var _data$getProject9, _data$getProject10;\n\n      return onScreenshotClick && onScreenshotClick(screenshot, screenshot.id, [data === null || data === void 0 ? void 0 : (_data$getProject9 = data.getProject) === null || _data$getProject9 === void 0 ? void 0 : _data$getProject9.preview, ...(data === null || data === void 0 ? void 0 : (_data$getProject10 = data.getProject) === null || _data$getProject10 === void 0 ? void 0 : _data$getProject10.screenshots)]);\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: screenshot.path,\n    alt: screenshot.name\n  }), index === (screenshots === null || screenshots === void 0 ? void 0 : screenshots.length) - 1 && residue > 0 && /*#__PURE__*/React.createElement(ScreenshotsCounter, null, /*#__PURE__*/React.createElement(\"span\", null, \"+\", residue)))))), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Meta, {\n    shareTitle: data === null || data === void 0 ? void 0 : (_data$getProject11 = data.getProject) === null || _data$getProject11 === void 0 ? void 0 : _data$getProject11.title,\n    shareUrl: false ? location.href : HOST_URL,\n    category: data === null || data === void 0 ? void 0 : (_data$getProject12 = data.getProject) === null || _data$getProject12 === void 0 ? void 0 : (_data$getProject12$ca = _data$getProject12.category) === null || _data$getProject12$ca === void 0 ? void 0 : _data$getProject12$ca.name\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3',\n    style: {\n      marginTop: -5,\n      marginBottom: 5\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$getProject13 = data.getProject) === null || _data$getProject13 === void 0 ? void 0 : _data$getProject13.title), /*#__PURE__*/React.createElement(Text, null, data === null || data === void 0 ? void 0 : (_data$getProject14 = data.getProject) === null || _data$getProject14 === void 0 ? void 0 : _data$getProject14.description)), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Difinitions, null, /*#__PURE__*/React.createElement(Difinition, _extends({}, data !== null && data !== void 0 && (_data$getProject15 = data.getProject) !== null && _data$getProject15 !== void 0 && _data$getProject15.company ? {\n    img: data === null || data === void 0 ? void 0 : (_data$getProject16 = data.getProject) === null || _data$getProject16 === void 0 ? void 0 : (_data$getProject16$co = _data$getProject16.company) === null || _data$getProject16$co === void 0 ? void 0 : (_data$getProject16$co2 = _data$getProject16$co.avatar) === null || _data$getProject16$co2 === void 0 ? void 0 : _data$getProject16$co2.path\n  } : {\n    icon: 'work'\n  }, {\n    label: 'Компания',\n    text: (data === null || data === void 0 ? void 0 : (_data$getProject17 = data.getProject) === null || _data$getProject17 === void 0 ? void 0 : (_data$getProject17$co = _data$getProject17.company) === null || _data$getProject17$co === void 0 ? void 0 : _data$getProject17$co.name) || '-',\n    onLink: () => {\n      var _data$getProject18, _data$getProject18$co;\n\n      return setQuery(data === null || data === void 0 ? void 0 : (_data$getProject18 = data.getProject) === null || _data$getProject18 === void 0 ? void 0 : (_data$getProject18$co = _data$getProject18.company) === null || _data$getProject18$co === void 0 ? void 0 : _data$getProject18$co.email, 'user', onCompanyLink);\n    }\n  })), !owned && (onLike || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onLike && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Мне нравится'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickLike,\n    revert: !isLiked\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'heart',\n    stroke: isLiked ? 'white' : 'var(--default-color-accent)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Добавить проект к себе'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onAdd,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'var(--default-color-accent)'\n  })))))))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(RoomsEditor, {\n    appearance: 'ghost',\n    defaultValue: data === null || data === void 0 ? void 0 : (_data$getProject19 = data.getProject) === null || _data$getProject19 === void 0 ? void 0 : _data$getProject19.rooms,\n    readOnly: true\n  }), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), (data === null || data === void 0 ? void 0 : (_data$getProject20 = data.getProject) === null || _data$getProject20 === void 0 ? void 0 : _data$getProject20.body) && /*#__PURE__*/React.createElement(HTMLView, {\n    content: data === null || data === void 0 ? void 0 : (_data$getProject21 = data.getProject) === null || _data$getProject21 === void 0 ? void 0 : _data$getProject21.body\n  }), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), (data === null || data === void 0 ? void 0 : (_data$getProject22 = data.getProject) === null || _data$getProject22 === void 0 ? void 0 : _data$getProject22.presentation) && videoPresentationObject && /*#__PURE__*/React.createElement(Presentation, {\n    type: videoPresentationObject.type,\n    videoId: videoPresentationObject.videoId\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\"), (data === null || data === void 0 ? void 0 : (_data$getProject23 = data.getProject) === null || _data$getProject23 === void 0 ? void 0 : _data$getProject23.members) && (data === null || data === void 0 ? void 0 : (_data$getProject24 = data.getProject) === null || _data$getProject24 === void 0 ? void 0 : (_data$getProject24$me = _data$getProject24.members) === null || _data$getProject24$me === void 0 ? void 0 : _data$getProject24$me.length) > 0 && /*#__PURE__*/React.createElement(Members, {\n    percentage: 'minmax(320px, 1fr)'\n  }, data === null || data === void 0 ? void 0 : (_data$getProject25 = data.getProject) === null || _data$getProject25 === void 0 ? void 0 : _data$getProject25.members.map(member => {\n    var _member$avatar;\n\n    return /*#__PURE__*/React.createElement(Difinition, {\n      key: member === null || member === void 0 ? void 0 : member.email,\n      img: (member === null || member === void 0 ? void 0 : (_member$avatar = member.avatar) === null || _member$avatar === void 0 ? void 0 : _member$avatar.path) || '/images/avatar-default.png',\n      label: getLabelRole(member === null || member === void 0 ? void 0 : member.account),\n      text: member === null || member === void 0 ? void 0 : member.name,\n      onLink: onMemberLink && (() => setQuery(member === null || member === void 0 ? void 0 : member.email, 'user', onMemberLink))\n    });\n  })), (!(data !== null && data !== void 0 && (_data$getProject26 = data.getProject) !== null && _data$getProject26 !== void 0 && _data$getProject26.members) || (data === null || data === void 0 ? void 0 : (_data$getProject27 = data.getProject) === null || _data$getProject27 === void 0 ? void 0 : (_data$getProject27$me = _data$getProject27.members) === null || _data$getProject27$me === void 0 ? void 0 : _data$getProject27$me.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u044B\"), (data === null || data === void 0 ? void 0 : (_data$getProject28 = data.getProject) === null || _data$getProject28 === void 0 ? void 0 : _data$getProject28.files) && (data === null || data === void 0 ? void 0 : (_data$getProject29 = data.getProject) === null || _data$getProject29 === void 0 ? void 0 : (_data$getProject29$fi = _data$getProject29.files) === null || _data$getProject29$fi === void 0 ? void 0 : _data$getProject29$fi.length) > 0 && /*#__PURE__*/React.createElement(Files, {\n    percentage: 'minmax(256px, 1fr)'\n  }, data === null || data === void 0 ? void 0 : (_data$getProject30 = data.getProject) === null || _data$getProject30 === void 0 ? void 0 : _data$getProject30.files.map(file => /*#__PURE__*/React.createElement(Difinition, {\n    key: file.id,\n    icon: 'paper',\n    label: file.filename,\n    text: getFileSize(file.size),\n    onLink: () => onFileLink && onFileLink(file)\n  }))), (!(data !== null && data !== void 0 && (_data$getProject31 = data.getProject) !== null && _data$getProject31 !== void 0 && _data$getProject31.files) || (data === null || data === void 0 ? void 0 : (_data$getProject32 = data.getProject) === null || _data$getProject32 === void 0 ? void 0 : (_data$getProject32$fi = _data$getProject32.files) === null || _data$getProject32$fi === void 0 ? void 0 : _data$getProject32$fi.length) === 0) && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0424\\u0430\\u0439\\u043B\\u043E\\u0432 \\u043D\\u0435\\u0442\"))));\n};\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/ProjectView/index.js"],"names":["React","useState","useEffect","styled","css","useQuery","Row","Column","Grid","Title","Text","Image","Meta","Button","Icon","Alert","Divider","Difinition","RoomsEditor","VideoPresentation","parseUrl","Tooltip","Wrap","WrapTooltip","getFileSize","getLabelRole","useEntityQuery","HTMLView","Processed","queries","config","HOST_URL","get","appearance","Container","Media","Content","Screenshots","Screenshot","div","onClick","ScreenshotsCounter","CentralAlert","Poster","Difinitions","Presentation","Actions","Files","Members","View","project","className","style","slicedFactor","owned","liked","onAdd","onLike","onScreenshotClick","onFileLink","onMemberLink","onCompanyLink","setQuery","data","loading","error","GET_PROJECT","variables","id","isLiked","setLike","screenshots","setScreenshots","residue","setResidue","videoPresentationObject","setVideoPresentationObject","onClickLike","getProject","response","images","preview","slicedImages","slice","url","URL","presentation","length","path","map","screenshot","index","name","title","location","href","category","marginTop","marginBottom","description","company","img","avatar","icon","email","rooms","body","type","videoId","members","member","account","width","textAlign","files","file","filename","size","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Grid from '../../atomic-ui/components/Grid'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport RoomsEditor from '../../atomic-ui/components/RoomsEditor'\nimport VideoPresentation, { parseUrl } from '../../atomic-ui/components/VideoPresentation'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport { getFileSize, getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport HTMLView from '../HTMLView'\nimport Processed from '../Processed'\nimport queries from '../../graphql/queries'\nimport config from '../../config'\n\nconst HOST_URL = config.get('host-url')\n\nexport const Wrap = styled(Column)`\n  flex-grow: 1;\n\n  iframe {\n    width: 100%;\n  }\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const Container = styled(Row)`\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Media = styled(Column)`\n  grid-gap: 5px;\n  flex-basis: 35%;\n\n  & > span {\n    display: flex;\n    flex-grow: 1;\n  }\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  flex-basis: 65%;\n\n  @media only screen and (max-width: 480px) {\n    flex-basis: 100%;\n  }\n`\n\nexport const Screenshots = styled(Row)`\n  justify-content: space-between;\n  grid-gap: 5px;\n`\n\nexport const Screenshot = styled.div`\n  position: relative;\n  z-index: var(--z-12);\n  width: auto;\n  height: var(--input-height-s);\n  min-width: var(--input-height-s);\n  min-height: var(--input-height-s);\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n  transition: opacity 150ms ease;\n\n  span,\n  span > img {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n    height: 100%;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const ScreenshotsCounter = styled(Text)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: var(--z-10);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  span {\n    position: relative;\n    z-index: var(--z-12);\n    color: white;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: var(--z-10);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: var(--default-color-accent);\n    border-radius: var(--surface-border-radius);\n    opacity: 0.65;\n  }\n`\n\nexport const CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n`\n\nexport const Poster = styled(Image)`\n  width: 100%;\n  height: 100%;\n  max-height: 285px;\n  object-fit: cover;\n  border-radius: var(--surface-border-radius);\n  flex-grow: 1;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Difinitions = styled(Row)`\n  flex-grow: 100;\n  justify-content: space-between;\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`\n\nexport const Presentation = styled(VideoPresentation)`\n  display: flex;\n  flex-grow: 1;\n  width: 100%;\n  border-radius: var(--surface-border-radius);\n  overflow: hidden;\n`\n\nexport const Actions = styled(Row)`\n  @media only screen and (max-width: 480px) {\n    ${WrapTooltip} {\n      flex-grow: 1;\n\n      button {\n        flex-grow: 1;\n      }\n    }\n  }\n`\n\nexport const Files = styled(Grid)``\n\nexport const Members = styled(Grid)``\n\nexport const View = ({\n  project,\n  appearance,\n  className,\n  style,\n  slicedFactor = 6,\n  owned,\n  liked,\n  onAdd,\n  onLike,\n  onScreenshotClick,\n  onFileLink,\n  onMemberLink,\n  onCompanyLink\n}) => {\n  const { setQuery } = useEntityQuery()\n  const { data, loading, error } = useQuery(queries.GET_PROJECT, {\n    variables: {\n      id: project\n    }\n  })\n\n  const [isLiked, setLike] = useState(liked)\n\n  const [screenshots, setScreenshots] = useState([])\n  const [residue, setResidue] = useState(0)\n  const [videoPresentationObject, setVideoPresentationObject] = useState(null)\n\n  const onClickLike = () => {\n    if (onLike) onLike()\n    setLike(!isLiked)\n  }\n\n  useEffect(() => {\n    if (!loading && data.getProject) {\n      const response = data.getProject\n      const images = [response.preview, ...response.screenshots]\n      const slicedImages = images.slice(0, slicedFactor)\n      const url = URL && response.presentation && new URL(response.presentation)\n      const videoPresentationObject = parseUrl(url)\n      setResidue((images.length || slicedFactor) - slicedFactor)\n      setVideoPresentationObject(videoPresentationObject)\n      setScreenshots(slicedImages)\n    }\n  }, [loading, data, slicedFactor])\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      <Processed\n        data={data?.getProject}\n        loading={loading}\n        error={error}\n        errorMessage={'Упс! Не удалось загрузить информацию о проекте'}\n        emptyMessage={'Кажется такого проекта не существует'}>\n        <React.Fragment>\n          <Container>\n            <Media>\n              {data?.getProject?.preview ? (\n                <Poster\n                  src={data?.getProject?.preview?.path}\n                  onClick={() =>\n                    onScreenshotClick &&\n                    onScreenshotClick(data?.getProject?.preview, data?.getProject?.preview?.id, [\n                      data?.getProject?.preview,\n                      ...data?.getProject?.screenshots\n                    ])\n                  }\n                />\n              ) : (\n                <CentralAlert>Превью нет</CentralAlert>\n              )}\n              {data?.getProject?.screenshots && data?.getProject?.screenshots?.length > 0 && (\n                <Screenshots>\n                  {screenshots.map((screenshot, index) => (\n                    <Screenshot\n                      key={screenshot.id}\n                      onClick={() =>\n                        onScreenshotClick &&\n                        onScreenshotClick(screenshot, screenshot.id, [\n                          data?.getProject?.preview,\n                          ...data?.getProject?.screenshots\n                        ])\n                      }>\n                      <Image src={screenshot.path} alt={screenshot.name} />\n                      {index === screenshots?.length - 1 && residue > 0 && (\n                        <ScreenshotsCounter>\n                          <span>+{residue}</span>\n                        </ScreenshotsCounter>\n                      )}\n                    </Screenshot>\n                  ))}\n                </Screenshots>\n              )}\n            </Media>\n\n            <Content>\n              <Column>\n                <Meta\n                  shareTitle={data?.getProject?.title}\n                  shareUrl={typeof window !== 'undefined' ? location.href : HOST_URL}\n                  category={data?.getProject?.category?.name}\n                />\n                <Title tag={'h3'} style={{ marginTop: -5, marginBottom: 5 }}>\n                  {data?.getProject?.title}\n                </Title>\n                <Text>{data?.getProject?.description}</Text>\n              </Column>\n\n              <Column>\n                <Divider clear />\n\n                <Difinitions>\n                  <Difinition\n                    {...(data?.getProject?.company\n                      ? {\n                          img: data?.getProject?.company?.avatar?.path\n                        }\n                      : {\n                          icon: 'work'\n                        })}\n                    label={'Компания'}\n                    text={data?.getProject?.company?.name || '-'}\n                    onLink={() => setQuery(data?.getProject?.company?.email, 'user', onCompanyLink)}\n                  />\n\n                  {!owned && (onLike || onAdd) && (\n                    <Actions>\n                      {onLike && (\n                        <Tooltip text={'Мне нравится'}>\n                          <Button\n                            type={'button'}\n                            kind={'icon'}\n                            onClick={onClickLike}\n                            revert={!isLiked}>\n                            <Icon\n                              icon={'heart'}\n                              stroke={isLiked ? 'white' : 'var(--default-color-accent)'}\n                            />\n                          </Button>\n                        </Tooltip>\n                      )}\n                      {onAdd && (\n                        <Tooltip text={'Добавить проект к себе'}>\n                          <Button type={'button'} kind={'icon'} onClick={onAdd} revert>\n                            <Icon icon={'add'} stroke={'var(--default-color-accent)'} />\n                          </Button>\n                        </Tooltip>\n                      )}\n                    </Actions>\n                  )}\n                </Difinitions>\n              </Column>\n            </Content>\n          </Container>\n\n          <Divider clear />\n\n          <RoomsEditor appearance={'ghost'} defaultValue={data?.getProject?.rooms} readOnly />\n\n          <Divider clear />\n\n          {data?.getProject?.body && <HTMLView content={data?.getProject?.body} />}\n\n          <Divider clear />\n\n          {data?.getProject?.presentation && videoPresentationObject && (\n            <Presentation\n              type={videoPresentationObject.type}\n              videoId={videoPresentationObject.videoId}\n            />\n          )}\n\n          <Title tag={'h4'}>Участники проекта</Title>\n          {data?.getProject?.members && data?.getProject?.members?.length > 0 && (\n            <Members percentage={'minmax(320px, 1fr)'}>\n              {data?.getProject?.members.map((member) => (\n                <Difinition\n                  key={member?.email}\n                  img={member?.avatar?.path || '/images/avatar-default.png'}\n                  label={getLabelRole(member?.account)}\n                  text={member?.name}\n                  onLink={onMemberLink && (() => setQuery(member?.email, 'user', onMemberLink))}\n                />\n              ))}\n            </Members>\n          )}\n          {(!data?.getProject?.members || data?.getProject?.members?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Участников нет</Alert>\n          )}\n\n          <Divider clear />\n\n          <Title tag={'h4'}>Файлы</Title>\n          {data?.getProject?.files && data?.getProject?.files?.length > 0 && (\n            <Files percentage={'minmax(256px, 1fr)'}>\n              {data?.getProject?.files.map((file) => (\n                <Difinition\n                  key={file.id}\n                  icon={'paper'}\n                  label={file.filename}\n                  text={getFileSize(file.size)}\n                  onLink={() => onFileLink && onFileLink(file)}\n                />\n              ))}\n            </Files>\n          )}\n          {(!data?.getProject?.files || data?.getProject?.files?.length === 0) && (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Файлов нет</Alert>\n          )}\n        </React.Fragment>\n      </Processed>\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}