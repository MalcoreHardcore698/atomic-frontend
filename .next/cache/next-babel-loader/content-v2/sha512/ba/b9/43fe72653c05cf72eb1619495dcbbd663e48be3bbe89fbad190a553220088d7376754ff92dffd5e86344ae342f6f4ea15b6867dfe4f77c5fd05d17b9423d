{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Image from '../../atomic-ui/components/Image';\nimport Meta from '../../atomic-ui/components/Meta';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Button from '../../atomic-ui/components/Button';\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip';\nimport { getLabelRole } from '../../atomic-ui/utils/functions';\nimport { useEntityQuery } from '../../hooks/useEntityQuery';\nimport { More } from '../Styled';\nimport { Loader } from '../Styled';\nimport ProjectCard from '../ProjectCard';\nimport queries from '../../graphql/queries';\nexport var Wrap = styled(Column).withConfig({\n  displayName: \"UserView__Wrap\",\n  componentId: \"ph8qrp-0\"\n})([\"grid-gap:0;flex-grow:1;\", \" \", \" \", \"\"], function (_ref) {\n  var appearance = _ref.appearance;\n  return appearance === 'default' && css([\"padding:var(--default-gap);background:var(--surface-background);border:var(--surface-border);border-radius:var(--surface-border-radius);box-shadow:var(--surface-shadow);\"]);\n}, function (_ref2) {\n  var appearance = _ref2.appearance;\n  return appearance === 'ghost' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n}, function (_ref3) {\n  var appearance = _ref3.appearance;\n  return appearance === 'clear' && css([\"padding:0;border:none;background:none;border-radius:0;box-shadow:none;\"]);\n});\n_c = Wrap;\nexport var RoundedAvatar = styled(Image).withConfig({\n  displayName: \"UserView__RoundedAvatar\",\n  componentId: \"ph8qrp-1\"\n})([\"width:196px;height:196px;border-radius:var(--surface-border-radius);border:1px solid var(--ghost-color-background);object-fit:cover;@media only screen and (max-width:480px){width:100%;height:256px;}\"]);\n_c2 = RoundedAvatar;\nexport var Content = styled(Column).withConfig({\n  displayName: \"UserView__Content\",\n  componentId: \"ph8qrp-2\"\n})([\"grid-gap:0;width:100%;\"]);\n_c3 = Content;\nexport var Difinitions = styled(Row).withConfig({\n  displayName: \"UserView__Difinitions\",\n  componentId: \"ph8qrp-3\"\n})([\"justify-content:space-between;@media only screen and (max-width:480px){flex-direction:column;grid-gap:var(--default-gap);}\"]);\n_c4 = Difinitions;\nexport var About = styled.div.withConfig({\n  displayName: \"UserView__About\",\n  componentId: \"ph8qrp-4\"\n})([\"flex-grow:100;p{display:-webkit-box;-webkit-line-clamp:5;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;}\"]);\n_c5 = About;\nexport var Projects = styled.div.withConfig({\n  displayName: \"UserView__Projects\",\n  componentId: \"ph8qrp-5\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c6 = Projects;\nexport var Actions = styled(Row).withConfig({\n  displayName: \"UserView__Actions\",\n  componentId: \"ph8qrp-6\"\n})([\"@media only screen and (max-width:480px){\", \"{flex-grow:1;button{flex-grow:1;}}}\"], WrapTooltip);\n_c7 = Actions;\nexport var View = function View(_ref4) {\n  _s2();\n\n  var _data$getUser$avatar, _data$getUser, _data$getUser$about, _data$getUser$company, _data$getUser$company2, _data$getUser$company3, _dataParticipatingUse;\n\n  var user = _ref4.user,\n      owned = _ref4.owned,\n      appearance = _ref4.appearance,\n      className = _ref4.className,\n      style = _ref4.style,\n      onChat = _ref4.onChat,\n      onAdd = _ref4.onAdd,\n      onMembers = _ref4.onMembers,\n      _onAboutMore = _ref4.onAboutMore,\n      onProjectAdd = _ref4.onProjectAdd,\n      onProjectLink = _ref4.onProjectLink,\n      onCompanyLink = _ref4.onCompanyLink,\n      onProjectCompanyLink = _ref4.onProjectCompanyLink,\n      onProjectScreenshotClick = _ref4.onProjectScreenshotClick;\n\n  var _useEntityQuery = useEntityQuery(),\n      setQuery = _useEntityQuery.setQuery;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAdded = _useState2[0],\n      setAdded = _useState2[1];\n\n  var _useQuery = useQuery(queries.GET_USER, {\n    variables: {\n      email: user\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useQuery2 = useQuery(queries.GET_USER_PARTICIPANT_PROJECTS, {\n    variables: {\n      member: user\n    }\n  }),\n      dataParticipatingUserProjects = _useQuery2.data,\n      loadingParticipatingUserProjects = _useQuery2.loading,\n      errorParticipatingUserProjects = _useQuery2.error;\n\n  var onClickAdd = function onClickAdd() {\n    if (onAdd) onAdd();\n    setAdded(!isAdded);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    appearance: appearance\n  }, !loading && !loadingParticipatingUserProjects && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(RoundedAvatar, {\n    src: ((_data$getUser$avatar = data.getUser.avatar) === null || _data$getUser$avatar === void 0 ? void 0 : _data$getUser$avatar.path) || '/images/avatar-default.png'\n  }), /*#__PURE__*/React.createElement(Content, null, data.getUser.account && /*#__PURE__*/React.createElement(Meta, {\n    category: getLabelRole(data.getUser.account)\n  }), data.getUser.name && /*#__PURE__*/React.createElement(Title, {\n    tag: 'h3'\n  }, data.getUser.name), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(About, null, ((_data$getUser = data.getUser) === null || _data$getUser === void 0 ? void 0 : (_data$getUser$about = _data$getUser.about) === null || _data$getUser$about === void 0 ? void 0 : _data$getUser$about.length) > 255 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, null, data.getUser.about.slice(0, 255), \"...\"), /*#__PURE__*/React.createElement(More, {\n    onClick: function onClick() {\n      return _onAboutMore(data.getUser);\n    }\n  }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")) : /*#__PURE__*/React.createElement(Text, null, data.getUser.about || 'Информация о себе не заполнена')))), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Difinitions, null, data.getUser.account === 'ENTITY' ? /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'chart',\n    label: 'Участники',\n    text: data.getUser.members || '-',\n    onLink: data.getUser.members && onMembers\n  }) : /*#__PURE__*/React.createElement(Difinition, _extends({}, data.getUser.company ? {\n    img: (_data$getUser$company = data.getUser.company) === null || _data$getUser$company === void 0 ? void 0 : (_data$getUser$company2 = _data$getUser$company.avatar) === null || _data$getUser$company2 === void 0 ? void 0 : _data$getUser$company2.path\n  } : {\n    icon: 'chart'\n  }, {\n    label: 'Компания',\n    text: ((_data$getUser$company3 = data.getUser.company) === null || _data$getUser$company3 === void 0 ? void 0 : _data$getUser$company3.name) || '-',\n    onLink: data.getUser.company && function () {\n      var _data$getUser$company4;\n\n      return setQuery((_data$getUser$company4 = data.getUser.company) === null || _data$getUser$company4 === void 0 ? void 0 : _data$getUser$company4.email, 'user', onCompanyLink);\n    }\n  })), /*#__PURE__*/React.createElement(Difinition, {\n    icon: 'work',\n    label: 'Проекты',\n    text: (dataParticipatingUserProjects === null || dataParticipatingUserProjects === void 0 ? void 0 : (_dataParticipatingUse = dataParticipatingUserProjects.getProjects) === null || _dataParticipatingUse === void 0 ? void 0 : _dataParticipatingUse.length) || '-'\n  }), !owned && (onChat || onAdd) && /*#__PURE__*/React.createElement(Actions, null, onChat && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Написать пользователю'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    appearance: 'green',\n    onClick: onChat,\n    revert: true\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'chat',\n    stroke: 'var(--default-color-green)'\n  }))), onAdd && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Подписаться на пользователя'\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: 'button',\n    kind: 'icon',\n    onClick: onClickAdd,\n    revert: !isAdded\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: isAdded ? 'check' : 'add',\n    stroke: isAdded ? 'white' : 'var(--default-color-accent)'\n  }))))), /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0420\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), !loadingParticipatingUserProjects && dataParticipatingUserProjects && dataParticipatingUserProjects.getProjects.length > 0 ? /*#__PURE__*/React.createElement(Projects, null, dataParticipatingUserProjects.getProjects.map(function (project) {\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: project.id,\n      owned: owned,\n      project: project,\n      appearance: 'clear',\n      onAdd: function onAdd() {\n        return onProjectAdd(project);\n      },\n      onLink: function onLink() {\n        return onProjectLink(project);\n      },\n      onAboutMore: function onAboutMore() {\n        return _onAboutMore(project);\n      },\n      onCompanyLink: project.company && function () {\n        return onProjectCompanyLink(project.company);\n      },\n      onScreenshotClick: function onScreenshotClick(_, key) {\n        return onProjectScreenshotClick && onProjectScreenshotClick(_, key, [project.preview].concat(_toConsumableArray(project.screenshots)));\n      }\n    });\n  })) : !loadingParticipatingUserProjects && dataParticipatingUserProjects && dataParticipatingUserProjects.getProjects.length === 0 ? /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0440\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043B(-\\u0430) \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\") : errorParticipatingUserProjects ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u0430\\u0445\") : /*#__PURE__*/React.createElement(Spinner, null))) : error ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)));\n};\n\n_s2(View, \"bZlrqXo45o6fr+qgT7TMdNYffhE=\", false, function () {\n  return [useEntityQuery, useQuery, useQuery];\n});\n\n_c8 = View;\nView.defaultProps = {\n  appearance: 'default'\n};\nexport default View;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"RoundedAvatar\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Difinitions\");\n$RefreshReg$(_c5, \"About\");\n$RefreshReg$(_c6, \"Projects\");\n$RefreshReg$(_c7, \"Actions\");\n$RefreshReg$(_c8, \"View\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/UserView/index.js"],"names":["React","useState","styled","css","useQuery","Row","Column","Title","Text","Image","Meta","Icon","Alert","Divider","Difinition","Spinner","Button","Tooltip","Wrap","WrapTooltip","getLabelRole","useEntityQuery","More","Loader","ProjectCard","queries","appearance","RoundedAvatar","Content","Difinitions","About","div","Projects","Actions","View","user","owned","className","style","onChat","onAdd","onMembers","onAboutMore","onProjectAdd","onProjectLink","onCompanyLink","onProjectCompanyLink","onProjectScreenshotClick","setQuery","isAdded","setAdded","GET_USER","variables","email","data","loading","error","GET_USER_PARTICIPANT_PROJECTS","member","dataParticipatingUserProjects","loadingParticipatingUserProjects","errorParticipatingUserProjects","onClickAdd","getUser","avatar","path","account","name","about","length","slice","members","company","img","icon","getProjects","map","project","id","_","key","preview","screenshots","width","textAlign","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Image from '../../atomic-ui/components/Image'\nimport Meta from '../../atomic-ui/components/Meta'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Button from '../../atomic-ui/components/Button'\nimport Tooltip, { Wrap as WrapTooltip } from '../../atomic-ui/components/Tooltip'\nimport { getLabelRole } from '../../atomic-ui/utils/functions'\n\nimport { useEntityQuery } from '../../hooks/useEntityQuery'\nimport { More } from '../Styled'\nimport { Loader } from '../Styled'\nimport ProjectCard from '../ProjectCard'\nimport queries from '../../graphql/queries'\n\nexport const Wrap = styled(Column)`\n  grid-gap: 0;\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      padding: var(--default-gap);\n      background: var(--surface-background);\n      border: var(--surface-border);\n      border-radius: var(--surface-border-radius);\n      box-shadow: var(--surface-shadow);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'ghost' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      padding: 0;\n      border: none;\n      background: none;\n      border-radius: 0;\n      box-shadow: none;\n    `}\n`\n\nexport const RoundedAvatar = styled(Image)`\n  width: 196px;\n  height: 196px;\n  border-radius: var(--surface-border-radius);\n  border: 1px solid var(--ghost-color-background);\n  object-fit: cover;\n\n  @media only screen and (max-width: 480px) {\n    width: 100%;\n    height: 256px;\n  }\n`\n\nexport const Content = styled(Column)`\n  grid-gap: 0;\n  width: 100%;\n`\n\nexport const Difinitions = styled(Row)`\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const About = styled.div`\n  flex-grow: 100;\n\n  p {\n    display: -webkit-box;\n    -webkit-line-clamp: 5;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport const Projects = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nexport const Actions = styled(Row)`\n  @media only screen and (max-width: 480px) {\n    ${WrapTooltip} {\n      flex-grow: 1;\n\n      button {\n        flex-grow: 1;\n      }\n    }\n  }\n`\n\nexport const View = ({\n  user,\n  owned,\n  appearance,\n  className,\n  style,\n  onChat,\n  onAdd,\n  onMembers,\n  onAboutMore,\n  onProjectAdd,\n  onProjectLink,\n  onCompanyLink,\n  onProjectCompanyLink,\n  onProjectScreenshotClick\n}) => {\n  const { setQuery } = useEntityQuery()\n  const [isAdded, setAdded] = useState(false)\n  const { data, loading, error } = useQuery(queries.GET_USER, {\n    variables: {\n      email: user\n    }\n  })\n  const {\n    data: dataParticipatingUserProjects,\n    loading: loadingParticipatingUserProjects,\n    error: errorParticipatingUserProjects\n  } = useQuery(queries.GET_USER_PARTICIPANT_PROJECTS, {\n    variables: {\n      member: user\n    }\n  })\n\n  const onClickAdd = () => {\n    if (onAdd) onAdd()\n    setAdded(!isAdded)\n  }\n\n  return (\n    <Wrap className={className} style={style} appearance={appearance}>\n      {!loading && !loadingParticipatingUserProjects && data ? (\n        <React.Fragment>\n          <Row>\n            <RoundedAvatar src={data.getUser.avatar?.path || '/images/avatar-default.png'} />\n\n            <Content>\n              {data.getUser.account && <Meta category={getLabelRole(data.getUser.account)} />}\n              {data.getUser.name && <Title tag={'h3'}>{data.getUser.name}</Title>}\n\n              <Divider />\n\n              <About>\n                {data.getUser?.about?.length > 255 ? (\n                  <React.Fragment>\n                    <Text>{data.getUser.about.slice(0, 255)}...</Text>\n                    <More onClick={() => onAboutMore(data.getUser)}>Подробнее</More>\n                  </React.Fragment>\n                ) : (\n                  <Text>{data.getUser.about || 'Информация о себе не заполнена'}</Text>\n                )}\n              </About>\n            </Content>\n          </Row>\n\n          <Divider />\n\n          <Difinitions>\n            {data.getUser.account === 'ENTITY' ? (\n              <Difinition\n                icon={'chart'}\n                label={'Участники'}\n                text={data.getUser.members || '-'}\n                onLink={data.getUser.members && onMembers}\n              />\n            ) : (\n              <Difinition\n                {...(data.getUser.company\n                  ? {\n                      img: data.getUser.company?.avatar?.path\n                    }\n                  : {\n                      icon: 'chart'\n                    })}\n                label={'Компания'}\n                text={data.getUser.company?.name || '-'}\n                onLink={\n                  data.getUser.company &&\n                  (() => setQuery(data.getUser.company?.email, 'user', onCompanyLink))\n                }\n              />\n            )}\n            <Difinition\n              icon={'work'}\n              label={'Проекты'}\n              text={dataParticipatingUserProjects?.getProjects?.length || '-'}\n            />\n            {!owned && (onChat || onAdd) && (\n              <Actions>\n                {onChat && (\n                  <Tooltip text={'Написать пользователю'}>\n                    <Button\n                      type={'button'}\n                      kind={'icon'}\n                      appearance={'green'}\n                      onClick={onChat}\n                      revert>\n                      <Icon icon={'chat'} stroke={'var(--default-color-green)'} />\n                    </Button>\n                  </Tooltip>\n                )}\n                {onAdd && (\n                  <Tooltip text={'Подписаться на пользователя'}>\n                    <Button type={'button'} kind={'icon'} onClick={onClickAdd} revert={!isAdded}>\n                      <Icon\n                        icon={isAdded ? 'check' : 'add'}\n                        stroke={isAdded ? 'white' : 'var(--default-color-accent)'}\n                      />\n                    </Button>\n                  </Tooltip>\n                )}\n              </Actions>\n            )}\n          </Difinitions>\n\n          <Divider />\n\n          <Column>\n            <Title tag={'h4'}>Реализованные проекты</Title>\n            {!loadingParticipatingUserProjects &&\n            dataParticipatingUserProjects &&\n            dataParticipatingUserProjects.getProjects.length > 0 ? (\n              <Projects>\n                {dataParticipatingUserProjects.getProjects.map((project) => (\n                  <ProjectCard\n                    key={project.id}\n                    owned={owned}\n                    project={project}\n                    appearance={'clear'}\n                    onAdd={() => onProjectAdd(project)}\n                    onLink={() => onProjectLink(project)}\n                    onAboutMore={() => onAboutMore(project)}\n                    onCompanyLink={project.company && (() => onProjectCompanyLink(project.company))}\n                    onScreenshotClick={(_, key) =>\n                      onProjectScreenshotClick &&\n                      onProjectScreenshotClick(_, key, [project.preview, ...project.screenshots])\n                    }\n                  />\n                ))}\n              </Projects>\n            ) : !loadingParticipatingUserProjects &&\n              dataParticipatingUserProjects &&\n              dataParticipatingUserProjects.getProjects.length === 0 ? (\n              <Alert style={{ width: '100%', textAlign: 'center' }}>\n                Пользователь не реализовал(-а) ни одного проекта\n              </Alert>\n            ) : errorParticipatingUserProjects ? (\n              <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n                Упс! Не удалось загрузить информацию о проектах\n              </Alert>\n            ) : (\n              <Spinner />\n            )}\n          </Column>\n        </React.Fragment>\n      ) : error ? (\n        <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n          Упс! Не удалось загрузить информацию о пользователе\n        </Alert>\n      ) : (\n        <Loader>\n          <Spinner />\n        </Loader>\n      )}\n    </Wrap>\n  )\n}\n\nView.defaultProps = {\n  appearance: 'default'\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}