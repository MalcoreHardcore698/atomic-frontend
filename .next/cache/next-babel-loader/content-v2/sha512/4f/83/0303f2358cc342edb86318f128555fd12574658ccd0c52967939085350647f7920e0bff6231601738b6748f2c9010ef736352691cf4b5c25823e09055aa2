{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Difinition\\\\index.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  font-weight: var(--font-weight-bold);\\n  line-height: 1;\\n\\n  @media only screen and (max-width: 480px) {\\n    font-size: var(--font-size-l);\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n      width: auto;\\n    \"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n      color: var(--ghost-color-text);\\n    \"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--ghost-color-text);\\n  font-size: var(--font-size-s);\\n  white-space: nowrap;\\n  width: 128px;\\n  max-width: 400px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n      background: var(--ghost-color-background);\\n\\n      svg path {\\n        stroke: var(--ghost-color-text);\\n      }\\n    \"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-m);\\n  height: var(--input-height-m);\\n  min-width: var(--input-height-m);\\n  min-height: var(--input-height-m);\\n  background: var(--default-color-\", \"-dim);\\n  border-radius: var(--surface-border-radius);\\n\\n  \", \"\\n\\n  @media only screen and (max-width: 480px) {\\n    width: var(--input-height-s);\\n    height: var(--input-height-s);\\n    min-width: var(--input-height-s);\\n    min-height: var(--input-height-s);\\n\\n    svg {\\n      transform: scale(0.85);\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  width: var(--input-height-m);\\n  height: var(--input-height-m);\\n  min-width: var(--input-height-m);\\n  min-height: var(--input-height-m);\\n  border-radius: var(--surface-border-radius);\\n  object-fit: cover;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  justify-content: center;\\n  grid-gap: 0;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      cursor: pointer;\\n\\n      &:hover {\\n        opacity: 0.65;\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  transition: opacity 150ms ease;\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Text from '../Text';\nimport Title from '../Title';\nimport Icon from '../Icon';\nimport Chip from '../Chip';\nimport { v4 } from 'uuid';\nimport Tooltip from '../Tooltip';\nexport var Wrap = styled(Row)(_templateObject(), function (_ref) {\n  var clickable = _ref.clickable;\n  return clickable && css(_templateObject2());\n});\n_c = Wrap;\nexport var Content = styled(Column)(_templateObject3());\n_c2 = Content;\nexport var Image = styled.img(_templateObject4());\n_c3 = Image;\nexport var RoundedIcon = styled(Icon)(_templateObject5(), function (_ref2) {\n  var color = _ref2.color;\n  return color || 'accent';\n}, function (_ref3) {\n  var disabled = _ref3.disabled;\n  return disabled && css(_templateObject6());\n});\n_c4 = RoundedIcon;\nexport var Label = styled(Text)(_templateObject7(), function (_ref4) {\n  var disabled = _ref4.disabled;\n  return disabled && css(_templateObject8());\n}, function (_ref5) {\n  var stretch = _ref5.stretch;\n  return stretch && css(_templateObject9());\n});\n_c5 = Label;\nexport var Value = styled(Title)(_templateObject10());\n_c6 = Value;\nexport var getValue = function getValue(label, text, disabled) {\n  var disabledStyle = disabled ? {\n    color: 'var(--ghost-color-text)'\n  } : {};\n\n  if (Array.isArray(text)) {\n    var slicedFactor = 3;\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, text.slice(0, slicedFactor).map(function (item) {\n      return __jsx(Chip, {\n        key: v4(),\n        style: {\n          display: 'inline-flex'\n        },\n        color: 'ghost',\n        appearance: 'outlined',\n        size: 'xs',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, item);\n    }), text.length > 5 && __jsx(Chip, {\n      style: {\n        display: 'inline-flex'\n      },\n      color: 'ghost',\n      appearance: 'outlined',\n      size: 'xs',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"+\", text.slice(slicedFactor).length));\n  } // eslint-disable-next-line valid-typeof\n\n\n  if (typeof Text === 'funciton') {\n    var _Text = text;\n    return __jsx(_Text, {\n      style: disabledStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(Value, {\n    style: disabledStyle,\n    tag: !label ? 'h2' : 'h4',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, text);\n};\nexport var Difinition = function Difinition(_ref6) {\n  var img = _ref6.img,\n      color = _ref6.color,\n      icon = _ref6.icon,\n      label = _ref6.label,\n      text = _ref6.text,\n      tooltip = _ref6.tooltip,\n      className = _ref6.className,\n      style = _ref6.style,\n      stretch = _ref6.stretch,\n      disabled = _ref6.disabled,\n      revert = _ref6.revert,\n      onLink = _ref6.onLink;\n\n  var renderLabel = function renderLabel() {\n    return label && __jsx(Label, {\n      stretch: stretch,\n      disabled: disabled,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, label);\n  };\n\n  var renderText = function renderText() {\n    return tooltip ? __jsx(Tooltip, {\n      place: 'top',\n      text: tooltip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, getValue(label, text, disabled))) : __jsx(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, getValue(label, text, disabled));\n  };\n\n  return __jsx(Wrap, {\n    className: className,\n    style: style,\n    clickable: !disabled && !!onLink,\n    onClick: function onClick() {\n      return !disabled && onLink && onLink();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, img && !icon && __jsx(Image, {\n    src: img,\n    alt: 'Avatar',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 24\n    }\n  }), !img && icon && __jsx(RoundedIcon, {\n    icon: icon,\n    color: color,\n    disabled: disabled,\n    stroke: \"var(--default-color-\".concat(color || 'accent', \")\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, !revert && renderLabel(), !revert && renderText(), revert && renderText(), revert && renderLabel()));\n};\n_c7 = Difinition;\nexport default Difinition;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"RoundedIcon\");\n$RefreshReg$(_c5, \"Label\");\n$RefreshReg$(_c6, \"Value\");\n$RefreshReg$(_c7, \"Difinition\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Difinition/index.js"],"names":["React","styled","css","Row","Column","Text","Title","Icon","Chip","v4","Tooltip","Wrap","clickable","Content","Image","img","RoundedIcon","color","disabled","Label","stretch","Value","getValue","label","text","disabledStyle","Array","isArray","slicedFactor","slice","map","item","display","length","Difinition","icon","tooltip","className","style","revert","onLink","renderLabel","renderText"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\nimport Row from '../Row'\nimport Column from '../Column'\nimport Text from '../Text'\nimport Title from '../Title'\nimport Icon from '../Icon'\nimport Chip from '../Chip'\nimport { v4 } from 'uuid'\nimport Tooltip from '../Tooltip'\n\nexport const Wrap = styled(Row)`\n  transition: opacity 150ms ease;\n\n  ${({ clickable }) =>\n    clickable &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const Content = styled(Column)`\n  justify-content: center;\n  grid-gap: 0;\n`\n\nexport const Image = styled.img`\n  width: var(--input-height-m);\n  height: var(--input-height-m);\n  min-width: var(--input-height-m);\n  min-height: var(--input-height-m);\n  border-radius: var(--surface-border-radius);\n  object-fit: cover;\n`\n\nexport const RoundedIcon = styled(Icon)`\n  width: var(--input-height-m);\n  height: var(--input-height-m);\n  min-width: var(--input-height-m);\n  min-height: var(--input-height-m);\n  background: var(--default-color-${({ color }) => color || 'accent'}-dim);\n  border-radius: var(--surface-border-radius);\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      background: var(--ghost-color-background);\n\n      svg path {\n        stroke: var(--ghost-color-text);\n      }\n    `}\n\n  @media only screen and (max-width: 480px) {\n    width: var(--input-height-s);\n    height: var(--input-height-s);\n    min-width: var(--input-height-s);\n    min-height: var(--input-height-s);\n\n    svg {\n      transform: scale(0.85);\n    }\n  }\n`\n\nexport const Label = styled(Text)`\n  color: var(--ghost-color-text);\n  font-size: var(--font-size-s);\n  white-space: nowrap;\n  width: 128px;\n  max-width: 400px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: var(--ghost-color-text);\n    `}\n\n  ${({ stretch }) =>\n    stretch &&\n    css`\n      width: auto;\n    `}\n`\n\nexport const Value = styled(Title)`\n  font-weight: var(--font-weight-bold);\n  line-height: 1;\n\n  @media only screen and (max-width: 480px) {\n    font-size: var(--font-size-l);\n  }\n`\n\nexport const getValue = (label, text, disabled) => {\n  const disabledStyle = disabled ? { color: 'var(--ghost-color-text)' } : {}\n\n  if (Array.isArray(text)) {\n    const slicedFactor = 3\n    return (\n      <React.Fragment>\n        {text.slice(0, slicedFactor).map((item) => (\n          <Chip\n            key={v4()}\n            style={{ display: 'inline-flex' }}\n            color={'ghost'}\n            appearance={'outlined'}\n            size={'xs'}>\n            {item}\n          </Chip>\n        ))}\n        {text.length > 5 && (\n          <Chip\n            style={{ display: 'inline-flex' }}\n            color={'ghost'}\n            appearance={'outlined'}\n            size={'xs'}>\n            +{text.slice(slicedFactor).length}\n          </Chip>\n        )}\n      </React.Fragment>\n    )\n  }\n\n  // eslint-disable-next-line valid-typeof\n  if (typeof Text === 'funciton') {\n    const Text = text\n    return <Text style={disabledStyle} />\n  }\n\n  return (\n    <Value style={disabledStyle} tag={!label ? 'h2' : 'h4'}>\n      {text}\n    </Value>\n  )\n}\n\nexport const Difinition = ({\n  img,\n  color,\n  icon,\n  label,\n  text,\n  tooltip,\n  className,\n  style,\n  stretch,\n  disabled,\n  revert,\n  onLink\n}) => {\n  const renderLabel = () =>\n    label && (\n      <Label stretch={stretch} disabled={disabled}>\n        {label}\n      </Label>\n    )\n\n  const renderText = () =>\n    tooltip ? (\n      <Tooltip place={'top'} text={tooltip}>\n        <Row>{getValue(label, text, disabled)}</Row>\n      </Tooltip>\n    ) : (\n      <Row>{getValue(label, text, disabled)}</Row>\n    )\n\n  return (\n    <Wrap\n      className={className}\n      style={style}\n      clickable={!disabled && !!onLink}\n      onClick={() => !disabled && onLink && onLink()}>\n      {img && !icon && <Image src={img} alt={'Avatar'} />}\n      {!img && icon && (\n        <RoundedIcon\n          icon={icon}\n          color={color}\n          disabled={disabled}\n          stroke={`var(--default-color-${color || 'accent'})`}\n        />\n      )}\n      <Content>\n        {!revert && renderLabel()}\n        {!revert && renderText()}\n\n        {revert && renderText()}\n        {revert && renderLabel()}\n      </Content>\n    </Wrap>\n  )\n}\n\nexport default Difinition\n"]},"metadata":{},"sourceType":"module"}