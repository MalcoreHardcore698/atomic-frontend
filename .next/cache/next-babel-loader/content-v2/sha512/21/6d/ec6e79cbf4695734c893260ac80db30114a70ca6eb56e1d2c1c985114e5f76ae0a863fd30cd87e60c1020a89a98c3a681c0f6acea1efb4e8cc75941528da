{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { useHelper } from './useHelper';\nimport { useUser } from './useUser';\nimport queries from '../graphql/queries';\nexport const useProfile = ({\n  isManage\n} = {}) => {\n  const recall = useHelper();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    onMembers,\n    onCompanyLink,\n    onEdit\n  } = useUser({\n    isManage\n  });\n\n  const onChangePage = value => dispatch(setCurrentPage(value));\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  }, [recall]);\n  return {\n    user,\n    onChangePage,\n    onAddProject,\n    onAddArticle,\n    onMembers,\n    onCompanyLink,\n    onEdit\n  };\n};","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useProfile.js"],"names":["useCallback","useDispatch","useSelector","onArticleCreate","onProjectCreate","useHelper","useUser","queries","useProfile","isManage","recall","user","state","dispatch","onMembers","onCompanyLink","onEdit","onChangePage","value","setCurrentPage","onAddProject","mutation","CREATE_PROJECT","query","GET_USERS","isPurpose","onAddArticle","CREATE_ARTICLE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAe,EAAhB,KAAuB;AAC/C,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,IAAI,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,aAAb;AAA4BC,IAAAA;AAA5B,MAAuCV,OAAO,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAApD;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAWL,QAAQ,CAACM,cAAc,CAACD,KAAD,CAAf,CAAxC;;AAEA,QAAME,YAAY,GAAGpB,WAAW,CAAC,MAAM;AACrCU,IAAAA,MAAM,CAACN,eAAD,EAAkB;AACtBiB,MAAAA,QAAQ,EAAEd,OAAO,CAACe,cADI;AAEtBC,MAAAA,KAAK,EAAEhB,OAAO,CAACiB,SAFO;AAGtBC,MAAAA,SAAS,EAAE;AAHW,KAAlB,CAAN;AAKD,GAN+B,EAM7B,CAACf,MAAD,CAN6B,CAAhC;AAQA,QAAMgB,YAAY,GAAG1B,WAAW,CAAC,MAAM;AACrCU,IAAAA,MAAM,CAACP,eAAD,EAAkB;AACtBkB,MAAAA,QAAQ,EAAEd,OAAO,CAACoB,cADI;AAEtBF,MAAAA,SAAS,EAAE;AAFW,KAAlB,CAAN;AAID,GAL+B,EAK7B,CAACf,MAAD,CAL6B,CAAhC;AAOA,SAAO;AAAEC,IAAAA,IAAF;AAAQM,IAAAA,YAAR;AAAsBG,IAAAA,YAAtB;AAAoCM,IAAAA,YAApC;AAAkDZ,IAAAA,SAAlD;AAA6DC,IAAAA,aAA7D;AAA4EC,IAAAA;AAA5E,GAAP;AACD,CAzBM","sourcesContent":["import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { onArticleCreate } from '../store/helpers/article'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { useHelper } from './useHelper'\nimport { useUser } from './useUser'\nimport queries from '../graphql/queries'\n\nexport const useProfile = ({ isManage } = {}) => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n\n  const { onMembers, onCompanyLink, onEdit } = useUser({ isManage })\n\n  const onChangePage = (value) => dispatch(setCurrentPage(value))\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  return { user, onChangePage, onAddProject, onAddArticle, onMembers, onCompanyLink, onEdit }\n}\n"]},"metadata":{},"sourceType":"module"}