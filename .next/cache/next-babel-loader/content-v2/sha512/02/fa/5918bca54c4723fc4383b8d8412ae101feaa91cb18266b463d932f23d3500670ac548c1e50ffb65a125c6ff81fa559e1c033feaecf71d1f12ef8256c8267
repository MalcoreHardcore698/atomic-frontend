{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const useInfiniteScroll = ({\n  callbackOnTop,\n  callbackOnBottom,\n  offset = 50\n}) => {\n  const [lastScrollTop, setLastScrollTop] = useState(0);\n  useEffect(() => {\n    const scrollElement = document.documentElement;\n\n    const onScroll = () => {\n      if (!scrollElement) return;\n      const dir = scrollElement.scrollTop - lastScrollTop;\n\n      if (callbackOnBottom && dir > 0 && scrollElement.scrollTop + scrollElement.clientHeight >= scrollElement.scrollHeight - offset) {\n        callbackOnBottom(scrollElement.scrollTop, scrollElement.scrollHeight);\n      }\n\n      if (callbackOnTop && dir < 0 && scrollElement.scrollTop <= offset) {\n        callbackOnTop(scrollElement.scrollTop, scrollElement.scrollHeight);\n      }\n\n      setLastScrollTop(scrollElement.scrollTop);\n    };\n\n    if (scrollElement) {\n      window.addEventListener('scroll', onScroll);\n    }\n\n    return () => {\n      if (scrollElement) {\n        window.removeEventListener('scroll', onScroll);\n      }\n    };\n  }, [callbackOnTop, callbackOnBottom, offset]);\n};\nexport default useInfiniteScroll;","map":null,"metadata":{},"sourceType":"module"}