{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport PageRouter from '../components/Profile/PageRouter';\nimport { hasResponsibleMember } from '../components/Members';\nimport { Loader } from '../components/Styled';\nimport { useProfile } from '../hooks/useProfile';\nimport { profilePages } from '../__mock__';\nimport { articles as articlesFilterConfig, projects as projectsFilterConfig } from '../components/FilterBar/config';\nconst TITLE = 'Профиль';\n\nconst Profile = () => {\n  const router = useRouter();\n  const {\n    onChangePage,\n    onPurposeProject,\n    onPurposeArticle,\n    onCompanyLink,\n    onAboutMore,\n    onMembers,\n    onEdit\n  } = useProfile();\n  const {\n    user,\n    search,\n    currentPage,\n    visibleFilters\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    currentPage: state.root.currentPage,\n    visibleFilters: state.root.visibleFilters\n  }));\n  const isProjects = useMemo(() => currentPage === 'projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage === 'articles', [currentPage]);\n  const isFeed = useMemo(() => currentPage === 'feed', [currentPage]);\n  const defaultCurrentPage = useMemo(() => profilePages.find(page => page.value === currentPage), [currentPage]);\n  const buttonCreateText = useMemo(() => isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '', [isProjects, isArticles]);\n  const filterConfig = useMemo(() => {\n    if (isArticles) return articlesFilterConfig;\n    return projectsFilterConfig;\n  }, [isArticles]);\n  const pages = useMemo(() => profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== 'articles' : true), [user, profilePages]);\n  const getPurposeMethod = useCallback(() => {\n    if (isProjects && hasAccess(user, 'PURPOSE_PROJECT')) return onPurposeProject;\n    if (isArticles && hasAccess(user, 'PURPOSE_ARTICLE')) return onPurposeArticle;\n  }, [user, isProjects, isArticles, onPurposeProject, onPurposeArticle]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push({\n        pathname: '/auth',\n        query: router.query\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    const {\n      page\n    } = router.query;\n    if (page) onChangePage({\n      value: page\n    });\n  }, [router]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onAboutMore: onAboutMore,\n    onCompanyLink: onCompanyLink,\n    onMembers: onMembers,\n    onEdit: onEdit\n  }), /*#__PURE__*/React.createElement(Switch, {\n    options: pages,\n    defaultValue: defaultCurrentPage,\n    onChange: onChangePage,\n    stretch: true\n  }), !isFeed && /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: buttonCreateText,\n    onCreate: getPurposeMethod()\n  }), !isFeed && /*#__PURE__*/React.createElement(FilterBar, _extends({}, filterConfig, {\n    isOpen: visibleFilters\n  })), /*#__PURE__*/React.createElement(PageRouter, {\n    page: currentPage\n  })));\n};\n\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}