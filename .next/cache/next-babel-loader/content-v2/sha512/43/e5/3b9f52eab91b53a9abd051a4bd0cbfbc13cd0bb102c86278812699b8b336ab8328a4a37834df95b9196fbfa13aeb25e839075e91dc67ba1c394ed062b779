{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Avatar from '../Avatar';\nimport Button from '../Button';\nimport Title from '../Title';\nimport Icon from '../Icon';\nimport Text from '../Text';\nimport Meta from '../Meta';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Notice__Wrap\",\n  componentId: \"sc-1orn59b-0\"\n})([\"align-items:center;transition:opacity 150ms ease;\", \"\"], ({\n  onClick\n}) => onClick && css([\"cursor:pointer;&:hover{opacity:0.65;}\"]));\n_c = Wrap;\nexport const CircleIcon = styled(Icon).withConfig({\n  displayName: \"Notice__CircleIcon\",\n  componentId: \"sc-1orn59b-1\"\n})([\"width:var(--input-height-m);height:var(--input-height-m);min-width:var(--input-height-m);min-height:var(--input-height-m);background:var(--default-color-accent);border-radius:50%;\"]);\n_c2 = CircleIcon;\nexport const Content = styled(Column).withConfig({\n  displayName: \"Notice__Content\",\n  componentId: \"sc-1orn59b-2\"\n})([\"justify-content:space-between;align-items:flex-start;width:100%;grid-gap:0;\"]);\n_c3 = Content;\nexport const Header = styled(Row).withConfig({\n  displayName: \"Notice__Header\",\n  componentId: \"sc-1orn59b-3\"\n})([\"justify-content:space-between;width:100%;h4{font-size:var(--font-size-l);}\"]);\n_c4 = Header;\nexport const Body = styled(Row).withConfig({\n  displayName: \"Notice__Body\",\n  componentId: \"sc-1orn59b-4\"\n})([\"justify-content:space-between;width:100%;@media only screen and (max-width:480px){justify-content:flex-start;flex-wrap:wrap;}\"]);\n_c5 = Body;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"Notice__Actions\",\n  componentId: \"sc-1orn59b-5\"\n})([\"grid-gap:10px;\"]);\n_c6 = Actions;\nexport const Notice = ({\n  img,\n  icon,\n  title,\n  message,\n  date,\n  onClick,\n  onApply,\n  onReject\n}) => /*#__PURE__*/React.createElement(Wrap, {\n  onClick: onClick\n}, img && !icon && /*#__PURE__*/React.createElement(Avatar, {\n  src: img\n}), !img && icon && /*#__PURE__*/React.createElement(CircleIcon, {\n  icon: icon,\n  stroke: 'white'\n}), /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, title), /*#__PURE__*/React.createElement(Meta, {\n  date: date\n})), /*#__PURE__*/React.createElement(Body, null, /*#__PURE__*/React.createElement(Text, null, message), (onApply || onReject) && /*#__PURE__*/React.createElement(Actions, null, onApply && /*#__PURE__*/React.createElement(Button, {\n  type: 'button',\n  size: 's',\n  onClick: onApply\n}, \"\\u041F\\u0440\\u0438\\u043D\\u044F\\u0442\\u044C\"), onReject && /*#__PURE__*/React.createElement(Button, {\n  type: 'button',\n  appearance: 'red',\n  size: 's',\n  onClick: onReject\n}, \"\\u041E\\u0442\\u043A\\u043B\\u043E\\u043D\\u0438\\u0442\\u044C\")))));\n_c7 = Notice;\nexport default Notice;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"CircleIcon\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"Body\");\n$RefreshReg$(_c6, \"Actions\");\n$RefreshReg$(_c7, \"Notice\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Notice/index.js"],"names":["React","styled","css","Row","Column","Avatar","Button","Title","Icon","Text","Meta","Wrap","onClick","CircleIcon","Content","Header","Body","Actions","Notice","img","icon","title","message","date","onApply","onReject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGV,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,8DAIb,CAAC;AAAES,EAAAA;AAAF,CAAD,KACAA,OAAO,IACPV,GADO,2CALM,CAAV;KAAMS,I;AAeb,OAAO,MAAME,UAAU,GAAGZ,MAAM,CAACO,IAAD,CAAT;AAAA;AAAA;AAAA,2LAAhB;MAAMK,U;AASb,OAAO,MAAMC,OAAO,GAAGb,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,mFAAb;MAAMU,O;AAOb,OAAO,MAAMC,MAAM,GAAGd,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,kFAAZ;MAAMY,M;AASb,OAAO,MAAMC,IAAI,GAAGf,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,qIAAV;MAAMa,I;AAUb,OAAO,MAAMC,OAAO,GAAGhB,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,sBAAb;MAAMc,O;AAIb,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,IAA7B;AAAmCX,EAAAA,OAAnC;AAA4CY,EAAAA,OAA5C;AAAqDC,EAAAA;AAArD,CAAD,kBACpB,oBAAC,IAAD;AAAM,EAAA,OAAO,EAAEb;AAAf,GACGO,GAAG,IAAI,CAACC,IAAR,iBAAgB,oBAAC,MAAD;AAAQ,EAAA,GAAG,EAAED;AAAb,EADnB,EAEG,CAACA,GAAD,IAAQC,IAAR,iBAAgB,oBAAC,UAAD;AAAY,EAAA,IAAI,EAAEA,IAAlB;AAAwB,EAAA,MAAM,EAAE;AAAhC,EAFnB,eAIE,oBAAC,OAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAE;AAAZ,GAAmBC,KAAnB,CADF,eAEE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAEE;AAAZ,EAFF,CADF,eAME,oBAAC,IAAD,qBACE,oBAAC,IAAD,QAAOD,OAAP,CADF,EAEG,CAACE,OAAO,IAAIC,QAAZ,kBACC,oBAAC,OAAD,QACGD,OAAO,iBACN,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,QAAd;AAAwB,EAAA,IAAI,EAAE,GAA9B;AAAmC,EAAA,OAAO,EAAEA;AAA5C,gDAFJ,EAMGC,QAAQ,iBACP,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,QAAd;AAAwB,EAAA,UAAU,EAAE,KAApC;AAA2C,EAAA,IAAI,EAAE,GAAjD;AAAsD,EAAA,OAAO,EAAEA;AAA/D,4DAPJ,CAHJ,CANF,CAJF,CADK;MAAMP,M;AAgCb,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Avatar from '../Avatar'\nimport Button from '../Button'\nimport Title from '../Title'\nimport Icon from '../Icon'\nimport Text from '../Text'\nimport Meta from '../Meta'\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  transition: opacity 150ms ease;\n\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover {\n        opacity: 0.65;\n      }\n    `}\n`\n\nexport const CircleIcon = styled(Icon)`\n  width: var(--input-height-m);\n  height: var(--input-height-m);\n  min-width: var(--input-height-m);\n  min-height: var(--input-height-m);\n  background: var(--default-color-accent);\n  border-radius: 50%;\n`\n\nexport const Content = styled(Column)`\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  grid-gap: 0;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  h4 {\n    font-size: var(--font-size-l);\n  }\n`\n\nexport const Body = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n\n  @media only screen and (max-width: 480px) {\n    justify-content: flex-start;\n    flex-wrap: wrap;\n  }\n`\n\nexport const Actions = styled(Row)`\n  grid-gap: 10px;\n`\n\nexport const Notice = ({ img, icon, title, message, date, onClick, onApply, onReject }) => (\n  <Wrap onClick={onClick}>\n    {img && !icon && <Avatar src={img} />}\n    {!img && icon && <CircleIcon icon={icon} stroke={'white'} />}\n\n    <Content>\n      <Header>\n        <Title tag={'h4'}>{title}</Title>\n        <Meta date={date} />\n      </Header>\n\n      <Body>\n        <Text>{message}</Text>\n        {(onApply || onReject) && (\n          <Actions>\n            {onApply && (\n              <Button type={'button'} size={'s'} onClick={onApply}>\n                Принять\n              </Button>\n            )}\n            {onReject && (\n              <Button type={'button'} appearance={'red'} size={'s'} onClick={onReject}>\n                Отклонить\n              </Button>\n            )}\n          </Actions>\n        )}\n      </Body>\n    </Content>\n  </Wrap>\n)\n\nexport default Notice\n"]},"metadata":{},"sourceType":"module"}