{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nexport const Wrap = styled.div`\n  display: flex;\n  background: #efefef;\n\n  ${({\n  direction,\n  thickness,\n  margin\n}) => direction === 'horizontal' && css`\n      width: 100%;\n      height: ${thickness}px;\n      margin: ${margin}px 0;\n    `}\n\n  ${({\n  direction,\n  thickness,\n  margin\n}) => direction === 'vertical' && css`\n      height: 100%;\n      width: ${thickness}px;\n      margin: 0 ${margin}px;\n    `}\n\n  ${({\n  clear\n}) => clear && css`\n      margin: 0;\n    `}\n`;\nexport const Divider = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(Wrap, props, children);\n};\nDivider.defaultProps = {\n  direction: 'horizontal',\n  thickness: 1,\n  margin: 15\n};\nexport default Divider;","map":null,"metadata":{},"sourceType":"module"}