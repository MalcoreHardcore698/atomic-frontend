{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Row from '../../atomic-ui/components/Row';\nimport Difinition from '../../atomic-ui/components/Difinition';\nimport Button from '../../atomic-ui/components/Button';\nimport Icon from '../../atomic-ui/components/Icon';\nimport Text from '../../atomic-ui/components/Text';\nimport DateText from '../../atomic-ui/components/DateText';\nimport Message from '../../atomic-ui/components/Message';\nimport Input from '../../atomic-ui/components/Input';\nimport Column from '../../atomic-ui/components/Column';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport Alert from '../../atomic-ui/components/Alert';\nimport { Loader } from '../Styled';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"TicketChat__Wrap\",\n  componentId: \"sc-3e5jur-0\"\n})([\"width:100%;flex-grow:1;\"]);\n_c = Wrap;\nexport const Header = styled(Row).withConfig({\n  displayName: \"TicketChat__Header\",\n  componentId: \"sc-3e5jur-1\"\n})([\"justify-content:space-between;width:100%;\"]);\n_c2 = Header;\nexport const Messages = styled(Column).withConfig({\n  displayName: \"TicketChat__Messages\",\n  componentId: \"sc-3e5jur-2\"\n})([\"position:relative;background:#fbfbfb;border-radius:var(--surface-border-radius);padding:var(--default-gap);padding-top:55px;flex-grow:1;\"]);\n_c3 = Messages;\nexport const Meta = styled(Row).withConfig({\n  displayName: \"TicketChat__Meta\",\n  componentId: \"sc-3e5jur-3\"\n})([\"position:absolute;top:0;left:0;width:100%;justify-content:space-between;padding:8px var(--default-gap);border-radius:var(--surface-border-radius) var(--surface-border-radius) 0 0;background:var(--ghost-color-background);time{font-size:var(--font-size-m);font-weight:var(--font-weight-regular);color:var(--default-color-text);}\"]);\n_c4 = Meta;\nexport const Empty = styled(Text).withConfig({\n  displayName: \"TicketChat__Empty\",\n  componentId: \"sc-3e5jur-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;height:100%;flex-grow:1;\"]);\n_c5 = Empty;\nexport const TicketChat = ({\n  ticket,\n  loading,\n  onLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  _s();\n\n  var _ticket$author, _ticket$messages;\n\n  const [message, setMessage] = useState('');\n  return /*#__PURE__*/React.createElement(Wrap, props, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Difinition, {\n    label: 'Автор обращения',\n    text: ticket !== null && ticket !== void 0 && (_ticket$author = ticket.author) !== null && _ticket$author !== void 0 && _ticket$author.name && !loading ? ticket.author.name : '-'\n  }), /*#__PURE__*/React.createElement(Row, null, (ticket === null || ticket === void 0 ? void 0 : ticket.status) !== 'CLOSED' && /*#__PURE__*/React.createElement(Button, {\n    onClick: onFinish,\n    disabled: loading || !ticket\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onReport,\n    kind: 'icon',\n    appearance: 'red',\n    disabled: loading || !ticket\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'flag',\n    stroke: 'white'\n  })))), /*#__PURE__*/React.createElement(Messages, null, /*#__PURE__*/React.createElement(Meta, null, /*#__PURE__*/React.createElement(Text, null, \"\\u0422\\u0435\\u043C\\u0430: \", ticket !== null && ticket !== void 0 && ticket.title && !loading ? ticket.title : '-'), ticket !== null && ticket !== void 0 && ticket.createdAt && !loading ? /*#__PURE__*/React.createElement(DateText, {\n    text: ticket.createdAt,\n    options: {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    }\n  }) : /*#__PURE__*/React.createElement(Text, null, \"-\")), !loading && ticket && ticket !== null && ticket !== void 0 && ticket.messages && (ticket === null || ticket === void 0 ? void 0 : (_ticket$messages = ticket.messages) === null || _ticket$messages === void 0 ? void 0 : _ticket$messages.length) > 0 ? ((ticket === null || ticket === void 0 ? void 0 : ticket.messages) || []).map(message => {\n    var _message$user, _message$user$avatar, _message$user2, _ticket$counsellor;\n\n    return /*#__PURE__*/React.createElement(Message, {\n      key: message.id,\n      avatar: (_message$user = message.user) === null || _message$user === void 0 ? void 0 : (_message$user$avatar = _message$user.avatar) === null || _message$user$avatar === void 0 ? void 0 : _message$user$avatar.path,\n      side: ((_message$user2 = message.user) === null || _message$user2 === void 0 ? void 0 : _message$user2.email) === ((_ticket$counsellor = ticket.counsellor) === null || _ticket$counsellor === void 0 ? void 0 : _ticket$counsellor.email) ? 'owner' : 'observer',\n      name: message.name,\n      text: message.text,\n      time: message.createdAt,\n      onLink: onLink\n    });\n  }) : loading ? /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null)) : !ticket ? /*#__PURE__*/React.createElement(Alert, {\n    appearance: 'error',\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E\\u0431 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0438\") : /*#__PURE__*/React.createElement(Empty, null, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0435\")), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !ticket,\n    onSubmit: onAttach\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'attach',\n    stroke: 'white'\n  })), /*#__PURE__*/React.createElement(Input, {\n    placeholder: 'Отправьте сообщенение...',\n    disabled: loading || !ticket,\n    appearance: 'ghost',\n    onChange: value => setMessage(value)\n  }), /*#__PURE__*/React.createElement(Button, {\n    kind: 'icon',\n    disabled: loading || !ticket,\n    onClick: () => onSubmit(message)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'send',\n    stroke: 'white'\n  }))));\n};\n\n_s(TicketChat, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c6 = TicketChat;\nexport default TicketChat;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Messages\");\n$RefreshReg$(_c4, \"Meta\");\n$RefreshReg$(_c5, \"Empty\");\n$RefreshReg$(_c6, \"TicketChat\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/TicketChat/index.js"],"names":["React","useState","styled","Row","Difinition","Button","Icon","Text","DateText","Message","Input","Column","Spinner","Alert","Loader","Wrap","Header","Messages","Meta","Empty","TicketChat","ticket","loading","onLink","onFinish","onReport","onAttach","onSubmit","props","message","setMessage","author","name","status","title","createdAt","day","month","year","messages","length","map","id","user","avatar","path","email","counsellor","text","width","textAlign","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Difinition from '../../atomic-ui/components/Difinition'\nimport Button from '../../atomic-ui/components/Button'\nimport Icon from '../../atomic-ui/components/Icon'\nimport Text from '../../atomic-ui/components/Text'\nimport DateText from '../../atomic-ui/components/DateText'\nimport Message from '../../atomic-ui/components/Message'\nimport Input from '../../atomic-ui/components/Input'\nimport Column from '../../atomic-ui/components/Column'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport Alert from '../../atomic-ui/components/Alert'\n\nimport { Loader } from '../Styled'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n  flex-grow: 1;\n`\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n  width: 100%;\n`\n\nexport const Messages = styled(Column)`\n  position: relative;\n  background: #fbfbfb;\n  border-radius: var(--surface-border-radius);\n  padding: var(--default-gap);\n  padding-top: 55px;\n  flex-grow: 1;\n`\n\nexport const Meta = styled(Row)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  justify-content: space-between;\n  padding: 8px var(--default-gap);\n  border-radius: var(--surface-border-radius) var(--surface-border-radius) 0 0;\n  background: var(--ghost-color-background);\n\n  time {\n    font-size: var(--font-size-m);\n    font-weight: var(--font-weight-regular);\n    color: var(--default-color-text);\n  }\n`\n\nexport const Empty = styled(Text)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n`\n\nexport const TicketChat = ({\n  ticket,\n  loading,\n  onLink,\n  onFinish,\n  onReport,\n  onAttach,\n  onSubmit,\n  ...props\n}) => {\n  const [message, setMessage] = useState('')\n\n  return (\n    <Wrap {...props}>\n      <Header>\n        <Difinition\n          label={'Автор обращения'}\n          text={ticket?.author?.name && !loading ? ticket.author.name : '-'}\n        />\n\n        <Row>\n          {ticket?.status !== 'CLOSED' && (\n            <Button onClick={onFinish} disabled={loading || !ticket}>\n              Закрыть обращение\n            </Button>\n          )}\n          <Button onClick={onReport} kind={'icon'} appearance={'red'} disabled={loading || !ticket}>\n            <Icon icon={'flag'} stroke={'white'} />\n          </Button>\n        </Row>\n      </Header>\n\n      <Messages>\n        <Meta>\n          <Text>Тема: {ticket?.title && !loading ? ticket.title : '-'}</Text>\n          {ticket?.createdAt && !loading ? (\n            <DateText\n              text={ticket.createdAt}\n              options={{\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric'\n              }}\n            />\n          ) : (\n            <Text>-</Text>\n          )}\n        </Meta>\n\n        {!loading && ticket && ticket?.messages && ticket?.messages?.length > 0 ? (\n          (ticket?.messages || []).map((message) => (\n            <Message\n              key={message.id}\n              avatar={message.user?.avatar?.path}\n              side={message.user?.email === ticket.counsellor?.email ? 'owner' : 'observer'}\n              name={message.name}\n              text={message.text}\n              time={message.createdAt}\n              onLink={onLink}\n            />\n          ))\n        ) : loading ? (\n          <Loader>\n            <Spinner />\n          </Loader>\n        ) : !ticket ? (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию об обращении\n          </Alert>\n        ) : (\n          <Empty>Выберите обращение</Empty>\n        )}\n      </Messages>\n\n      <Row>\n        <Button kind={'icon'} disabled={loading || !ticket} onSubmit={onAttach}>\n          <Icon icon={'attach'} stroke={'white'} />\n        </Button>\n        <Input\n          placeholder={'Отправьте сообщенение...'}\n          disabled={loading || !ticket}\n          appearance={'ghost'}\n          onChange={(value) => setMessage(value)}\n        />\n        <Button kind={'icon'} disabled={loading || !ticket} onClick={() => onSubmit(message)}>\n          <Icon icon={'send'} stroke={'white'} />\n        </Button>\n      </Row>\n    </Wrap>\n  )\n}\n\nexport default TicketChat\n"]},"metadata":{},"sourceType":"module"}