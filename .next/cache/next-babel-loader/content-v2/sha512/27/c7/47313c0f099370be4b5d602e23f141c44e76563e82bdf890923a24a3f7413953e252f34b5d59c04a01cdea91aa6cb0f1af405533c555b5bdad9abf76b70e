{"ast":null,"code":"import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Tooltip from '../Tooltip';\nexport const Wrap = styled.div.withConfig({\n  displayName: \"Switch__Wrap\",\n  componentId: \"sc-13eyhlh-0\"\n})([\"display:flex;justify-content:space-between;width:min-content;min-width:240px;\"]);\nexport const Track = styled.div.withConfig({\n  displayName: \"Switch__Track\",\n  componentId: \"sc-13eyhlh-1\"\n})([\"position:relative;display:flex;border-radius:var(--surface-border-radius);background:var(--ghost-color-background);padding:3px;width:100%;height:var(--input-height-m);\", \" \", \" @media only screen and (max-width:480px){flex-direction:column;height:auto;}\"], ({\n  unary\n}) => unary && css([\"width:48px;height:24px;border-radius:25rem;cursor:pointer;\"]), ({\n  stretch\n}) => stretch && css([\"flex-grow:1;width:100%;\"]));\nexport const Label = styled.p.withConfig({\n  displayName: \"Switch__Label\",\n  componentId: \"sc-13eyhlh-2\"\n})([\"font-size:var(--font-size-m);font-weight:var(--font-weight-regular);\"]);\nexport const LabeledToggle = styled.span.withConfig({\n  displayName: \"Switch__LabeledToggle\",\n  componentId: \"sc-13eyhlh-3\"\n})([\"display:flex;justify-content:center;align-items:center;border:var(--surface-border);background:none;box-shadow:none;color:var(--ghost-color-text);font-size:var(--font-size-m);font-weight:var(--font-weight-medium);white-space:nowrap;padding:0 15px;cursor:pointer;flex-grow:1;width:\", \";svg{path,circle{stroke:var(--ghost-color-text);}}\", \" @media only screen and (max-width:480px){height:var(--input-height-m);}\"], ({\n  width\n}) => width, ({\n  active\n}) => active && css([\"border-radius:var(--surface-border-radius);background:var(--surface-background);box-shadow:var(--surface-box-shadow);color:var(--default-color-accent);svg{path,circle{stroke:var(--default-color-accent);}}\"]));\nexport const Toggle = styled.span.withConfig({\n  displayName: \"Switch__Toggle\",\n  componentId: \"sc-13eyhlh-4\"\n})([\"position:absolute;left:4px;display:flex;justify-content:center;align-items:center;width:18px;height:18px;border-radius:50%;background:var(--ghost-color-text);box-shadow:var(--surface-box-shadow);transition:left 150ms ease;\", \"\"], ({\n  active\n}) => active && css([\"left:26px;background:var(--default-color-accent);\"]));\nexport const Switch = ({\n  label,\n  options,\n  ltr,\n  rtl,\n  defaultValue,\n  className,\n  style,\n  onChange\n}) => {\n  const list = options || [0, 1];\n  const [selected, setSelected] = useState(defaultValue);\n\n  const onClick = item => {\n    setSelected(item);\n    if (onChange) onChange(item);\n  };\n\n  const renderLabeledToggle = (item, key) => /*#__PURE__*/React.createElement(LabeledToggle, {\n    key: key,\n    width: item.width || 'auto',\n    active: selected && item.value === selected.value,\n    onClick: () => onClick(item)\n  }, item.label);\n\n  return options && options.length > 0 ? /*#__PURE__*/React.createElement(Track, {\n    className: className,\n    style: style\n  }, list.map((item, index) => item.tooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n    key: index,\n    style: {\n      flexGrow: 1\n    },\n    text: item.tooltip\n  }, renderLabeledToggle(item)) : renderLabeledToggle(item, index))) : /*#__PURE__*/React.createElement(Wrap, {\n    className: className,\n    style: style,\n    onClick: () => onClick(!selected)\n  }, ltr && !rtl && /*#__PURE__*/React.createElement(Label, null, label), /*#__PURE__*/React.createElement(Track, {\n    unary: true\n  }, /*#__PURE__*/React.createElement(Toggle, {\n    active: selected\n  })), rtl && /*#__PURE__*/React.createElement(Label, null, label));\n};\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n};\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}