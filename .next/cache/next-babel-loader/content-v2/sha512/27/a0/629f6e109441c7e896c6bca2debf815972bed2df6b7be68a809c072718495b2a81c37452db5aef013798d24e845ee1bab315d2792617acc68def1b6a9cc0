{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Transition from '../Transition';\nimport Text, { Wrap as WrapText } from '../Text';\nimport Button from '../Button';\nimport Icon from '../Icon';\n\nconst getInfo = (type, tag) => {\n  if (type === 'success') {\n    if (tag === 'color') return 'green';\n    if (tag === 'icon') return 'check';\n    return 'var(--default-color-green)';\n  }\n\n  if (type === 'warning') {\n    if (tag === 'color') return 'orange';\n    if (tag === 'icon') return 'danger';\n    return 'var(--default-color-orange)';\n  }\n\n  if (tag === 'color') return 'red';\n  if (tag === 'icon') return 'danger';\n  return 'var(--default-color-red)';\n};\n\nexport const Wrap = styled(Row)`\n  align-items: center;\n  justify-content: space-between;\n  width: 320px;\n  cursor: pointer;\n  background: white;\n  border: var(--surface-border);\n  border-radius: var(--surface-border-radius);\n  box-shadow: var(--surface-shadow);\n  padding: var(--default-gap) calc(var(--default-gap) + 5px);\n  transition: opacity 150ms ease;\n\n  ${({\n  type\n}) => type && css`\n      background: ${getInfo(type)};\n    `}\n\n  &:hover {\n    opacity: 0.85;\n  }\n\n  ${WrapText} {\n    color: white;\n  }\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`;\nexport const MarkButton = styled(Button)`\n  background: white;\n  border-radius: 50%;\n  border: none;\n\n  &:hover {\n    background: white;\n    border: none;\n  }\n`;\nexport const Snack = ({\n  type,\n  message,\n  style,\n  className,\n  onRemove\n}) => __jsx(Transition, {\n  in: true,\n  appear: true,\n  animation: 'fade'\n}, __jsx(Wrap, {\n  type: type,\n  className: className,\n  style: style,\n  onClick: onRemove\n}, __jsx(Text, null, message), __jsx(MarkButton, {\n  kind: 'icon',\n  size: 'xs'\n}, __jsx(Icon, {\n  icon: getInfo(type, 'icon'),\n  stroke: getInfo(type),\n  size: 'xs'\n}))));\nexport default Snack;","map":null,"metadata":{},"sourceType":"module"}