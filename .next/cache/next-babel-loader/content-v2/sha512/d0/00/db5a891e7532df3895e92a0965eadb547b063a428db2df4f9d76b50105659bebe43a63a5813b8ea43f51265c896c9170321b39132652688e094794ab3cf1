{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport UserCard from '../../UserCard';\nimport CategoryCard from '../../CategoryCard';\nimport ArticleCard from '../../ArticleCard';\nimport ProjectCard from '../../ProjectCard';\nimport TicketCard from '../../TicketCard';\nimport RoleCard from '../../RoleCard';\nimport queries from '../../../graphql/queries';\nexport const entities = [{\n  value: 'getUsers',\n  label: 'Пользователи',\n  singlePath: 'user',\n  originPath: 'users',\n  query: queries.GET_USERS,\n  deleteQuery: queries.DELETE_USER,\n  deleteEntityMultiText: 'Пользователи',\n  deleteEntitySingleText: 'Пользователь',\n  render: (item, props) => /*#__PURE__*/React.createElement(UserCard, _extends({}, props, {\n    user: item\n  }))\n}, {\n  value: 'getCategories',\n  label: 'Категории',\n  singlePath: 'category',\n  originPath: 'categories',\n  query: queries.GET_CATEGORIES,\n  deleteQuery: queries.DELETE_CATEGORY,\n  deleteEntityMultiText: 'Категории',\n  deleteEntitySingleText: 'Категория',\n  render: (item, props) => /*#__PURE__*/React.createElement(CategoryCard, _extends({}, props, {\n    category: item\n  }))\n}, {\n  value: 'getArticles',\n  label: 'Статьи',\n  singlePath: 'article',\n  originPath: 'articles',\n  query: queries.GET_ARTICLES,\n  deleteQuery: queries.DELETE_ARTICLE,\n  deleteEntityMultiText: 'Статьи',\n  deleteEntitySingleText: 'Статья',\n  render: (item, props) => /*#__PURE__*/React.createElement(ArticleCard, _extends({}, props, {\n    article: item\n  }))\n}, {\n  value: 'getProjects',\n  label: 'Проекты',\n  singlePath: 'project',\n  originPath: 'projects',\n  query: queries.GET_PROJECTS,\n  deleteQuery: queries.DELETE_PROJECT,\n  deleteEntityMultiText: 'Продукты',\n  deleteEntitySingleText: 'Продукт',\n  render: (item, props) => /*#__PURE__*/React.createElement(ProjectCard, _extends({}, props, {\n    project: item,\n    preview: true\n  }))\n}, {\n  value: 'getTickets',\n  label: 'Обращения',\n  singlePath: 'ticket',\n  originPath: 'tickets',\n  query: queries.GET_TICKETS,\n  deleteQuery: queries.DELETE_TICKET,\n  deleteEntityMultiText: 'Обращения',\n  deleteEntitySingleText: 'Обращение',\n  render: (item, props) => /*#__PURE__*/React.createElement(TicketCard, _extends({}, props, {\n    ticket: item\n  }))\n}, {\n  value: 'getRoles',\n  label: 'Роли',\n  singlePath: 'role',\n  originPath: 'roles',\n  query: queries.GET_ROLES,\n  deleteQuery: queries.DELETE_ROLE,\n  deleteEntityMultiText: 'Роли',\n  deleteEntitySingleText: 'Роль',\n  render: (item, props) => /*#__PURE__*/React.createElement(RoleCard, _extends({}, props, {\n    role: item\n  }))\n}];","map":null,"metadata":{},"sourceType":"module"}