{"ast":null,"code":"var _jsxFileName = \"/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Switch/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport Tooltip from '../Tooltip';\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: min-content;\n  min-width: 240px;\n`;\nexport const Track = styled.div`\n  position: relative;\n  display: flex;\n  border-radius: var(--surface-border-radius);\n  background: var(--ghost-color-background);\n  padding: 3px;\n  width: 100%;\n  height: var(--input-height-m);\n\n  ${({\n  unary\n}) => unary && css`\n      width: 48px;\n      height: 24px;\n      border-radius: 25rem;\n      cursor: pointer;\n    `}\n\n  ${({\n  stretch\n}) => stretch && css`\n      flex-grow: 1;\n      width: 100%;\n    `}\n  \n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    height: auto;\n  }\n`;\nexport const Label = styled.p`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n`;\nexport const LabeledToggle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: var(--surface-border);\n  background: none;\n  box-shadow: none;\n  color: var(--ghost-color-text);\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-medium);\n  white-space: nowrap;\n  padding: 0 15px;\n  cursor: pointer;\n  flex-grow: 1;\n\n  width: ${({\n  width\n}) => width};\n\n  svg {\n    path,\n    circle {\n      stroke: var(--ghost-color-text);\n    }\n  }\n\n  ${({\n  active\n}) => active && css`\n      border-radius: var(--surface-border-radius);\n      background: var(--surface-background);\n      box-shadow: var(--surface-box-shadow);\n      color: var(--default-color-accent);\n\n      svg {\n        path,\n        circle {\n          stroke: var(--default-color-accent);\n        }\n      }\n    `}\n\n  @media only screen and (max-width: 480px) {\n    height: var(--input-height-m);\n  }\n`;\nexport const Toggle = styled.span`\n  position: absolute;\n  left: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n\n  border-radius: 50%;\n  background: var(--ghost-color-text);\n  box-shadow: var(--surface-box-shadow);\n  transition: left 150ms ease;\n\n  ${({\n  active\n}) => active && css`\n      left: 26px;\n      background: var(--default-color-accent);\n    `}\n`;\nexport const Switch = ({\n  label,\n  options,\n  ltr,\n  rtl,\n  defaultValue,\n  className,\n  style,\n  onChange\n}) => {\n  const list = options || [0, 1];\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(defaultValue);\n\n  const onClick = item => {\n    setSelected(item);\n    if (onChange) onChange(item);\n  };\n\n  const renderLabeledToggle = (item, key) => __jsx(LabeledToggle, {\n    key: key,\n    width: item.width || 'auto',\n    active: selected && item.value === selected.value,\n    onClick: () => onClick(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, item.label);\n\n  return options && options.length > 0 ? __jsx(Track, {\n    className: className,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, list.map((item, index) => item.tooltip ? __jsx(Tooltip, {\n    key: index,\n    style: {\n      flexGrow: 1\n    },\n    text: item.tooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, renderLabeledToggle(item)) : renderLabeledToggle(item, index))) : __jsx(Wrap, {\n    className: className,\n    style: style,\n    onClick: () => onClick(!selected),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, ltr && !rtl && __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  }, label), __jsx(Track, {\n    unary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(Toggle, {\n    active: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })), rtl && __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, label));\n};\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n};\nexport default Switch;","map":{"version":3,"sources":["/Users/alicefromwonderland/Desktop/branches/atomic/atomic-frontend/atomic-ui/components/Switch/index.js"],"names":["React","useState","styled","css","Tooltip","Wrap","div","Track","unary","stretch","Label","p","LabeledToggle","span","width","active","Toggle","Switch","label","options","ltr","rtl","defaultValue","className","style","onChange","list","selected","setSelected","onClick","item","renderLabeledToggle","key","value","length","map","index","tooltip","flexGrow","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Tooltip from '../Tooltip'\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: min-content;\n  min-width: 240px;\n`\n\nexport const Track = styled.div`\n  position: relative;\n  display: flex;\n  border-radius: var(--surface-border-radius);\n  background: var(--ghost-color-background);\n  padding: 3px;\n  width: 100%;\n  height: var(--input-height-m);\n\n  ${({ unary }) =>\n    unary &&\n    css`\n      width: 48px;\n      height: 24px;\n      border-radius: 25rem;\n      cursor: pointer;\n    `}\n\n  ${({ stretch }) =>\n    stretch &&\n    css`\n      flex-grow: 1;\n      width: 100%;\n    `}\n  \n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    height: auto;\n  }\n`\n\nexport const Label = styled.p`\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-regular);\n`\n\nexport const LabeledToggle = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: var(--surface-border);\n  background: none;\n  box-shadow: none;\n  color: var(--ghost-color-text);\n  font-size: var(--font-size-m);\n  font-weight: var(--font-weight-medium);\n  white-space: nowrap;\n  padding: 0 15px;\n  cursor: pointer;\n  flex-grow: 1;\n\n  width: ${({ width }) => width};\n\n  svg {\n    path,\n    circle {\n      stroke: var(--ghost-color-text);\n    }\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      border-radius: var(--surface-border-radius);\n      background: var(--surface-background);\n      box-shadow: var(--surface-box-shadow);\n      color: var(--default-color-accent);\n\n      svg {\n        path,\n        circle {\n          stroke: var(--default-color-accent);\n        }\n      }\n    `}\n\n  @media only screen and (max-width: 480px) {\n    height: var(--input-height-m);\n  }\n`\n\nexport const Toggle = styled.span`\n  position: absolute;\n  left: 4px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 18px;\n  height: 18px;\n\n  border-radius: 50%;\n  background: var(--ghost-color-text);\n  box-shadow: var(--surface-box-shadow);\n  transition: left 150ms ease;\n\n  ${({ active }) =>\n    active &&\n    css`\n      left: 26px;\n      background: var(--default-color-accent);\n    `}\n`\n\nexport const Switch = ({ label, options, ltr, rtl, defaultValue, className, style, onChange }) => {\n  const list = options || [0, 1]\n  const [selected, setSelected] = useState(defaultValue)\n\n  const onClick = (item) => {\n    setSelected(item)\n    if (onChange) onChange(item)\n  }\n\n  const renderLabeledToggle = (item, key) => (\n    <LabeledToggle\n      key={key}\n      width={item.width || 'auto'}\n      active={selected && item.value === selected.value}\n      onClick={() => onClick(item)}>\n      {item.label}\n    </LabeledToggle>\n  )\n\n  return options && options.length > 0 ? (\n    <Track className={className} style={style}>\n      {list.map((item, index) =>\n        item.tooltip ? (\n          <Tooltip key={index} style={{ flexGrow: 1 }} text={item.tooltip}>\n            {renderLabeledToggle(item)}\n          </Tooltip>\n        ) : (\n          renderLabeledToggle(item, index)\n        )\n      )}\n    </Track>\n  ) : (\n    <Wrap className={className} style={style} onClick={() => onClick(!selected)}>\n      {ltr && !rtl && <Label>{label}</Label>}\n      <Track unary>\n        <Toggle active={selected} />\n      </Track>\n      {rtl && <Label>{label}</Label>}\n    </Wrap>\n  )\n}\n\nSwitch.defaultProps = {\n  label: 'Enable good mood',\n  ltr: true\n}\n\nexport default Switch\n"]},"metadata":{},"sourceType":"module"}