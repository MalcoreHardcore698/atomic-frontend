{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport Row from '../../atomic-ui/components/Row';\nimport Column from '../../atomic-ui/components/Column';\nimport Title from '../../atomic-ui/components/Title';\nimport Input from '../../atomic-ui/components/Input';\nimport Button from '../../atomic-ui/components/Button';\nimport Select from '../../atomic-ui/components/Select';\nimport TextEditor from '../../atomic-ui/components/TextEditor';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Comment from '../../atomic-ui/components/Comment';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Spinner from '../../atomic-ui/components/Spinner';\nimport { getLabelStatus, getLabelCategory } from '../../atomic-ui/utils/functions';\nimport Form from '../Form';\nimport { Loader } from '../Styled';\nimport queries from '../../graphql/queries';\nimport config from '../../config';\nimport Checkbox from '../../atomic-ui/components/Checkbox';\nexport var Header = styled(Row).withConfig({\n  displayName: \"FormArticle__Header\",\n  componentId: \"sc-1ftxonu-0\"\n})([\"justify-content:space-between;@media only screen and (max-width:480px){flex-direction:column;align-items:end;grid-gap:var(--default-gap);}\"]);\nexport var Comments = function Comments(_ref) {\n  var article = _ref.article,\n      setValue = _ref.setValue;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkedAll = _useState4[0],\n      setCheckedAll = _useState4[1];\n\n  var _ref2 = article ? useQuery(queries.GET_COMMENTS, {\n    variables: {\n      id: article\n    }\n  }) : {\n    data: [],\n    loading: false\n  },\n      dataComments = _ref2.data,\n      loadingComments = _ref2.loading;\n\n  var handleCheckedComments = function handleCheckedComments(e) {\n    setCheckedAll(e.target.checked);\n    setComments(function (prev) {\n      return prev.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          checked: !item.checked\n        });\n      });\n    });\n  };\n\n  var handleCheckedComment = function handleCheckedComment(message, value) {\n    setComments(function (prev) {\n      return prev.map(function (item) {\n        return item.id === message.id ? _objectSpread(_objectSpread({}, item), {}, {\n          checked: value\n        }) : item;\n      });\n    });\n  };\n\n  var handleDeleteChecked = function handleDeleteChecked() {\n    setComments(function (prev) {\n      return prev.filter(function (message) {\n        return !message.checked;\n      });\n    });\n  };\n\n  var handleCommentEdit = function handleCommentEdit(message, text) {\n    setComments(function (prev) {\n      return prev.map(function (item) {\n        return item.id === message.id ? _objectSpread(_objectSpread({}, item), {}, {\n          updatedAt: new Date(),\n          text: text\n        }) : item;\n      });\n    });\n  };\n\n  var handleCommentDelete = function handleCommentDelete(message) {\n    setComments(function (prev) {\n      return prev.filter(function (item) {\n        return item.id !== message.id;\n      });\n    });\n  };\n\n  useEffect(function () {\n    if (article && !loadingComments && dataComments) {\n      setComments(dataComments.getComments.map(function (comment) {\n        return _objectSpread(_objectSpread({}, comment), {}, {\n          checked: false\n        });\n      }));\n    }\n  }, [article, dataComments, loadingComments]);\n  useEffect(function () {\n    setValue('comments', comments);\n  }, [comments]);\n\n  if (!article || comments.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Checkbox, {\n    label: 'Выделить все',\n    checked: checkedAll,\n    onChange: handleCheckedComments\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: 'var(--default-color-red)'\n    },\n    appearance: 'clear',\n    onClick: handleDeleteChecked\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0434\\u0435\\u043B\\u0435\\u043D\\u043D\\u043E\\u0435\")), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      gridGap: 5\n    }\n  }, comments.map(function (comment) {\n    var _comment$likes;\n\n    return /*#__PURE__*/React.createElement(Comment, {\n      key: \"\".concat(comment.id, \"_\").concat(comment.checked),\n      user: comment.author,\n      message: comment.text,\n      likes: (_comment$likes = comment.likes) === null || _comment$likes === void 0 ? void 0 : _comment$likes.length,\n      time: comment.createdAt !== comment.updatedAt ? comment.updatedAt : comment.createdAt,\n      isLiked: comment.likes.find(function (likedUser) {\n        return likedUser.email === user.email;\n      }),\n      isChecked: comment.checked,\n      isUpdated: comment.createdAt !== comment.updatedAt,\n      onChecked: function onChecked(value) {\n        return handleCheckedComment(comment, value);\n      },\n      onEdit: function onEdit(text) {\n        return handleCommentEdit(comment, text);\n      },\n      onDelete: function onDelete() {\n        return handleCommentDelete(comment);\n      },\n      compact: true\n    });\n  })));\n};\nexport var Article = function Article(_ref3) {\n  var article = _ref3.article,\n      categories = _ref3.categories,\n      statuses = _ref3.statuses,\n      mutation = _ref3.mutation,\n      appearance = _ref3.appearance,\n      className = _ref3.className,\n      canEditStatus = _ref3.canEditStatus,\n      onSubmit = _ref3.onSubmit;\n\n  var _ref4 = article ? useQuery(queries.GET_ARTICLE, {\n    variables: {\n      id: article\n    }\n  }) : {\n    data: {\n      getArticle: {}\n    },\n    loading: false,\n    error: false\n  },\n      data = _ref4.data,\n      loadingArticle = _ref4.loading,\n      errorArticle = _ref4.error;\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, function (_ref5) {\n    var _data$getArticle, _data$getArticle2, _data$getArticle3, _data$getArticle4, _data$getArticle5;\n\n    var register = _ref5.register,\n        loading = _ref5.loading,\n        errors = _ref5.errors,\n        control = _ref5.control,\n        getValues = _ref5.getValues,\n        setValue = _ref5.setValue;\n    return !loadingArticle && data ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(Title, {\n      tag: 'h4'\n    }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), errors && errors.preview && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u043F\\u0440\\u0435\\u0432\\u044C\\u044E\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'preview',\n      control: control,\n      rules: {\n        required: true\n      },\n      defaultValue: ((_data$getArticle = data.getArticle) === null || _data$getArticle === void 0 ? void 0 : _data$getArticle.preview) || null,\n      render: function render(_ref6) {\n        var value = _ref6.value,\n            onChange = _ref6.onChange;\n        return /*#__PURE__*/React.createElement(Dropzone, {\n          accept: 'image/*',\n          defaultValue: value,\n          onChange: onChange,\n          placeholder: 'Перетащите сюда изображение для превью',\n          tooltip: 'Разрешение: 960x480px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n        });\n      }\n    }), errors && errors.title && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n      type: 'text',\n      name: 'title',\n      ref: register({\n        required: true\n      }),\n      defaultValue: getValues('title') || ((_data$getArticle2 = data.getArticle) === null || _data$getArticle2 === void 0 ? void 0 : _data$getArticle2.title),\n      placeholder: 'Название',\n      appearance: 'ghost',\n      disabled: loading\n    }), /*#__PURE__*/React.createElement(Controller, {\n      name: 'category',\n      control: control,\n      defaultValue: (_data$getArticle3 = data.getArticle) !== null && _data$getArticle3 !== void 0 && _data$getArticle3.category ? {\n        value: data.getArticle.category.id,\n        label: getLabelCategory(data.getArticle.category.name)\n      } : null,\n      render: function render(_ref7) {\n        var value = _ref7.value,\n            onChange = _ref7.onChange;\n        return /*#__PURE__*/React.createElement(Select, {\n          appearance: 'ghost',\n          placeholder: 'Выберите раздел',\n          options: categories.filter(function (item) {\n            return item.type === 'DIVISION';\n          }).map(function (item) {\n            return {\n              value: item.id,\n              label: getLabelCategory(item.name)\n            };\n          }),\n          onChange: onChange,\n          defaultValue: value,\n          isLoading: loading,\n          isClearable: true\n        });\n      }\n    }), errors && errors.body && /*#__PURE__*/React.createElement(Alert, {\n      style: {\n        width: '100%'\n      },\n      appearance: 'error'\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0442\\u0430\\u0442\\u044C\\u0438\"), /*#__PURE__*/React.createElement(Controller, {\n      name: 'body',\n      control: control,\n      defaultValue: getValues('body') || ((_data$getArticle4 = data.getArticle) === null || _data$getArticle4 === void 0 ? void 0 : _data$getArticle4.body) || null,\n      rules: {\n        required: true\n      },\n      render: function render(_ref8) {\n        var value = _ref8.value,\n            onChange = _ref8.onChange;\n        return /*#__PURE__*/React.createElement(TextEditor, {\n          apiKey: config.get('tiny-key'),\n          appearance: 'ghost',\n          defaultValue: value,\n          onChange: onChange\n        });\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      article: article,\n      setValue: setValue\n    }), canEditStatus && /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), canEditStatus && /*#__PURE__*/React.createElement(Controller, {\n      name: 'status',\n      control: control,\n      defaultValue: (_data$getArticle5 = data.getArticle) !== null && _data$getArticle5 !== void 0 && _data$getArticle5.status ? {\n        value: data.getArticle.status,\n        label: getLabelStatus(data.getArticle.status)\n      } : null,\n      render: function render(_ref9) {\n        var value = _ref9.value,\n            onChange = _ref9.onChange;\n        return /*#__PURE__*/React.createElement(Select, {\n          appearance: 'ghost',\n          placeholder: 'Выберите статус',\n          options: statuses.map(function (item) {\n            return {\n              value: item,\n              label: getLabelStatus(item)\n            };\n          }),\n          onChange: onChange,\n          defaultValue: value,\n          menuPlacement: 'top',\n          isLoading: loading,\n          isClearable: true\n        });\n      }\n    })), /*#__PURE__*/React.createElement(Divider, {\n      clear: true\n    }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        flexGrow: 1\n      },\n      type: 'submit',\n      disabled: loading\n    }, article ? 'Сохранить' : 'Создать'))) : errorArticle ? /*#__PURE__*/React.createElement(Alert, {\n      appearance: 'error',\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, \"\\u0423\\u043F\\u0441! \\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044E \\u043E \\u0441\\u0442\\u0430\\u0442\\u044C\\u0435\") : /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  });\n};\nexport default Article;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormArticle/index.js"],"names":["React","useEffect","useState","styled","Controller","useSelector","useQuery","Row","Column","Title","Input","Button","Select","TextEditor","Dropzone","Alert","Comment","Divider","Spinner","getLabelStatus","getLabelCategory","Form","Loader","queries","config","Checkbox","Header","Comments","article","setValue","comments","setComments","user","state","checkedAll","setCheckedAll","GET_COMMENTS","variables","id","data","loading","dataComments","loadingComments","handleCheckedComments","e","target","checked","prev","map","item","handleCheckedComment","message","value","handleDeleteChecked","filter","handleCommentEdit","text","updatedAt","Date","handleCommentDelete","getComments","comment","length","color","gridGap","author","likes","createdAt","find","likedUser","email","Article","categories","statuses","mutation","appearance","className","canEditStatus","onSubmit","GET_ARTICLE","getArticle","error","loadingArticle","errorArticle","register","errors","control","getValues","preview","width","required","onChange","title","category","label","name","type","body","get","status","flexGrow","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Controller } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Column from '../../atomic-ui/components/Column'\nimport Title from '../../atomic-ui/components/Title'\nimport Input from '../../atomic-ui/components/Input'\nimport Button from '../../atomic-ui/components/Button'\nimport Select from '../../atomic-ui/components/Select'\nimport TextEditor from '../../atomic-ui/components/TextEditor'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Comment from '../../atomic-ui/components/Comment'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Spinner from '../../atomic-ui/components/Spinner'\nimport { getLabelStatus, getLabelCategory } from '../../atomic-ui/utils/functions'\n\nimport Form from '../Form'\nimport { Loader } from '../Styled'\nimport queries from '../../graphql/queries'\nimport config from '../../config'\nimport Checkbox from '../../atomic-ui/components/Checkbox'\n\nexport const Header = styled(Row)`\n  justify-content: space-between;\n\n  @media only screen and (max-width: 480px) {\n    flex-direction: column;\n    align-items: end;\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Comments = ({ article, setValue }) => {\n  const [comments, setComments] = useState([])\n\n  const user = useSelector((state) => state.user)\n  const [checkedAll, setCheckedAll] = useState(false)\n\n  const { data: dataComments, loading: loadingComments } = article\n    ? useQuery(queries.GET_COMMENTS, {\n        variables: {\n          id: article\n        }\n      })\n    : { data: [], loading: false }\n\n  const handleCheckedComments = (e) => {\n    setCheckedAll(e.target.checked)\n    setComments((prev) =>\n      prev.map((item) => ({\n        ...item,\n        checked: !item.checked\n      }))\n    )\n  }\n\n  const handleCheckedComment = (message, value) => {\n    setComments((prev) =>\n      prev.map((item) =>\n        item.id === message.id\n          ? {\n              ...item,\n              checked: value\n            }\n          : item\n      )\n    )\n  }\n\n  const handleDeleteChecked = () => {\n    setComments((prev) => prev.filter((message) => !message.checked))\n  }\n\n  const handleCommentEdit = (message, text) => {\n    setComments((prev) =>\n      prev.map((item) =>\n        item.id === message.id\n          ? {\n              ...item,\n              updatedAt: new Date(),\n              text\n            }\n          : item\n      )\n    )\n  }\n\n  const handleCommentDelete = (message) => {\n    setComments((prev) => prev.filter((item) => item.id !== message.id))\n  }\n\n  useEffect(() => {\n    if (article && !loadingComments && dataComments) {\n      setComments(\n        dataComments.getComments.map((comment) => ({\n          ...comment,\n          checked: false\n        }))\n      )\n    }\n  }, [article, dataComments, loadingComments])\n\n  useEffect(() => {\n    setValue('comments', comments)\n  }, [comments])\n\n  if (!article || comments.length === 0) {\n    return null\n  }\n\n  return (\n    <React.Fragment>\n      <Divider clear />\n\n      <Title tag={'h4'}>Комментарии</Title>\n\n      <Header>\n        <Checkbox label={'Выделить все'} checked={checkedAll} onChange={handleCheckedComments} />\n        <Button\n          style={{ color: 'var(--default-color-red)' }}\n          appearance={'clear'}\n          onClick={handleDeleteChecked}>\n          Удалить выделенное\n        </Button>\n      </Header>\n      <Column style={{ gridGap: 5 }}>\n        {comments.map((comment) => (\n          <Comment\n            key={`${comment.id}_${comment.checked}`}\n            user={comment.author}\n            message={comment.text}\n            likes={comment.likes?.length}\n            time={comment.createdAt !== comment.updatedAt ? comment.updatedAt : comment.createdAt}\n            isLiked={comment.likes.find((likedUser) => likedUser.email === user.email)}\n            isChecked={comment.checked}\n            isUpdated={comment.createdAt !== comment.updatedAt}\n            onChecked={(value) => handleCheckedComment(comment, value)}\n            onEdit={(text) => handleCommentEdit(comment, text)}\n            onDelete={() => handleCommentDelete(comment)}\n            compact\n          />\n        ))}\n      </Column>\n    </React.Fragment>\n  )\n}\n\nexport const Article = ({\n  article,\n  categories,\n  statuses,\n  mutation,\n  appearance,\n  className,\n  canEditStatus,\n  onSubmit\n}) => {\n  const { data, loading: loadingArticle, error: errorArticle } = article\n    ? useQuery(queries.GET_ARTICLE, {\n        variables: {\n          id: article\n        }\n      })\n    : { data: { getArticle: {} }, loading: false, error: false }\n\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading, errors, control, getValues, setValue }) =>\n        !loadingArticle && data ? (\n          <React.Fragment>\n            <Column>\n              <Title tag={'h4'}>Основное</Title>\n\n              {errors && errors.preview && (\n                <Alert style={{ width: '100%' }} appearance={'error'}>\n                  Выберите изображение для превью\n                </Alert>\n              )}\n              <Controller\n                name={'preview'}\n                control={control}\n                rules={{ required: true }}\n                defaultValue={data.getArticle?.preview || null}\n                render={({ value, onChange }) => (\n                  <Dropzone\n                    accept={'image/*'}\n                    defaultValue={value}\n                    onChange={onChange}\n                    placeholder={'Перетащите сюда изображение для превью'}\n                    tooltip={\n                      'Разрешение: 960x480px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB'\n                    }\n                  />\n                )}\n              />\n\n              {errors && errors.title && (\n                <Alert style={{ width: '100%' }} appearance={'error'}>\n                  Введите заголовок статьи\n                </Alert>\n              )}\n              <Input\n                type={'text'}\n                name={'title'}\n                ref={register({ required: true })}\n                defaultValue={getValues('title') || data.getArticle?.title}\n                placeholder={'Название'}\n                appearance={'ghost'}\n                disabled={loading}\n              />\n\n              <Controller\n                name={'category'}\n                control={control}\n                defaultValue={\n                  data.getArticle?.category\n                    ? {\n                        value: data.getArticle.category.id,\n                        label: getLabelCategory(data.getArticle.category.name)\n                      }\n                    : null\n                }\n                render={({ value, onChange }) => (\n                  <Select\n                    appearance={'ghost'}\n                    placeholder={'Выберите раздел'}\n                    options={categories\n                      .filter((item) => item.type === 'DIVISION')\n                      .map((item) => ({\n                        value: item.id,\n                        label: getLabelCategory(item.name)\n                      }))}\n                    onChange={onChange}\n                    defaultValue={value}\n                    isLoading={loading}\n                    isClearable\n                  />\n                )}\n              />\n\n              {errors && errors.body && (\n                <Alert style={{ width: '100%' }} appearance={'error'}>\n                  Введите содержание статьи\n                </Alert>\n              )}\n              <Controller\n                name={'body'}\n                control={control}\n                defaultValue={getValues('body') || data.getArticle?.body || null}\n                rules={{ required: true }}\n                render={({ value, onChange }) => (\n                  <TextEditor\n                    apiKey={config.get('tiny-key')}\n                    appearance={'ghost'}\n                    defaultValue={value}\n                    onChange={onChange}\n                  />\n                )}\n              />\n\n              <Comments article={article} setValue={setValue} />\n\n              {canEditStatus && <Divider clear />}\n\n              {canEditStatus && (\n                <Controller\n                  name={'status'}\n                  control={control}\n                  defaultValue={\n                    data.getArticle?.status\n                      ? {\n                          value: data.getArticle.status,\n                          label: getLabelStatus(data.getArticle.status)\n                        }\n                      : null\n                  }\n                  render={({ value, onChange }) => (\n                    <Select\n                      appearance={'ghost'}\n                      placeholder={'Выберите статус'}\n                      options={statuses.map((item) => ({\n                        value: item,\n                        label: getLabelStatus(item)\n                      }))}\n                      onChange={onChange}\n                      defaultValue={value}\n                      menuPlacement={'top'}\n                      isLoading={loading}\n                      isClearable\n                    />\n                  )}\n                />\n              )}\n            </Column>\n\n            <Divider clear />\n\n            <Row>\n              <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n                {article ? 'Сохранить' : 'Создать'}\n              </Button>\n            </Row>\n          </React.Fragment>\n        ) : errorArticle ? (\n          <Alert appearance={'error'} style={{ width: '100%', textAlign: 'center' }}>\n            Упс! Не удалось загрузить информацию о статье\n          </Alert>\n        ) : (\n          <Loader>\n            <Spinner />\n          </Loader>\n        )\n      }\n    </Form>\n  )\n}\n\nexport default Article\n"]},"metadata":{},"sourceType":"module"}