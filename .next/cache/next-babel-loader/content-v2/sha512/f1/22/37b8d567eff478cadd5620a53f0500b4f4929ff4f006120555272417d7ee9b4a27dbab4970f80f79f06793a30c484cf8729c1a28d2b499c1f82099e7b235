{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport ContentLayout from '../layouts/content';\nimport ProjectSuit from '../components/ProjectSuit';\nimport { useProject } from '../hooks/useProject';\nimport { COMMON_START_OFFSET, COMMON_LOAD_LIMIT } from '../constants';\nimport queries from '../graphql/queries';\nconst TITLE = 'Проекты';\n\nconst Projects = () => {\n  var _router$query;\n\n  const router = useRouter();\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(ContentLayout, {\n    title: TITLE,\n    getType: 'getProjects',\n    limit: COMMON_LOAD_LIMIT,\n    emptyMessage: 'Проектов нет',\n    getQuery: queries.GET_PROJECTS,\n    startOffsett: COMMON_START_OFFSET,\n    variables: {\n      category: (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.c,\n      status: 'PUBLISHED'\n    },\n    render: document => /*#__PURE__*/React.createElement(ProjectSuit, _extends({}, methods, {\n      project: document\n    }))\n  });\n};\n\nexport default Projects;","map":null,"metadata":{},"sourceType":"module"}