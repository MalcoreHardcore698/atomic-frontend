{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Button from '../Button';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Breadcrumbs__Wrap\",\n  componentId: \"i6n6y0-0\"\n})([\"display:inline-block white-space:nowrap overflow:hidden text-overflow:ellipsis\"]);\nexport const BreadButton = styled(Button).withConfig({\n  displayName: \"Breadcrumbs__BreadButton\",\n  componentId: \"i6n6y0-1\"\n})([\"\", \"\"], ({\n  disabled\n}) => disabled ? css([\"background:none;border:none;&:hover{background:none;border:none;color:var(--ghost-color-text);}\"]) : css([\"color:var(--default-color-active);border:none;transition:opacity 150ms ease;&:hover{opacity:0.75;border:none;}\"]));\nexport const Delimiter = styled.span.withConfig({\n  displayName: \"Breadcrumbs__Delimiter\",\n  componentId: \"i6n6y0-2\"\n})([\"color:var(--input-placeholder-color);\"]);\nexport const BreadCrumb = ({\n  label,\n  callback,\n  active\n}) => /*#__PURE__*/React.createElement(BreadButton, {\n  appearance: 'clear',\n  disabled: !active,\n  onClick: callback\n}, label);\nexport const BreadCrumbs = ({\n  links,\n  callback,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, props, (links || []).map((link, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n  key: index\n}, /*#__PURE__*/React.createElement(BreadCrumb, {\n  label: link.label,\n  callback: () => callback(link.path),\n  active: !!link.path\n}), index % 2 === 0 && index !== links.length - 1 && /*#__PURE__*/React.createElement(Delimiter, null, \"/\"))));\nexport default BreadCrumbs;","map":null,"metadata":{},"sourceType":"module"}