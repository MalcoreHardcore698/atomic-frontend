{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport styled, { css } from 'styled-components';\nimport { useRouter } from 'next/router';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Alert from '../atomic-ui/components/Alert';\nimport Icon from '../atomic-ui/components/Icon';\nimport Difinition from '../atomic-ui/components/Difinition';\nimport Button from '../atomic-ui/components/Button';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Tooltip from '../atomic-ui/components/Tooltip';\nimport { Wrap as WrapText } from '../atomic-ui/components/Text';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport { useProject } from '../hooks/useProject';\nimport { useHelper } from '../hooks/useHelper';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport ProjectList from '../components/ProjectList';\nimport ArticleList from '../components/ArticleList';\nimport { hasResponsibleMember } from '../components/Members';\nimport { Loader } from '../components/Styled';\nimport List from '../components/List';\nimport ProjectCard from '../components/features/ProjectCard';\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content';\nimport { setUserFolder } from '../store/actions/user';\nimport { setFolder, setCompanies, setCategories, setStatuses, setSearch } from '../store/actions/root';\nimport { onUserClientEdit, onUserAboutMore, onUserFolderAdd, onUserFolderDelete, onUserMembers, onUserLink } from '../store/helpers/user';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { profilePages } from '../__mock__';\nimport queries from '../graphql/queries';\nconst TITLE = 'Профиль';\nconst START_OFFSET = 0;\nconst LIMIT = 4;\nconst DISABLED_FILTERS = true;\nconst ContainerInProgress = styled(Row).withConfig({\n  displayName: \"profile__ContainerInProgress\",\n  componentId: \"sc-84d5hd-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\n_c = ContainerInProgress;\nconst CreateButton = styled(Button).withConfig({\n  displayName: \"profile__CreateButton\",\n  componentId: \"sc-84d5hd-1\"\n})([\"display:flex;justify-content:center;align-items:center;grid-gap:10px;span{white-space:nowrap;}\"]);\n_c2 = CreateButton;\nconst Organizer = styled(Column).withConfig({\n  displayName: \"profile__Organizer\",\n  componentId: \"sc-84d5hd-2\"\n})([\"width:265px;min-width:265px;\"]);\n_c3 = Organizer;\nconst RemoveTooltip = styled(Tooltip).withConfig({\n  displayName: \"profile__RemoveTooltip\",\n  componentId: \"sc-84d5hd-3\"\n})([\"position:absolute;right:8px;z-index:var(--z-11);display:none;\"]);\n_c4 = RemoveTooltip;\nconst CentralAlert = styled(Alert).withConfig({\n  displayName: \"profile__CentralAlert\",\n  componentId: \"sc-84d5hd-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;flex-grow:10;\"]);\n_c5 = CentralAlert;\nconst ListItem = styled.div.withConfig({\n  displayName: \"profile__ListItem\",\n  componentId: \"sc-84d5hd-5\"\n})([\"position:relative;display:flex;justify-content:space-between;align-items:center;height:var(--input-height-s);background:var(--ghost-color-background);border-radius:var(--surface-border-radius);padding:8px 10px;width:100%;height:auto;cursor:pointer;transition:all 150ms ease;\", \",h4{color:var(--ghost-color-text);}\", \"{svg path{color:var(--ghost-color-text);}}&:hover{\", \"{display:flex;svg path{stroke:black;}}\", \",h4{color:black;}}\", \"\"], WrapText, RemoveTooltip, RemoveTooltip, WrapText, ({\n  active\n}) => active && css([\"color:var(--default-color-accent);background:var(--default-color-accent-dim);\", \"{svg path{stroke:var(--default-color-accent) !important;}}\", \",h4,p{color:var(--default-color-accent);}&:hover{\", \",h4,p{color:var(--default-color-accent);}}\"], RemoveTooltip, WrapText, WrapText));\n_c6 = ListItem;\n\nconst Projects = ({\n  variables\n}) => {\n  _s();\n\n  const methods = useProject();\n  return /*#__PURE__*/React.createElement(List, {\n    limit: LIMIT,\n    type: 'getProjects',\n    query: queries.GET_PROJECTS,\n    variables: variables,\n    emptyMessage: 'Проектов нет',\n    startOffset: START_OFFSET,\n    initialDisplayMethod: INITIAL_DISPLAY_METHOD,\n    component: document => /*#__PURE__*/React.createElement(ProjectCard, _extends({}, methods, {\n      project: document\n    }))\n  });\n};\n\n_s(Projects, \"1J2i0XYLTUPsHAaUowqhcO/eEy0=\", false, function () {\n  return [useProject];\n});\n\n_c7 = Projects;\n\nconst Articles = ({\n  variables\n}) => /*#__PURE__*/React.createElement(ArticleList, {\n  variables: variables,\n  layout: true\n});\n\n_c8 = Articles;\n\nconst InProgress = () => {\n  _s2();\n\n  const recall = useHelper();\n  const {\n    user,\n    folder\n  } = useSelector(state => ({\n    user: state.user,\n    folder: state.root.folder\n  }));\n  const dispatch = useDispatch();\n  const defaultFolder = useMemo(() => user === null || user === void 0 ? void 0 : user.folders[0], [user]);\n  const [getProjects, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS);\n  const [customLoading, setCustomLoading] = useState(false);\n\n  const onRefetch = async (item, projects) => {\n    if (projects && refetch) {\n      setCustomLoading(true);\n\n      if (item) {\n        const result = { ...item,\n          projects\n        };\n        dispatch(setFolder(result));\n        dispatch(setUserFolder(result));\n      }\n\n      await refetch({\n        projects\n      });\n      setCustomLoading(false);\n    }\n  };\n\n  const onFolderClick = item => onRefetch(item, item.projects);\n\n  useEffect(() => {\n    if (defaultFolder) {\n      dispatch(setFolder(defaultFolder));\n    }\n  }, [defaultFolder, dispatch]);\n  useEffect(() => {\n    if (!refetch && !data && defaultFolder) {\n      getProjects({\n        variables: {\n          projects: defaultFolder.projects\n        }\n      });\n    }\n  }, [data, refetch, defaultFolder, getProjects]);\n  return /*#__PURE__*/React.createElement(ContainerInProgress, null, /*#__PURE__*/React.createElement(Organizer, null, user.folders && user.folders.length > 0 ? /*#__PURE__*/React.createElement(Column, null, user.folders.map(item => {\n    const length = item.projects.length;\n    const label = length === 1 ? 'проект' : length > 1 && length < 5 ? 'проекта' : 'проектов';\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.id,\n      active: folder && item.id === folder.id\n    }, /*#__PURE__*/React.createElement(Difinition, {\n      text: item.name,\n      label: `${length} ${label}`,\n      onLink: () => onFolderClick(item),\n      revert: true\n    }), /*#__PURE__*/React.createElement(RemoveTooltip, {\n      place: 'left',\n      text: 'Удалить'\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: 'xs',\n      kind: 'icon',\n      type: 'button',\n      disabled: loading,\n      appearance: 'clear',\n      onClick: recall(onUserFolderDelete, {\n        id: item.id,\n        mutation: queries.DELETE_USER_FOLDER,\n        callback: () => onFolderClick(defaultFolder)\n      })\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: 'xs',\n      icon: 'delete',\n      stroke: 'var(--ghost-color-text)'\n    }))));\n  })) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0430\\u043F\\u043E\\u043A \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(CreateButton, {\n    onClick: recall(onUserFolderAdd, {\n      mutation: queries.ADD_USER_FOLDER\n    })\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\"), /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'white'\n  }))), !loading && !customLoading && data && data.getProjectsByIds.length > 0 ? /*#__PURE__*/React.createElement(ProjectList, {\n    initialList: folder ? data.getProjectsByIds : [],\n    initialRefetch: projects => onRefetch(folder, projects),\n    eliminable: true,\n    layout: true\n  }) : loading || customLoading ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      height: 'auto'\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u0430\\u043F\\u043A\\u0435 \\u043D\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"));\n};\n\n_s2(InProgress, \"7r5pF/oE5+cw5ndHlcWxUGfnDSM=\", false, function () {\n  return [useHelper, useSelector, useDispatch, useLazyQuery];\n});\n\n_c9 = InProgress;\n\nconst Profile = () => {\n  _s3();\n\n  var _user$company;\n\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    user,\n    search,\n    companies,\n    categories,\n    statuses\n  } = useSelector(state => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }));\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(profilePages[0]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const isAdmin = useMemo(() => (user === null || user === void 0 ? void 0 : user.account) === 'ADMIN', [user]);\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS);\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES);\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES);\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage]);\n\n  const onAddProject = async () => {\n    var _companiesResponse$da, _categoriesResponse$d, _statusesResponse$dat;\n\n    const companiesResponse = (companies === null || companies === void 0 ? void 0 : companies.length) === 0 && loadCompanies && (await loadCompanies({\n      variables: {\n        account: ['ENTITY']\n      }\n    }));\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const companiesResult = companiesResponse === null || companiesResponse === void 0 ? void 0 : (_companiesResponse$da = companiesResponse.data) === null || _companiesResponse$da === void 0 ? void 0 : _companiesResponse$da.getUsers;\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d = categoriesResponse.data) === null || _categoriesResponse$d === void 0 ? void 0 : _categoriesResponse$d.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat = statusesResponse.data) === null || _statusesResponse$dat === void 0 ? void 0 : _statusesResponse$dat.getPostStatus;\n    if (companiesResult) dispatch(setCompanies(companiesResult));\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  };\n\n  const onAddArticle = async () => {\n    var _categoriesResponse$d2, _statusesResponse$dat2;\n\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d2 = categoriesResponse.data) === null || _categoriesResponse$d2 === void 0 ? void 0 : _categoriesResponse$d2.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat2 = statusesResponse.data) === null || _statusesResponse$dat2 === void 0 ? void 0 : _statusesResponse$dat2.getPostStatus;\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  };\n\n  const onSearch = value => {\n    if (value) dispatch(setSearch(value));else dispatch(setSearch(null));\n  };\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null;\n\n    switch (currentPage.value) {\n      case '/projects':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      case '/liked':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            rating: user.email\n          }\n        });\n\n      case '/articles':\n        return /*#__PURE__*/React.createElement(Articles, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(InProgress, null);\n    }\n  }, [user, currentPage]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onEdit: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      canEditAccount: !isAdmin,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user\n    }),\n    onCompanyLink: (user === null || user === void 0 ? void 0 : user.company) && recall(onUserLink, {\n      id: user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.email,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      queries: {\n        userChats: queries.GET_USER_CHATS,\n        chat: queries.GET_CHAT\n      },\n      mutations: {\n        addUserChat: queries.ADD_USER_CHAT,\n        sendMessage: queries.SEND_MESSAGE\n      }\n    }),\n    onMembers: recall(onUserMembers, {\n      id: user === null || user === void 0 ? void 0 : user.email,\n      auth: user === null || user === void 0 ? void 0 : user.email\n    })\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: currentPage,\n    options: profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== '/articles' : true),\n    onChange: item => setCurrentPage(item),\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    defaultValue: search,\n    buttonCreateText: isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '',\n    onCreate: isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject || isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle,\n    onChangeFilter: !DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter)),\n    onSubmit: onSearch\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [],\n    options: []\n  }), renderContentPage()));\n};\n\n_s3(Profile, \"3/1duZt2QSxY4+UeuShwij3U+9w=\", false, function () {\n  return [useHelper, useRouter, useSelector, useDispatch, useLazyQuery, useLazyQuery, useLazyQuery];\n});\n\n_c10 = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"ContainerInProgress\");\n$RefreshReg$(_c2, \"CreateButton\");\n$RefreshReg$(_c3, \"Organizer\");\n$RefreshReg$(_c4, \"RemoveTooltip\");\n$RefreshReg$(_c5, \"CentralAlert\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"Projects\");\n$RefreshReg$(_c8, \"Articles\");\n$RefreshReg$(_c9, \"InProgress\");\n$RefreshReg$(_c10, \"Profile\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useState","useEffect","useCallback","useMemo","useSelector","useDispatch","useLazyQuery","styled","css","useRouter","Row","Column","Switch","Alert","Icon","Difinition","Button","Spinner","Tooltip","Wrap","WrapText","hasAccess","useProject","useHelper","DefaultLayout","UserBar","FilterBar","SearchBar","ProjectList","ArticleList","hasResponsibleMember","Loader","List","ProjectCard","INITIAL_DISPLAY_METHOD","setUserFolder","setFolder","setCompanies","setCategories","setStatuses","setSearch","onUserClientEdit","onUserAboutMore","onUserFolderAdd","onUserFolderDelete","onUserMembers","onUserLink","onProjectCreate","onArticleCreate","profilePages","queries","TITLE","START_OFFSET","LIMIT","DISABLED_FILTERS","ContainerInProgress","CreateButton","Organizer","RemoveTooltip","CentralAlert","ListItem","div","active","Projects","variables","methods","GET_PROJECTS","document","Articles","InProgress","recall","user","folder","state","root","dispatch","defaultFolder","folders","getProjects","data","loading","refetch","GET_PROJECTS_BY_IDS","customLoading","setCustomLoading","onRefetch","item","projects","result","onFolderClick","length","map","label","id","name","mutation","DELETE_USER_FOLDER","callback","width","textAlign","ADD_USER_FOLDER","getProjectsByIds","height","Profile","router","search","companies","categories","statuses","currentPage","setCurrentPage","visibleFilter","setVisibleFilter","isAdmin","account","loadCompanies","GET_USERS","loadCategories","GET_CATEGORIES","loadStatuses","GET_POST_STATUSES","isProjects","value","isArticles","onAddProject","companiesResponse","categoriesResponse","type","statusesResponse","companiesResult","getUsers","categoriesResult","getCategories","statusesResult","getPostStatus","CREATE_PROJECT","query","isPurpose","onAddArticle","CREATE_ARTICLE","onSearch","renderContentPage","author","email","rating","authenticated","push","canEditAccount","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update","company","auth","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","filter","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\nimport styled, { css } from 'styled-components'\nimport { useRouter } from 'next/router'\n\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Alert from '../atomic-ui/components/Alert'\nimport Icon from '../atomic-ui/components/Icon'\nimport Difinition from '../atomic-ui/components/Difinition'\nimport Button from '../atomic-ui/components/Button'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Tooltip from '../atomic-ui/components/Tooltip'\nimport { Wrap as WrapText } from '../atomic-ui/components/Text'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport { initializeApollo } from '../apollo'\nimport { useProject } from '../hooks/useProject'\nimport { useHelper } from '../hooks/useHelper'\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport ProjectList from '../components/ProjectList'\nimport ArticleList from '../components/ArticleList'\nimport { hasResponsibleMember } from '../components/Members'\nimport { Loader } from '../components/Styled'\n\nimport List from '../components/List'\nimport ProjectCard from '../components/features/ProjectCard'\nimport { INITIAL_DISPLAY_METHOD } from '../layouts/content'\nimport { setUserFolder } from '../store/actions/user'\nimport {\n  setFolder,\n  setCompanies,\n  setCategories,\n  setStatuses,\n  setSearch\n} from '../store/actions/root'\nimport {\n  onUserClientEdit,\n  onUserAboutMore,\n  onUserFolderAdd,\n  onUserFolderDelete,\n  onUserMembers,\n  onUserLink\n} from '../store/helpers/user'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { profilePages } from '../__mock__'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Профиль'\nconst START_OFFSET = 0\nconst LIMIT = 4\n\nconst DISABLED_FILTERS = true\n\nconst ContainerInProgress = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst CreateButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 10px;\n\n  span {\n    white-space: nowrap;\n  }\n`\n\nconst Organizer = styled(Column)`\n  width: 265px;\n  min-width: 265px;\n`\n\nconst RemoveTooltip = styled(Tooltip)`\n  position: absolute;\n  right: 8px;\n  z-index: var(--z-11);\n  display: none;\n`\n\nconst CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  flex-grow: 10;\n`\n\nconst ListItem = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: var(--input-height-s);\n  background: var(--ghost-color-background);\n  border-radius: var(--surface-border-radius);\n  padding: 8px 10px;\n  width: 100%;\n  height: auto;\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${WrapText}, h4 {\n    color: var(--ghost-color-text);\n  }\n\n  ${RemoveTooltip} {\n    svg path {\n      color: var(--ghost-color-text);\n    }\n  }\n\n  &:hover {\n    ${RemoveTooltip} {\n      display: flex;\n\n      svg path {\n        stroke: black;\n      }\n    }\n\n    ${WrapText}, h4 {\n      color: black;\n    }\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      color: var(--default-color-accent);\n      background: var(--default-color-accent-dim);\n\n      ${RemoveTooltip} {\n        svg path {\n          stroke: var(--default-color-accent) !important;\n        }\n      }\n\n      ${WrapText}, h4, p {\n        color: var(--default-color-accent);\n      }\n\n      &:hover {\n        ${WrapText}, h4, p {\n          color: var(--default-color-accent);\n        }\n      }\n    `}\n`\n\nconst Projects = ({ variables }) => {\n  const methods = useProject()\n\n  return (\n    <List\n      limit={LIMIT}\n      type={'getProjects'}\n      query={queries.GET_PROJECTS}\n      variables={variables}\n      emptyMessage={'Проектов нет'}\n      startOffset={START_OFFSET}\n      initialDisplayMethod={INITIAL_DISPLAY_METHOD}\n      component={(document) => <ProjectCard {...methods} project={document} />}\n    />\n  )\n}\n\nconst Articles = ({ variables }) => <ArticleList variables={variables} layout />\n\nconst InProgress = () => {\n  const recall = useHelper()\n  const { user, folder } = useSelector((state) => ({\n    user: state.user,\n    folder: state.root.folder\n  }))\n  const dispatch = useDispatch()\n\n  const defaultFolder = useMemo(() => user?.folders[0], [user])\n  const [getProjects, { data, loading, refetch }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS)\n  const [customLoading, setCustomLoading] = useState(false)\n\n  const onRefetch = async (item, projects) => {\n    if (projects && refetch) {\n      setCustomLoading(true)\n\n      if (item) {\n        const result = { ...item, projects }\n        dispatch(setFolder(result))\n        dispatch(setUserFolder(result))\n      }\n\n      await refetch({ projects })\n      setCustomLoading(false)\n    }\n  }\n\n  const onFolderClick = (item) => onRefetch(item, item.projects)\n\n  useEffect(() => {\n    if (defaultFolder) {\n      dispatch(setFolder(defaultFolder))\n    }\n  }, [defaultFolder, dispatch])\n\n  useEffect(() => {\n    if (!refetch && !data && defaultFolder) {\n      getProjects({\n        variables: { projects: defaultFolder.projects }\n      })\n    }\n  }, [data, refetch, defaultFolder, getProjects])\n\n  return (\n    <ContainerInProgress>\n      <Organizer>\n        {user.folders && user.folders.length > 0 ? (\n          <Column>\n            {user.folders.map((item) => {\n              const length = item.projects.length\n              const label =\n                length === 1 ? 'проект' : length > 1 && length < 5 ? 'проекта' : 'проектов'\n\n              return (\n                <ListItem key={item.id} active={folder && item.id === folder.id}>\n                  <Difinition\n                    text={item.name}\n                    label={`${length} ${label}`}\n                    onLink={() => onFolderClick(item)}\n                    revert\n                  />\n                  <RemoveTooltip place={'left'} text={'Удалить'}>\n                    <Button\n                      size={'xs'}\n                      kind={'icon'}\n                      type={'button'}\n                      disabled={loading}\n                      appearance={'clear'}\n                      onClick={recall(onUserFolderDelete, {\n                        id: item.id,\n                        mutation: queries.DELETE_USER_FOLDER,\n                        callback: () => onFolderClick(defaultFolder)\n                      })}>\n                      <Icon size={'xs'} icon={'delete'} stroke={'var(--ghost-color-text)'} />\n                    </Button>\n                  </RemoveTooltip>\n                </ListItem>\n              )\n            })}\n          </Column>\n        ) : (\n          <Alert style={{ width: '100%', textAlign: 'center' }}>Папок нет</Alert>\n        )}\n        <CreateButton onClick={recall(onUserFolderAdd, { mutation: queries.ADD_USER_FOLDER })}>\n          <span>Новая папка</span>\n          <Icon icon={'add'} stroke={'white'} />\n        </CreateButton>\n      </Organizer>\n\n      {!loading && !customLoading && data && data.getProjectsByIds.length > 0 ? (\n        <ProjectList\n          initialList={folder ? data.getProjectsByIds : []}\n          initialRefetch={(projects) => onRefetch(folder, projects)}\n          eliminable\n          layout\n        />\n      ) : loading || customLoading ? (\n        <Loader style={{ height: 'auto' }}>\n          <Spinner />\n        </Loader>\n      ) : (\n        <CentralAlert>В этой папке нет проектов</CentralAlert>\n      )}\n    </ContainerInProgress>\n  )\n}\n\nconst Profile = () => {\n  const recall = useHelper()\n  const router = useRouter()\n  const { user, search, companies, categories, statuses } = useSelector((state) => ({\n    user: state.user,\n    search: state.root.search,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }))\n  const dispatch = useDispatch()\n  const [currentPage, setCurrentPage] = useState(profilePages[0])\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const isAdmin = useMemo(() => user?.account === 'ADMIN', [user])\n\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS)\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES)\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES)\n\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage])\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage])\n\n  const onAddProject = async () => {\n    const companiesResponse =\n      companies?.length === 0 &&\n      loadCompanies &&\n      (await loadCompanies({ variables: { account: ['ENTITY'] } }))\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const companiesResult = companiesResponse?.data?.getUsers\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (companiesResult) dispatch(setCompanies(companiesResult))\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }\n\n  const onAddArticle = async () => {\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }\n\n  const onSearch = (value) => {\n    if (value) dispatch(setSearch(value))\n    else dispatch(setSearch(null))\n  }\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null\n    switch (currentPage.value) {\n      case '/projects':\n        return <Projects variables={{ author: user.email }} />\n      case '/liked':\n        return <Projects variables={{ rating: user.email }} />\n      case '/articles':\n        return <Articles variables={{ author: user.email }} />\n      default:\n        return <InProgress />\n    }\n  }, [user, currentPage])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onEdit={recall(onUserClientEdit, {\n            user: user?.email,\n            canEditAccount: !isAdmin,\n            mutations: {\n              del: queries.DELETE_USER,\n              forgotEmail: queries.LOGIN,\n              forgotPassword: queries.RESET,\n              changePassword: queries.UPDATE_CLIENT_USER,\n              checkResetToken: queries.CHECK_RESET_TOKEN,\n              update: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onAboutMore={recall(onUserAboutMore, { user })}\n          onCompanyLink={\n            user?.company &&\n            recall(onUserLink, {\n              id: user?.company?.email,\n              auth: user?.email,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })\n          }\n          onMembers={recall(onUserMembers, { id: user?.email, auth: user?.email })}\n        />\n\n        <Switch\n          defaultValue={currentPage}\n          options={profilePages.filter((page) =>\n            !hasResponsibleMember(user) ? page.value !== '/articles' : true\n          )}\n          onChange={(item) => setCurrentPage(item)}\n          stretch\n        />\n\n        <SearchBar\n          defaultValue={search}\n          buttonCreateText={\n            isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''\n          }\n          onCreate={\n            (isProjects && hasAccess(user, 'PURPOSE_PROJECT') && onAddProject) ||\n            (isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && onAddArticle)\n          }\n          onChangeFilter={!DISABLED_FILTERS && (() => setVisibleFilter(!visibleFilter))}\n          onSubmit={onSearch}\n        />\n\n        <FilterBar isOpen={visibleFilter} filters={[]} options={[]} />\n\n        {renderContentPage()}\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let categories = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_CATEGORIES\n    })\n\n    if (response && response.data) {\n      categories = response.data.getCategories\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      categories\n    }\n  }\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}