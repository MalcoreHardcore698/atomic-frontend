{"ast":null,"code":"import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Button from '../Button';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"Breadcrumbs__Wrap\",\n  componentId: \"i6n6y0-0\"\n})([\"display:inline-block white-space:nowrap overflow:hidden text-overflow:ellipsis\"]);\n_c = Wrap;\nexport const BreadButton = styled(Button).withConfig({\n  displayName: \"Breadcrumbs__BreadButton\",\n  componentId: \"i6n6y0-1\"\n})([\"\", \"\"], ({\n  disabled\n}) => disabled ? css([\"background:none;border:none;&:hover{background:none;border:none;color:var(--ghost-color-text);}\"]) : css([\"color:var(--default-color-active);border:none;transition:opacity 150ms ease;&:hover{opacity:0.75;border:none;}\"]));\n_c2 = BreadButton;\nexport const Delimiter = styled.span.withConfig({\n  displayName: \"Breadcrumbs__Delimiter\",\n  componentId: \"i6n6y0-2\"\n})([\"color:var(--input-placeholder-color);\"]);\n_c3 = Delimiter;\nexport const BreadCrumb = ({\n  label,\n  callback,\n  active\n}) => /*#__PURE__*/React.createElement(BreadButton, {\n  appearance: 'clear',\n  disabled: !active,\n  onClick: callback\n}, label);\n_c4 = BreadCrumb;\nexport const BreadCrumbs = ({\n  links,\n  callback,\n  ...props\n}) => /*#__PURE__*/React.createElement(Wrap, props, (links || []).map((link, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n  key: index\n}, /*#__PURE__*/React.createElement(BreadCrumb, {\n  label: link.label,\n  callback: () => callback(link.path),\n  active: !!link.path\n}), index % 2 === 0 && index !== links.length - 1 && /*#__PURE__*/React.createElement(Delimiter, null, \"/\"))));\n_c5 = BreadCrumbs;\nexport default BreadCrumbs;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"BreadButton\");\n$RefreshReg$(_c3, \"Delimiter\");\n$RefreshReg$(_c4, \"BreadCrumb\");\n$RefreshReg$(_c5, \"BreadCrumbs\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Breadcrumbs/index.js"],"names":["React","styled","css","Row","Button","Wrap","BreadButton","disabled","Delimiter","span","BreadCrumb","label","callback","active","BreadCrumbs","links","props","map","link","index","path","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,IAAI,GAAGJ,MAAM,CAACE,GAAD,CAAT;AAAA;AAAA;AAAA,sFAAV;KAAME,I;AAOb,OAAO,MAAMC,WAAW,GAAGL,MAAM,CAACG,MAAD,CAAT;AAAA;AAAA;AAAA,aACpB,CAAC;AAAEG,EAAAA;AAAF,CAAD,KACAA,QAAQ,GACJL,GADI,wGAWJA,GAXI,oHAFY,CAAjB;MAAMI,W;AAyBb,OAAO,MAAME,SAAS,GAAGP,MAAM,CAACQ,IAAV;AAAA;AAAA;AAAA,6CAAf;MAAMD,S;AAIb,OAAO,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,kBACxB,oBAAC,WAAD;AAAa,EAAA,UAAU,EAAE,OAAzB;AAAkC,EAAA,QAAQ,EAAE,CAACA,MAA7C;AAAqD,EAAA,OAAO,EAAED;AAA9D,GACGD,KADH,CADK;MAAMD,U;AAMb,OAAO,MAAMI,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA,QAAT;AAAmB,KAAGI;AAAtB,CAAD,kBACzB,oBAAC,IAAD,EAAUA,KAAV,EACG,CAACD,KAAK,IAAI,EAAV,EAAcE,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,KAAD,CAAO,QAAP;AAAgB,EAAA,GAAG,EAAEA;AAArB,gBACE,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAED,IAAI,CAACP,KAAxB;AAA+B,EAAA,QAAQ,EAAE,MAAMC,QAAQ,CAACM,IAAI,CAACE,IAAN,CAAvD;AAAoE,EAAA,MAAM,EAAE,CAAC,CAACF,IAAI,CAACE;AAAnF,EADF,EAEGD,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,KAAKJ,KAAK,CAACM,MAAN,GAAe,CAA5C,iBAAiD,oBAAC,SAAD,YAFpD,CADD,CADH,CADK;MAAMP,W;AAWb,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Button from '../Button'\n\nexport const Wrap = styled(Row)`\n  display: inline-block\n  white-space: nowrap\n  overflow: hidden\n  text-overflow: ellipsis\n`\n\nexport const BreadButton = styled(Button)`\n  ${({ disabled }) =>\n    disabled\n      ? css`\n          background: none;\n          border: none;\n\n          &:hover {\n            background: none;\n            border: none;\n            color: var(--ghost-color-text);\n          }\n        `\n      : css`\n          color: var(--default-color-active);\n          border: none;\n          transition: opacity 150ms ease;\n\n          &:hover {\n            opacity: 0.75;\n            border: none;\n          }\n        `}\n`\n\nexport const Delimiter = styled.span`\n  color: var(--input-placeholder-color);\n`\n\nexport const BreadCrumb = ({ label, callback, active }) => (\n  <BreadButton appearance={'clear'} disabled={!active} onClick={callback}>\n    {label}\n  </BreadButton>\n)\n\nexport const BreadCrumbs = ({ links, callback, ...props }) => (\n  <Wrap {...props}>\n    {(links || []).map((link, index) => (\n      <React.Fragment key={index}>\n        <BreadCrumb label={link.label} callback={() => callback(link.path)} active={!!link.path} />\n        {index % 2 === 0 && index !== links.length - 1 && <Delimiter>/</Delimiter>}\n      </React.Fragment>\n    ))}\n  </Wrap>\n)\n\nexport default BreadCrumbs\n"]},"metadata":{},"sourceType":"module"}