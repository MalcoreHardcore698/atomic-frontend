{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Row from '../Row';\nimport Title from '../Title';\nimport Tooltip from '../Tooltip';\nimport Button from '../Button';\nimport Icon from '../Icon';\nexport const Wrap = styled(Row).withConfig({\n  displayName: \"ActionRow__Wrap\",\n  componentId: \"sc-2j9izg-0\"\n})([\"justify-content:space-between;\"]);\n_c = Wrap;\nexport const InfoIcon = styled(Icon).withConfig({\n  displayName: \"ActionRow__InfoIcon\",\n  componentId: \"sc-2j9izg-1\"\n})([\"opacity:0.25;cursor:pointer;transition:opacity 450ms ease;&:hover{opacity:0.65;}\"]);\n_c2 = InfoIcon;\nexport const AddTooltip = styled(Tooltip).withConfig({\n  displayName: \"ActionRow__AddTooltip\",\n  componentId: \"sc-2j9izg-2\"\n})([\"flex-grow:initial;\"]);\n_c3 = AddTooltip;\nexport const Name = styled(Row).withConfig({\n  displayName: \"ActionRow__Name\",\n  componentId: \"sc-2j9izg-3\"\n})([\"grid-gap:5px;\"]);\n_c4 = Name;\nexport const ActionRow = ({\n  title,\n  info,\n  action,\n  onAdd\n}) => /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Name, null, /*#__PURE__*/React.createElement(Title, {\n  tag: 'h4'\n}, title), info && /*#__PURE__*/React.createElement(Tooltip, {\n  text: info\n}, /*#__PURE__*/React.createElement(InfoIcon, {\n  size: 's',\n  icon: 'infoCircle',\n  stroke: 'black'\n}))), action && /*#__PURE__*/React.createElement(AddTooltip, {\n  place: 'left',\n  text: 'Добавить'\n}, /*#__PURE__*/React.createElement(Button, {\n  type: 'button',\n  kind: 'icon',\n  size: 'xs',\n  onClick: onAdd\n}, /*#__PURE__*/React.createElement(Icon, {\n  size: 'xs',\n  icon: 'add',\n  stroke: 'white'\n}))));\n_c5 = ActionRow;\nexport default ActionRow;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"InfoIcon\");\n$RefreshReg$(_c3, \"AddTooltip\");\n$RefreshReg$(_c4, \"Name\");\n$RefreshReg$(_c5, \"ActionRow\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/ActionRow/index.js"],"names":["React","styled","Row","Title","Tooltip","Button","Icon","Wrap","InfoIcon","AddTooltip","Name","ActionRow","title","info","action","onAdd"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,IAAI,GAAGN,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,sCAAV;KAAMK,I;AAIb,OAAO,MAAMC,QAAQ,GAAGP,MAAM,CAACK,IAAD,CAAT;AAAA;AAAA;AAAA,wFAAd;MAAME,Q;AAUb,OAAO,MAAMC,UAAU,GAAGR,MAAM,CAACG,OAAD,CAAT;AAAA;AAAA;AAAA,0BAAhB;MAAMK,U;AAIb,OAAO,MAAMC,IAAI,GAAGT,MAAM,CAACC,GAAD,CAAT;AAAA;AAAA;AAAA,qBAAV;MAAMQ,I;AAIb,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,kBACvB,oBAAC,IAAD,qBACE,oBAAC,IAAD,qBACE,oBAAC,KAAD;AAAO,EAAA,GAAG,EAAE;AAAZ,GAAmBH,KAAnB,CADF,EAEGC,IAAI,iBACH,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAEA;AAAf,gBACE,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAE,GAAhB;AAAqB,EAAA,IAAI,EAAE,YAA3B;AAAyC,EAAA,MAAM,EAAE;AAAjD,EADF,CAHJ,CADF,EASGC,MAAM,iBACL,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAE,MAAnB;AAA2B,EAAA,IAAI,EAAE;AAAjC,gBACE,oBAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,QAAd;AAAwB,EAAA,IAAI,EAAE,MAA9B;AAAsC,EAAA,IAAI,EAAE,IAA5C;AAAkD,EAAA,OAAO,EAAEC;AAA3D,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE,IAAZ;AAAkB,EAAA,IAAI,EAAE,KAAxB;AAA+B,EAAA,MAAM,EAAE;AAAvC,EADF,CADF,CAVJ,CADK;MAAMJ,S;AAoBb,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Row from '../Row'\nimport Title from '../Title'\nimport Tooltip from '../Tooltip'\nimport Button from '../Button'\nimport Icon from '../Icon'\n\nexport const Wrap = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const InfoIcon = styled(Icon)`\n  opacity: 0.25;\n  cursor: pointer;\n  transition: opacity 450ms ease;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nexport const AddTooltip = styled(Tooltip)`\n  flex-grow: initial;\n`\n\nexport const Name = styled(Row)`\n  grid-gap: 5px;\n`\n\nexport const ActionRow = ({ title, info, action, onAdd }) => (\n  <Wrap>\n    <Name>\n      <Title tag={'h4'}>{title}</Title>\n      {info && (\n        <Tooltip text={info}>\n          <InfoIcon size={'s'} icon={'infoCircle'} stroke={'black'} />\n        </Tooltip>\n      )}\n    </Name>\n    {action && (\n      <AddTooltip place={'left'} text={'Добавить'}>\n        <Button type={'button'} kind={'icon'} size={'xs'} onClick={onAdd}>\n          <Icon size={'xs'} icon={'add'} stroke={'white'} />\n        </Button>\n      </AddTooltip>\n    )}\n  </Wrap>\n)\n\nexport default ActionRow\n"]},"metadata":{},"sourceType":"module"}