{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useRouter } from 'next/router';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport Row from '../atomic-ui/components/Row';\nimport Column from '../atomic-ui/components/Column';\nimport Switch from '../atomic-ui/components/Switch';\nimport Alert from '../atomic-ui/components/Alert';\nimport Icon from '../atomic-ui/components/Icon';\nimport Difinition from '../atomic-ui/components/Difinition';\nimport DatePicker from '../atomic-ui/components/DatePicker';\nimport Select from '../atomic-ui/components/Select';\nimport Button from '../atomic-ui/components/Button';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport Tooltip from '../atomic-ui/components/Tooltip';\nimport { Wrap as WrapText } from '../atomic-ui/components/Text';\nimport templates from '../atomic-ui/components/Table/templates';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nimport { useHelper } from '../hooks/useHelper';\nimport DefaultLayout from '../layouts/default';\nimport UserBar from '../components/UserBar';\nimport FilterBar from '../components/FilterBar';\nimport SearchBar from '../components/SearchBar';\nimport ProjectList from '../components/ProjectList';\nimport ArticleList from '../components/ArticleList';\nimport { hasResponsibleMember } from '../components/Members';\nimport { Loader } from '../components/Styled';\nimport { setUserFolder } from '../store/actions/user';\nimport { setFolder, setCompanies, setCategories, setStatuses } from '../store/actions/root';\nimport { onUserClientEdit, onUserAboutMore, onUserFolderAdd, onUserFolderDelete, onUserMembers, onUserLink } from '../store/helpers/user';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { onArticleCreate } from '../store/helpers/article';\nimport queries from '../graphql/queries';\nimport { profilePages } from '../__mock__';\nconst TITLE = 'Профиль';\nconst ContainerInProgress = styled(Row).withConfig({\n  displayName: \"profile__ContainerInProgress\",\n  componentId: \"sc-84d5hd-0\"\n})([\"grid-gap:var(--default-gap);@media only screen and (max-width:768px){flex-direction:column;}\"]);\n_c = ContainerInProgress;\nconst CreateButton = styled(Button).withConfig({\n  displayName: \"profile__CreateButton\",\n  componentId: \"sc-84d5hd-1\"\n})([\"display:flex;justify-content:center;align-items:center;grid-gap:10px;span{white-space:nowrap;}\"]);\n_c2 = CreateButton;\nconst Organizer = styled(Column).withConfig({\n  displayName: \"profile__Organizer\",\n  componentId: \"sc-84d5hd-2\"\n})([\"width:265px;min-width:265px;\"]);\n_c3 = Organizer;\nconst RemoveTooltip = styled(Tooltip).withConfig({\n  displayName: \"profile__RemoveTooltip\",\n  componentId: \"sc-84d5hd-3\"\n})([\"position:absolute;right:8px;z-index:var(--z-11);display:none;\"]);\n_c4 = RemoveTooltip;\nconst CentralAlert = styled(Alert).withConfig({\n  displayName: \"profile__CentralAlert\",\n  componentId: \"sc-84d5hd-4\"\n})([\"display:flex;justify-content:center;align-items:center;width:100%;flex-grow:10;\"]);\n_c5 = CentralAlert;\nconst ListItem = styled.div.withConfig({\n  displayName: \"profile__ListItem\",\n  componentId: \"sc-84d5hd-5\"\n})([\"position:relative;display:flex;justify-content:space-between;align-items:center;height:var(--input-height-s);background:var(--ghost-color-background);border-radius:var(--surface-border-radius);padding:8px 10px;width:100%;height:auto;cursor:pointer;transition:all 150ms ease;\", \",h4{color:var(--ghost-color-text);}\", \"{svg path{color:var(--ghost-color-text);}}&:hover{\", \"{display:flex;svg path{stroke:black;}}\", \",h4{color:black;}}\", \"\"], WrapText, RemoveTooltip, RemoveTooltip, WrapText, ({\n  active\n}) => active && css([\"color:var(--default-color-accent);background:var(--default-color-accent-dim);\", \"{svg path{stroke:var(--default-color-accent) !important;}}\", \",h4,p{color:var(--default-color-accent);}&:hover{\", \",h4,p{color:var(--default-color-accent);}}\"], RemoveTooltip, WrapText, WrapText));\n_c6 = ListItem;\n\nconst Projects = ({\n  variables,\n  projects\n}) => /*#__PURE__*/React.createElement(ProjectList, {\n  variables: variables,\n  initialList: projects,\n  layout: true\n});\n\n_c7 = Projects;\n\nconst Articles = ({\n  variables\n}) => /*#__PURE__*/React.createElement(ArticleList, {\n  variables: variables,\n  layout: true\n});\n\n_c8 = Articles;\n\nconst InProgress = () => {\n  _s();\n\n  const recall = useHelper();\n  const {\n    user,\n    folder\n  } = useSelector(state => ({\n    user: state.user,\n    folder: state.root.folder\n  }));\n  const dispatch = useDispatch();\n  const defaultFolder = useMemo(() => user === null || user === void 0 ? void 0 : user.folders[0], [user]);\n  const [getProjects, {\n    data,\n    loading,\n    refetch\n  }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS);\n  const [customLoading, setCustomLoading] = useState(false);\n\n  const onRefetch = async (item, projects) => {\n    if (projects && refetch) {\n      setCustomLoading(true);\n\n      if (item) {\n        const result = { ...item,\n          projects\n        };\n        dispatch(setFolder(result));\n        dispatch(setUserFolder(result));\n      }\n\n      await refetch({\n        projects\n      });\n      setCustomLoading(false);\n    }\n  };\n\n  const onFolderClick = item => onRefetch(item, item.projects);\n\n  useEffect(() => {\n    if (defaultFolder) {\n      dispatch(setFolder(defaultFolder));\n    }\n  }, [defaultFolder, dispatch]);\n  useEffect(() => {\n    if (!refetch && !data && defaultFolder) {\n      getProjects({\n        variables: {\n          projects: defaultFolder.projects\n        }\n      });\n    }\n  }, [data, refetch, defaultFolder, getProjects]);\n  return /*#__PURE__*/React.createElement(ContainerInProgress, null, /*#__PURE__*/React.createElement(Organizer, null, user.folders && user.folders.length > 0 ? /*#__PURE__*/React.createElement(Column, null, user.folders.map(item => {\n    const length = item.projects.length;\n    const label = length === 1 ? 'проект' : length > 1 && length < 5 ? 'проекта' : 'проектов';\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: item.id,\n      active: folder && item.id === folder.id\n    }, /*#__PURE__*/React.createElement(Difinition, {\n      text: item.name,\n      label: `${length} ${label}`,\n      onLink: () => onFolderClick(item),\n      revert: true\n    }), /*#__PURE__*/React.createElement(RemoveTooltip, {\n      place: 'left',\n      text: 'Удалить'\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: 'xs',\n      kind: 'icon',\n      type: 'button',\n      disabled: loading,\n      appearance: 'clear',\n      onClick: recall(onUserFolderDelete, {\n        id: item.id,\n        mutation: queries.DELETE_USER_FOLDER,\n        callback: () => onFolderClick(defaultFolder)\n      })\n    }, /*#__PURE__*/React.createElement(Icon, {\n      size: 'xs',\n      icon: 'delete',\n      stroke: 'var(--ghost-color-text)'\n    }))));\n  })) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0430\\u043F\\u043E\\u043A \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(CreateButton, {\n    onClick: recall(onUserFolderAdd, {\n      mutation: queries.ADD_USER_FOLDER\n    })\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\"), /*#__PURE__*/React.createElement(Icon, {\n    icon: 'add',\n    stroke: 'white'\n  }))), !loading && !customLoading && data && data.getProjectsByIds.length > 0 ? /*#__PURE__*/React.createElement(ProjectList, {\n    initialList: folder ? data.getProjectsByIds : [],\n    initialRefetch: projects => onRefetch(folder, projects),\n    eliminable: true,\n    layout: true\n  }) : loading || customLoading ? /*#__PURE__*/React.createElement(Loader, {\n    style: {\n      height: 'auto'\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, null)) : /*#__PURE__*/React.createElement(CentralAlert, null, \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043F\\u0430\\u043F\\u043A\\u0435 \\u043D\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432\"));\n};\n\n_s(InProgress, \"7r5pF/oE5+cw5ndHlcWxUGfnDSM=\", false, function () {\n  return [useHelper, useSelector, useDispatch, useLazyQuery];\n});\n\n_c9 = InProgress;\n\nconst Profile = () => {\n  _s2();\n\n  var _user$company;\n\n  const recall = useHelper();\n  const router = useRouter();\n  const {\n    user,\n    companies,\n    categories,\n    statuses\n  } = useSelector(state => ({\n    user: state.user,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }));\n  const dispatch = useDispatch();\n  const [date, onChangeDate] = useState();\n  const [select, onChangeSelect] = useState();\n  const [currentPage, setCurrentPage] = useState(profilePages[0]);\n  const [visibleFilter, setVisibleFilter] = useState(false);\n  const isAdmin = useMemo(() => (user === null || user === void 0 ? void 0 : user.account) === 'ADMIN', [user]);\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS);\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES);\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES);\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage]);\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage]);\n\n  const addProject = async () => {\n    var _companiesResponse$da, _categoriesResponse$d, _statusesResponse$dat;\n\n    const companiesResponse = (companies === null || companies === void 0 ? void 0 : companies.length) === 0 && loadCompanies && (await loadCompanies({\n      variables: {\n        account: ['ENTITY']\n      }\n    }));\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const companiesResult = companiesResponse === null || companiesResponse === void 0 ? void 0 : (_companiesResponse$da = companiesResponse.data) === null || _companiesResponse$da === void 0 ? void 0 : _companiesResponse$da.getUsers;\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d = categoriesResponse.data) === null || _categoriesResponse$d === void 0 ? void 0 : _categoriesResponse$d.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat = statusesResponse.data) === null || _statusesResponse$dat === void 0 ? void 0 : _statusesResponse$dat.getPostStatus;\n    if (companiesResult) dispatch(setCompanies(companiesResult));\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  };\n\n  const addArticle = async () => {\n    var _categoriesResponse$d2, _statusesResponse$dat2;\n\n    const categoriesResponse = (categories === null || categories === void 0 ? void 0 : categories.length) === 0 && loadCategories && (await loadCategories({\n      variables: {\n        type: 'DIVISION'\n      }\n    }));\n    const statusesResponse = (statuses === null || statuses === void 0 ? void 0 : statuses.length) === 0 && loadStatuses && (await loadStatuses());\n    const categoriesResult = categoriesResponse === null || categoriesResponse === void 0 ? void 0 : (_categoriesResponse$d2 = categoriesResponse.data) === null || _categoriesResponse$d2 === void 0 ? void 0 : _categoriesResponse$d2.getCategories;\n    const statusesResult = statusesResponse === null || statusesResponse === void 0 ? void 0 : (_statusesResponse$dat2 = statusesResponse.data) === null || _statusesResponse$dat2 === void 0 ? void 0 : _statusesResponse$dat2.getPostStatus;\n    if (categoriesResult) dispatch(setCategories(categoriesResult));\n    if (statusesResult) dispatch(setStatuses(statusesResult));\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  };\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null;\n\n    switch (currentPage.value) {\n      case '/projects':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            author: user.email\n          },\n          projects: user.projects\n        });\n\n      case '/liked':\n        return /*#__PURE__*/React.createElement(Projects, {\n          variables: {\n            rating: user.email\n          },\n          projects: user.likedProjects\n        });\n\n      case '/articles':\n        return /*#__PURE__*/React.createElement(Articles, {\n          variables: {\n            author: user.email\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(InProgress, null);\n    }\n  }, [user, currentPage]);\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth');\n    }\n  }, [user]);\n\n  if (!user.authenticated) {\n    return /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null));\n  }\n\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: user.authenticated ? user.name || TITLE : 'Авторизация'\n  }, /*#__PURE__*/React.createElement(Column, null, /*#__PURE__*/React.createElement(UserBar, {\n    user: user,\n    onEdit: recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      canEditAccount: !isAdmin,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    }),\n    onAboutMore: recall(onUserAboutMore, {\n      user\n    }),\n    onCompanyLink: (user === null || user === void 0 ? void 0 : user.company) && recall(onUserLink, {\n      id: user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.email,\n      auth: user === null || user === void 0 ? void 0 : user.email,\n      queries: {\n        userChats: queries.GET_USER_CHATS,\n        chat: queries.GET_CHAT\n      },\n      mutations: {\n        addUserChat: queries.ADD_USER_CHAT,\n        sendMessage: queries.SEND_MESSAGE\n      }\n    }),\n    onMembers: recall(onUserMembers, {\n      id: user === null || user === void 0 ? void 0 : user.email,\n      auth: user === null || user === void 0 ? void 0 : user.email\n    })\n  }), /*#__PURE__*/React.createElement(Switch, {\n    defaultValue: currentPage,\n    options: profilePages.filter(page => !hasResponsibleMember(user) ? page.value !== '/articles' : true),\n    onChange: item => setCurrentPage(item),\n    stretch: true\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    buttonCreateText: isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : '',\n    onCreate: isProjects && hasAccess(user, 'PURPOSE_PROJECT') && addProject || isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && addArticle,\n    onChangeFilter: () => setVisibleFilter(!visibleFilter)\n  }), /*#__PURE__*/React.createElement(FilterBar, {\n    isOpen: visibleFilter,\n    filters: [/*#__PURE__*/React.createElement(DatePicker, {\n      key: 'publishedAt',\n      value: date,\n      placeholder: 'Дата публикации',\n      onChange: onChangeDate,\n      withNavigate: true\n    }), /*#__PURE__*/React.createElement(Select, {\n      key: 'categories',\n      options: [].map(category => ({\n        value: category.id,\n        label: category.name\n      })),\n      placeholder: 'Раздел',\n      selected: select,\n      onChange: item => onChangeSelect(item)\n    })],\n    options: templates.project.map((item, index) => ({\n      label: item.header,\n      value: index\n    }))\n  }), renderContentPage()));\n};\n\n_s2(Profile, \"HHbMiRbGTFLjNB86clR44Qh+pwE=\", false, function () {\n  return [useHelper, useRouter, useSelector, useDispatch, useLazyQuery, useLazyQuery, useLazyQuery];\n});\n\n_c10 = Profile;\nexport var __N_SSP = true;\nexport default Profile;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"ContainerInProgress\");\n$RefreshReg$(_c2, \"CreateButton\");\n$RefreshReg$(_c3, \"Organizer\");\n$RefreshReg$(_c4, \"RemoveTooltip\");\n$RefreshReg$(_c5, \"CentralAlert\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"Projects\");\n$RefreshReg$(_c8, \"Articles\");\n$RefreshReg$(_c9, \"InProgress\");\n$RefreshReg$(_c10, \"Profile\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/profile.js"],"names":["React","useState","useEffect","useCallback","useMemo","useRouter","styled","css","useSelector","useDispatch","useLazyQuery","Row","Column","Switch","Alert","Icon","Difinition","DatePicker","Select","Button","Spinner","Tooltip","Wrap","WrapText","templates","hasAccess","useHelper","DefaultLayout","UserBar","FilterBar","SearchBar","ProjectList","ArticleList","hasResponsibleMember","Loader","setUserFolder","setFolder","setCompanies","setCategories","setStatuses","onUserClientEdit","onUserAboutMore","onUserFolderAdd","onUserFolderDelete","onUserMembers","onUserLink","onProjectCreate","onArticleCreate","queries","profilePages","TITLE","ContainerInProgress","CreateButton","Organizer","RemoveTooltip","CentralAlert","ListItem","div","active","Projects","variables","projects","Articles","InProgress","recall","user","folder","state","root","dispatch","defaultFolder","folders","getProjects","data","loading","refetch","GET_PROJECTS_BY_IDS","customLoading","setCustomLoading","onRefetch","item","result","onFolderClick","length","map","label","id","name","mutation","DELETE_USER_FOLDER","callback","width","textAlign","ADD_USER_FOLDER","getProjectsByIds","height","Profile","router","companies","categories","statuses","date","onChangeDate","select","onChangeSelect","currentPage","setCurrentPage","visibleFilter","setVisibleFilter","isAdmin","account","loadCompanies","GET_USERS","loadCategories","GET_CATEGORIES","loadStatuses","GET_POST_STATUSES","isProjects","value","isArticles","addProject","companiesResponse","categoriesResponse","type","statusesResponse","companiesResult","getUsers","categoriesResult","getCategories","statusesResult","getPostStatus","CREATE_PROJECT","query","isPurpose","addArticle","CREATE_ARTICLE","renderContentPage","author","email","rating","likedProjects","authenticated","push","canEditAccount","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update","company","auth","userChats","GET_USER_CHATS","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","SEND_MESSAGE","filter","page","category","project","index","header"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react'\nimport { useRouter } from 'next/router'\nimport styled, { css } from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nimport Row from '../atomic-ui/components/Row'\nimport Column from '../atomic-ui/components/Column'\nimport Switch from '../atomic-ui/components/Switch'\nimport Alert from '../atomic-ui/components/Alert'\nimport Icon from '../atomic-ui/components/Icon'\nimport Difinition from '../atomic-ui/components/Difinition'\nimport DatePicker from '../atomic-ui/components/DatePicker'\nimport Select from '../atomic-ui/components/Select'\nimport Button from '../atomic-ui/components/Button'\nimport Spinner from '../atomic-ui/components/Spinner'\nimport Tooltip from '../atomic-ui/components/Tooltip'\nimport { Wrap as WrapText } from '../atomic-ui/components/Text'\nimport templates from '../atomic-ui/components/Table/templates'\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport DefaultLayout from '../layouts/default'\nimport UserBar from '../components/UserBar'\nimport FilterBar from '../components/FilterBar'\nimport SearchBar from '../components/SearchBar'\nimport ProjectList from '../components/ProjectList'\nimport ArticleList from '../components/ArticleList'\nimport { hasResponsibleMember } from '../components/Members'\nimport { Loader } from '../components/Styled'\n\nimport { setUserFolder } from '../store/actions/user'\nimport { setFolder, setCompanies, setCategories, setStatuses } from '../store/actions/root'\nimport {\n  onUserClientEdit,\n  onUserAboutMore,\n  onUserFolderAdd,\n  onUserFolderDelete,\n  onUserMembers,\n  onUserLink\n} from '../store/helpers/user'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { onArticleCreate } from '../store/helpers/article'\nimport queries from '../graphql/queries'\nimport { profilePages } from '../__mock__'\n\nconst TITLE = 'Профиль'\n\nconst ContainerInProgress = styled(Row)`\n  grid-gap: var(--default-gap);\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`\n\nconst CreateButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 10px;\n\n  span {\n    white-space: nowrap;\n  }\n`\n\nconst Organizer = styled(Column)`\n  width: 265px;\n  min-width: 265px;\n`\n\nconst RemoveTooltip = styled(Tooltip)`\n  position: absolute;\n  right: 8px;\n  z-index: var(--z-11);\n  display: none;\n`\n\nconst CentralAlert = styled(Alert)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  flex-grow: 10;\n`\n\nconst ListItem = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: var(--input-height-s);\n  background: var(--ghost-color-background);\n  border-radius: var(--surface-border-radius);\n  padding: 8px 10px;\n  width: 100%;\n  height: auto;\n  cursor: pointer;\n  transition: all 150ms ease;\n\n  ${WrapText}, h4 {\n    color: var(--ghost-color-text);\n  }\n\n  ${RemoveTooltip} {\n    svg path {\n      color: var(--ghost-color-text);\n    }\n  }\n\n  &:hover {\n    ${RemoveTooltip} {\n      display: flex;\n\n      svg path {\n        stroke: black;\n      }\n    }\n\n    ${WrapText}, h4 {\n      color: black;\n    }\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      color: var(--default-color-accent);\n      background: var(--default-color-accent-dim);\n\n      ${RemoveTooltip} {\n        svg path {\n          stroke: var(--default-color-accent) !important;\n        }\n      }\n\n      ${WrapText}, h4, p {\n        color: var(--default-color-accent);\n      }\n\n      &:hover {\n        ${WrapText}, h4, p {\n          color: var(--default-color-accent);\n        }\n      }\n    `}\n`\n\nconst Projects = ({ variables, projects }) => (\n  <ProjectList variables={variables} initialList={projects} layout />\n)\n\nconst Articles = ({ variables }) => <ArticleList variables={variables} layout />\n\nconst InProgress = () => {\n  const recall = useHelper()\n  const { user, folder } = useSelector((state) => ({\n    user: state.user,\n    folder: state.root.folder\n  }))\n  const dispatch = useDispatch()\n\n  const defaultFolder = useMemo(() => user?.folders[0], [user])\n  const [getProjects, { data, loading, refetch }] = useLazyQuery(queries.GET_PROJECTS_BY_IDS)\n  const [customLoading, setCustomLoading] = useState(false)\n\n  const onRefetch = async (item, projects) => {\n    if (projects && refetch) {\n      setCustomLoading(true)\n\n      if (item) {\n        const result = { ...item, projects }\n        dispatch(setFolder(result))\n        dispatch(setUserFolder(result))\n      }\n\n      await refetch({ projects })\n      setCustomLoading(false)\n    }\n  }\n\n  const onFolderClick = (item) => onRefetch(item, item.projects)\n\n  useEffect(() => {\n    if (defaultFolder) {\n      dispatch(setFolder(defaultFolder))\n    }\n  }, [defaultFolder, dispatch])\n\n  useEffect(() => {\n    if (!refetch && !data && defaultFolder) {\n      getProjects({\n        variables: { projects: defaultFolder.projects }\n      })\n    }\n  }, [data, refetch, defaultFolder, getProjects])\n\n  return (\n    <ContainerInProgress>\n      <Organizer>\n        {user.folders && user.folders.length > 0 ? (\n          <Column>\n            {user.folders.map((item) => {\n              const length = item.projects.length\n              const label =\n                length === 1 ? 'проект' : length > 1 && length < 5 ? 'проекта' : 'проектов'\n\n              return (\n                <ListItem key={item.id} active={folder && item.id === folder.id}>\n                  <Difinition\n                    text={item.name}\n                    label={`${length} ${label}`}\n                    onLink={() => onFolderClick(item)}\n                    revert\n                  />\n                  <RemoveTooltip place={'left'} text={'Удалить'}>\n                    <Button\n                      size={'xs'}\n                      kind={'icon'}\n                      type={'button'}\n                      disabled={loading}\n                      appearance={'clear'}\n                      onClick={recall(onUserFolderDelete, {\n                        id: item.id,\n                        mutation: queries.DELETE_USER_FOLDER,\n                        callback: () => onFolderClick(defaultFolder)\n                      })}>\n                      <Icon size={'xs'} icon={'delete'} stroke={'var(--ghost-color-text)'} />\n                    </Button>\n                  </RemoveTooltip>\n                </ListItem>\n              )\n            })}\n          </Column>\n        ) : (\n          <Alert style={{ width: '100%', textAlign: 'center' }}>Папок нет</Alert>\n        )}\n        <CreateButton onClick={recall(onUserFolderAdd, { mutation: queries.ADD_USER_FOLDER })}>\n          <span>Новая папка</span>\n          <Icon icon={'add'} stroke={'white'} />\n        </CreateButton>\n      </Organizer>\n\n      {!loading && !customLoading && data && data.getProjectsByIds.length > 0 ? (\n        <ProjectList\n          initialList={folder ? data.getProjectsByIds : []}\n          initialRefetch={(projects) => onRefetch(folder, projects)}\n          eliminable\n          layout\n        />\n      ) : loading || customLoading ? (\n        <Loader style={{ height: 'auto' }}>\n          <Spinner />\n        </Loader>\n      ) : (\n        <CentralAlert>В этой папке нет проектов</CentralAlert>\n      )}\n    </ContainerInProgress>\n  )\n}\n\nconst Profile = () => {\n  const recall = useHelper()\n  const router = useRouter()\n  const { user, companies, categories, statuses } = useSelector((state) => ({\n    user: state.user,\n    companies: state.root.companies,\n    categories: state.root.categories,\n    statuses: state.root.statuses\n  }))\n  const dispatch = useDispatch()\n  const [date, onChangeDate] = useState()\n  const [select, onChangeSelect] = useState()\n  const [currentPage, setCurrentPage] = useState(profilePages[0])\n  const [visibleFilter, setVisibleFilter] = useState(false)\n  const isAdmin = useMemo(() => user?.account === 'ADMIN', [user])\n\n  const [loadCompanies] = useLazyQuery(queries.GET_USERS)\n  const [loadCategories] = useLazyQuery(queries.GET_CATEGORIES)\n  const [loadStatuses] = useLazyQuery(queries.GET_POST_STATUSES)\n\n  const isProjects = useMemo(() => currentPage.value === '/projects', [currentPage])\n  const isArticles = useMemo(() => currentPage.value === '/articles', [currentPage])\n\n  const addProject = async () => {\n    const companiesResponse =\n      companies?.length === 0 &&\n      loadCompanies &&\n      (await loadCompanies({ variables: { account: ['ENTITY'] } }))\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const companiesResult = companiesResponse?.data?.getUsers\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (companiesResult) dispatch(setCompanies(companiesResult))\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onProjectCreate, {\n      companies: companiesResult || companies,\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }\n\n  const addArticle = async () => {\n    const categoriesResponse =\n      categories?.length === 0 &&\n      loadCategories &&\n      (await loadCategories({ variables: { type: 'DIVISION' } }))\n    const statusesResponse = statuses?.length === 0 && loadStatuses && (await loadStatuses())\n\n    const categoriesResult = categoriesResponse?.data?.getCategories\n    const statusesResult = statusesResponse?.data?.getPostStatus\n\n    if (categoriesResult) dispatch(setCategories(categoriesResult))\n    if (statusesResult) dispatch(setStatuses(statusesResult))\n\n    recall(onArticleCreate, {\n      categories: categoriesResult || categories,\n      statuses: statusesResult || statuses,\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }\n\n  const renderContentPage = useCallback(() => {\n    if (!user) return null\n    switch (currentPage.value) {\n      case '/projects':\n        return <Projects variables={{ author: user.email }} projects={user.projects} />\n      case '/liked':\n        return <Projects variables={{ rating: user.email }} projects={user.likedProjects} />\n      case '/articles':\n        return <Articles variables={{ author: user.email }} />\n      default:\n        return <InProgress />\n    }\n  }, [user, currentPage])\n\n  useEffect(() => {\n    if (!user.authenticated) {\n      router.push('/auth')\n    }\n  }, [user])\n\n  if (!user.authenticated) {\n    return (\n      <Loader>\n        <Spinner />\n      </Loader>\n    )\n  }\n\n  return (\n    <DefaultLayout title={user.authenticated ? user.name || TITLE : 'Авторизация'}>\n      <Column>\n        <UserBar\n          user={user}\n          onEdit={recall(onUserClientEdit, {\n            user: user?.email,\n            canEditAccount: !isAdmin,\n            mutations: {\n              del: queries.DELETE_USER,\n              forgotEmail: queries.LOGIN,\n              forgotPassword: queries.RESET,\n              changePassword: queries.UPDATE_CLIENT_USER,\n              checkResetToken: queries.CHECK_RESET_TOKEN,\n              update: queries.UPDATE_CLIENT_USER\n            }\n          })}\n          onAboutMore={recall(onUserAboutMore, { user })}\n          onCompanyLink={\n            user?.company &&\n            recall(onUserLink, {\n              id: user?.company?.email,\n              auth: user?.email,\n              queries: {\n                userChats: queries.GET_USER_CHATS,\n                chat: queries.GET_CHAT\n              },\n              mutations: {\n                addUserChat: queries.ADD_USER_CHAT,\n                sendMessage: queries.SEND_MESSAGE\n              }\n            })\n          }\n          onMembers={recall(onUserMembers, { id: user?.email, auth: user?.email })}\n        />\n\n        <Switch\n          defaultValue={currentPage}\n          options={profilePages.filter((page) =>\n            !hasResponsibleMember(user) ? page.value !== '/articles' : true\n          )}\n          onChange={(item) => setCurrentPage(item)}\n          stretch\n        />\n\n        <SearchBar\n          buttonCreateText={\n            isProjects ? 'Предложить проект' : isArticles ? 'Предложить статью' : ''\n          }\n          onCreate={\n            (isProjects && hasAccess(user, 'PURPOSE_PROJECT') && addProject) ||\n            (isArticles && hasAccess(user, 'PURPOSE_ARTICLE') && addArticle)\n          }\n          onChangeFilter={() => setVisibleFilter(!visibleFilter)}\n        />\n\n        <FilterBar\n          isOpen={visibleFilter}\n          filters={[\n            <DatePicker\n              key={'publishedAt'}\n              value={date}\n              placeholder={'Дата публикации'}\n              onChange={onChangeDate}\n              withNavigate\n            />,\n            <Select\n              key={'categories'}\n              options={[].map((category) => ({\n                value: category.id,\n                label: category.name\n              }))}\n              placeholder={'Раздел'}\n              selected={select}\n              onChange={(item) => onChangeSelect(item)}\n            />\n          ]}\n          options={templates.project.map((item, index) => ({\n            label: item.header,\n            value: index\n          }))}\n        />\n\n        {renderContentPage()}\n      </Column>\n    </DefaultLayout>\n  )\n}\n\nexport async function getServerSideProps() {\n  const client = initializeApollo()\n\n  let categories = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_CATEGORIES\n    })\n\n    if (response && response.data) {\n      categories = response.data.getCategories\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      categories\n    }\n  }\n}\n\nexport default Profile\n"]},"metadata":{},"sourceType":"module"}