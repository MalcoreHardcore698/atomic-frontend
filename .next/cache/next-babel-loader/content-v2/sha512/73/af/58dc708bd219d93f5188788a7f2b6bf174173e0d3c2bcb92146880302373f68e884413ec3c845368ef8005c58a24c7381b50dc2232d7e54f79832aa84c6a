{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport RoleForm from '../../components/FormRole';\nimport DeleteForm from '../../components/FormDelete';\nimport RoleView from '../../components/RoleView';\nimport { setDocuments } from '../actions/documents';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nexport function onRoleLink(dispatch, props) {\n  var id = props.id;\n  dispatch(setDrawer({\n    icon: 'lock',\n    title: 'Роль',\n    content: /*#__PURE__*/React.createElement(RoleView, {\n      role: id,\n      appearance: 'clear'\n    })\n  }));\n}\nexport function onRoleCreate(dispatch, props) {\n  var permissions = props.permissions,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'lock',\n    title: 'Создание роли',\n    content: /*#__PURE__*/React.createElement(RoleForm, {\n      mutation: mutation,\n      permissions: permissions,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(form, action) {\n          var roles;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return action({\n                    variables: {\n                      input: {\n                        name: form.name,\n                        permissions: form.permissions.map(function (permission) {\n                          return permission.value;\n                        })\n                      }\n                    }\n                  });\n\n                case 3:\n                  roles = _context.sent;\n                  dispatch(setDocuments(roles.data.createRole));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Роль успешно создана'\n                  }));\n                  _context.next = 13;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось создать роль'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onRoleEdit(dispatch, props) {\n  var role = props.role,\n      permissions = props.permissions,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'lock',\n    title: 'Редактирование роли',\n    content: /*#__PURE__*/React.createElement(RoleForm, {\n      role: role,\n      mutation: mutation,\n      permissions: permissions,\n      appearance: 'clear',\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(form, action) {\n          var roles;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return action({\n                    variables: {\n                      id: role.id,\n                      input: {\n                        name: form.name,\n                        permissions: form.permissions.map(function (permission) {\n                          return permission.value;\n                        })\n                      }\n                    }\n                  });\n\n                case 3:\n                  roles = _context2.sent;\n                  dispatch(setDocuments(roles.data.updateRole));\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Роль успешно отредактирована'\n                  }));\n                  _context2.next = 13;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  dispatch(setDrawer(null));\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось отредактировать роль'\n                  }));\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 9]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onRoleDelete(dispatch, props) {\n  var id = props.id,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление роли',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: function onCancel() {\n        return dispatch(setDrawer(null));\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_, action) {\n          var roles;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return action({\n                    variables: {\n                      id: id\n                    }\n                  });\n\n                case 3:\n                  roles = _context3.sent;\n                  dispatch(setDocuments(roles.data.deleteRole));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Роль успешно удалена'\n                  }));\n                  _context3.next = 11;\n                  break;\n\n                case 8:\n                  _context3.prev = 8;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось удалить роль'\n                  }));\n\n                case 11:\n                  _context3.prev = 11;\n                  dispatch(setDrawer(null));\n                  return _context3.finish(11);\n\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 8, 11, 14]]);\n        }));\n\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, /*#__PURE__*/React.createElement(RoleView, {\n      role: id,\n      appearance: 'clear'\n    }))\n  }));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/role.js"],"names":["React","RoleForm","DeleteForm","RoleView","setDocuments","setDrawer","setItem","onRoleLink","dispatch","props","id","icon","title","content","onRoleCreate","permissions","mutation","form","action","variables","input","name","map","permission","value","roles","data","createRole","type","message","onRoleEdit","role","updateRole","onRoleDelete","color","_","deleteRole"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,KAA9B,EAAqC;AAAA,MAClCC,EADkC,GAC3BD,KAD2B,CAClCC,EADkC;AAG1CF,EAAAA,QAAQ,CACNH,SAAS,CAAC;AACRM,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,KAAK,EAAE,MAFC;AAGRC,IAAAA,OAAO,eAAE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEH,EAAhB;AAAoB,MAAA,UAAU,EAAE;AAAhC;AAHD,GAAD,CADH,CAAR;AAOD;AAED,OAAO,SAASI,YAAT,CAAsBN,QAAtB,EAAgCC,KAAhC,EAAuC;AAAA,MACpCM,WADoC,GACVN,KADU,CACpCM,WADoC;AAAA,MACvBC,QADuB,GACVP,KADU,CACvBO,QADuB;AAG5CR,EAAAA,QAAQ,CACNH,SAAS,CAAC;AACRM,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,KAAK,EAAE,eAFC;AAGRC,IAAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,QAAQ,EAAEG,QADZ;AAEE,MAAA,WAAW,EAAED,WAFf;AAGE,MAAA,UAAU,EAAE,OAHd;AAIE,MAAA,QAAQ;AAAA,2EAAE,iBAAOE,IAAP,EAAaC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEcA,MAAM,CAAC;AACzBC,oBAAAA,SAAS,EAAE;AACTC,sBAAAA,KAAK,EAAE;AACLC,wBAAAA,IAAI,EAAEJ,IAAI,CAACI,IADN;AAELN,wBAAAA,WAAW,EAAEE,IAAI,CAACF,WAAL,CAAiBO,GAAjB,CAAqB,UAACC,UAAD;AAAA,iCAAgBA,UAAU,CAACC,KAA3B;AAAA,yBAArB;AAFR;AADE;AADc,mBAAD,CAFpB;;AAAA;AAEAC,kBAAAA,KAFA;AAUNjB,kBAAAA,QAAQ,CAACJ,YAAY,CAACqB,KAAK,CAACC,IAAN,CAAWC,UAAZ,CAAb,CAAR;AACAnB,kBAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AACAG,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,SADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;AAZM;AAAA;;AAAA;AAAA;AAAA;AAmBNrB,kBAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AACAG,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,OADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;;AApBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA;AAJV;AAJM,GAAD,CADH,CAAR;AAyCD;AAED,OAAO,SAASC,UAAT,CAAoBtB,QAApB,EAA8BC,KAA9B,EAAqC;AAAA,MAClCsB,IADkC,GACFtB,KADE,CAClCsB,IADkC;AAAA,MAC5BhB,WAD4B,GACFN,KADE,CAC5BM,WAD4B;AAAA,MACfC,QADe,GACFP,KADE,CACfO,QADe;AAG1CR,EAAAA,QAAQ,CACNH,SAAS,CAAC;AACRM,IAAAA,IAAI,EAAE,MADE;AAERC,IAAAA,KAAK,EAAE,qBAFC;AAGRC,IAAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEkB,IADR;AAEE,MAAA,QAAQ,EAAEf,QAFZ;AAGE,MAAA,WAAW,EAAED,WAHf;AAIE,MAAA,UAAU,EAAE,OAJd;AAKE,MAAA,QAAQ;AAAA,4EAAE,kBAAOE,IAAP,EAAaC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEcA,MAAM,CAAC;AACzBC,oBAAAA,SAAS,EAAE;AACTT,sBAAAA,EAAE,EAAEqB,IAAI,CAACrB,EADA;AAETU,sBAAAA,KAAK,EAAE;AACLC,wBAAAA,IAAI,EAAEJ,IAAI,CAACI,IADN;AAELN,wBAAAA,WAAW,EAAEE,IAAI,CAACF,WAAL,CAAiBO,GAAjB,CAAqB,UAACC,UAAD;AAAA,iCAAgBA,UAAU,CAACC,KAA3B;AAAA,yBAArB;AAFR;AAFE;AADc,mBAAD,CAFpB;;AAAA;AAEAC,kBAAAA,KAFA;AAWNjB,kBAAAA,QAAQ,CAACJ,YAAY,CAACqB,KAAK,CAACC,IAAN,CAAWM,UAAZ,CAAb,CAAR;AACAxB,kBAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AACAG,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,SADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;AAbM;AAAA;;AAAA;AAAA;AAAA;AAoBNrB,kBAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AACAG,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,OADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;;AArBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA;AALV;AAJM,GAAD,CADH,CAAR;AA2CD;AAED,OAAO,SAASI,YAAT,CAAsBzB,QAAtB,EAAgCC,KAAhC,EAAuC;AAAA,MACpCC,EADoC,GACnBD,KADmB,CACpCC,EADoC;AAAA,MAChCM,QADgC,GACnBP,KADmB,CAChCO,QADgC;AAG5CR,EAAAA,QAAQ,CACNH,SAAS,CAAC;AACRM,IAAAA,IAAI,EAAE,QADE;AAERuB,IAAAA,KAAK,EAAE,KAFC;AAGRtB,IAAAA,KAAK,EAAE,eAHC;AAIRC,IAAAA,OAAO,eACL,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAEG,QADZ;AAEE,MAAA,UAAU,EAAE,OAFd;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMR,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAd;AAAA,OAHZ;AAIE,MAAA,QAAQ;AAAA,4EAAE,kBAAO8B,CAAP,EAAUjB,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEcA,MAAM,CAAC;AACzBC,oBAAAA,SAAS,EAAE;AAAET,sBAAAA,EAAE,EAAFA;AAAF;AADc,mBAAD,CAFpB;;AAAA;AAEAe,kBAAAA,KAFA;AAKNjB,kBAAAA,QAAQ,CAACJ,YAAY,CAACqB,KAAK,CAACC,IAAN,CAAWU,UAAZ,CAAb,CAAR;AACA5B,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,SADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;AANM;AAAA;;AAAA;AAAA;AAAA;AAaNrB,kBAAAA,QAAQ,CACNF,OAAO,CAAC;AACNsB,oBAAAA,IAAI,EAAE,OADA;AAENC,oBAAAA,OAAO,EAAE;AAFH,mBAAD,CADD,CAAR;;AAbM;AAAA;AAoBNrB,kBAAAA,QAAQ,CAACH,SAAS,CAAC,IAAD,CAAV,CAAR;AApBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA;AAJV,oBA2BE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEK,EAAhB;AAAoB,MAAA,UAAU,EAAE;AAAhC,MA3BF;AALM,GAAD,CADH,CAAR;AAsCD","sourcesContent":["import React from 'react'\n\nimport RoleForm from '../../components/FormRole'\nimport DeleteForm from '../../components/FormDelete'\nimport RoleView from '../../components/RoleView'\nimport { setDocuments } from '../actions/documents'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\n\nexport function onRoleLink(dispatch, props) {\n  const { id } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'lock',\n      title: 'Роль',\n      content: <RoleView role={id} appearance={'clear'} />\n    })\n  )\n}\n\nexport function onRoleCreate(dispatch, props) {\n  const { permissions, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'lock',\n      title: 'Создание роли',\n      content: (\n        <RoleForm\n          mutation={mutation}\n          permissions={permissions}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const roles = await action({\n                variables: {\n                  input: {\n                    name: form.name,\n                    permissions: form.permissions.map((permission) => permission.value)\n                  }\n                }\n              })\n              dispatch(setDocuments(roles.data.createRole))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Роль успешно создана'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать роль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onRoleEdit(dispatch, props) {\n  const { role, permissions, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'lock',\n      title: 'Редактирование роли',\n      content: (\n        <RoleForm\n          role={role}\n          mutation={mutation}\n          permissions={permissions}\n          appearance={'clear'}\n          onSubmit={async (form, action) => {\n            try {\n              const roles = await action({\n                variables: {\n                  id: role.id,\n                  input: {\n                    name: form.name,\n                    permissions: form.permissions.map((permission) => permission.value)\n                  }\n                }\n              })\n              dispatch(setDocuments(roles.data.updateRole))\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Роль успешно отредактирована'\n                })\n              )\n            } catch {\n              dispatch(setDrawer(null))\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактировать роль'\n                })\n              )\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onRoleDelete(dispatch, props) {\n  const { id, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление роли',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const roles = await action({\n                variables: { id }\n              })\n              dispatch(setDocuments(roles.data.deleteRole))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Роль успешно удалена'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить роль'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <RoleView role={id} appearance={'clear'} />\n        </DeleteForm>\n      )\n    })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}