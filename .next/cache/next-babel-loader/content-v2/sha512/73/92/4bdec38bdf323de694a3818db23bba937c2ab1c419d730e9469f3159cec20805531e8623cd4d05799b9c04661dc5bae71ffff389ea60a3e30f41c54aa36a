{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useQuery } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport Alert from '../atomic-ui/components/Alert';\nimport Title from '../atomic-ui/components/Title';\nimport Spinner from '../atomic-ui/components/Spinner';\nimport { useHelper } from '../hooks/useHelper';\nimport { useMutate } from '../hooks/useMutate';\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll';\nimport DefaultLayout from '../layouts/default';\nimport ProjectCard from '../components/ProjectCard';\nimport ArticleCard from '../components/ArticleCard';\nimport UserCard from '../components/UserCard';\nimport { updateUser } from '../store/actions/user';\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project';\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user';\nimport { onArticleLink } from '../store/helpers/article';\nimport { onChat } from '../store/helpers';\nimport queries from '../graphql/queries';\nconst TITLE = 'Атомик';\nconst START_OFFSET = 13;\nconst LIMIT = 5;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"sc-1kp8388-0\"\n})([\"display:grid;grid-template-columns:1fr min-content;grid-gap:var(--default-gap);margin-bottom:80px;@media only screen and (max-width:1196px){grid-template-columns:1fr;}\"]);\n_c = Container;\nconst Projects = styled.aside.withConfig({\n  displayName: \"pages__Projects\",\n  componentId: \"sc-1kp8388-1\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(442px,1fr));grid-gap:var(--default-gap);grid-auto-rows:max-content;@media only screen and (max-width:768px){grid-template-columns:repeat(auto-fit,minmax(285px,1fr));}\"]);\n_c2 = Projects;\nconst Aside = styled.aside.withConfig({\n  displayName: \"pages__Aside\",\n  componentId: \"sc-1kp8388-2\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:394px;@media only screen and (max-width:1196px){width:auto;}\"]);\n_c3 = Aside;\nconst Loader = styled.div.withConfig({\n  displayName: \"pages__Loader\",\n  componentId: \"sc-1kp8388-3\"\n})([\"display:flex;justify-content:center;width:100%;height:80px;\"]);\n_c4 = Loader;\n\nconst Home = ({\n  store\n}) => {\n  _s();\n\n  const recall = useHelper();\n  const mutate = useMutate();\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const {\n    articles,\n    users\n  } = store;\n  const [offset, setOffset] = useState(START_OFFSET);\n  const [projects, setProjects] = useState(store.projects || []);\n  const {\n    loading,\n    refetch\n  } = useQuery(queries.GET_PROJECTS, {\n    variables: {\n      offset: 0,\n      limit: LIMIT\n    }\n  });\n  const [isFetching, setIsFetching] = useInfiniteScroll(async () => {\n    const response = await refetch({\n      offset,\n      limit: LIMIT\n    });\n\n    if (!response.errors) {\n      setProjects(prev => [...prev, ...response.data.getProjects]);\n    }\n\n    setOffset(prev => prev + LIMIT);\n    setIsFetching(false);\n  });\n  return /*#__PURE__*/React.createElement(DefaultLayout, {\n    title: TITLE,\n    scaffold: {\n      title: 'Создавай школу будущего с нами',\n      background: '/images/main-background.png',\n      primary: projects.length > 0 && projects[0],\n      residue: projects.length > 4 && projects.slice(1, 3),\n      onLink: (project, owned) => recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        project,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      })(),\n      onLike: user.email && (project => mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject)))()),\n      onAdd: user.email && (project => recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      })()),\n      onCompanyLink: project => {\n        var _project$company;\n\n        return recall(onUserLink, {\n          id: (_project$company = project.company) === null || _project$company === void 0 ? void 0 : _project$company.email,\n          auth: user\n        })();\n      },\n      onScreenshotClick: (project, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    }\n  }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Projects, null, projects.length > 3 ? projects.slice(3).map(project => {\n    var _user$projects, _user$folders, _project$company2;\n\n    const owned = user === null || user === void 0 ? void 0 : (_user$projects = user.projects) === null || _user$projects === void 0 ? void 0 : _user$projects.find(candidate => candidate.id === project.id);\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      key: v4(),\n      project: project,\n      owned: owned,\n      added: !!(user !== null && user !== void 0 && (_user$folders = user.folders) !== null && _user$folders !== void 0 && _user$folders.find(folder => !!(folder !== null && folder !== void 0 && folder.projects.find(item => item.id === project.id)))),\n      liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n      onLink: recall(onProjectLink, {\n        id: project.id,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        liked: !!((user === null || user === void 0 ? void 0 : user.likedProjects) || []).find(item => item.id === project.id),\n        onLike: user.email && mutate(queries.LIKE_PROJECT, {\n          id: project.id\n        }, response => dispatch(updateUser(response.data.likeProject))),\n        onAdd: user.email && recall(onProjectAdd, {\n          id: project.id,\n          project,\n          folders: user === null || user === void 0 ? void 0 : user.folders,\n          mutations: {\n            addProject: queries.ADD_USER_PROJECT,\n            createFolder: queries.ADD_USER_FOLDER\n          }\n        }),\n        owned\n      }),\n      onLike: user.email && mutate(queries.LIKE_PROJECT, {\n        id: project.id\n      }, response => dispatch(updateUser(response.data.likeProject))),\n      onAdd: user.email && recall(onProjectAdd, {\n        id: project.id,\n        project,\n        folders: user === null || user === void 0 ? void 0 : user.folders,\n        mutations: {\n          addProject: queries.ADD_USER_PROJECT,\n          createFolder: queries.ADD_USER_FOLDER\n        }\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_project$company2 = project.company) === null || _project$company2 === void 0 ? void 0 : _project$company2.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        recipient: project.author,\n        query: queries.GET_USER_CHATS,\n        mutation: queries.SEND_MESSAGE\n      }),\n      onScreenshotClick: (_, key) => recall(onProjectScreenshot, {\n        screenshots: [project.preview, ...project.screenshots],\n        key\n      })()\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u043E\\u0432 \\u043D\\u0435\\u0442\"), (loading || isFetching) && /*#__PURE__*/React.createElement(Loader, null, /*#__PURE__*/React.createElement(Spinner, null))), /*#__PURE__*/React.createElement(Aside, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u044B\"), users.length > 0 ? users.slice(0, 3).map(author => {\n    var _author$company;\n\n    const owned = author.name === (user === null || user === void 0 ? void 0 : user.name);\n    return /*#__PURE__*/React.createElement(UserCard, {\n      key: v4(),\n      user: author,\n      owned: owned,\n      onChat: user.email && recall(onChat, {\n        email: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onLink: recall(onUserLink, {\n        id: author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        owned,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      }),\n      onAboutMore: recall(onUserAboutMore, {\n        user: author\n      }),\n      onMembers: recall(onUserMembers, {\n        id: author === null || author === void 0 ? void 0 : author.email,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      }),\n      onCompanyLink: recall(onUserLink, {\n        id: (_author$company = author.company) === null || _author$company === void 0 ? void 0 : _author$company.email,\n        auth: user === null || user === void 0 ? void 0 : user.email,\n        queries: {\n          userChats: queries.GET_USER_CHATS,\n          chat: queries.GET_CHAT\n        },\n        mutations: {\n          addUserChat: queries.ADD_USER_CHAT,\n          sendMessage: queries.SEND_MESSAGE\n        }\n      })\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u043E\\u0432 \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\"), articles.length > 0 ? articles.slice(0, 2).map(article => {\n    var _user$articles;\n\n    return /*#__PURE__*/React.createElement(ArticleCard, {\n      key: v4(),\n      layout: 'column',\n      article: article,\n      owned: user === null || user === void 0 ? void 0 : (_user$articles = user.articles) === null || _user$articles === void 0 ? void 0 : _user$articles.find(candidate => candidate.id === article.id),\n      onLink: recall(onArticleLink, {\n        id: article.id,\n        auth: user === null || user === void 0 ? void 0 : user.email\n      })\n    });\n  }) : /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439 \\u043D\\u0435\\u0442\"))));\n};\n\n_s(Home, \"9YTsH6JpTFuyW3mRwI0y0zKLmV0=\", false, function () {\n  return [useHelper, useMutate, useSelector, useDispatch, useQuery, useInfiniteScroll];\n});\n\n_c5 = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Projects\");\n$RefreshReg$(_c3, \"Aside\");\n$RefreshReg$(_c4, \"Loader\");\n$RefreshReg$(_c5, \"Home\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/pages/index.js"],"names":["React","useState","styled","useSelector","useDispatch","useQuery","v4","Alert","Title","Spinner","useHelper","useMutate","useInfiniteScroll","DefaultLayout","ProjectCard","ArticleCard","UserCard","updateUser","onProjectLink","onProjectAdd","onProjectScreenshot","onUserAboutMore","onUserLink","onUserMembers","onArticleLink","onChat","queries","TITLE","START_OFFSET","LIMIT","Container","div","Projects","aside","Aside","Loader","Home","store","recall","mutate","user","state","dispatch","articles","users","offset","setOffset","projects","setProjects","loading","refetch","GET_PROJECTS","variables","limit","isFetching","setIsFetching","response","errors","prev","data","getProjects","title","background","primary","length","residue","slice","onLink","project","owned","id","auth","email","liked","likedProjects","find","item","onLike","LIKE_PROJECT","likeProject","onAdd","folders","mutations","addProject","ADD_USER_PROJECT","createFolder","ADD_USER_FOLDER","onCompanyLink","company","onScreenshotClick","key","screenshots","preview","map","candidate","folder","recipient","author","query","GET_USER_CHATS","mutation","SEND_MESSAGE","_","width","textAlign","name","userChats","chat","GET_CHAT","addUserChat","ADD_USER_CHAT","sendMessage","article"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useQuery } from '@apollo/react-hooks'\nimport { v4 } from 'uuid'\n\nimport Alert from '../atomic-ui/components/Alert'\nimport Title from '../atomic-ui/components/Title'\nimport Spinner from '../atomic-ui/components/Spinner'\n\nimport { initializeApollo } from '../apollo'\nimport { useHelper } from '../hooks/useHelper'\nimport { useMutate } from '../hooks/useMutate'\nimport { useInfiniteScroll } from '../hooks/useInfiniteScroll'\nimport DefaultLayout from '../layouts/default'\nimport ProjectCard from '../components/ProjectCard'\nimport ArticleCard from '../components/ArticleCard'\nimport UserCard from '../components/UserCard'\nimport { updateUser } from '../store/actions/user'\nimport { onProjectLink, onProjectAdd, onProjectScreenshot } from '../store/helpers/project'\nimport { onUserAboutMore, onUserLink, onUserMembers } from '../store/helpers/user'\nimport { onArticleLink } from '../store/helpers/article'\nimport { onChat } from '../store/helpers'\nimport queries from '../graphql/queries'\n\nconst TITLE = 'Атомик'\nconst START_OFFSET = 13\nconst LIMIT = 5\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  grid-gap: var(--default-gap);\n  margin-bottom: 80px;\n\n  @media only screen and (max-width: 1196px) {\n    grid-template-columns: 1fr;\n  }\n`\n\nconst Projects = styled.aside`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(442px, 1fr));\n  grid-gap: var(--default-gap);\n  grid-auto-rows: max-content;\n\n  @media only screen and (max-width: 768px) {\n    grid-template-columns: repeat(auto-fit, minmax(285px, 1fr));\n  }\n`\n\nconst Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 394px;\n\n  @media only screen and (max-width: 1196px) {\n    width: auto;\n  }\n`\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 80px;\n`\n\nconst Home = ({ store }) => {\n  const recall = useHelper()\n  const mutate = useMutate()\n  const user = useSelector((state) => state.user)\n  const dispatch = useDispatch()\n  const { articles, users } = store\n\n  const [offset, setOffset] = useState(START_OFFSET)\n  const [projects, setProjects] = useState(store.projects || [])\n  const { loading, refetch } = useQuery(queries.GET_PROJECTS, {\n    variables: {\n      offset: 0,\n      limit: LIMIT\n    }\n  })\n  const [isFetching, setIsFetching] = useInfiniteScroll(async () => {\n    const response = await refetch({ offset, limit: LIMIT })\n    if (!response.errors) {\n      setProjects((prev) => [...prev, ...response.data.getProjects])\n    }\n    setOffset((prev) => prev + LIMIT)\n    setIsFetching(false)\n  })\n\n  return (\n    <DefaultLayout\n      title={TITLE}\n      scaffold={{\n        title: 'Создавай школу будущего с нами',\n        background: '/images/main-background.png',\n        primary: projects.length > 0 && projects[0],\n        residue: projects.length > 4 && projects.slice(1, 3),\n        onLink: (project, owned) =>\n          recall(onProjectLink, {\n            id: project.id,\n            auth: user?.email,\n            project,\n            liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n            onLike:\n              user.email &&\n              mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                dispatch(updateUser(response.data.likeProject))\n              ),\n            onAdd:\n              user.email &&\n              recall(onProjectAdd, {\n                id: project.id,\n                project,\n                folders: user?.folders,\n                mutations: {\n                  addProject: queries.ADD_USER_PROJECT,\n                  createFolder: queries.ADD_USER_FOLDER\n                }\n              }),\n            owned\n          })(),\n        onLike:\n          user.email &&\n          ((project) =>\n            mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n              dispatch(updateUser(response.data.likeProject))\n            )()),\n        onAdd:\n          user.email &&\n          ((project) =>\n            recall(onProjectAdd, {\n              id: project.id,\n              project,\n              folders: user?.folders,\n              mutations: {\n                addProject: queries.ADD_USER_PROJECT,\n                createFolder: queries.ADD_USER_FOLDER\n              }\n            })()),\n        onCompanyLink: (project) =>\n          recall(onUserLink, { id: project.company?.email, auth: user })(),\n        onScreenshotClick: (project, key) =>\n          recall(onProjectScreenshot, {\n            screenshots: [project.preview, ...project.screenshots],\n            key\n          })()\n      }}>\n      <Container>\n        <Projects>\n          {projects.length > 3 ? (\n            projects.slice(3).map((project) => {\n              const owned = user?.projects?.find((candidate) => candidate.id === project.id)\n\n              return (\n                <ProjectCard\n                  key={v4()}\n                  project={project}\n                  owned={owned}\n                  added={\n                    !!user?.folders?.find(\n                      (folder) => !!folder?.projects.find((item) => item.id === project.id)\n                    )\n                  }\n                  liked={!!(user?.likedProjects || []).find((item) => item.id === project.id)}\n                  onLink={recall(onProjectLink, {\n                    id: project.id,\n                    auth: user?.email,\n                    liked: !!(user?.likedProjects || []).find((item) => item.id === project.id),\n                    onLike:\n                      user.email &&\n                      mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                        dispatch(updateUser(response.data.likeProject))\n                      ),\n                    onAdd:\n                      user.email &&\n                      recall(onProjectAdd, {\n                        id: project.id,\n                        project,\n                        folders: user?.folders,\n                        mutations: {\n                          addProject: queries.ADD_USER_PROJECT,\n                          createFolder: queries.ADD_USER_FOLDER\n                        }\n                      }),\n                    owned\n                  })}\n                  onLike={\n                    user.email &&\n                    mutate(queries.LIKE_PROJECT, { id: project.id }, (response) =>\n                      dispatch(updateUser(response.data.likeProject))\n                    )\n                  }\n                  onAdd={\n                    user.email &&\n                    recall(onProjectAdd, {\n                      id: project.id,\n                      project,\n                      folders: user?.folders,\n                      mutations: {\n                        addProject: queries.ADD_USER_PROJECT,\n                        createFolder: queries.ADD_USER_FOLDER\n                      }\n                    })\n                  }\n                  onCompanyLink={recall(onUserLink, {\n                    id: project.company?.email,\n                    auth: user?.email,\n                    recipient: project.author,\n                    query: queries.GET_USER_CHATS,\n                    mutation: queries.SEND_MESSAGE\n                  })}\n                  onScreenshotClick={(_, key) =>\n                    recall(onProjectScreenshot, {\n                      screenshots: [project.preview, ...project.screenshots],\n                      key\n                    })()\n                  }\n                />\n              )\n            })\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Проектов нет</Alert>\n          )}\n\n          {(loading || isFetching) && (\n            <Loader>\n              <Spinner />\n            </Loader>\n          )}\n        </Projects>\n\n        <Aside>\n          <Title tag={'h4'}>Авторы</Title>\n          {users.length > 0 ? (\n            users.slice(0, 3).map((author) => {\n              const owned = author.name === user?.name\n\n              return (\n                <UserCard\n                  key={v4()}\n                  user={author}\n                  owned={owned}\n                  onChat={\n                    user.email &&\n                    recall(onChat, {\n                      email: author.email,\n                      auth: user?.email,\n                      queries: {\n                        userChats: queries.GET_USER_CHATS,\n                        chat: queries.GET_CHAT\n                      },\n                      mutations: {\n                        addUserChat: queries.ADD_USER_CHAT,\n                        sendMessage: queries.SEND_MESSAGE\n                      }\n                    })\n                  }\n                  onLink={recall(onUserLink, {\n                    id: author.email,\n                    auth: user?.email,\n                    owned,\n                    queries: {\n                      userChats: queries.GET_USER_CHATS,\n                      chat: queries.GET_CHAT\n                    },\n                    mutations: {\n                      addUserChat: queries.ADD_USER_CHAT,\n                      sendMessage: queries.SEND_MESSAGE\n                    }\n                  })}\n                  onAboutMore={recall(onUserAboutMore, { user: author })}\n                  onMembers={recall(onUserMembers, { id: author?.email, auth: user?.email })}\n                  onCompanyLink={recall(onUserLink, {\n                    id: author.company?.email,\n                    auth: user?.email,\n                    queries: {\n                      userChats: queries.GET_USER_CHATS,\n                      chat: queries.GET_CHAT\n                    },\n                    mutations: {\n                      addUserChat: queries.ADD_USER_CHAT,\n                      sendMessage: queries.SEND_MESSAGE\n                    }\n                  })}\n                />\n              )\n            })\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Авторов нет</Alert>\n          )}\n\n          <Title tag={'h4'}>Новости</Title>\n          {articles.length > 0 ? (\n            articles\n              .slice(0, 2)\n              .map((article) => (\n                <ArticleCard\n                  key={v4()}\n                  layout={'column'}\n                  article={article}\n                  owned={user?.articles?.find((candidate) => candidate.id === article.id)}\n                  onLink={recall(onArticleLink, { id: article.id, auth: user?.email })}\n                />\n              ))\n          ) : (\n            <Alert style={{ width: '100%', textAlign: 'center' }}>Новостей нет</Alert>\n          )}\n        </Aside>\n      </Container>\n    </DefaultLayout>\n  )\n}\n\nexport const getServerSideProps = async () => {\n  const client = initializeApollo()\n\n  let articles = []\n  let projects = []\n  let users = []\n\n  try {\n    const response = await client.query({\n      query: queries.GET_META_INDEX,\n      variables: {\n        offset: 0,\n        limit: START_OFFSET,\n        status: 'PUBLISHED'\n      }\n    })\n\n    if (response && response.data) {\n      articles = response.data.getArticles\n      projects = response.data.getProjects\n      users = response.data.getUsers\n    }\n  } catch (err) {\n    console.log(err)\n  }\n\n  return {\n    props: {\n      store: {\n        articles,\n        projects,\n        users\n      }\n    }\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}