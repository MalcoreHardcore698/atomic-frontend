{"ast":null,"code":"var _s = $RefreshSig$();\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useMemo } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { v4 } from 'uuid';\nimport Column from '../../atomic-ui/components/Column';\nimport Row from '../../atomic-ui/components/Row';\nimport Switch from '../../atomic-ui/components/Switch';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Transition from '../../atomic-ui/components/Transition';\nimport DatePicker from '../../atomic-ui/components/DatePicker';\nimport AsyncSelect from '../AsyncSelect';\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FilterBar__Wrap\",\n  componentId: \"sc-1lvfs1u-0\"\n})([\"width:100%;&.fade-enter{opacity:0;}&.fade-enter-active{opacity:1;transition:opacity 100ms,blur 100ms;}&.fade-exit{opacity:1;}&.fade-exit-active{opacity:0;transition:opacity 100ms,blur 100ms;}\"]);\n_c = Wrap;\nexport const Form = styled.form.withConfig({\n  displayName: \"FilterBar__Form\",\n  componentId: \"sc-1lvfs1u-1\"\n})([\"display:flex;flex-direction:column;grid-gap:var(--default-gap);width:100%;\"]);\n_c2 = Form;\nexport const List = styled(Row).withConfig({\n  displayName: \"FilterBar__List\",\n  componentId: \"sc-1lvfs1u-2\"\n})([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(256px,1fr));@media only screen and (max-width:480px){grid-gap:var(--default-gap);}\"]);\n_c3 = List;\nexport const Filter = ({\n  isOpen = true,\n  duration,\n  sort,\n  filter,\n  onChange\n}) => {\n  _s();\n\n  const {\n    control,\n    getValues\n  } = useForm();\n  const decorate = useCallback(callback => value => {\n    if (callback) callback(value);\n    if (onChange) onChange(getValues());\n  }, [getValues, onChange]);\n  const filters = useMemo(() => (filter || []).map(filter => {\n    switch (filter.type) {\n      case 'DATEPICKER':\n        return /*#__PURE__*/React.createElement(Controller, {\n          key: v4(),\n          control: control,\n          name: filter.name,\n          render: ({\n            value,\n            onChange\n          }) => /*#__PURE__*/React.createElement(DatePicker, {\n            defaultValue: value,\n            placeholder: filter.label,\n            onChange: decorate(onChange),\n            withNavigate: true\n          })\n        });\n\n      case 'SELECT':\n        return /*#__PURE__*/React.createElement(Controller, {\n          key: v4(),\n          control: control,\n          name: filter.name,\n          render: ({\n            value,\n            onChange\n          }) => /*#__PURE__*/React.createElement(AsyncSelect, _extends({}, filter, {\n            defaultValue: value,\n            onChange: decorate(onChange)\n          }))\n        });\n\n      default:\n        return null;\n    }\n  }), [filter]);\n  const options = useMemo(() => sort || [], [sort]);\n  return /*#__PURE__*/React.createElement(Transition, {\n    in: isOpen,\n    animation: 'fade',\n    timeout: duration\n  }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), filters && filters.length > 0 && /*#__PURE__*/React.createElement(List, null, filters.map(filter => filter)), options && options.length > 0 && /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Controller, {\n    key: v4(),\n    name: 'sort',\n    control: control,\n    defaultValue: options[0],\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Switch, {\n      defaultValue: value,\n      onChange: decorate(onChange),\n      options: options,\n      stretch: true\n    })\n  })), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }))));\n};\n\n_s(Filter, \"rrtYnUnt2gjfzBRc7I5Tuh6Tg+8=\", false, function () {\n  return [useForm];\n});\n\n_c4 = Filter;\nFilter.defaultProps = {\n  duration: 150\n};\nexport default Filter;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"Filter\");","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/components/FilterBar/index.js"],"names":["React","useCallback","useMemo","Controller","useForm","styled","v4","Column","Row","Switch","Divider","Transition","DatePicker","AsyncSelect","Wrap","Form","form","List","Filter","isOpen","duration","sort","filter","onChange","control","getValues","decorate","callback","value","filters","map","type","name","label","options","length","defaultProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport styled from 'styled-components'\nimport { v4 } from 'uuid'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Row from '../../atomic-ui/components/Row'\nimport Switch from '../../atomic-ui/components/Switch'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Transition from '../../atomic-ui/components/Transition'\nimport DatePicker from '../../atomic-ui/components/DatePicker'\n\nimport AsyncSelect from '../AsyncSelect'\n\nexport const Wrap = styled(Column)`\n  width: 100%;\n\n  &.fade-enter {\n    opacity: 0;\n  }\n\n  &.fade-enter-active {\n    opacity: 1;\n    transition: opacity 100ms, blur 100ms;\n  }\n\n  &.fade-exit {\n    opacity: 1;\n  }\n\n  &.fade-exit-active {\n    opacity: 0;\n    transition: opacity 100ms, blur 100ms;\n  }\n`\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  grid-gap: var(--default-gap);\n  width: 100%;\n`\n\nexport const List = styled(Row)`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(256px, 1fr));\n\n  @media only screen and (max-width: 480px) {\n    grid-gap: var(--default-gap);\n  }\n`\n\nexport const Filter = ({ isOpen = true, duration, sort, filter, onChange }) => {\n  const { control, getValues } = useForm()\n\n  const decorate = useCallback(\n   (callback) =>\n      (value) => {\n        if (callback) callback(value)\n        if (onChange) onChange(getValues())\n      },\n    [getValues, onChange]\n  )\n\n  const filters = useMemo(() => (filter || []).map((filter) => {\n    switch (filter.type) {\n      case 'DATEPICKER':\n        return (\n          <Controller\n            key={v4()}\n            control={control}\n            name={filter.name}\n            render={({ value, onChange }) => (\n              <DatePicker\n                defaultValue={value}\n                placeholder={filter.label}\n                onChange={decorate(onChange)}\n                withNavigate\n              />\n            )}\n          />\n        )\n      case 'SELECT':\n        return (\n          <Controller\n            key={v4()}\n            control={control}\n            name={filter.name}\n            render={({ value, onChange }) => (\n              <AsyncSelect  {...filter} defaultValue={value} onChange={decorate(onChange)} />\n            )}\n          />\n        )\n      default:\n        return null\n    }\n  }), [filter])\n\n  const options = useMemo(() => sort || [], [sort])\n\n  return (\n    <Transition in={isOpen} animation={'fade'} timeout={duration}>\n      <Wrap>\n        <Form>\n          <Divider clear />\n          {filters && filters.length > 0 && <List>{filters.map((filter) => filter)}</List>}\n          {options && options.length > 0 && (\n            <Row>\n              <Controller\n               key={v4()}\n               name={'sort'}\n               control={control}\n               defaultValue={options[0]}\n               render={({ value, onChange }) => (\n                <Switch\n                  defaultValue={value}\n                  onChange={decorate(onChange)}\n                  options={options}\n                  stretch\n                />\n               )}\n              />\n            </Row>\n          )}\n          <Divider clear />\n        </Form>\n      </Wrap>\n    </Transition>\n  )\n}\n\nFilter.defaultProps = {\n  duration: 150\n}\n\nexport default Filter\n"]},"metadata":{},"sourceType":"module"}