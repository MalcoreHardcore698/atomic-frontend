{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Controller } from 'react-hook-form';\nimport Row from '../../atomic-ui/components/Row';\nimport Title from '../../atomic-ui/components/Title';\nimport Text from '../../atomic-ui/components/Text';\nimport Button from '../../atomic-ui/components/Button';\nimport Dropzone from '../../atomic-ui/components/Dropzone';\nimport Divider from '../../atomic-ui/components/Divider';\nimport Input from '../../atomic-ui/components/Input';\nimport Form from '../Form';\nimport Select from '../../atomic-ui/components/Select';\nimport { v4 } from 'uuid';\nimport Column from '../../atomic-ui/components/Column';\nconst logotypeSize = {\n  width: 128,\n  height: 30\n};\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n};\nexport const Logotype = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Logotype\",\n  componentId: \"sc-13smq0j-0\"\n})([\"width:320px;height:128px;min-height:128px;\"]);\nexport const Background = styled(Dropzone).withConfig({\n  displayName: \"FormSettings__Background\",\n  componentId: \"sc-13smq0j-1\"\n})([\"width:100%;height:100%;max-width:\", \"px;max-height:\", \"px;\"], backgroundSize.width, backgroundSize.height);\n_c = Background;\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"FormSettings__Wrap\",\n  componentId: \"sc-13smq0j-2\"\n})([\"\"]);\nexport const TabLabelList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabLabelList\",\n  componentId: \"sc-13smq0j-3\"\n})([\"position:relative;display:flex;flex-flow:row nowrap;background:linear-gradient(to top,rgba(0,0,0,15%) 1px,transparent 1px) 0 100% no-repeat;margin-bottom:20px;\"]);\n_c2 = TabLabelList;\nexport const TabContentList = styled(Row).withConfig({\n  displayName: \"FormSettings__TabContentList\",\n  componentId: \"sc-13smq0j-4\"\n})([\"display:flex;flex-flow:row nowrap;\"]);\n_c3 = TabContentList;\nexport const TabLabel = styled(Text).withConfig({\n  displayName: \"FormSettings__TabLabel\",\n  componentId: \"sc-13smq0j-5\"\n})([\"position:relative;display:inline-flex;margin-right:40px;padding-bottom:12px;font-family:var(--default-font-family);font-weight:500;font-size:0.875rem;line-height:1;color:rgba(0,0,0,75%);border-bottom:2px solid transparent;cursor:pointer;transition:color 0.2s;&:last-child{margin-right:0;}&:hover{color:black;}\", \"\"], ({\n  active\n}) => active && css([\"color:var(--default-color-accent);border-color:var(--default-color-accent);&:hover{color:var(--default-color-accent);}\"]));\n_c4 = TabLabel;\nexport const TabContent = styled(Column).withConfig({\n  displayName: \"FormSettings__TabContent\",\n  componentId: \"sc-13smq0j-6\"\n})([\"display:none;flex-grow:1;\", \"\"], ({\n  active\n}) => active && css([\"display:flex;\"]));\n_c5 = TabContent;\n\nconst renderGeneralTab = (settings, register, control, getValues) => {\n  var _settings$general;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"), /*#__PURE__*/React.createElement(Controller, {\n    name: 'logotype',\n    control: control,\n    rules: {\n      required: true\n    },\n    defaultValue: getValues('preview') || (settings === null || settings === void 0 ? void 0 : (_settings$general = settings.general) === null || _settings$general === void 0 ? void 0 : _settings$general.logotype) || null,\n    render: ({\n      value,\n      onChange\n    }) => /*#__PURE__*/React.createElement(Dropzone, {\n      accept: 'image/*',\n      defaultValue: value,\n      onChange: onChange,\n      placeholder: `Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`,\n      tooltip: `Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`\n    })\n  }));\n};\n\nconst renderScaffoldTab = (settings, register, loading, control, getValues) => {\n  var _settings$scaffold, _settings$scaffold2;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041E\\u0441\\u043D\\u043E\\u0432\\u043D\\u043E\\u0435\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'scaffold-title',\n    ref: register(),\n    defaultValue: getValues('title') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold = settings.scaffold) === null || _settings$scaffold === void 0 ? void 0 : _settings$scaffold.title) || 'Создавай школу будущего с нами',\n    placeholder: 'Заголовок',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\"), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-primary-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите первый проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-residue-first-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите второй проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: 'scaffold-residue-second-project',\n    appearance: 'ghost',\n    placeholder: 'Выберите третий проект',\n    options: [],\n    isClearable: true\n  }), /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u0424\\u043E\\u043D\"), /*#__PURE__*/React.createElement(Background, {\n    name: 'background',\n    accept: 'image/*',\n    defaultValue: getValues('preview') || (settings === null || settings === void 0 ? void 0 : (_settings$scaffold2 = settings.scaffold) === null || _settings$scaffold2 === void 0 ? void 0 : _settings$scaffold2.background) || null,\n    placeholder: `Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`,\n    tooltip: `Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`\n  }));\n};\n\nconst renderMetaTab = (settings, register, loading, control, getValues) => {\n  var _settings$meta, _settings$meta2;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Title, {\n    tag: 'h4'\n  }, \"\\u041C\\u0435\\u0442\\u0430 \\u0442\\u0435\\u0433\\u0438\"), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-title',\n    ref: register(),\n    defaultValue: getValues('title') || (settings === null || settings === void 0 ? void 0 : (_settings$meta = settings.meta) === null || _settings$meta === void 0 ? void 0 : _settings$meta.title) || 'Atomic',\n    placeholder: 'Мета-название',\n    appearance: 'ghost',\n    disabled: loading\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    name: 'meta-description',\n    ref: register(),\n    defaultValue: getValues('title') || (settings === null || settings === void 0 ? void 0 : (_settings$meta2 = settings.meta) === null || _settings$meta2 === void 0 ? void 0 : _settings$meta2.description),\n    placeholder: 'Мета-описание',\n    appearance: 'ghost',\n    disabled: loading\n  }));\n};\n\nexport const Settings = ({\n  settings,\n  mutation,\n  appearance,\n  className,\n  onSubmit\n}) => {\n  _s();\n\n  const [active, setActive] = useState(0);\n  const tabsLabel = ['Основное', 'Scaffold', 'Мета'];\n  return /*#__PURE__*/React.createElement(Form, {\n    className: className,\n    appearance: appearance,\n    mutation: mutation,\n    onSubmit: onSubmit\n  }, ({\n    register,\n    loading,\n    control,\n    getValues\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TabLabelList, null, tabsLabel.map((tab, index) => /*#__PURE__*/React.createElement(TabLabel, {\n    key: v4(),\n    active: active === index,\n    onClick: () => setActive(index)\n  }, tab))), /*#__PURE__*/React.createElement(TabContentList, null, /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 0\n  }, renderGeneralTab(settings, register, control, getValues)), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 1\n  }, renderScaffoldTab(settings, register, loading, control, getValues)), /*#__PURE__*/React.createElement(TabContent, {\n    active: active === 2\n  }, renderMetaTab(settings, register, loading, control, getValues))), /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      flexGrow: 1\n    },\n    type: 'submit',\n    disabled: loading\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"))));\n};\n\n_s(Settings, \"LYMHw6xE17pbh6ai9qaw76OM0Ms=\");\n\n_c6 = Settings;\nexport default Settings;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Background\");\n$RefreshReg$(_c2, \"TabLabelList\");\n$RefreshReg$(_c3, \"TabContentList\");\n$RefreshReg$(_c4, \"TabLabel\");\n$RefreshReg$(_c5, \"TabContent\");\n$RefreshReg$(_c6, \"Settings\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/components/FormSettings/index.js"],"names":["React","useState","styled","css","Controller","Row","Title","Text","Button","Dropzone","Divider","Input","Form","Select","v4","Column","logotypeSize","width","height","backgroundSize","Logotype","Background","Wrap","TabLabelList","TabContentList","TabLabel","active","TabContent","renderGeneralTab","settings","register","control","getValues","required","general","logotype","value","onChange","renderScaffoldTab","loading","scaffold","title","background","renderMetaTab","meta","description","Settings","mutation","appearance","className","onSubmit","setActive","tabsLabel","map","tab","index","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Controller } from 'react-hook-form'\n\nimport Row from '../../atomic-ui/components/Row'\nimport Title from '../../atomic-ui/components/Title'\nimport Text from '../../atomic-ui/components/Text'\nimport Button from '../../atomic-ui/components/Button'\nimport Dropzone from '../../atomic-ui/components/Dropzone'\nimport Divider from '../../atomic-ui/components/Divider'\nimport Input from '../../atomic-ui/components/Input'\n\nimport Form from '../Form'\nimport Select from '../../atomic-ui/components/Select'\nimport { v4 } from 'uuid'\nimport Column from '../../atomic-ui/components/Column'\n\nconst logotypeSize = {\n  width: 128,\n  height: 30\n}\n\nconst backgroundSize = {\n  width: 1440,\n  height: 990\n}\n\nexport const Logotype = styled(Dropzone)`\n  width: 320px;\n  height: 128px;\n  min-height: 128px;\n`\n\nexport const Background = styled(Dropzone)`\n  width: 100%;\n  height: 100%;\n  max-width: ${backgroundSize.width}px;\n  max-height: ${backgroundSize.height}px;\n`\n\nexport const Wrap = styled(Column)``\n\nexport const TabLabelList = styled(Row)`\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  background: linear-gradient(to top, rgba(0, 0, 0, 15%) 1px, transparent 1px) 0 100% no-repeat;\n  margin-bottom: 20px;\n`\n\nexport const TabContentList = styled(Row)`\n  display: flex;\n  flex-flow: row nowrap;\n`\n\nexport const TabLabel = styled(Text)`\n  position: relative;\n  display: inline-flex;\n  margin-right: 40px;\n  padding-bottom: 12px;\n  font-family: var(--default-font-family);\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1;\n  color: rgba(0, 0, 0, 75%);\n  border-bottom: 2px solid transparent;\n  cursor: pointer;\n  transition: color 0.2s;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    color: black;\n  }\n\n  ${({ active }) =>\n    active &&\n    css`\n      color: var(--default-color-accent);\n      border-color: var(--default-color-accent);\n\n      &:hover {\n        color: var(--default-color-accent);\n      }\n    `}\n`\n\nexport const TabContent = styled(Column)`\n  display: none;\n  flex-grow: 1;\n\n  ${({ active }) =>\n    active &&\n    css`\n      display: flex;\n    `}\n`\n\nconst renderGeneralTab = (settings, register, control, getValues) => (\n  <React.Fragment>\n    <Title tag={'h4'}>Логотип</Title>\n    <Controller\n      name={'logotype'}\n      control={control}\n      rules={{ required: true }}\n      defaultValue={getValues('preview') || settings?.general?.logotype || null}\n      render={({ value, onChange }) => (\n        <Dropzone\n          accept={'image/*'}\n          defaultValue={value}\n          onChange={onChange}\n          placeholder={`Перетащите сюда изображение размером ${logotypeSize.width}x${logotypeSize.height}px`}\n          tooltip={`Разрешение: ${logotypeSize.width}x${logotypeSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 1 MB`}\n        />\n      )}\n    />\n  </React.Fragment>\n)\n\nconst renderScaffoldTab = (settings, register, loading, control, getValues) => (\n  <React.Fragment>\n    <Title tag={'h4'}>Основное</Title>\n    <Input\n      type={'text'}\n      name={'scaffold-title'}\n      ref={register()}\n      defaultValue={\n        getValues('title') || settings?.scaffold?.title || 'Создавай школу будущего с нами'\n      }\n      placeholder={'Заголовок'}\n      appearance={'ghost'}\n      disabled={loading}\n    />\n\n    <Title tag={'h4'}>Проекты</Title>\n    <Select\n      name={'scaffold-primary-project'}\n      appearance={'ghost'}\n      placeholder={'Выберите первый проект'}\n      options={[]}\n      isClearable\n    />\n    <Select\n      name={'scaffold-residue-first-project'}\n      appearance={'ghost'}\n      placeholder={'Выберите второй проект'}\n      options={[]}\n      isClearable\n    />\n    <Select\n      name={'scaffold-residue-second-project'}\n      appearance={'ghost'}\n      placeholder={'Выберите третий проект'}\n      options={[]}\n      isClearable\n    />\n\n    <Title tag={'h4'}>Фон</Title>\n    <Background\n      name={'background'}\n      accept={'image/*'}\n      defaultValue={getValues('preview') || settings?.scaffold?.background || null}\n      placeholder={`Перетащите сюда изображение размером ${backgroundSize.width}x${backgroundSize.height}px`}\n      tooltip={`Разрешение: ${backgroundSize.width}x${backgroundSize.height}px. Допустимые форматы: jpeg, jpg, png. Макс. размер: 15 MB`}\n    />\n  </React.Fragment>\n)\n\nconst renderMetaTab = (settings, register, loading, control, getValues) => (\n  <React.Fragment>\n    <Title tag={'h4'}>Мета теги</Title>\n\n    <Input\n      type={'text'}\n      name={'meta-title'}\n      ref={register()}\n      defaultValue={getValues('title') || settings?.meta?.title || 'Atomic'}\n      placeholder={'Мета-название'}\n      appearance={'ghost'}\n      disabled={loading}\n    />\n\n    <Input\n      type={'text'}\n      name={'meta-description'}\n      ref={register()}\n      defaultValue={getValues('title') || settings?.meta?.description}\n      placeholder={'Мета-описание'}\n      appearance={'ghost'}\n      disabled={loading}\n    />\n  </React.Fragment>\n)\n\nexport const Settings = ({ settings, mutation, appearance, className, onSubmit }) => {\n  const [active, setActive] = useState(0)\n  const tabsLabel = ['Основное', 'Scaffold', 'Мета']\n\n  return (\n    <Form className={className} appearance={appearance} mutation={mutation} onSubmit={onSubmit}>\n      {({ register, loading, control, getValues }) => (\n        <React.Fragment>\n          <TabLabelList>\n            {tabsLabel.map((tab, index) => (\n              <TabLabel key={v4()} active={active === index} onClick={() => setActive(index)}>\n                {tab}\n              </TabLabel>\n            ))}\n          </TabLabelList>\n\n          <TabContentList>\n            <TabContent active={active === 0}>\n              {renderGeneralTab(settings, register, control, getValues)}\n            </TabContent>\n            <TabContent active={active === 1}>\n              {renderScaffoldTab(settings, register, loading, control, getValues)}\n            </TabContent>\n            <TabContent active={active === 2}>\n              {renderMetaTab(settings, register, loading, control, getValues)}\n            </TabContent>\n          </TabContentList>\n\n          <Divider clear />\n\n          <Row>\n            <Button style={{ flexGrow: 1 }} type={'submit'} disabled={loading}>\n              Сохранить\n            </Button>\n          </Row>\n        </React.Fragment>\n      )}\n    </Form>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}