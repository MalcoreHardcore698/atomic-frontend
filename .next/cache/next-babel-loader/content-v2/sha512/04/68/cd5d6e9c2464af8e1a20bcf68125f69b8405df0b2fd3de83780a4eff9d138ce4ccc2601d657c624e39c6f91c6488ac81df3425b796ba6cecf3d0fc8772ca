{"ast":null,"code":"import gql from 'graphql-tag';\nimport { CategoryFields, ArticleFields, ProjectFields, TicketFields, UserFields, RoleFields } from '../../fragments';\nexport const GET_META = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      general {\n        logotype {\n          path\n        }\n      }\n      meta {\n        title\n        description\n      }\n    }\n  }\n`;\nexport const GET_META_INDEX = gql`\n  query getMetaIndex($offset: Int, $limit: Int, $status: PostStatus) {\n    getUsers {\n      ...UserFields\n    }\n    getArticles(status: $status) {\n      ...ArticleFields\n    }\n    getProjects(offset: $offset, limit: $limit, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${UserFields}\n  ${ArticleFields}\n  ${ProjectFields}\n`;\nexport const GET_META_AUTHORS = gql`\n  query getMetaAuthors($offset: Int, $limit: Int, $search: String) {\n    getUsers(offset: $offset, limit: $limit, search: $search) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`;\nexport const GET_META_ARTICLES = gql`\n  query getMetaArticles($offset: Int, $limit: Int, $search: String, $status: PostStatus) {\n    getArticles(offset: $offset, limit: $limit, search: $search, status: $status) {\n      ...ArticleFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n  }\n  ${ArticleFields}\n  ${CategoryFields}\n`;\nexport const GET_META_PROJECTS = gql`\n  query getMetaProjects(\n    $offset: Int\n    $limit: Int\n    $search: String\n    $category: ID\n    $status: PostStatus\n  ) {\n    getProjects(\n      offset: $offset\n      limit: $limit\n      search: $search\n      category: $category\n      status: $status\n    ) {\n      ...ProjectFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${ProjectFields}\n  ${CategoryFields}\n`;\nexport const GET_META_DASHBOARD_STATISTICS = gql`\n  query getDashboardStatistics {\n    getDashboardStatistics {\n      title\n      total\n      graph {\n        count\n        createdAt\n      }\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_ACTIVITIES = gql`\n  query getDashboardActivities {\n    getDashboardActivities {\n      id\n      user {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      message\n      entityType\n      identityString\n      createdAt\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_SETTINGS = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      general {\n        logotype {\n          path\n          size\n        }\n      }\n      scaffold {\n        title\n        primary {\n          id\n          title\n        }\n        residues{\n          id\n          title\n        }\n        background {\n          path\n          size\n        }\n      }\n      meta {\n        title\n        description\n      }\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_PREVIEW_ARTICLES = gql`\n  query getMetaDashboardPreviewArticles($offset: Int, $limit: Int) {\n    getArticles(offset: $offset, limit: $limit) {\n      id\n      author {\n        name\n        avatar {\n          path\n        }\n      }\n      title\n      body\n      category {\n        id\n        name\n      }\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_PREVIEW_PROJECTS = gql`\n  query getMetaDashboardPreviewProjects($offset: Int, $limit: Int) {\n    getProjects(offset: $offset, limit: $limit) {\n      id\n      title\n      description\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      category {\n        id\n        name\n      }\n      status\n    }\n  }\n`;\nexport const GET_META_DASHBOARD_ARTICLES = gql`\n  query getMetaDashboardArticles($offset: Int, $limit: Int, $search: String, $status: PostStatus) {\n    getArticles(offset: $offset, limit: $limit, search: $search, status: $status) {\n      ...ArticleFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${ArticleFields}\n  ${CategoryFields}\n`;\nexport const GET_META_DASHBOARD_PROJECTS = gql`\n  query getMetaDashboardProjects(\n    $offset: Int\n    $limit: Int\n    $search: String\n    $category: ID\n    $status: PostStatus\n    $account: [AccountType]\n  ) {\n    getProjects(\n      offset: $offset\n      limit: $limit\n      search: $search\n      category: $category\n      status: $status\n    ) {\n      ...ProjectFields\n    }\n    getUsers(account: $account) {\n      ...UserFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${UserFields}\n  ${ProjectFields}\n  ${CategoryFields}\n`;\nexport const GET_META_DASHBOARD_CATEGORIES = gql`\n  query getMetaDashboardCategories($offset: Int, $limit: Int) {\n    getCategories(offset: $offset, limit: $limit) {\n      ...CategoryFields\n    }\n    getCategoryTypes\n  }\n  ${CategoryFields}\n`;\nexport const GET_META_DASHBOARD_TICKETS = gql`\n  query getMetaDashboardTickets($offset: Int, $limit: Int) {\n    getTickets(offset: $offset, limit: $limit) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`;\nexport const GET_META_DASHBOARD_USERS = gql`\n  query getMetaDashboardUsers($offset: Int, $limit: Int) {\n    getUsers(offset: $offset, limit: $limit) {\n      name\n      email\n      phone\n      avatar {\n        id\n        path\n        size\n      }\n      about\n      members\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      account\n      role {\n        id\n        name\n      }\n    }\n    getRoles {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`;\nexport const GET_META_DASHBOARD_ROLES = gql`\n  query getMetaDashboardRoles($offset: Int, $limit: Int) {\n    getRoles(offset: $offset, limit: $limit) {\n      ...RoleFields\n    }\n    getPermissions\n  }\n  ${RoleFields}\n`;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/graphql/queries/Meta/index.js"],"names":["gql","CategoryFields","ArticleFields","ProjectFields","TicketFields","UserFields","RoleFields","GET_META","GET_META_INDEX","GET_META_AUTHORS","GET_META_ARTICLES","GET_META_PROJECTS","GET_META_DASHBOARD_STATISTICS","GET_META_DASHBOARD_ACTIVITIES","GET_META_DASHBOARD_SETTINGS","GET_META_DASHBOARD_PREVIEW_ARTICLES","GET_META_DASHBOARD_PREVIEW_PROJECTS","GET_META_DASHBOARD_ARTICLES","GET_META_DASHBOARD_PROJECTS","GET_META_DASHBOARD_CATEGORIES","GET_META_DASHBOARD_TICKETS","GET_META_DASHBOARD_USERS","GET_META_DASHBOARD_ROLES"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SACEC,cADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,UANF,QAOO,iBAPP;AAUA,OAAO,MAAMC,QAAQ,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAgBP,OAAO,MAAMQ,cAAc,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAW;AACf,IAAIH,aAAc;AAClB,IAAIC,aAAc;AAClB,CAfO;AAiBP,OAAO,MAAMM,gBAAgB,GAAGT,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAW;AACf,CAPO;AASP,OAAO,MAAMK,iBAAiB,GAAGV,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,aAAc;AAClB,IAAID,cAAe;AACnB,CAXO;AAaP,OAAO,MAAMU,iBAAiB,GAAGX,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIG,aAAc;AAClB,IAAIF,cAAe;AACnB,CAxBO;AA0BP,OAAO,MAAMW,6BAA6B,GAAGZ,GAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;AAaP,OAAO,MAAMa,6BAA6B,GAAGb,GAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBO;AAmBP,OAAO,MAAMc,2BAA2B,GAAGd,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA9BO;AAgCP,OAAO,MAAMe,mCAAmC,GAAGf,GAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBO;AAoBP,OAAO,MAAMgB,mCAAmC,GAAGhB,GAAI;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBO;AAsBP,OAAO,MAAMiB,2BAA2B,GAAGjB,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIE,aAAc;AAClB,IAAID,cAAe;AACnB,CAZO;AAcP,OAAO,MAAMiB,2BAA2B,GAAGlB,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,UAAW;AACf,IAAIF,aAAc;AAClB,IAAIF,cAAe;AACnB,CA7BO;AA+BP,OAAO,MAAMkB,6BAA6B,GAAGnB,GAAI;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAe;AACnB,CARO;AAUP,OAAO,MAAMmB,0BAA0B,GAAGpB,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAII,YAAa;AACjB,CAPO;AASP,OAAO,MAAMiB,wBAAwB,GAAGrB,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,UAAW;AACf,CA/BO;AAiCP,OAAO,MAAMgB,wBAAwB,GAAGtB,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,UAAW;AACf,CARO","sourcesContent":["import gql from 'graphql-tag'\nimport {\n  CategoryFields,\n  ArticleFields,\n  ProjectFields,\n  TicketFields,\n  UserFields,\n  RoleFields\n} from '../../fragments'\n\n\nexport const GET_META = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      general {\n        logotype {\n          path\n        }\n      }\n      meta {\n        title\n        description\n      }\n    }\n  }\n`\n\nexport const GET_META_INDEX = gql`\n  query getMetaIndex($offset: Int, $limit: Int, $status: PostStatus) {\n    getUsers {\n      ...UserFields\n    }\n    getArticles(status: $status) {\n      ...ArticleFields\n    }\n    getProjects(offset: $offset, limit: $limit, status: $status) {\n      ...ProjectFields\n    }\n  }\n  ${UserFields}\n  ${ArticleFields}\n  ${ProjectFields}\n`\n\nexport const GET_META_AUTHORS = gql`\n  query getMetaAuthors($offset: Int, $limit: Int, $search: String) {\n    getUsers(offset: $offset, limit: $limit, search: $search) {\n      ...UserFields\n    }\n  }\n  ${UserFields}\n`\n\nexport const GET_META_ARTICLES = gql`\n  query getMetaArticles($offset: Int, $limit: Int, $search: String, $status: PostStatus) {\n    getArticles(offset: $offset, limit: $limit, search: $search, status: $status) {\n      ...ArticleFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n  }\n  ${ArticleFields}\n  ${CategoryFields}\n`\n\nexport const GET_META_PROJECTS = gql`\n  query getMetaProjects(\n    $offset: Int\n    $limit: Int\n    $search: String\n    $category: ID\n    $status: PostStatus\n  ) {\n    getProjects(\n      offset: $offset\n      limit: $limit\n      search: $search\n      category: $category\n      status: $status\n    ) {\n      ...ProjectFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${ProjectFields}\n  ${CategoryFields}\n`\n\nexport const GET_META_DASHBOARD_STATISTICS = gql`\n  query getDashboardStatistics {\n    getDashboardStatistics {\n      title\n      total\n      graph {\n        count\n        createdAt\n      }\n    }\n  }\n`\n\nexport const GET_META_DASHBOARD_ACTIVITIES = gql`\n  query getDashboardActivities {\n    getDashboardActivities {\n      id\n      user {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      message\n      entityType\n      identityString\n      createdAt\n    }\n  }\n`\n\nexport const GET_META_DASHBOARD_SETTINGS = gql`\n  query getDashboardSettings {\n    getDashboardSettings {\n      general {\n        logotype {\n          path\n          size\n        }\n      }\n      scaffold {\n        title\n        primary {\n          id\n          title\n        }\n        residues{\n          id\n          title\n        }\n        background {\n          path\n          size\n        }\n      }\n      meta {\n        title\n        description\n      }\n    }\n  }\n`\n\nexport const GET_META_DASHBOARD_PREVIEW_ARTICLES = gql`\n  query getMetaDashboardPreviewArticles($offset: Int, $limit: Int) {\n    getArticles(offset: $offset, limit: $limit) {\n      id\n      author {\n        name\n        avatar {\n          path\n        }\n      }\n      title\n      body\n      category {\n        id\n        name\n      }\n    }\n  }\n`\n\nexport const GET_META_DASHBOARD_PREVIEW_PROJECTS = gql`\n  query getMetaDashboardPreviewProjects($offset: Int, $limit: Int) {\n    getProjects(offset: $offset, limit: $limit) {\n      id\n      title\n      description\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      category {\n        id\n        name\n      }\n      status\n    }\n  }\n`\n\nexport const GET_META_DASHBOARD_ARTICLES = gql`\n  query getMetaDashboardArticles($offset: Int, $limit: Int, $search: String, $status: PostStatus) {\n    getArticles(offset: $offset, limit: $limit, search: $search, status: $status) {\n      ...ArticleFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${ArticleFields}\n  ${CategoryFields}\n`\n\nexport const GET_META_DASHBOARD_PROJECTS = gql`\n  query getMetaDashboardProjects(\n    $offset: Int\n    $limit: Int\n    $search: String\n    $category: ID\n    $status: PostStatus\n    $account: [AccountType]\n  ) {\n    getProjects(\n      offset: $offset\n      limit: $limit\n      search: $search\n      category: $category\n      status: $status\n    ) {\n      ...ProjectFields\n    }\n    getUsers(account: $account) {\n      ...UserFields\n    }\n    getCategories {\n      ...CategoryFields\n    }\n    getPostStatus\n  }\n  ${UserFields}\n  ${ProjectFields}\n  ${CategoryFields}\n`\n\nexport const GET_META_DASHBOARD_CATEGORIES = gql`\n  query getMetaDashboardCategories($offset: Int, $limit: Int) {\n    getCategories(offset: $offset, limit: $limit) {\n      ...CategoryFields\n    }\n    getCategoryTypes\n  }\n  ${CategoryFields}\n`\n\nexport const GET_META_DASHBOARD_TICKETS = gql`\n  query getMetaDashboardTickets($offset: Int, $limit: Int) {\n    getTickets(offset: $offset, limit: $limit) {\n      ...TicketFields\n    }\n  }\n  ${TicketFields}\n`\n\nexport const GET_META_DASHBOARD_USERS = gql`\n  query getMetaDashboardUsers($offset: Int, $limit: Int) {\n    getUsers(offset: $offset, limit: $limit) {\n      name\n      email\n      phone\n      avatar {\n        id\n        path\n        size\n      }\n      about\n      members\n      company {\n        name\n        email\n        avatar {\n          path\n        }\n      }\n      account\n      role {\n        id\n        name\n      }\n    }\n    getRoles {\n      ...RoleFields\n    }\n  }\n  ${RoleFields}\n`\n\nexport const GET_META_DASHBOARD_ROLES = gql`\n  query getMetaDashboardRoles($offset: Int, $limit: Int) {\n    getRoles(offset: $offset, limit: $limit) {\n      ...RoleFields\n    }\n    getPermissions\n  }\n  ${RoleFields}\n`\n"]},"metadata":{},"sourceType":"module"}