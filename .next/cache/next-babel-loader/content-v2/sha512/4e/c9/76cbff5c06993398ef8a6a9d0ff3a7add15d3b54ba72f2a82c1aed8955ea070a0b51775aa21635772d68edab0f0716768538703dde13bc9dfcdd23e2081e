{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan82\\\\Documents\\\\workspace\\\\FREELANCE\\\\atomic\\\\atomic-frontend\\\\atomic-ui\\\\components\\\\Indicator\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport CountUp from 'react-countup';\nexport const Wrap = styled(Column)`\n  display: flex;\n  flex-direction: column;\n  grid-gap: 5px;\n  padding: var(--default-gap);\n  flex-grow: 1;\n\n  ${({\n  appearance\n}) => appearance === 'default' && css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({\n  appearance\n}) => appearance === 'clear' && css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`;\nexport const Label = styled(Text)`\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n  color: var(--ghost-color-text);\n`;\nexport const Value = styled(Row)`\n  grid-gap: 5px 10px;\n  align-items: flex-end;\n\n  p {\n    font-size: 36px;\n    font-weight: var(--font-weight-bold);\n    line-height: 1;\n    color: black;\n  }\n`;\nexport const Movement = styled(Row)`\n  grid-gap: 0 8px;\n\n  i {\n    transform: scale(1.85);\n  }\n\n  span {\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n  }\n\n  p {\n    display: flex;\n    align-items: flex-end;\n    font-size: var(--font-size-l);\n    line-height: 1.45;\n\n    ${({\n  positive\n}) => positive ? css`\n            color: var(--default-color-green);\n          ` : css`\n            color: var(--default-color-red);\n          `}\n  }\n`;\nexport const Indicator = (_ref) => {\n  let {\n    label,\n    value,\n    movement,\n    positive,\n    negative,\n    appearance\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"value\", \"movement\", \"positive\", \"negative\", \"appearance\"]);\n\n  return __jsx(Wrap, _extends({}, props, {\n    appearance: appearance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }), label && __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, label), (value || movement) && __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, value ? __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(CountUp, {\n    end: value,\n    duration: 2.75,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })) : null, movement ? __jsx(Movement, {\n    positive: positive,\n    negative: negative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, positive && !negative && __jsx(Icon, {\n    icon: 'arrowUpCarret',\n    fill: 'var(--default-color-green)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }), !positive && negative && __jsx(Icon, {\n    icon: 'arrowDownCarret',\n    fill: 'var(--default-color-red)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(CountUp, {\n    end: movement,\n    duration: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }))) : null));\n};\nIndicator.defaultProps = {\n  appearance: 'default',\n  label: 'Пользователи',\n  value: 5621,\n  movement: 12\n};\nexport default Indicator;","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/Indicator/index.js"],"names":["React","styled","css","Row","Column","Text","Icon","CountUp","Wrap","appearance","Label","Value","Movement","positive","Indicator","label","value","movement","negative","props","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport Row from '../Row'\nimport Column from '../Column'\nimport Text from '../Text'\nimport Icon from '../Icon'\nimport CountUp from 'react-countup'\n\nexport const Wrap = styled(Column)`\n  display: flex;\n  flex-direction: column;\n  grid-gap: 5px;\n  padding: var(--default-gap);\n  flex-grow: 1;\n\n  ${({ appearance }) =>\n    appearance === 'default' &&\n    css`\n      border: 1px solid var(--surface-border);\n      background: var(--surface-background);\n      box-shadow: 1px solid var(--surface-shadow);\n      border-radius: var(--surface-border-radius);\n    `}\n\n  ${({ appearance }) =>\n    appearance === 'clear' &&\n    css`\n      border: none;\n      background: none;\n      box-shadow: none;\n      border-radius: 0;\n      padding: 0;\n    `}\n`\n\nexport const Label = styled(Text)`\n  font-size: var(--font-size-s);\n  font-weight: var(--font-weight-regular);\n  color: var(--ghost-color-text);\n`\n\nexport const Value = styled(Row)`\n  grid-gap: 5px 10px;\n  align-items: flex-end;\n\n  p {\n    font-size: 36px;\n    font-weight: var(--font-weight-bold);\n    line-height: 1;\n    color: black;\n  }\n`\n\nexport const Movement = styled(Row)`\n  grid-gap: 0 8px;\n\n  i {\n    transform: scale(1.85);\n  }\n\n  span {\n    font-size: inherit;\n    font-weight: inherit;\n    line-height: inherit;\n  }\n\n  p {\n    display: flex;\n    align-items: flex-end;\n    font-size: var(--font-size-l);\n    line-height: 1.45;\n\n    ${({ positive }) =>\n      positive\n        ? css`\n            color: var(--default-color-green);\n          `\n        : css`\n            color: var(--default-color-red);\n          `}\n  }\n`\n\nexport const Indicator = ({ label, value, movement, positive, negative, appearance, ...props }) => (\n  <Wrap {...props} appearance={appearance}>\n    {label && <Label>{label}</Label>}\n    {(value || movement) && (\n      <Value>\n        {value ? (\n          <Text>\n            <CountUp end={value} duration={2.75} />\n          </Text>\n        ) : null}\n        {movement ? (\n          <Movement positive={positive} negative={negative}>\n            {positive && !negative && (\n              <Icon icon={'arrowUpCarret'} fill={'var(--default-color-green)'} />\n            )}\n            {!positive && negative && (\n              <Icon icon={'arrowDownCarret'} fill={'var(--default-color-red)'} />\n            )}\n            <Text>\n              <CountUp end={movement} duration={3} />\n            </Text>\n          </Movement>\n        ) : null}\n      </Value>\n    )}\n  </Wrap>\n)\n\nIndicator.defaultProps = {\n  appearance: 'default',\n  label: 'Пользователи',\n  value: 5621,\n  movement: 12\n}\n\nexport default Indicator\n"]},"metadata":{},"sourceType":"module"}