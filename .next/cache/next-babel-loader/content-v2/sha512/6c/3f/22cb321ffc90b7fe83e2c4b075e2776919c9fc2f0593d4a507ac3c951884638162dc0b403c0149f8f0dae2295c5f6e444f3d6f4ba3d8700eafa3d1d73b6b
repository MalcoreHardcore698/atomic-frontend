{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorNotFound from './404';\nimport DefaultLayout from '../layouts/default';\nimport TicketForm from '../components/FormTicket';\nimport { setItem } from '../store/actions/snacks';\nimport { setModal } from '../store/actions/modal';\nimport queries from '../graphql/queries';\nconst TITLE = 'Поддержка';\nconst Wrap = styled.div.withConfig({\n  displayName: \"support__Wrap\",\n  componentId: \"s0xf32-0\"\n})([\"display:grid;grid-template-columns:380px;justify-content:center;align-content:center;margin:120px 0;@media only screen and (max-width:480px){grid-template-columns:100%;margin:25px 0;}\"]);\nexport const Support = () => {\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  if (user && user.authenticated) {\n    return /*#__PURE__*/React.createElement(DefaultLayout, {\n      title: TITLE\n    }, /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(TicketForm, {\n      title: 'Поддержка',\n      mutation: queries.CREATE_USER_TICKET,\n      onSubmit: async (form, action) => {\n        try {\n          var _form$category;\n\n          await action({\n            variables: {\n              input: {\n                title: form.title,\n                message: form.message,\n                category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value\n              }\n            }\n          });\n          dispatch(setItem({\n            type: 'success',\n            message: 'Вопрос успешно отправлен'\n          }));\n        } catch (err) {\n          dispatch(setItem({\n            type: 'error',\n            message: 'Не удалось отправить вопрос'\n          }));\n        } finally {\n          dispatch(setModal(null));\n        }\n      },\n      withContainer: true,\n      isClient: true\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(ErrorNotFound, null);\n};\nexport default Support;","map":null,"metadata":{},"sourceType":"module"}