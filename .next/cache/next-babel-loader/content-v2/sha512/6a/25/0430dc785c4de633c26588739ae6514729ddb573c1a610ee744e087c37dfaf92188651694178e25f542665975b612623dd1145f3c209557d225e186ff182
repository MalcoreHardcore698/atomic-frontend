{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport List from '../List';\nimport UserSuit from '../UserSuit';\nimport { useUser } from '../../hooks/useUser';\nimport { COMMON_LOAD_LIMIT, COMMON_START_OFFSET } from '../../constants';\nimport { INITIAL_DISPLAY_METHOD } from '../../layouts/content';\nimport queries from '../../graphql/queries';\nconst Document = memo(({\n  document\n}) => {\n  const methods = useUser();\n  return /*#__PURE__*/React.createElement(UserSuit, _extends({}, methods, {\n    user: document\n  }));\n});\nexport const UserList = memo(({\n  limit,\n  variables,\n  startOffset,\n  gridOptions,\n  emptyMessage,\n  initialDisplayMethod,\n  withoutSearch\n}) => {\n  const search = useSelector(state => state.root.search);\n  return /*#__PURE__*/React.createElement(List, {\n    type: 'getUsers',\n    variables: variables,\n    withoutMore: !search,\n    gridOptions: gridOptions,\n    query: queries.GET_USERS,\n    emptyMessage: emptyMessage,\n    withoutSearch: withoutSearch,\n    limit: limit !== null && limit !== void 0 ? limit : COMMON_LOAD_LIMIT,\n    startOffset: startOffset !== null && startOffset !== void 0 ? startOffset : COMMON_START_OFFSET,\n    initialDisplayMethod: initialDisplayMethod !== null && initialDisplayMethod !== void 0 ? initialDisplayMethod : INITIAL_DISPLAY_METHOD,\n    component: document => /*#__PURE__*/React.createElement(Document, {\n      document: document\n    })\n  });\n});\nUserList.defaultProps = {\n  emptyMessage: 'Пользователей нет'\n};\nexport default UserList;","map":{"version":3,"sources":["/Users/malcore/Documents/workspace/freelance/atomic/atomic-frontend/components/UserList/index.js"],"names":["React","memo","useSelector","List","UserSuit","useUser","COMMON_LOAD_LIMIT","COMMON_START_OFFSET","INITIAL_DISPLAY_METHOD","queries","Document","document","methods","UserList","limit","variables","startOffset","gridOptions","emptyMessage","initialDisplayMethod","withoutSearch","search","state","root","GET_USERS","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,iBAAvD;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,QAAQ,GAAGT,IAAI,CAAC,CAAC;AAAEU,EAAAA;AAAF,CAAD,KAAkB;AACtC,QAAMC,OAAO,GAAGP,OAAO,EAAvB;AACA,sBAAO,oBAAC,QAAD,eAAcO,OAAd;AAAuB,IAAA,IAAI,EAAED;AAA7B,KAAP;AACD,CAHoB,CAArB;AAKA,OAAO,MAAME,QAAQ,GAAGZ,IAAI,CAC1B,CAAC;AACCa,EAAAA,KADD;AAECC,EAAAA,SAFD;AAGCC,EAAAA,WAHD;AAICC,EAAAA,WAJD;AAKCC,EAAAA,YALD;AAMCC,EAAAA,oBAND;AAOCC,EAAAA;AAPD,CAAD,KAQM;AACJ,QAAMC,MAAM,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,MAAvB,CAA1B;AACA,sBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,UADR;AAEE,IAAA,SAAS,EAAEN,SAFb;AAGE,IAAA,WAAW,EAAE,CAACM,MAHhB;AAIE,IAAA,WAAW,EAAEJ,WAJf;AAKE,IAAA,KAAK,EAAER,OAAO,CAACe,SALjB;AAME,IAAA,YAAY,EAAEN,YANhB;AAOE,IAAA,aAAa,EAAEE,aAPjB;AAQE,IAAA,KAAK,EAAEN,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWR,iBARlB;AASE,IAAA,WAAW,EAAEU,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiBT,mBAT9B;AAUE,IAAA,oBAAoB,EAAEY,oBAAF,aAAEA,oBAAF,cAAEA,oBAAF,GAA0BX,sBAVhD;AAWE,IAAA,SAAS,EAAGG,QAAD,iBAAc,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA;AAApB;AAX3B,IADF;AAeD,CA1ByB,CAArB;AA6BPE,QAAQ,CAACY,YAAT,GAAwB;AACtBP,EAAAA,YAAY,EAAE;AADQ,CAAxB;AAIA,eAAeL,QAAf","sourcesContent":["import React, { memo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport List from '../List'\nimport UserSuit from '../UserSuit'\nimport { useUser } from '../../hooks/useUser'\nimport { COMMON_LOAD_LIMIT, COMMON_START_OFFSET } from '../../constants'\nimport { INITIAL_DISPLAY_METHOD } from '../../layouts/content'\nimport queries from '../../graphql/queries'\n\nconst Document = memo(({ document }) => {\n  const methods = useUser()\n  return <UserSuit {...methods} user={document} />\n})\n\nexport const UserList = memo(\n  ({\n    limit,\n    variables,\n    startOffset,\n    gridOptions,\n    emptyMessage,\n    initialDisplayMethod,\n    withoutSearch\n  }) => {\n    const search = useSelector((state) => state.root.search)\n    return (\n      <List\n        type={'getUsers'}\n        variables={variables}\n        withoutMore={!search}\n        gridOptions={gridOptions}\n        query={queries.GET_USERS}\n        emptyMessage={emptyMessage}\n        withoutSearch={withoutSearch}\n        limit={limit ?? COMMON_LOAD_LIMIT}\n        startOffset={startOffset ?? COMMON_START_OFFSET}\n        initialDisplayMethod={initialDisplayMethod ?? INITIAL_DISPLAY_METHOD}\n        component={(document) => <Document document={document} />}\n      />\n    )\n  }\n)\n\nUserList.defaultProps = {\n  emptyMessage: 'Пользователей нет'\n}\n\nexport default UserList\n"]},"metadata":{},"sourceType":"module"}