{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentPage } from '../store/actions/root';\nimport { onArticleCreate } from '../store/helpers/article';\nimport { onProjectCreate } from '../store/helpers/project';\nimport { onUserClientEdit } from '../store/helpers/user';\nimport { useHelper } from './useHelper';\nimport { useUser } from './useUser';\nimport queries from '../graphql/queries';\nexport const useProfile = ({\n  isManage\n} = {}) => {\n  const recall = useHelper();\n  const user = useSelector(state => state.root.user);\n  const dispatch = useDispatch();\n  const {\n    onAboutMore,\n    onMembers,\n    onCompanyLink\n  } = useUser({\n    isManage\n  });\n\n  const onChangePage = item => dispatch(setCurrentPage(item.value));\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })();\n  }, [recall]);\n  const onEdit = useCallback(() => {\n    recall(onUserClientEdit, {\n      user: user === null || user === void 0 ? void 0 : user.email,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    })();\n  }, [user, recall]);\n  return {\n    user,\n    onChangePage,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onAboutMore,\n    onMembers,\n    onEdit\n  };\n};","map":{"version":3,"sources":["D:/Documents/Workspace/FREELANCE/atomic/atomic-frontend/hooks/useProfile.js"],"names":["useCallback","useDispatch","useSelector","setCurrentPage","onArticleCreate","onProjectCreate","onUserClientEdit","useHelper","useUser","queries","useProfile","isManage","recall","user","state","root","dispatch","onAboutMore","onMembers","onCompanyLink","onChangePage","item","value","onAddProject","mutation","CREATE_PROJECT","query","GET_USERS","isPurpose","onAddArticle","CREATE_ARTICLE","onEdit","email","mutations","del","DELETE_USER","forgotEmail","LOGIN","forgotPassword","RESET","changePassword","UPDATE_CLIENT_USER","checkResetToken","CHECK_RESET_TOKEN","update"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,IAAe,EAAhB,KAAuB;AAC/C,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,IAAvB,CAAxB;AACA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAM;AAAEgB,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAA4CX,OAAO,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAzD;;AAEA,QAAMS,YAAY,GAAIC,IAAD,IAAUL,QAAQ,CAACb,cAAc,CAACkB,IAAI,CAACC,KAAN,CAAf,CAAvC;;AAEA,QAAMC,YAAY,GAAGvB,WAAW,CAAC,MAAM;AACrCY,IAAAA,MAAM,CAACP,eAAD,EAAkB;AACtBmB,MAAAA,QAAQ,EAAEf,OAAO,CAACgB,cADI;AAEtBC,MAAAA,KAAK,EAAEjB,OAAO,CAACkB,SAFO;AAGtBC,MAAAA,SAAS,EAAE;AAHW,KAAlB,CAAN;AAKD,GAN+B,EAM7B,CAAChB,MAAD,CAN6B,CAAhC;AAQA,QAAMiB,YAAY,GAAG7B,WAAW,CAAC,MAAM;AACrCY,IAAAA,MAAM,CAACR,eAAD,EAAkB;AACtBoB,MAAAA,QAAQ,EAAEf,OAAO,CAACqB,cADI;AAEtBF,MAAAA,SAAS,EAAE;AAFW,KAAlB,CAAN;AAID,GAL+B,EAK7B,CAAChB,MAAD,CAL6B,CAAhC;AAOA,QAAMmB,MAAM,GAAG/B,WAAW,CAAC,MAAM;AAC/BY,IAAAA,MAAM,CAACN,gBAAD,EAAmB;AACvBO,MAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEmB,KADW;AAEvBC,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAEzB,OAAO,CAAC0B,WADJ;AAETC,QAAAA,WAAW,EAAE3B,OAAO,CAAC4B,KAFZ;AAGTC,QAAAA,cAAc,EAAE7B,OAAO,CAAC8B,KAHf;AAITC,QAAAA,cAAc,EAAE/B,OAAO,CAACgC,kBAJf;AAKTC,QAAAA,eAAe,EAAEjC,OAAO,CAACkC,iBALhB;AAMTC,QAAAA,MAAM,EAAEnC,OAAO,CAACgC;AANP;AAFY,KAAnB,CAAN;AAWD,GAZyB,EAYvB,CAAC5B,IAAD,EAAOD,MAAP,CAZuB,CAA1B;AAcA,SAAO;AACLC,IAAAA,IADK;AAELO,IAAAA,YAFK;AAGLD,IAAAA,aAHK;AAILI,IAAAA,YAJK;AAKLM,IAAAA,YALK;AAMLZ,IAAAA,WANK;AAOLC,IAAAA,SAPK;AAQLa,IAAAA;AARK,GAAP;AAUD,CAhDM","sourcesContent":["import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setCurrentPage } from '../store/actions/root'\nimport { onArticleCreate } from '../store/helpers/article'\nimport { onProjectCreate } from '../store/helpers/project'\nimport { onUserClientEdit } from '../store/helpers/user'\nimport { useHelper } from './useHelper'\nimport { useUser } from './useUser'\nimport queries from '../graphql/queries'\n\nexport const useProfile = ({ isManage } = {}) => {\n  const recall = useHelper()\n  const user = useSelector((state) => state.root.user)\n  const dispatch = useDispatch()\n\n  const { onAboutMore, onMembers, onCompanyLink } = useUser({ isManage })\n\n  const onChangePage = (item) => dispatch(setCurrentPage(item.value))\n\n  const onAddProject = useCallback(() => {\n    recall(onProjectCreate, {\n      mutation: queries.CREATE_PROJECT,\n      query: queries.GET_USERS,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onAddArticle = useCallback(() => {\n    recall(onArticleCreate, {\n      mutation: queries.CREATE_ARTICLE,\n      isPurpose: true\n    })()\n  }, [recall])\n\n  const onEdit = useCallback(() => {\n    recall(onUserClientEdit, {\n      user: user?.email,\n      mutations: {\n        del: queries.DELETE_USER,\n        forgotEmail: queries.LOGIN,\n        forgotPassword: queries.RESET,\n        changePassword: queries.UPDATE_CLIENT_USER,\n        checkResetToken: queries.CHECK_RESET_TOKEN,\n        update: queries.UPDATE_CLIENT_USER\n      }\n    })()\n  }, [user, recall])\n\n  return {\n    user,\n    onChangePage,\n    onCompanyLink,\n    onAddProject,\n    onAddArticle,\n    onAboutMore,\n    onMembers,\n    onEdit\n  }\n}\n"]},"metadata":{},"sourceType":"module"}