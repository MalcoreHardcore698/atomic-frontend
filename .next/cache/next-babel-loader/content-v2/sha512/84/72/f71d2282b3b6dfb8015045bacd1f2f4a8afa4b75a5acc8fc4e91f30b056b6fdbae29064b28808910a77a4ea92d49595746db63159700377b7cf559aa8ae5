{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { v4 } from 'uuid';\nimport Row from '../Row';\nimport Column from '../Column';\nimport Button from '../Button';\nimport Tooltip from '../Tooltip';\nimport Divider from '../Divider';\nimport { Label } from '../Difinition';\nimport Input from '../Input';\nimport Alert from '../Alert';\nimport Text from '../Text';\nimport Icon from '../Icon';\nimport Title from '../Title';\nconst MAX_LIMIT_VALUE = 256;\nconst MIN_LIMIT_VALUE = 0;\nexport const Wrap = styled(Column).withConfig({\n  displayName: \"CharacteristicEditor__Wrap\",\n  componentId: \"sc-1b0mq4d-0\"\n})([\"grid-gap:0;\"]);\n_c = Wrap;\nexport const Container = styled(Column).withConfig({\n  displayName: \"CharacteristicEditor__Container\",\n  componentId: \"sc-1b0mq4d-1\"\n})([\"display:flex;flex-direction:column;width:100%;max-width:100%;flex-grow:1;grid-gap:5px;margin-bottom:var(--default-gap);\"]);\n_c2 = Container;\nexport const List = styled(Column).withConfig({\n  displayName: \"CharacteristicEditor__List\",\n  componentId: \"sc-1b0mq4d-2\"\n})([\"grid-gap:5px 0;\", \"\"], ({\n  readOnly\n}) => readOnly && css([\"display:grid;grid-template-columns:repeat(auto-fit,minmax(420px,1fr));padding:2px;grid-gap:15px;\"]));\n_c3 = List;\nexport const InputLabel = styled(Text).withConfig({\n  displayName: \"CharacteristicEditor__InputLabel\",\n  componentId: \"sc-1b0mq4d-3\"\n})([\"font-size:var(--font-size-s);\"]);\n_c4 = InputLabel;\nexport const Item = styled(Row).withConfig({\n  displayName: \"CharacteristicEditor__Item\",\n  componentId: \"sc-1b0mq4d-4\"\n})([\"justify-content:space-between;align-items:center;flex-grow:1;grid-gap:5px;\"]);\n_c5 = Item;\nexport const Header = styled(Row).withConfig({\n  displayName: \"CharacteristicEditor__Header\",\n  componentId: \"sc-1b0mq4d-5\"\n})([\"flex-grow:1;grid-gap:10px;label:first-child{flex-grow:1;}label:last-child{flex-grow:4;}\", \"\"], ({\n  readOnly\n}) => readOnly && css([\"flex-direction:column;\"]));\n_c6 = Header;\nexport const Actions = styled(Row).withConfig({\n  displayName: \"CharacteristicEditor__Actions\",\n  componentId: \"sc-1b0mq4d-6\"\n})([\"align-items:center;grid-gap:5px;button{width:100%;flex-grow:1;& > i{height:100%;width:100%;& > svg{transform:scale(0.35);}}}\"]);\n_c7 = Actions;\nexport const AddButton = styled(Button).withConfig({\n  displayName: \"CharacteristicEditor__AddButton\",\n  componentId: \"sc-1b0mq4d-7\"\n})([\"display:flex;justify-content:center;align-items:center;grid-gap:10px;span{white-space:nowrap;}@media only screen and (max-width:996px){width:100%;}\"]);\n_c8 = AddButton;\nexport const Trunks = styled.div.withConfig({\n  displayName: \"CharacteristicEditor__Trunks\",\n  componentId: \"sc-1b0mq4d-8\"\n})([\"display:flex;align-items:center;flex-wrap:wrap;grid-gap:5px;span{background:var(--default-color-accent);border-radius:var(--surface-border-radius);width:4px;min-height:16px;\", \"}\"], ({\n  value\n}) => value < 9 && css([\"width:12px;border-radius:4px;\"]));\n_c9 = Trunks;\nexport const Value = styled(Title).withConfig({\n  displayName: \"CharacteristicEditor__Value\",\n  componentId: \"sc-1b0mq4d-9\"\n})([\"font-weight:var(--font-weight-bold);line-height:1;@media only screen and (max-width:480px){font-size:var(--font-size-l);}\"]);\n_c10 = Value;\n\nconst getValue = val => {\n  const number = Number(val);\n  if (number > MAX_LIMIT_VALUE) return MAX_LIMIT_VALUE;\n  if (number < MIN_LIMIT_VALUE) return MIN_LIMIT_VALUE;\n  return val;\n};\n\nexport const ListItem = ({\n  item,\n  readOnly,\n  divided,\n  onEdit,\n  onDelete\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Item, {\n    readOnly: readOnly\n  }, /*#__PURE__*/React.createElement(Header, {\n    readOnly: readOnly\n  }, readOnly && item.isVisualize && !isNaN(item.value) ? /*#__PURE__*/React.createElement(Trunks, {\n    value: item.value\n  }, new Array(Number(item.value)).fill(null).map((_, i) => /*#__PURE__*/React.createElement(\"span\", {\n    key: i\n  }))) : null, readOnly && !item.isVisualize ? /*#__PURE__*/React.createElement(Label, null, item.name) : null, readOnly ? /*#__PURE__*/React.createElement(Value, {\n    tag: 'h4'\n  }, item.isVisualize ? `${item.value} ${item.name}` : item.value) : null, !readOnly && /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    defaultValue: item.value,\n    appearance: 'ghost',\n    placeholder: 'Значение',\n    onChange: e => onEdit && onEdit({ ...item,\n      value: getValue(e.target.value),\n      isVisualize: !isNaN(item.value)\n    })\n  }), !readOnly && /*#__PURE__*/React.createElement(Input, {\n    type: 'text',\n    defaultValue: item.name,\n    appearance: 'ghost',\n    placeholder: 'Введите название',\n    onChange: e => onEdit && onEdit({ ...item,\n      name: e.target.value\n    })\n  })), !readOnly && /*#__PURE__*/React.createElement(Actions, null, /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Визуализировать (только цифры)'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon',\n    type: 'button',\n    revert: !item.isVisualize,\n    onClick: () => onEdit && onEdit({ ...item,\n      value: !isNaN(item.value) ? item.value : MIN_LIMIT_VALUE,\n      isVisualize: !item.isVisualize\n    })\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: 'xs',\n    icon: 'graph',\n    stroke: item.isVisualize ? 'white' : 'var(--default-color-accent)',\n    fill: 'var(--default-color-accent)'\n  }))), onDelete && /*#__PURE__*/React.createElement(Tooltip, {\n    text: 'Удалить'\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: 'xs',\n    kind: 'icon',\n    type: 'button',\n    appearance: 'ghost',\n    stroke: 'none',\n    onClick: () => onDelete(item)\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: 'delete',\n    stroke: 'none',\n    fill: 'var(--default-color-red)',\n    size: 'xs'\n  }))))), !readOnly && divided && /*#__PURE__*/React.createElement(Divider, {\n    clear: true\n  }));\n};\n_c11 = ListItem;\nexport const InteractiveList = ({\n  list,\n  readOnly,\n  onChange\n}) => {\n  const onEdit = edited => {\n    const mapped = prev => prev.map(item => (item === null || item === void 0 ? void 0 : item.id) === (edited === null || edited === void 0 ? void 0 : edited.id) ? edited : item);\n\n    if (onChange) onChange(mapped);\n  };\n\n  const onDelete = deleted => {\n    const filtered = prev => prev.filter(item => (item === null || item === void 0 ? void 0 : item.id) !== (deleted === null || deleted === void 0 ? void 0 : deleted.id));\n\n    if (onChange) onChange(filtered);\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    readOnly: readOnly\n  }, (list || []).length === 0 && /*#__PURE__*/React.createElement(Alert, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      flexGrow: 1\n    }\n  }, \"\\u041F\\u0443\\u0441\\u0442\\u043E\"), (list || []).map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: item === null || item === void 0 ? void 0 : item.id,\n    item: item,\n    readOnly: readOnly,\n    divided: (list || []).length - 1 !== index,\n    onDelete: onDelete,\n    onEdit: onEdit\n  })));\n};\n_c12 = InteractiveList;\nexport const CharacteristicEditor = ({\n  label,\n  defaultValue,\n  readOnly,\n  onChange\n}) => {\n  _s();\n\n  const [characteristics, setCharacteristics] = useState(defaultValue || []);\n\n  const onAdd = () => {\n    const name = 'Новое учебное помещение';\n    const item = {\n      id: v4(),\n      name,\n      value: null,\n      isVisualize: null\n    };\n    setCharacteristics(prev => [...prev, item]);\n  };\n\n  useEffect(() => {\n    if (onChange) onChange(characteristics);\n  }, [characteristics, onChange]);\n  useEffect(() => {\n    setCharacteristics(defaultValue);\n  }, [defaultValue]);\n\n  if (readOnly && characteristics.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(Container, null, label && /*#__PURE__*/React.createElement(InputLabel, null, label), /*#__PURE__*/React.createElement(InteractiveList, {\n    list: characteristics,\n    onChange: setCharacteristics,\n    readOnly: readOnly\n  }), !readOnly && /*#__PURE__*/React.createElement(AddButton, {\n    type: 'button',\n    onClick: onAdd\n  }, /*#__PURE__*/React.createElement(\"span\", null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"), /*#__PURE__*/React.createElement(Icon, {\n    type: 'button',\n    icon: 'add',\n    stroke: 'white'\n  }))));\n};\n\n_s(CharacteristicEditor, \"mz/RToiZlFBdIUifLKYR5jZDfBk=\");\n\n_c13 = CharacteristicEditor;\nexport default CharacteristicEditor;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"Wrap\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"List\");\n$RefreshReg$(_c4, \"InputLabel\");\n$RefreshReg$(_c5, \"Item\");\n$RefreshReg$(_c6, \"Header\");\n$RefreshReg$(_c7, \"Actions\");\n$RefreshReg$(_c8, \"AddButton\");\n$RefreshReg$(_c9, \"Trunks\");\n$RefreshReg$(_c10, \"Value\");\n$RefreshReg$(_c11, \"ListItem\");\n$RefreshReg$(_c12, \"InteractiveList\");\n$RefreshReg$(_c13, \"CharacteristicEditor\");","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/atomic-ui/components/CharacteristicEditor/index.js"],"names":["React","useState","useEffect","styled","css","v4","Row","Column","Button","Tooltip","Divider","Label","Input","Alert","Text","Icon","Title","MAX_LIMIT_VALUE","MIN_LIMIT_VALUE","Wrap","Container","List","readOnly","InputLabel","Item","Header","Actions","AddButton","Trunks","div","value","Value","getValue","val","number","Number","ListItem","item","divided","onEdit","onDelete","isVisualize","isNaN","Array","fill","map","_","i","name","e","target","InteractiveList","list","onChange","edited","mapped","prev","id","deleted","filtered","filter","length","width","textAlign","flexGrow","index","CharacteristicEditor","label","defaultValue","characteristics","setCharacteristics","onAdd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { v4 } from 'uuid'\r\n\r\nimport Row from '../Row'\r\nimport Column from '../Column'\r\nimport Button from '../Button'\r\nimport Tooltip from '../Tooltip'\r\nimport Divider from '../Divider'\r\nimport { Label } from '../Difinition'\r\nimport Input from '../Input'\r\nimport Alert from '../Alert'\r\nimport Text from '../Text'\r\nimport Icon from '../Icon'\r\nimport Title from '../Title'\r\n\r\nconst MAX_LIMIT_VALUE = 256\r\nconst MIN_LIMIT_VALUE = 0\r\n\r\nexport const Wrap = styled(Column)`\r\n  grid-gap: 0;\r\n`\r\n\r\nexport const Container = styled(Column)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  flex-grow: 1;\r\n  grid-gap: 5px;\r\n  margin-bottom: var(--default-gap);\r\n`\r\n\r\nexport const List = styled(Column)`\r\n  grid-gap: 5px 0;\r\n\r\n  ${({ readOnly }) =>\r\n    readOnly &&\r\n    css`\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fit, minmax(420px, 1fr));\r\n      padding: 2px;\r\n      grid-gap: 15px;\r\n    `}\r\n`\r\n\r\nexport const InputLabel = styled(Text)`\r\n  font-size: var(--font-size-s);\r\n`\r\n\r\nexport const Item = styled(Row)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  grid-gap: 5px;\r\n`\r\n\r\nexport const Header = styled(Row)`\r\n  flex-grow: 1;\r\n  grid-gap: 10px;\r\n\r\n  label:first-child {\r\n    flex-grow: 1;\r\n  }\r\n\r\n  label:last-child {\r\n    flex-grow: 4;\r\n  }\r\n\r\n  ${({ readOnly }) =>\r\n    readOnly &&\r\n    css`\r\n      flex-direction: column;\r\n    `}\r\n`\r\n\r\nexport const Actions = styled(Row)`\r\n  align-items: center;\r\n  grid-gap: 5px;\r\n\r\n  button {\r\n    width: 100%;\r\n    flex-grow: 1;\r\n\r\n    & > i {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      & > svg {\r\n        transform: scale(0.35);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const AddButton = styled(Button)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 10px;\r\n\r\n  span {\r\n    white-space: nowrap;\r\n  }\r\n\r\n  @media only screen and (max-width: 996px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const Trunks = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  grid-gap: 5px;\r\n\r\n  span {\r\n    background: var(--default-color-accent);\r\n    border-radius: var(--surface-border-radius);\r\n    width: 4px;\r\n    min-height: 16px;\r\n\r\n    ${({ value }) =>\r\n      value < 9 &&\r\n      css`\r\n        width: 12px;\r\n        border-radius: 4px;\r\n      `}\r\n  }\r\n`\r\n\r\nexport const Value = styled(Title)`\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1;\r\n\r\n  @media only screen and (max-width: 480px) {\r\n    font-size: var(--font-size-l);\r\n  }\r\n`\r\n\r\nconst getValue = (val) => {\r\n  const number = Number(val)\r\n  if (number > MAX_LIMIT_VALUE) return MAX_LIMIT_VALUE\r\n  if (number < MIN_LIMIT_VALUE) return MIN_LIMIT_VALUE\r\n  return val\r\n}\r\n\r\nexport const ListItem = ({ item, readOnly, divided, onEdit, onDelete }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Item readOnly={readOnly}>\r\n        <Header readOnly={readOnly}>\r\n          {(readOnly && item.isVisualize && !isNaN(item.value)) ? (\r\n            <Trunks value={item.value}>\r\n              {new Array(Number(item.value)).fill(null).map((_, i) => <span key={i} />)}\r\n            </Trunks>\r\n          ) : null}\r\n\r\n          {(readOnly && !item.isVisualize) ? (\r\n            <Label>\r\n              {item.name}\r\n            </Label>\r\n          ) : null}\r\n\r\n          {readOnly ? (\r\n            <Value tag={'h4'}>\r\n              {item.isVisualize ? `${item.value} ${item.name}` : item.value}\r\n            </Value>\r\n          ) : null}\r\n\r\n          {!readOnly && (\r\n            <Input\r\n              type={'text'}\r\n              defaultValue={item.value}\r\n              appearance={'ghost'}\r\n              placeholder={'Значение'}\r\n              onChange={(e) =>\r\n                onEdit && onEdit({\r\n                  ...item,\r\n                  value: getValue(e.target.value),\r\n                  isVisualize: !isNaN(item.value)\r\n                })\r\n              }\r\n            />\r\n          )}\r\n          {!readOnly && (\r\n            <Input\r\n              type={'text'}\r\n              defaultValue={item.name}\r\n              appearance={'ghost'}\r\n              placeholder={'Введите название'}\r\n              onChange={(e) => onEdit && onEdit({ ...item, name: e.target.value })}\r\n            />\r\n          )}\r\n        </Header>\r\n\r\n        {!readOnly && (\r\n          <Actions>\r\n            <Tooltip text={'Визуализировать (только цифры)'}>\r\n              <Button\r\n                size={'xs'}\r\n                kind={'icon'}\r\n                type={'button'}\r\n                revert={!item.isVisualize}\r\n                onClick={() =>\r\n                  onEdit && onEdit({\r\n                    ...item,\r\n                    value: !isNaN(item.value) ? item.value : MIN_LIMIT_VALUE,\r\n                    isVisualize: !item.isVisualize\r\n                  })\r\n                }>\r\n                <Icon\r\n                  size={'xs'}\r\n                  icon={'graph'}\r\n                  stroke={item.isVisualize ? 'white' : 'var(--default-color-accent)'}\r\n                  fill={'var(--default-color-accent)'}\r\n                />\r\n              </Button>\r\n            </Tooltip>\r\n            {onDelete && (\r\n              <Tooltip text={'Удалить'}>\r\n                <Button\r\n                  size={'xs'}\r\n                  kind={'icon'}\r\n                  type={'button'}\r\n                  appearance={'ghost'}\r\n                  stroke={'none'}\r\n                  onClick={() => onDelete(item)}>\r\n                  <Icon\r\n                    icon={'delete'}\r\n                    stroke={'none'}\r\n                    fill={'var(--default-color-red)'}\r\n                    size={'xs'}\r\n                  />\r\n                </Button>\r\n              </Tooltip>\r\n            )}\r\n          </Actions>\r\n        )}\r\n      </Item>\r\n      {!readOnly && divided && <Divider clear />}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const InteractiveList = ({ list, readOnly, onChange }) => {\r\n  const onEdit = (edited) => {\r\n    const mapped = (prev) => prev.map((item) => (item?.id === edited?.id ? edited : item))\r\n    if (onChange) onChange(mapped)\r\n  }\r\n\r\n  const onDelete = (deleted) => {\r\n    const filtered = (prev) => prev.filter((item) => item?.id !== deleted?.id)\r\n    if (onChange) onChange(filtered)\r\n  }\r\n\r\n  return (\r\n    <List readOnly={readOnly}>\r\n      {(list || []).length === 0 && (\r\n        <Alert style={{ width: '100%', textAlign: 'center', flexGrow: 1 }}>Пусто</Alert>\r\n      )}\r\n      {(list || []).map((item, index) => (\r\n        <ListItem\r\n          key={item?.id}\r\n          item={item}\r\n          readOnly={readOnly}\r\n          divided={(list || []).length - 1 !== index}\r\n          onDelete={onDelete}\r\n          onEdit={onEdit}\r\n        />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nexport const CharacteristicEditor = ({\r\n  label,\r\n  defaultValue,\r\n  readOnly,\r\n  onChange\r\n}) => {\r\n  const [characteristics, setCharacteristics] = useState(defaultValue || [])\r\n\r\n  const onAdd = () => {\r\n    const name = 'Новое учебное помещение'\r\n    const item = { id: v4(), name, value: null, isVisualize: null }\r\n    setCharacteristics((prev) => [...prev, item])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (onChange) onChange(characteristics)\r\n  }, [characteristics, onChange])\r\n\r\n  useEffect(() => {\r\n    setCharacteristics(defaultValue)\r\n  }, [defaultValue])\r\n\r\n  if (readOnly && characteristics.length === 0) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        {label && <InputLabel>{label}</InputLabel>}\r\n\r\n        <InteractiveList\r\n          list={characteristics}\r\n          onChange={setCharacteristics}\r\n          readOnly={readOnly}\r\n        />\r\n\r\n        {!readOnly && (\r\n          <AddButton type={'button'} onClick={onAdd}>\r\n            <span>Добавить</span>\r\n            <Icon type={'button'} icon={'add'} stroke={'white'} />\r\n          </AddButton>\r\n        )}\r\n      </Container>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default CharacteristicEditor\r\n"]},"metadata":{},"sourceType":"module"}