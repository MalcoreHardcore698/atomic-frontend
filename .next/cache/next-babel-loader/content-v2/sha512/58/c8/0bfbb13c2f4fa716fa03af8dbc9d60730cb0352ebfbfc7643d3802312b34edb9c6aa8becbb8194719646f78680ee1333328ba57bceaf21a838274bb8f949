{"ast":null,"code":"import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { hasAccess } from '../atomic-ui/utils/functions';\nexport const useAccess = (entityType = '') => {\n  const user = useSelector(state => state.user);\n  const getAccess = useCallback(action => hasAccess(user, `${action}_${entityType}`.toUpperCase()), [user, entityType]);\n  const isAccessibleForView = useMemo(() => getAccess('view'), [getAccess]);\n  const isAccessibleForAdd = useMemo(() => getAccess('add'), [getAccess]);\n  const isAccessibleForEdit = useMemo(() => getAccess('edit'), [getAccess]);\n  const isAccessibleForDelete = useMemo(() => getAccess('delete'), [getAccess]);\n  return {\n    isAccessibleForView,\n    isAccessibleForAdd,\n    isAccessibleForEdit,\n    isAccessibleForDelete,\n    getAccess\n  };\n};","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/hooks/useAccess.js"],"names":["useMemo","useCallback","useSelector","hasAccess","useAccess","entityType","user","state","getAccess","action","toUpperCase","isAccessibleForView","isAccessibleForAdd","isAccessibleForEdit","isAccessibleForDelete"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,UAAU,GAAG,EAAd,KAAqB;AAC5C,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AAEA,QAAME,SAAS,GAAGP,WAAW,CAC1BQ,MAAD,IAAYN,SAAS,CAACG,IAAD,EAAQ,GAAEG,MAAO,IAAGJ,UAAW,EAAxB,CAA0BK,WAA1B,EAAP,CADM,EAE3B,CAACJ,IAAD,EAAOD,UAAP,CAF2B,CAA7B;AAKA,QAAMM,mBAAmB,GAAGX,OAAO,CAAC,MAAMQ,SAAS,CAAC,MAAD,CAAhB,EAA0B,CAACA,SAAD,CAA1B,CAAnC;AAEA,QAAMI,kBAAkB,GAAGZ,OAAO,CAAC,MAAMQ,SAAS,CAAC,KAAD,CAAhB,EAAyB,CAACA,SAAD,CAAzB,CAAlC;AAEA,QAAMK,mBAAmB,GAAGb,OAAO,CAAC,MAAMQ,SAAS,CAAC,MAAD,CAAhB,EAA0B,CAACA,SAAD,CAA1B,CAAnC;AAEA,QAAMM,qBAAqB,GAAGd,OAAO,CAAC,MAAMQ,SAAS,CAAC,QAAD,CAAhB,EAA4B,CAACA,SAAD,CAA5B,CAArC;AAEA,SAAO;AACLG,IAAAA,mBADK;AAELC,IAAAA,kBAFK;AAGLC,IAAAA,mBAHK;AAILC,IAAAA,qBAJK;AAKLN,IAAAA;AALK,GAAP;AAOD,CAvBM","sourcesContent":["import { useMemo, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { hasAccess } from '../atomic-ui/utils/functions'\n\nexport const useAccess = (entityType = '') => {\n  const user = useSelector((state) => state.user)\n\n  const getAccess = useCallback(\n    (action) => hasAccess(user, `${action}_${entityType}`.toUpperCase()),\n    [user, entityType]\n  )\n\n  const isAccessibleForView = useMemo(() => getAccess('view'), [getAccess])\n\n  const isAccessibleForAdd = useMemo(() => getAccess('add'), [getAccess])\n\n  const isAccessibleForEdit = useMemo(() => getAccess('edit'), [getAccess])\n\n  const isAccessibleForDelete = useMemo(() => getAccess('delete'), [getAccess])\n\n  return {\n    isAccessibleForView,\n    isAccessibleForAdd,\n    isAccessibleForEdit,\n    isAccessibleForDelete,\n    getAccess\n  }\n}\n"]},"metadata":{},"sourceType":"module"}