{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport Column from '../../atomic-ui/components/Column';\nimport Button from '../../atomic-ui/components/Button';\nimport Alert from '../../atomic-ui/components/Alert';\nimport Screenshot from '../../atomic-ui/components/Screenshot';\nimport AddMemberForm from '../../components/FormAddMember';\nimport AddFileForm from '../../components/FormAddFile';\nimport ProjectForm from '../../components/FormProject';\nimport DeleteForm from '../../components/FormDelete';\nimport SureDeleteForm from '../../components/FormSureDelete';\nimport ProjectCard from '../../components/ProjectCard';\nimport ProjectView from '../../components/ProjectView';\nimport { setDocuments } from '../actions/documents';\nimport { setMutate, addProjectMember, addProjectScreenshot, addProjectFile, removeProjectMember, removeProjectScreenshot, removeProjectFile, clearProjectMembers, clearProjectScreenshots, clearProjectFiles } from '../actions/root';\nimport { setModal } from '../actions/modal';\nimport { setDrawer } from '../actions/drawer';\nimport { setItem } from '../actions/snacks';\nimport { onUserLink, onUserFolderAdd, onUserAboutMore } from './user';\nimport { onFileLink as _onFileLink } from '.';\nexport function onProjectLink(dispatch, props) {\n  var id = props.id,\n      auth = props.auth,\n      liked = props.liked,\n      onAdd = props.onAdd,\n      onLike = props.onLike,\n      owned = props.owned;\n  dispatch(setDrawer({\n    icon: 'work',\n    title: 'Проект',\n    content: /*#__PURE__*/React.createElement(ProjectView, {\n      appearance: 'clear',\n      project: id,\n      owned: owned,\n      liked: liked,\n      onLike: onLike,\n      onAdd: onAdd,\n      onFileLink: function onFileLink() {\n        return _onFileLink(dispatch, {\n          id: id\n        });\n      },\n      onAboutMore: function onAboutMore(project) {\n        return onUserAboutMore(dispatch, {\n          project: project\n        });\n      },\n      onMemberLink: function onMemberLink(member) {\n        return onUserLink(dispatch, {\n          id: member,\n          auth: auth,\n          owned: owned\n        });\n      },\n      onCompanyLink: function onCompanyLink(company) {\n        return onUserLink(dispatch, {\n          id: company,\n          auth: auth,\n          owned: owned\n        });\n      },\n      onScreenshotClick: function onScreenshotClick(_, key, screenshots) {\n        return onProjectScreenshot(dispatch, {\n          screenshots: screenshots,\n          key: key\n        });\n      }\n    })\n  }));\n}\nexport function onProjectCreate(dispatch, props) {\n  var companies = props.companies,\n      categories = props.categories,\n      statuses = props.statuses,\n      canEditStatus = props.canEditStatus,\n      mutation = props.mutation,\n      query = props.query,\n      onCompanyInputChange = props.onCompanyInputChange;\n  dispatch(clearProjectMembers());\n  dispatch(clearProjectScreenshots());\n  dispatch(clearProjectFiles());\n  dispatch(setDrawer({\n    icon: 'work',\n    title: 'Создание проекта',\n    content: /*#__PURE__*/React.createElement(ProjectForm, {\n      mutation: mutation,\n      companies: companies,\n      categories: categories,\n      statuses: statuses,\n      appearance: 'clear',\n      canEditStatus: canEditStatus,\n      onMemberAdd: function onMemberAdd() {\n        return _onMemberAdd(dispatch, {\n          query: query\n        });\n      },\n      onScreenshotAdd: function onScreenshotAdd() {\n        return _onScreenshotAdd(dispatch);\n      },\n      onFileAdd: function onFileAdd() {\n        return _onFileAdd(dispatch);\n      },\n      onMemberRemove: function onMemberRemove(name) {\n        return dispatch(removeProjectMember(name));\n      },\n      onScreenshotRemove: function onScreenshotRemove(id) {\n        return onSureDelete(dispatch, {\n          id: id,\n          text: 'Вы действительно хотите удалить изображение?',\n          removeAction: removeProjectScreenshot\n        });\n      },\n      onFileRemove: function onFileRemove(id) {\n        return onSureDelete(dispatch, {\n          id: id,\n          text: 'Вы действительно хотите удалить файл?',\n          removeAction: removeProjectFile\n        });\n      },\n      onCompanyInputChange: onCompanyInputChange,\n      onSubmit: /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(form, action) {\n          var _form$preview, _form$company, _form$company$value, _form$preview2, _form$preview2$file, _form$category, _form$status, members, files, fileSizes, screenshots, screenshotSizes, projects;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  members = form.members.map(function (member) {\n                    return member.value.email;\n                  });\n                  files = form.files.map(function (file) {\n                    return file.file;\n                  });\n                  fileSizes = form.files.map(function (file) {\n                    return file.size;\n                  });\n                  screenshots = form.screenshots.map(function (screenshot) {\n                    return screenshot.file;\n                  });\n                  screenshotSizes = form.screenshots.map(function (screenshot) {\n                    return screenshot.size;\n                  });\n                  _context.next = 8;\n                  return action({\n                    variables: {\n                      input: {\n                        title: form.title,\n                        body: form.body,\n                        description: form.description,\n                        preview: (_form$preview = form.preview) === null || _form$preview === void 0 ? void 0 : _form$preview.file,\n                        company: (_form$company = form.company) === null || _form$company === void 0 ? void 0 : (_form$company$value = _form$company.value) === null || _form$company$value === void 0 ? void 0 : _form$company$value.email,\n                        previewSize: (_form$preview2 = form.preview) === null || _form$preview2 === void 0 ? void 0 : (_form$preview2$file = _form$preview2.file) === null || _form$preview2$file === void 0 ? void 0 : _form$preview2$file.size,\n                        members: members.length > 0 ? members : [],\n                        files: files.length > 0 ? files : [],\n                        fileSizes: fileSizes.length > 0 ? fileSizes : [],\n                        screenshots: screenshots.length > 0 ? screenshots : [],\n                        screenshotSizes: screenshotSizes.length > 0 ? screenshotSizes : [],\n                        presentation: form.presentation,\n                        category: (_form$category = form.category) === null || _form$category === void 0 ? void 0 : _form$category.value,\n                        status: (_form$status = form.status) === null || _form$status === void 0 ? void 0 : _form$status.value\n                      }\n                    }\n                  });\n\n                case 8:\n                  projects = _context.sent;\n                  dispatch(setDocuments(projects.data.createProject));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Проект успешно создан'\n                  }));\n                  _context.next = 16;\n                  break;\n\n                case 13:\n                  _context.prev = 13;\n                  _context.t0 = _context[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось создать проект'\n                  }));\n\n                case 16:\n                  _context.prev = 16;\n                  dispatch(setDrawer(null));\n                  dispatch(clearProjectMembers());\n                  dispatch(clearProjectScreenshots());\n                  dispatch(clearProjectFiles());\n                  return _context.finish(16);\n\n                case 22:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 13, 16, 22]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    })\n  }));\n}\nexport function onProjectEdit(dispatch, props) {\n  var id = props.id,\n      auth = props.auth,\n      companies = props.companies,\n      categories = props.categories,\n      statuses = props.statuses,\n      canEditStatus = props.canEditStatus,\n      mutation = props.mutation,\n      query = props.query;\n  dispatch(setDrawer({\n    icon: 'work',\n    title: 'Редактирование проекта',\n    content: /*#__PURE__*/React.createElement(ProjectForm, {\n      project: id,\n      mutation: mutation,\n      companies: companies,\n      categories: categories,\n      statuses: statuses,\n      appearance: 'clear',\n      canEditStatus: canEditStatus,\n      onMemberAdd: function onMemberAdd() {\n        return _onMemberAdd(dispatch, {\n          query: query\n        });\n      },\n      onScreenshotAdd: function onScreenshotAdd() {\n        return _onScreenshotAdd(dispatch);\n      },\n      onFileAdd: function onFileAdd() {\n        return _onFileAdd(dispatch);\n      },\n      onMemberRemove: function onMemberRemove(name) {\n        return dispatch(removeProjectMember(name));\n      },\n      onScreenshotRemove: function onScreenshotRemove(id) {\n        return onSureDelete(dispatch, {\n          id: id,\n          text: 'Вы действительно хотите удалить изображение?',\n          removeAction: removeProjectScreenshot\n        });\n      },\n      onFileRemove: function onFileRemove(id) {\n        return onSureDelete(dispatch, {\n          id: id,\n          text: 'Вы действительно хотите удалить файл?',\n          removeAction: removeProjectFile\n        });\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(form, action) {\n          var _form$preview3, _form$company2, _form$company2$value, _form$preview4, _form$preview4$file, _form$category2, _form$status2, members, files, screenshots, fileSizes, screenshotSizes, projects;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  members = form.members.map(function (member) {\n                    var _member$value;\n\n                    return member.email || ((_member$value = member.value) === null || _member$value === void 0 ? void 0 : _member$value.email);\n                  });\n                  files = form.files.filter(function (screenshot) {\n                    var _screenshot$file;\n\n                    return !((_screenshot$file = screenshot.file) !== null && _screenshot$file !== void 0 && _screenshot$file.id);\n                  }).map(function (file) {\n                    var _file$file;\n\n                    return (_file$file = file.file) !== null && _file$file !== void 0 && _file$file.type ? file.file : null;\n                  });\n                  screenshots = form.screenshots.filter(function (screenshot) {\n                    var _screenshot$file2;\n\n                    return !((_screenshot$file2 = screenshot.file) !== null && _screenshot$file2 !== void 0 && _screenshot$file2.id);\n                  }).map(function (screenshot) {\n                    var _screenshot$file3;\n\n                    return (_screenshot$file3 = screenshot.file) !== null && _screenshot$file3 !== void 0 && _screenshot$file3.type ? screenshot.file : null;\n                  });\n                  fileSizes = form.files.map(function (file) {\n                    return file.size;\n                  });\n                  screenshotSizes = form.screenshots.map(function (screenshot) {\n                    return screenshot.size;\n                  });\n                  _context2.next = 8;\n                  return action({\n                    variables: {\n                      id: id,\n                      input: {\n                        title: form.title,\n                        body: form.body,\n                        description: form.description,\n                        preview: (_form$preview3 = form.preview) === null || _form$preview3 === void 0 ? void 0 : _form$preview3.file,\n                        company: (_form$company2 = form.company) === null || _form$company2 === void 0 ? void 0 : (_form$company2$value = _form$company2.value) === null || _form$company2$value === void 0 ? void 0 : _form$company2$value.email,\n                        previewSize: (_form$preview4 = form.preview) === null || _form$preview4 === void 0 ? void 0 : (_form$preview4$file = _form$preview4.file) === null || _form$preview4$file === void 0 ? void 0 : _form$preview4$file.size,\n                        members: members,\n                        files: files,\n                        fileSizes: fileSizes,\n                        screenshots: screenshots,\n                        screenshotSizes: screenshotSizes,\n                        presentation: form.presentation,\n                        category: (_form$category2 = form.category) === null || _form$category2 === void 0 ? void 0 : _form$category2.value,\n                        status: (_form$status2 = form.status) === null || _form$status2 === void 0 ? void 0 : _form$status2.value\n                      }\n                    }\n                  });\n\n                case 8:\n                  projects = _context2.sent;\n                  dispatch(setDocuments(projects.data.updateProject));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Проект успешно отредактирован'\n                  }));\n                  _context2.next = 16;\n                  break;\n\n                case 13:\n                  _context2.prev = 13;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось отредактирвоать проект'\n                  }));\n\n                case 16:\n                  _context2.prev = 16;\n                  dispatch(setDrawer(null));\n                  dispatch(clearProjectMembers());\n                  dispatch(clearProjectScreenshots());\n                  dispatch(clearProjectFiles());\n                  return _context2.finish(16);\n\n                case 22:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 13, 16, 22]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      onCommentLink: function onCommentLink(user) {\n        return onUserLink(dispatch, {\n          email: user,\n          auth: auth\n        });\n      }\n    })\n  }));\n}\nexport function onProjectDelete(dispatch, props) {\n  var id = props.id,\n      auth = props.auth,\n      project = props.project,\n      mutation = props.mutation;\n  dispatch(setDrawer({\n    icon: 'delete',\n    color: 'red',\n    title: 'Удаление проекта',\n    content: /*#__PURE__*/React.createElement(DeleteForm, {\n      mutation: mutation,\n      appearance: 'clear',\n      onCancel: function onCancel() {\n        return dispatch(setDrawer(null));\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_, action) {\n          var projects;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return action({\n                    variables: {\n                      id: id\n                    }\n                  });\n\n                case 3:\n                  projects = _context3.sent;\n                  dispatch(setDocuments(projects.data.deleteProject));\n                  dispatch(setItem({\n                    type: 'success',\n                    message: 'Проект успешно удален'\n                  }));\n                  _context3.next = 11;\n                  break;\n\n                case 8:\n                  _context3.prev = 8;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  dispatch(setItem({\n                    type: 'error',\n                    message: 'Не удалось удалить проект'\n                  }));\n\n                case 11:\n                  _context3.prev = 11;\n                  dispatch(setDrawer(null));\n                  return _context3.finish(11);\n\n                case 14:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 8, 11, 14]]);\n        }));\n\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }()\n    }, /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      appearance: 'clear',\n      onLink: function onLink() {\n        return onProjectLink(dispatch, {\n          id: project.id\n        });\n      },\n      onAdd: function onAdd() {\n        return onProjectAdd(dispatch, {\n          id: project.id\n        });\n      },\n      onCompanyLink: function onCompanyLink(company) {\n        return onUserLink(dispatch, {\n          id: company,\n          auth: auth\n        });\n      },\n      onScreenshotClick: function onScreenshotClick(_, key) {\n        return onProjectScreenshot(dispatch, {\n          screenshots: [project.preview].concat(_toConsumableArray(project.screenshots)),\n          key: key\n        });\n      }\n    }))\n  }));\n}\nexport function onProjectAdd(dispatch, props) {\n  var id = props.id,\n      folders = props.folders,\n      mutations = props.mutations;\n  dispatch(setModal([{\n    path: '/',\n    title: 'В какую папку добавить проект?',\n    component: function component() {\n      return /*#__PURE__*/React.createElement(Column, {\n        style: {\n          padding: '15px'\n        }\n      }, folders && folders.length > 0 ? folders.map(function (folder) {\n        return /*#__PURE__*/React.createElement(Button, {\n          key: folder.id,\n          onClick: function onClick() {\n            dispatch(setMutate(mutations.addProject, {\n              project: id,\n              folder: folder.id\n            }));\n            dispatch(setModal(null));\n          }\n        }, folder.name);\n      }) : /*#__PURE__*/React.createElement(Alert, {\n        style: {\n          textAlign: 'center'\n        },\n        width: '100%'\n      }, \"\\u041F\\u0430\\u043F\\u043E\\u043A \\u043D\\u0435\\u0442\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          return onUserFolderAdd(dispatch, {\n            mutation: mutations.createFolder,\n            onCancel: function onCancel() {\n              return onProjectAdd(dispatch, props);\n            },\n            callback: function callback() {\n              return onProjectAdd(dispatch, props);\n            }\n          });\n        },\n        revert: true\n      }, \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\"));\n    }\n  }]));\n}\n\nfunction _onMemberAdd(dispatch, props) {\n  var query = props.query;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Добавление участника',\n    component: function component() {\n      return /*#__PURE__*/React.createElement(AddMemberForm, {\n        query: query,\n        onSubmit: function onSubmit(member) {\n          dispatch(addProjectMember(member));\n          dispatch(setModal(null));\n        }\n      });\n    }\n  }]));\n}\n\nexport { _onMemberAdd as onMemberAdd };\n\nfunction _onScreenshotAdd(dispatch) {\n  dispatch(setModal([{\n    path: '/',\n    title: 'Добавление изображений',\n    component: function component() {\n      return /*#__PURE__*/React.createElement(AddFileForm, {\n        placeholder: 'Перетащите сюда изображения',\n        submitText: 'Добавить изображения',\n        onSubmit: function onSubmit(files) {\n          var _iterator = _createForOfIteratorHelper(files),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var file = _step.value;\n              dispatch(addProjectScreenshot(file));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          dispatch(setModal(null));\n        }\n      });\n    }\n  }]));\n}\n\nexport { _onScreenshotAdd as onScreenshotAdd };\n\nfunction _onFileAdd(dispatch) {\n  dispatch(setModal([{\n    path: '/',\n    title: 'Добавление файлов',\n    component: function component() {\n      return /*#__PURE__*/React.createElement(AddFileForm, {\n        accept: 'application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf, image/*',\n        onSubmit: function onSubmit(files) {\n          var _iterator2 = _createForOfIteratorHelper(files),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var file = _step2.value;\n              dispatch(addProjectFile(file));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          dispatch(setModal(null));\n        }\n      });\n    }\n  }]));\n}\n\nexport { _onFileAdd as onFileAdd };\nexport function onSureDelete(dispatch, props) {\n  var id = props.id,\n      text = props.text,\n      removeAction = props.removeAction;\n  dispatch(setModal([{\n    path: '/',\n    title: 'Удаление',\n    component: function component() {\n      return /*#__PURE__*/React.createElement(SureDeleteForm, {\n        text: text,\n        onCancel: function onCancel() {\n          return dispatch(setModal(null));\n        },\n        onSubmit: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  dispatch(removeAction(id));\n                  dispatch(setModal(null));\n\n                case 2:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }))\n      });\n    }\n  }]));\n}\nexport function onProjectScreenshot(dispatch, props) {\n  var key = props.key,\n      screenshots = props.screenshots;\n  dispatch(setModal(screenshots.map(function (screenshot, index) {\n    return {\n      title: 'Изображение',\n      path: \"/\".concat(screenshot.id),\n      home: screenshot.id === key,\n      component: function component(_ref5) {\n        var jump = _ref5.jump;\n        return /*#__PURE__*/React.createElement(Screenshot, {\n          index: index,\n          screenshot: screenshot,\n          screenshots: screenshots,\n          onClick: jump\n        });\n      },\n      back: false\n    };\n  }), 'l'));\n}","map":{"version":3,"sources":["C:/Users/dan82/Documents/workspace/FREELANCE/atomic/atomic-frontend/store/helpers/project.js"],"names":["React","Column","Button","Alert","Screenshot","AddMemberForm","AddFileForm","ProjectForm","DeleteForm","SureDeleteForm","ProjectCard","ProjectView","setDocuments","setMutate","addProjectMember","addProjectScreenshot","addProjectFile","removeProjectMember","removeProjectScreenshot","removeProjectFile","clearProjectMembers","clearProjectScreenshots","clearProjectFiles","setModal","setDrawer","setItem","onUserLink","onUserFolderAdd","onUserAboutMore","onFileLink","onProjectLink","dispatch","props","id","auth","liked","onAdd","onLike","owned","icon","title","content","project","member","company","_","key","screenshots","onProjectScreenshot","onProjectCreate","companies","categories","statuses","canEditStatus","mutation","query","onCompanyInputChange","onMemberAdd","onScreenshotAdd","onFileAdd","name","onSureDelete","text","removeAction","form","action","members","map","value","email","files","file","fileSizes","size","screenshot","screenshotSizes","variables","input","body","description","preview","previewSize","length","presentation","category","status","projects","data","createProject","type","message","onProjectEdit","filter","updateProject","user","onProjectDelete","color","deleteProject","onProjectAdd","folders","mutations","path","component","padding","folder","addProject","textAlign","createFolder","onCancel","callback","index","home","jump","back"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport Column from '../../atomic-ui/components/Column'\nimport Button from '../../atomic-ui/components/Button'\nimport Alert from '../../atomic-ui/components/Alert'\nimport Screenshot from '../../atomic-ui/components/Screenshot'\n\nimport AddMemberForm from '../../components/FormAddMember'\nimport AddFileForm from '../../components/FormAddFile'\nimport ProjectForm from '../../components/FormProject'\nimport DeleteForm from '../../components/FormDelete'\nimport SureDeleteForm from '../../components/FormSureDelete'\nimport ProjectCard from '../../components/ProjectCard'\nimport ProjectView from '../../components/ProjectView'\nimport { setDocuments } from '../actions/documents'\nimport {\n  setMutate,\n  addProjectMember,\n  addProjectScreenshot,\n  addProjectFile,\n  removeProjectMember,\n  removeProjectScreenshot,\n  removeProjectFile,\n  clearProjectMembers,\n  clearProjectScreenshots,\n  clearProjectFiles\n} from '../actions/root'\nimport { setModal } from '../actions/modal'\nimport { setDrawer } from '../actions/drawer'\nimport { setItem } from '../actions/snacks'\nimport { onUserLink, onUserFolderAdd, onUserAboutMore } from './user'\nimport { onFileLink } from '.'\n\nexport function onProjectLink(dispatch, props) {\n  const { id, auth, liked, onAdd, onLike, owned } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'work',\n      title: 'Проект',\n      content: (\n        <ProjectView\n          appearance={'clear'}\n          project={id}\n          owned={owned}\n          liked={liked}\n          onLike={onLike}\n          onAdd={onAdd}\n          onFileLink={() => onFileLink(dispatch, { id })}\n          onAboutMore={(project) => onUserAboutMore(dispatch, { project })}\n          onMemberLink={(member) => onUserLink(dispatch, { id: member, auth, owned })}\n          onCompanyLink={(company) => onUserLink(dispatch, { id: company, auth, owned })}\n          onScreenshotClick={(_, key, screenshots) =>\n            onProjectScreenshot(dispatch, {\n              screenshots,\n              key\n            })\n          }\n        />\n      )\n    })\n  )\n}\n\nexport function onProjectCreate(dispatch, props) {\n  const {\n    companies,\n    categories,\n    statuses,\n    canEditStatus,\n    mutation,\n    query,\n    onCompanyInputChange\n  } = props\n\n  dispatch(clearProjectMembers())\n  dispatch(clearProjectScreenshots())\n  dispatch(clearProjectFiles())\n\n  dispatch(\n    setDrawer({\n      icon: 'work',\n      title: 'Создание проекта',\n      content: (\n        <ProjectForm\n          mutation={mutation}\n          companies={companies}\n          categories={categories}\n          statuses={statuses}\n          appearance={'clear'}\n          canEditStatus={canEditStatus}\n          onMemberAdd={() => onMemberAdd(dispatch, { query })}\n          onScreenshotAdd={() => onScreenshotAdd(dispatch)}\n          onFileAdd={() => onFileAdd(dispatch)}\n          onMemberRemove={(name) => dispatch(removeProjectMember(name))}\n          onScreenshotRemove={(id) =>\n            onSureDelete(dispatch, {\n              id,\n              text: 'Вы действительно хотите удалить изображение?',\n              removeAction: removeProjectScreenshot\n            })\n          }\n          onFileRemove={(id) =>\n            onSureDelete(dispatch, {\n              id,\n              text: 'Вы действительно хотите удалить файл?',\n              removeAction: removeProjectFile\n            })\n          }\n          onCompanyInputChange={onCompanyInputChange}\n          onSubmit={async (form, action) => {\n            try {\n              const members = form.members.map((member) => member.value.email)\n              const files = form.files.map((file) => file.file)\n              const fileSizes = form.files.map((file) => file.size)\n              const screenshots = form.screenshots.map((screenshot) => screenshot.file)\n              const screenshotSizes = form.screenshots.map((screenshot) => screenshot.size)\n\n              const projects = await action({\n                variables: {\n                  input: {\n                    title: form.title,\n                    body: form.body,\n                    description: form.description,\n                    preview: form.preview?.file,\n                    company: form.company?.value?.email,\n                    previewSize: form.preview?.file?.size,\n                    members: members.length > 0 ? members : [],\n                    files: files.length > 0 ? files : [],\n                    fileSizes: fileSizes.length > 0 ? fileSizes : [],\n                    screenshots: screenshots.length > 0 ? screenshots : [],\n                    screenshotSizes: screenshotSizes.length > 0 ? screenshotSizes : [],\n                    presentation: form.presentation,\n                    category: form.category?.value,\n                    status: form.status?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(projects.data.createProject))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Проект успешно создан'\n                })\n              )\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось создать проект'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n              dispatch(clearProjectMembers())\n              dispatch(clearProjectScreenshots())\n              dispatch(clearProjectFiles())\n            }\n          }}\n        />\n      )\n    })\n  )\n}\n\nexport function onProjectEdit(dispatch, props) {\n  const { id, auth, companies, categories, statuses, canEditStatus, mutation, query } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'work',\n      title: 'Редактирование проекта',\n      content: (\n        <ProjectForm\n          project={id}\n          mutation={mutation}\n          companies={companies}\n          categories={categories}\n          statuses={statuses}\n          appearance={'clear'}\n          canEditStatus={canEditStatus}\n          onMemberAdd={() => onMemberAdd(dispatch, { query })}\n          onScreenshotAdd={() => onScreenshotAdd(dispatch)}\n          onFileAdd={() => onFileAdd(dispatch)}\n          onMemberRemove={(name) => dispatch(removeProjectMember(name))}\n          onScreenshotRemove={(id) =>\n            onSureDelete(dispatch, {\n              id,\n              text: 'Вы действительно хотите удалить изображение?',\n              removeAction: removeProjectScreenshot\n            })\n          }\n          onFileRemove={(id) =>\n            onSureDelete(dispatch, {\n              id,\n              text: 'Вы действительно хотите удалить файл?',\n              removeAction: removeProjectFile\n            })\n          }\n          onSubmit={async (form, action) => {\n            try {\n              const members = form.members.map((member) => member.email || member.value?.email)\n              const files = form.files\n                .filter((screenshot) => !screenshot.file?.id)\n                .map((file) => (file.file?.type ? file.file : null))\n              const screenshots = form.screenshots\n                .filter((screenshot) => !screenshot.file?.id)\n                .map((screenshot) => (screenshot.file?.type ? screenshot.file : null))\n              const fileSizes = form.files.map((file) => file.size)\n              const screenshotSizes = form.screenshots.map((screenshot) => screenshot.size)\n\n              const projects = await action({\n                variables: {\n                  id,\n                  input: {\n                    title: form.title,\n                    body: form.body,\n                    description: form.description,\n                    preview: form.preview?.file,\n                    company: form.company?.value?.email,\n                    previewSize: form.preview?.file?.size,\n                    members: members,\n                    files: files,\n                    fileSizes: fileSizes,\n                    screenshots: screenshots,\n                    screenshotSizes: screenshotSizes,\n                    presentation: form.presentation,\n                    category: form.category?.value,\n                    status: form.status?.value\n                  }\n                }\n              })\n              dispatch(setDocuments(projects.data.updateProject))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Проект успешно отредактирован'\n                })\n              )\n            } catch (err) {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось отредактирвоать проект'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n              dispatch(clearProjectMembers())\n              dispatch(clearProjectScreenshots())\n              dispatch(clearProjectFiles())\n            }\n          }}\n          onCommentLink={(user) => onUserLink(dispatch, { email: user, auth })}\n        />\n      )\n    })\n  )\n}\n\nexport function onProjectDelete(dispatch, props) {\n  const { id, auth, project, mutation } = props\n\n  dispatch(\n    setDrawer({\n      icon: 'delete',\n      color: 'red',\n      title: 'Удаление проекта',\n      content: (\n        <DeleteForm\n          mutation={mutation}\n          appearance={'clear'}\n          onCancel={() => dispatch(setDrawer(null))}\n          onSubmit={async (_, action) => {\n            try {\n              const projects = await action({\n                variables: { id }\n              })\n              dispatch(setDocuments(projects.data.deleteProject))\n              dispatch(\n                setItem({\n                  type: 'success',\n                  message: 'Проект успешно удален'\n                })\n              )\n            } catch {\n              dispatch(\n                setItem({\n                  type: 'error',\n                  message: 'Не удалось удалить проект'\n                })\n              )\n            } finally {\n              dispatch(setDrawer(null))\n            }\n          }}>\n          <ProjectCard\n            project={project}\n            appearance={'clear'}\n            onLink={() => onProjectLink(dispatch, { id: project.id })}\n            onAdd={() => onProjectAdd(dispatch, { id: project.id })}\n            onCompanyLink={(company) => onUserLink(dispatch, { id: company, auth })}\n            onScreenshotClick={(_, key) =>\n              onProjectScreenshot(dispatch, {\n                screenshots: [project.preview, ...project.screenshots],\n                key\n              })\n            }\n          />\n        </DeleteForm>\n      )\n    })\n  )\n}\n\nexport function onProjectAdd(dispatch, props) {\n  const { id, folders, mutations } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'В какую папку добавить проект?',\n        component: () => (\n          <Column style={{ padding: '15px' }}>\n            {folders && folders.length > 0 ? (\n              folders.map((folder) => (\n                <Button\n                  key={folder.id}\n                  onClick={() => {\n                    dispatch(setMutate(mutations.addProject, { project: id, folder: folder.id }))\n                    dispatch(setModal(null))\n                  }}>\n                  {folder.name}\n                </Button>\n              ))\n            ) : (\n              <Alert style={{ textAlign: 'center' }} width={'100%'}>\n                Папок нет\n              </Alert>\n            )}\n            <Button\n              onClick={() =>\n                onUserFolderAdd(dispatch, {\n                  mutation: mutations.createFolder,\n                  onCancel: () => onProjectAdd(dispatch, props),\n                  callback: () => onProjectAdd(dispatch, props)\n                })\n              }\n              revert>\n              Новая папка\n            </Button>\n          </Column>\n        )\n      }\n    ])\n  )\n}\n\nexport function onMemberAdd(dispatch, props) {\n  const { query } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Добавление участника',\n        component: () => (\n          <AddMemberForm\n            query={query}\n            onSubmit={(member) => {\n              dispatch(addProjectMember(member))\n              dispatch(setModal(null))\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onScreenshotAdd(dispatch) {\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Добавление изображений',\n        component: () => (\n          <AddFileForm\n            placeholder={'Перетащите сюда изображения'}\n            submitText={'Добавить изображения'}\n            onSubmit={(files) => {\n              for (let file of files) {\n                dispatch(addProjectScreenshot(file))\n              }\n              dispatch(setModal(null))\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onFileAdd(dispatch) {\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Добавление файлов',\n        component: () => (\n          <AddFileForm\n            accept={\n              'application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf, image/*'\n            }\n            onSubmit={(files) => {\n              for (let file of files) {\n                dispatch(addProjectFile(file))\n              }\n              dispatch(setModal(null))\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onSureDelete(dispatch, props) {\n  const { id, text, removeAction } = props\n\n  dispatch(\n    setModal([\n      {\n        path: '/',\n        title: 'Удаление',\n        component: () => (\n          <SureDeleteForm\n            text={text}\n            onCancel={() => dispatch(setModal(null))}\n            onSubmit={async () => {\n              dispatch(removeAction(id))\n              dispatch(setModal(null))\n            }}\n          />\n        )\n      }\n    ])\n  )\n}\n\nexport function onProjectScreenshot(dispatch, props) {\n  const { key, screenshots } = props\n\n  dispatch(\n    setModal(\n      screenshots.map((screenshot, index) => ({\n        title: 'Изображение',\n        path: `/${screenshot.id}`,\n        home: screenshot.id === key,\n        component: ({ jump }) => (\n          <Screenshot\n            index={index}\n            screenshot={screenshot}\n            screenshots={screenshots}\n            onClick={jump}\n          />\n        ),\n        back: false\n      })),\n      'l'\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}